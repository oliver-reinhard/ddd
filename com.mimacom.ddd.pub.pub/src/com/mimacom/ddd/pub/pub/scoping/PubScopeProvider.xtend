/*

 * generated by Xtext 2.19.0
 */
package com.mimacom.ddd.pub.pub.scoping

import com.mimacom.ddd.pub.pub.PubPackage
import com.mimacom.ddd.pub.pub.Reference
import org.eclipse.emf.ecore.EObject
import org.eclipse.emf.ecore.EReference
import org.eclipse.xtext.scoping.IScope

/**
 * This class contains custom scoping description.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#scoping
 * on how and when to use it.
 */
class PubScopeProvider extends AbstractPubScopeProvider {

	static val PUB = PubPackage.eINSTANCE

	override IScope getScope(EObject context, EReference reference) {

		if (reference == PUB.reference_Target && context instanceof Reference) {
			val targetScope = switch (context as Reference).scope {
				case DOCUMENT_SEGMENT: PUB.documentSegment
				case DIVISION: PUB.division
				case PART: PUB.part
				case APPENDIX: PUB.appendix
				case CHAPTER: PUB.chapter
				case SECTION: PUB.section
				case SUBSECTION: PUB.subsection
				case SUBSUBSECTION: PUB.subsubsection
				case TABLE: PUB.table
				case FIGURE: PUB.figure
				case EQUATION: PUB.equation
				case CODE_LISTING: PUB.codeListing
				case ADMONITION: PUB.admonition
				case ABBREVIATION: PUB.abbreviation
				case GLOSSARY: PUB.glossaryEntry
				case BIBLIOGRAPHY: PUB.bibliographyEntry
				default: PUB.referenceTarget
			}
			return getDefaultScopeOfType(context, targetScope)
		}
		return super.getScope(context, reference)
	}
}
