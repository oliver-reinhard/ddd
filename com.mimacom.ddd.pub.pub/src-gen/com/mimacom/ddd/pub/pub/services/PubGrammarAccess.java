/*
 * generated by Xtext 2.19.0
 */
package com.mimacom.ddd.pub.pub.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import com.mimacom.ddd.dm.dmx.services.DmxGrammarAccess;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class PubGrammarAccess extends AbstractGrammarElementFinder {
	
	public class PubModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPubModelAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cImportsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cImportsDImportParserRuleCall_1_0 = (RuleCall)cImportsAssignment_1.eContents().get(0);
		private final Assignment cDocumentAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDocumentPubDocumentParserRuleCall_2_0 = (RuleCall)cDocumentAssignment_2.eContents().get(0);
		
		//PubModel:
		//	{PubModel} imports+=DImport*
		//	document=PubDocument;
		@Override public ParserRule getRule() { return rule; }
		
		//{PubModel} imports+=DImport* document=PubDocument
		public Group getGroup() { return cGroup; }
		
		//{PubModel}
		public Action getPubModelAction_0() { return cPubModelAction_0; }
		
		//imports+=DImport*
		public Assignment getImportsAssignment_1() { return cImportsAssignment_1; }
		
		//DImport
		public RuleCall getImportsDImportParserRuleCall_1_0() { return cImportsDImportParserRuleCall_1_0; }
		
		//document=PubDocument
		public Assignment getDocumentAssignment_2() { return cDocumentAssignment_2; }
		
		//PubDocument
		public RuleCall getDocumentPubDocumentParserRuleCall_2_0() { return cDocumentPubDocumentParserRuleCall_2_0; }
	}
	public class PubDocumentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubDocument");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPubPublicationParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cPubComponentParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//PubDocument Document:
		//	PubPublication | PubComponent;
		@Override public ParserRule getRule() { return rule; }
		
		//PubPublication | PubComponent
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//PubPublication
		public RuleCall getPubPublicationParserRuleCall_0() { return cPubPublicationParserRuleCall_0; }
		
		//PubComponent
		public RuleCall getPubComponentParserRuleCall_1() { return cPubComponentParserRuleCall_1; }
	}
	public class PubPublicationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubPublication");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPublicationAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPublicationKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cPubReferenceTargetNameParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cTitleAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTitleSTRINGTerminalRuleCall_3_0 = (RuleCall)cTitleAssignment_3.eContents().get(0);
		private final Keyword cClassKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cPublicationClassAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cPublicationClassPublicationClassCrossReference_5_0 = (CrossReference)cPublicationClassAssignment_5.eContents().get(0);
		private final RuleCall cPublicationClassPublicationClassIDTerminalRuleCall_5_0_1 = (RuleCall)cPublicationClassPublicationClassCrossReference_5_0.eContents().get(1);
		private final Assignment cSymbolsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cSymbolsPubSymbolParserRuleCall_6_0 = (RuleCall)cSymbolsAssignment_6.eContents().get(0);
		private final Keyword cIncludesKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cIncludesAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final CrossReference cIncludesComponentCrossReference_8_0 = (CrossReference)cIncludesAssignment_8.eContents().get(0);
		private final RuleCall cIncludesComponentIDTerminalRuleCall_8_0_1 = (RuleCall)cIncludesComponentCrossReference_8_0.eContents().get(1);
		
		//PubPublication Publication:
		//	{Publication}
		//	'Publication'
		//	PubReferenceTargetName
		//	title=STRING
		//	'class:' publicationClass=[proto::PublicationClass] symbols+=PubSymbol*
		//	'includes:'
		//	includes+=[Component]*;
		@Override public ParserRule getRule() { return rule; }
		
		//{Publication} 'Publication' PubReferenceTargetName title=STRING 'class:' publicationClass=[proto::PublicationClass]
		//symbols+=PubSymbol* 'includes:' includes+=[Component]*
		public Group getGroup() { return cGroup; }
		
		//{Publication}
		public Action getPublicationAction_0() { return cPublicationAction_0; }
		
		//'Publication'
		public Keyword getPublicationKeyword_1() { return cPublicationKeyword_1; }
		
		//PubReferenceTargetName
		public RuleCall getPubReferenceTargetNameParserRuleCall_2() { return cPubReferenceTargetNameParserRuleCall_2; }
		
		//title=STRING
		public Assignment getTitleAssignment_3() { return cTitleAssignment_3; }
		
		//STRING
		public RuleCall getTitleSTRINGTerminalRuleCall_3_0() { return cTitleSTRINGTerminalRuleCall_3_0; }
		
		//'class:'
		public Keyword getClassKeyword_4() { return cClassKeyword_4; }
		
		//publicationClass=[proto::PublicationClass]
		public Assignment getPublicationClassAssignment_5() { return cPublicationClassAssignment_5; }
		
		//[proto::PublicationClass]
		public CrossReference getPublicationClassPublicationClassCrossReference_5_0() { return cPublicationClassPublicationClassCrossReference_5_0; }
		
		//ID
		public RuleCall getPublicationClassPublicationClassIDTerminalRuleCall_5_0_1() { return cPublicationClassPublicationClassIDTerminalRuleCall_5_0_1; }
		
		//symbols+=PubSymbol*
		public Assignment getSymbolsAssignment_6() { return cSymbolsAssignment_6; }
		
		//PubSymbol
		public RuleCall getSymbolsPubSymbolParserRuleCall_6_0() { return cSymbolsPubSymbolParserRuleCall_6_0; }
		
		//'includes:'
		public Keyword getIncludesKeyword_7() { return cIncludesKeyword_7; }
		
		//includes+=[Component]*
		public Assignment getIncludesAssignment_8() { return cIncludesAssignment_8; }
		
		//[Component]
		public CrossReference getIncludesComponentCrossReference_8_0() { return cIncludesComponentCrossReference_8_0; }
		
		//ID
		public RuleCall getIncludesComponentIDTerminalRuleCall_8_0_1() { return cIncludesComponentIDTerminalRuleCall_8_0_1; }
	}
	public class PubComponentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubComponent");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cComponentAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cComponentKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cPubReferenceTargetNameParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cTitleAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTitleSTRINGTerminalRuleCall_3_0 = (RuleCall)cTitleAssignment_3.eContents().get(0);
		private final Keyword cClassKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cPublicationClassAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cPublicationClassPublicationClassCrossReference_5_0 = (CrossReference)cPublicationClassAssignment_5.eContents().get(0);
		private final RuleCall cPublicationClassPublicationClassIDTerminalRuleCall_5_0_1 = (RuleCall)cPublicationClassPublicationClassCrossReference_5_0.eContents().get(1);
		private final Assignment cSymbolsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cSymbolsPubSymbolParserRuleCall_6_0 = (RuleCall)cSymbolsAssignment_6.eContents().get(0);
		private final Assignment cSegmentsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cSegmentsPubDocumentSegmentParserRuleCall_7_0 = (RuleCall)cSegmentsAssignment_7.eContents().get(0);
		
		//PubComponent Component:
		//	{Component}
		//	'Component'
		//	PubReferenceTargetName
		//	title=STRING
		//	'class:' publicationClass=[proto::PublicationClass] symbols+=PubSymbol*
		//	segments+=PubDocumentSegment*;
		@Override public ParserRule getRule() { return rule; }
		
		//{Component} 'Component' PubReferenceTargetName title=STRING 'class:' publicationClass=[proto::PublicationClass]
		//symbols+=PubSymbol* segments+=PubDocumentSegment*
		public Group getGroup() { return cGroup; }
		
		//{Component}
		public Action getComponentAction_0() { return cComponentAction_0; }
		
		//'Component'
		public Keyword getComponentKeyword_1() { return cComponentKeyword_1; }
		
		//PubReferenceTargetName
		public RuleCall getPubReferenceTargetNameParserRuleCall_2() { return cPubReferenceTargetNameParserRuleCall_2; }
		
		//title=STRING
		public Assignment getTitleAssignment_3() { return cTitleAssignment_3; }
		
		//STRING
		public RuleCall getTitleSTRINGTerminalRuleCall_3_0() { return cTitleSTRINGTerminalRuleCall_3_0; }
		
		//'class:'
		public Keyword getClassKeyword_4() { return cClassKeyword_4; }
		
		//publicationClass=[proto::PublicationClass]
		public Assignment getPublicationClassAssignment_5() { return cPublicationClassAssignment_5; }
		
		//[proto::PublicationClass]
		public CrossReference getPublicationClassPublicationClassCrossReference_5_0() { return cPublicationClassPublicationClassCrossReference_5_0; }
		
		//ID
		public RuleCall getPublicationClassPublicationClassIDTerminalRuleCall_5_0_1() { return cPublicationClassPublicationClassIDTerminalRuleCall_5_0_1; }
		
		//symbols+=PubSymbol*
		public Assignment getSymbolsAssignment_6() { return cSymbolsAssignment_6; }
		
		//PubSymbol
		public RuleCall getSymbolsPubSymbolParserRuleCall_6_0() { return cSymbolsPubSymbolParserRuleCall_6_0; }
		
		//segments+=PubDocumentSegment*
		public Assignment getSegmentsAssignment_7() { return cSegmentsAssignment_7; }
		
		//PubDocumentSegment
		public RuleCall getSegmentsPubDocumentSegmentParserRuleCall_7_0() { return cSegmentsPubDocumentSegmentParserRuleCall_7_0; }
	}
	public class PubSymbolElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubSymbol");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSymbolKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValueDRichTextParserRuleCall_3_0 = (RuleCall)cValueAssignment_3.eContents().get(0);
		
		//PubSymbol Symbol:
		//	'symbol:'
		//	name=ID '=' value=DRichText;
		@Override public ParserRule getRule() { return rule; }
		
		//'symbol:' name=ID '=' value=DRichText
		public Group getGroup() { return cGroup; }
		
		//'symbol:'
		public Keyword getSymbolKeyword_0() { return cSymbolKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }
		
		//value=DRichText
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }
		
		//DRichText
		public RuleCall getValueDRichTextParserRuleCall_3_0() { return cValueDRichTextParserRuleCall_3_0; }
	}
	public class PubReferenceTargetNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubReferenceTargetName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cNumberSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//fragment PubReferenceTargetName returns ReferenceTarget:
		//	'(' '#'? name=ID ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'(' '#'? name=ID ')'
		public Group getGroup() { return cGroup; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }
		
		//'#'?
		public Keyword getNumberSignKeyword_1() { return cNumberSignKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
	}
	public class PubDocumentSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubDocumentSegment");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPubAbstractParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cPubPrefaceParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cPubPublicationBodyParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cPubEpilogueParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cPubChangeHistoryParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cPubTOCParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cPubAbbreviationsParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cPubListOfTablesParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cPubListOfFiguresParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cPubBibliographyParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cPubGlossaryParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cPubIndexParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		private final RuleCall cPubSegmentIncludeParserRuleCall_12 = (RuleCall)cAlternatives.eContents().get(12);
		
		////
		//// SEGMENTS
		////
		//PubDocumentSegment DocumentSegment:
		//	PubAbstract | PubPreface | PubPublicationBody | PubEpilogue | PubChangeHistory | PubTOC | PubAbbreviations |
		//	PubListOfTables | PubListOfFigures | PubBibliography | PubGlossary | PubIndex | PubSegmentInclude;
		@Override public ParserRule getRule() { return rule; }
		
		//PubAbstract | PubPreface | PubPublicationBody | PubEpilogue | PubChangeHistory | PubTOC | PubAbbreviations |
		//PubListOfTables | PubListOfFigures | PubBibliography | PubGlossary | PubIndex | PubSegmentInclude
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//PubAbstract
		public RuleCall getPubAbstractParserRuleCall_0() { return cPubAbstractParserRuleCall_0; }
		
		//PubPreface
		public RuleCall getPubPrefaceParserRuleCall_1() { return cPubPrefaceParserRuleCall_1; }
		
		//PubPublicationBody
		public RuleCall getPubPublicationBodyParserRuleCall_2() { return cPubPublicationBodyParserRuleCall_2; }
		
		//PubEpilogue
		public RuleCall getPubEpilogueParserRuleCall_3() { return cPubEpilogueParserRuleCall_3; }
		
		//PubChangeHistory
		public RuleCall getPubChangeHistoryParserRuleCall_4() { return cPubChangeHistoryParserRuleCall_4; }
		
		//PubTOC
		public RuleCall getPubTOCParserRuleCall_5() { return cPubTOCParserRuleCall_5; }
		
		//PubAbbreviations
		public RuleCall getPubAbbreviationsParserRuleCall_6() { return cPubAbbreviationsParserRuleCall_6; }
		
		//PubListOfTables
		public RuleCall getPubListOfTablesParserRuleCall_7() { return cPubListOfTablesParserRuleCall_7; }
		
		//PubListOfFigures
		public RuleCall getPubListOfFiguresParserRuleCall_8() { return cPubListOfFiguresParserRuleCall_8; }
		
		//PubBibliography
		public RuleCall getPubBibliographyParserRuleCall_9() { return cPubBibliographyParserRuleCall_9; }
		
		//PubGlossary
		public RuleCall getPubGlossaryParserRuleCall_10() { return cPubGlossaryParserRuleCall_10; }
		
		//PubIndex
		public RuleCall getPubIndexParserRuleCall_11() { return cPubIndexParserRuleCall_11; }
		
		//PubSegmentInclude
		public RuleCall getPubSegmentIncludeParserRuleCall_12() { return cPubSegmentIncludeParserRuleCall_12; }
	}
	public class PubAbstractElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubAbstract");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAbstractAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAbstractKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cContentsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cContentsPubContentBlockParserRuleCall_3_0 = (RuleCall)cContentsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//PubAbstract Abstract:
		//	{Abstract}
		//	'Abstract'
		//	'{'
		//	contents+=PubContentBlock*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Abstract} 'Abstract' '{' contents+=PubContentBlock* '}'
		public Group getGroup() { return cGroup; }
		
		//{Abstract}
		public Action getAbstractAction_0() { return cAbstractAction_0; }
		
		//'Abstract'
		public Keyword getAbstractKeyword_1() { return cAbstractKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//contents+=PubContentBlock*
		public Assignment getContentsAssignment_3() { return cContentsAssignment_3; }
		
		//PubContentBlock
		public RuleCall getContentsPubContentBlockParserRuleCall_3_0() { return cContentsPubContentBlockParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class PubPrefaceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubPreface");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPrefaceAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPrefaceKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cContentsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cContentsPubContentBlockParserRuleCall_3_0 = (RuleCall)cContentsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//PubPreface Preface:
		//	{Preface}
		//	'Preface'
		//	'{'
		//	contents+=PubContentBlock*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Preface} 'Preface' '{' contents+=PubContentBlock* '}'
		public Group getGroup() { return cGroup; }
		
		//{Preface}
		public Action getPrefaceAction_0() { return cPrefaceAction_0; }
		
		//'Preface'
		public Keyword getPrefaceKeyword_1() { return cPrefaceKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//contents+=PubContentBlock*
		public Assignment getContentsAssignment_3() { return cContentsAssignment_3; }
		
		//PubContentBlock
		public RuleCall getContentsPubContentBlockParserRuleCall_3_0() { return cContentsPubContentBlockParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class PubEpilogueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubEpilogue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEpilogueAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cEpilogueKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cContentsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cContentsPubContentBlockParserRuleCall_3_0 = (RuleCall)cContentsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//PubEpilogue Epilogue:
		//	{Epilogue}
		//	'Epilogue'
		//	'{'
		//	contents+=PubContentBlock*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Epilogue} 'Epilogue' '{' contents+=PubContentBlock* '}'
		public Group getGroup() { return cGroup; }
		
		//{Epilogue}
		public Action getEpilogueAction_0() { return cEpilogueAction_0; }
		
		//'Epilogue'
		public Keyword getEpilogueKeyword_1() { return cEpilogueKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//contents+=PubContentBlock*
		public Assignment getContentsAssignment_3() { return cContentsAssignment_3; }
		
		//PubContentBlock
		public RuleCall getContentsPubContentBlockParserRuleCall_3_0() { return cContentsPubContentBlockParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class PubChangeHistoryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubChangeHistory");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cChangeHistoryAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cChangeHistoryKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cEntriesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cEntriesPubChangeDescriptionParserRuleCall_3_0 = (RuleCall)cEntriesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//PubChangeHistory ChangeHistory:
		//	{ChangeHistory}
		//	'ChangeHistory'
		//	'{'
		//	entries+=PubChangeDescription*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{ChangeHistory} 'ChangeHistory' '{' entries+=PubChangeDescription* '}'
		public Group getGroup() { return cGroup; }
		
		//{ChangeHistory}
		public Action getChangeHistoryAction_0() { return cChangeHistoryAction_0; }
		
		//'ChangeHistory'
		public Keyword getChangeHistoryKeyword_1() { return cChangeHistoryKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//entries+=PubChangeDescription*
		public Assignment getEntriesAssignment_3() { return cEntriesAssignment_3; }
		
		//PubChangeDescription
		public RuleCall getEntriesPubChangeDescriptionParserRuleCall_3_0() { return cEntriesPubChangeDescriptionParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class PubChangeDescriptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubChangeDescription");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cEntryKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Keyword cVersionKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cVersionAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cVersionSTRINGTerminalRuleCall_0_2_0 = (RuleCall)cVersionAssignment_0_2.eContents().get(0);
		private final Keyword cDateKeyword_0_3 = (Keyword)cGroup_0.eContents().get(3);
		private final Assignment cDateAssignment_0_4 = (Assignment)cGroup_0.eContents().get(4);
		private final RuleCall cDateSTRINGTerminalRuleCall_0_4_0 = (RuleCall)cDateAssignment_0_4.eContents().get(0);
		private final Keyword cAuthorKeyword_0_5 = (Keyword)cGroup_0.eContents().get(5);
		private final Assignment cAuthorAssignment_0_6 = (Assignment)cGroup_0.eContents().get(6);
		private final RuleCall cAuthorSTRINGTerminalRuleCall_0_6_0 = (RuleCall)cAuthorAssignment_0_6.eContents().get(0);
		private final Keyword cDescriptionKeyword_0_7 = (Keyword)cGroup_0.eContents().get(7);
		private final Assignment cDescriptionAssignment_0_8 = (Assignment)cGroup_0.eContents().get(8);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_0_8_0 = (RuleCall)cDescriptionAssignment_0_8.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cVersionAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cVersionSTRINGTerminalRuleCall_1_1_0 = (RuleCall)cVersionAssignment_1_1.eContents().get(0);
		private final Keyword cColonKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cDateAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cDateSTRINGTerminalRuleCall_1_3_0 = (RuleCall)cDateAssignment_1_3.eContents().get(0);
		private final Keyword cCommaKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		private final Assignment cAuthorAssignment_1_5 = (Assignment)cGroup_1.eContents().get(5);
		private final RuleCall cAuthorSTRINGTerminalRuleCall_1_5_0 = (RuleCall)cAuthorAssignment_1_5.eContents().get(0);
		private final Keyword cCommaKeyword_1_6 = (Keyword)cGroup_1.eContents().get(6);
		private final Assignment cDescriptionAssignment_1_7 = (Assignment)cGroup_1.eContents().get(7);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_1_7_0 = (RuleCall)cDescriptionAssignment_1_7.eContents().get(0);
		
		//PubChangeDescription ChangeDescription:
		//	'Entry'
		//	'version:' version=STRING
		//	'date:' date=STRING
		//	'author:' author=STRING
		//	'description:' description=STRING
		//	| '-' version=STRING ':' date=STRING ',' author=STRING ',' description=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//'Entry' 'version:' version=STRING 'date:' date=STRING 'author:' author=STRING 'description:' description=STRING | '-'
		//version=STRING ':' date=STRING ',' author=STRING ',' description=STRING
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'Entry' 'version:' version=STRING 'date:' date=STRING 'author:' author=STRING 'description:' description=STRING
		public Group getGroup_0() { return cGroup_0; }
		
		//'Entry'
		public Keyword getEntryKeyword_0_0() { return cEntryKeyword_0_0; }
		
		//'version:'
		public Keyword getVersionKeyword_0_1() { return cVersionKeyword_0_1; }
		
		//version=STRING
		public Assignment getVersionAssignment_0_2() { return cVersionAssignment_0_2; }
		
		//STRING
		public RuleCall getVersionSTRINGTerminalRuleCall_0_2_0() { return cVersionSTRINGTerminalRuleCall_0_2_0; }
		
		//'date:'
		public Keyword getDateKeyword_0_3() { return cDateKeyword_0_3; }
		
		//date=STRING
		public Assignment getDateAssignment_0_4() { return cDateAssignment_0_4; }
		
		//STRING
		public RuleCall getDateSTRINGTerminalRuleCall_0_4_0() { return cDateSTRINGTerminalRuleCall_0_4_0; }
		
		//'author:'
		public Keyword getAuthorKeyword_0_5() { return cAuthorKeyword_0_5; }
		
		//author=STRING
		public Assignment getAuthorAssignment_0_6() { return cAuthorAssignment_0_6; }
		
		//STRING
		public RuleCall getAuthorSTRINGTerminalRuleCall_0_6_0() { return cAuthorSTRINGTerminalRuleCall_0_6_0; }
		
		//'description:'
		public Keyword getDescriptionKeyword_0_7() { return cDescriptionKeyword_0_7; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_0_8() { return cDescriptionAssignment_0_8; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_0_8_0() { return cDescriptionSTRINGTerminalRuleCall_0_8_0; }
		
		//'-' version=STRING ':' date=STRING ',' author=STRING ',' description=STRING
		public Group getGroup_1() { return cGroup_1; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_1_0() { return cHyphenMinusKeyword_1_0; }
		
		//version=STRING
		public Assignment getVersionAssignment_1_1() { return cVersionAssignment_1_1; }
		
		//STRING
		public RuleCall getVersionSTRINGTerminalRuleCall_1_1_0() { return cVersionSTRINGTerminalRuleCall_1_1_0; }
		
		//':'
		public Keyword getColonKeyword_1_2() { return cColonKeyword_1_2; }
		
		//date=STRING
		public Assignment getDateAssignment_1_3() { return cDateAssignment_1_3; }
		
		//STRING
		public RuleCall getDateSTRINGTerminalRuleCall_1_3_0() { return cDateSTRINGTerminalRuleCall_1_3_0; }
		
		//','
		public Keyword getCommaKeyword_1_4() { return cCommaKeyword_1_4; }
		
		//author=STRING
		public Assignment getAuthorAssignment_1_5() { return cAuthorAssignment_1_5; }
		
		//STRING
		public RuleCall getAuthorSTRINGTerminalRuleCall_1_5_0() { return cAuthorSTRINGTerminalRuleCall_1_5_0; }
		
		//','
		public Keyword getCommaKeyword_1_6() { return cCommaKeyword_1_6; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_1_7() { return cDescriptionAssignment_1_7; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_1_7_0() { return cDescriptionSTRINGTerminalRuleCall_1_7_0; }
	}
	public class PubTOCElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubTOC");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTOCAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTableOfContentsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//PubTOC TOC:
		//	{TOC}
		//	'TableOfContents'
		//	'{' '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{TOC} 'TableOfContents' '{' '}'
		public Group getGroup() { return cGroup; }
		
		//{TOC}
		public Action getTOCAction_0() { return cTOCAction_0; }
		
		//'TableOfContents'
		public Keyword getTableOfContentsKeyword_1() { return cTableOfContentsKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class PubAbbreviationsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubAbbreviations");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAbbreviationsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAbbreviationsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cEntriesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cEntriesPubAbbreviationParserRuleCall_3_0 = (RuleCall)cEntriesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//PubAbbreviations Abbreviations:
		//	{Abbreviations}
		//	'Abbreviations'
		//	'{'
		//	entries+=PubAbbreviation*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Abbreviations} 'Abbreviations' '{' entries+=PubAbbreviation* '}'
		public Group getGroup() { return cGroup; }
		
		//{Abbreviations}
		public Action getAbbreviationsAction_0() { return cAbbreviationsAction_0; }
		
		//'Abbreviations'
		public Keyword getAbbreviationsKeyword_1() { return cAbbreviationsKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//entries+=PubAbbreviation*
		public Assignment getEntriesAssignment_3() { return cEntriesAssignment_3; }
		
		//PubAbbreviation
		public RuleCall getEntriesPubAbbreviationParserRuleCall_3_0() { return cEntriesPubAbbreviationParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class PubAbbreviationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubAbbreviation");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cEntryKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Keyword cIdKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cNameAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_0_2_0 = (RuleCall)cNameAssignment_0_2.eContents().get(0);
		private final Keyword cTextKeyword_0_3 = (Keyword)cGroup_0.eContents().get(3);
		private final Assignment cLongFormAssignment_0_4 = (Assignment)cGroup_0.eContents().get(4);
		private final RuleCall cLongFormSTRINGTerminalRuleCall_0_4_0 = (RuleCall)cLongFormAssignment_0_4.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cNameAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_1_0 = (RuleCall)cNameAssignment_1_1.eContents().get(0);
		private final Keyword cColonKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cLongFormAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cLongFormSTRINGTerminalRuleCall_1_3_0 = (RuleCall)cLongFormAssignment_1_3.eContents().get(0);
		
		//PubAbbreviation Abbreviation:
		//	'Entry'
		//	'id:' name=ID
		//	'text:' longForm=STRING
		//	| '-' name=ID ':' longForm=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//'Entry' 'id:' name=ID 'text:' longForm=STRING | '-' name=ID ':' longForm=STRING
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'Entry' 'id:' name=ID 'text:' longForm=STRING
		public Group getGroup_0() { return cGroup_0; }
		
		//'Entry'
		public Keyword getEntryKeyword_0_0() { return cEntryKeyword_0_0; }
		
		//'id:'
		public Keyword getIdKeyword_0_1() { return cIdKeyword_0_1; }
		
		//name=ID
		public Assignment getNameAssignment_0_2() { return cNameAssignment_0_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_2_0() { return cNameIDTerminalRuleCall_0_2_0; }
		
		//'text:'
		public Keyword getTextKeyword_0_3() { return cTextKeyword_0_3; }
		
		//longForm=STRING
		public Assignment getLongFormAssignment_0_4() { return cLongFormAssignment_0_4; }
		
		//STRING
		public RuleCall getLongFormSTRINGTerminalRuleCall_0_4_0() { return cLongFormSTRINGTerminalRuleCall_0_4_0; }
		
		//'-' name=ID ':' longForm=STRING
		public Group getGroup_1() { return cGroup_1; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_1_0() { return cHyphenMinusKeyword_1_0; }
		
		//name=ID
		public Assignment getNameAssignment_1_1() { return cNameAssignment_1_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_1_0() { return cNameIDTerminalRuleCall_1_1_0; }
		
		//':'
		public Keyword getColonKeyword_1_2() { return cColonKeyword_1_2; }
		
		//longForm=STRING
		public Assignment getLongFormAssignment_1_3() { return cLongFormAssignment_1_3; }
		
		//STRING
		public RuleCall getLongFormSTRINGTerminalRuleCall_1_3_0() { return cLongFormSTRINGTerminalRuleCall_1_3_0; }
	}
	public class PubListOfTablesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubListOfTables");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cListOfTablesAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cListOfTablesKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//PubListOfTables ListOfTables:
		//	{ListOfTables}
		//	'ListOfTables'
		//	'{' '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{ListOfTables} 'ListOfTables' '{' '}'
		public Group getGroup() { return cGroup; }
		
		//{ListOfTables}
		public Action getListOfTablesAction_0() { return cListOfTablesAction_0; }
		
		//'ListOfTables'
		public Keyword getListOfTablesKeyword_1() { return cListOfTablesKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class PubListOfFiguresElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubListOfFigures");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cListOfFiguresAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cListOfFiguresKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//PubListOfFigures ListOfFigures:
		//	{ListOfFigures}
		//	'ListOfFigures'
		//	'{' '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{ListOfFigures} 'ListOfFigures' '{' '}'
		public Group getGroup() { return cGroup; }
		
		//{ListOfFigures}
		public Action getListOfFiguresAction_0() { return cListOfFiguresAction_0; }
		
		//'ListOfFigures'
		public Keyword getListOfFiguresKeyword_1() { return cListOfFiguresKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class PubBibliographyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubBibliography");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cBibliographyAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cBibliographyKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cEntriesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cEntriesPubBibliographyEntryParserRuleCall_3_0 = (RuleCall)cEntriesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//PubBibliography Bibliography:
		//	{Bibliography}
		//	'Bibliography'
		//	'{'
		//	entries+=PubBibliographyEntry*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Bibliography} 'Bibliography' '{' entries+=PubBibliographyEntry* '}'
		public Group getGroup() { return cGroup; }
		
		//{Bibliography}
		public Action getBibliographyAction_0() { return cBibliographyAction_0; }
		
		//'Bibliography'
		public Keyword getBibliographyKeyword_1() { return cBibliographyKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//entries+=PubBibliographyEntry*
		public Assignment getEntriesAssignment_3() { return cEntriesAssignment_3; }
		
		//PubBibliographyEntry
		public RuleCall getEntriesPubBibliographyEntryParserRuleCall_3_0() { return cEntriesPubBibliographyEntryParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class PubBibliographyEntryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubBibliographyEntry");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cEntryKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Keyword cIdKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cNameAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_0_2_0 = (RuleCall)cNameAssignment_0_2.eContents().get(0);
		private final Keyword cTitleKeyword_0_3 = (Keyword)cGroup_0.eContents().get(3);
		private final Assignment cTitleAssignment_0_4 = (Assignment)cGroup_0.eContents().get(4);
		private final RuleCall cTitleSTRINGTerminalRuleCall_0_4_0 = (RuleCall)cTitleAssignment_0_4.eContents().get(0);
		private final Keyword cAuthorsKeyword_0_5 = (Keyword)cGroup_0.eContents().get(5);
		private final Assignment cAuthorsAssignment_0_6 = (Assignment)cGroup_0.eContents().get(6);
		private final RuleCall cAuthorsSTRINGTerminalRuleCall_0_6_0 = (RuleCall)cAuthorsAssignment_0_6.eContents().get(0);
		private final Keyword cPublisherKeyword_0_7 = (Keyword)cGroup_0.eContents().get(7);
		private final Assignment cPublisherAssignment_0_8 = (Assignment)cGroup_0.eContents().get(8);
		private final RuleCall cPublisherSTRINGTerminalRuleCall_0_8_0 = (RuleCall)cPublisherAssignment_0_8.eContents().get(0);
		private final Keyword cDateKeyword_0_9 = (Keyword)cGroup_0.eContents().get(9);
		private final Assignment cDateAssignment_0_10 = (Assignment)cGroup_0.eContents().get(10);
		private final RuleCall cDateSTRINGTerminalRuleCall_0_10_0 = (RuleCall)cDateAssignment_0_10.eContents().get(0);
		private final Keyword cCommentKeyword_0_11 = (Keyword)cGroup_0.eContents().get(11);
		private final Assignment cCommentAssignment_0_12 = (Assignment)cGroup_0.eContents().get(12);
		private final RuleCall cCommentSTRINGTerminalRuleCall_0_12_0 = (RuleCall)cCommentAssignment_0_12.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cNameAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_1_0 = (RuleCall)cNameAssignment_1_1.eContents().get(0);
		private final Keyword cColonKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cTitleAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cTitleSTRINGTerminalRuleCall_1_3_0 = (RuleCall)cTitleAssignment_1_3.eContents().get(0);
		private final Keyword cCommaKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		private final Assignment cAuthorsAssignment_1_5 = (Assignment)cGroup_1.eContents().get(5);
		private final RuleCall cAuthorsSTRINGTerminalRuleCall_1_5_0 = (RuleCall)cAuthorsAssignment_1_5.eContents().get(0);
		private final Keyword cCommaKeyword_1_6 = (Keyword)cGroup_1.eContents().get(6);
		private final Assignment cPublisherAssignment_1_7 = (Assignment)cGroup_1.eContents().get(7);
		private final RuleCall cPublisherSTRINGTerminalRuleCall_1_7_0 = (RuleCall)cPublisherAssignment_1_7.eContents().get(0);
		private final Keyword cCommaKeyword_1_8 = (Keyword)cGroup_1.eContents().get(8);
		private final Assignment cDateAssignment_1_9 = (Assignment)cGroup_1.eContents().get(9);
		private final RuleCall cDateSTRINGTerminalRuleCall_1_9_0 = (RuleCall)cDateAssignment_1_9.eContents().get(0);
		private final Keyword cCommaKeyword_1_10 = (Keyword)cGroup_1.eContents().get(10);
		private final Assignment cCommentAssignment_1_11 = (Assignment)cGroup_1.eContents().get(11);
		private final RuleCall cCommentSTRINGTerminalRuleCall_1_11_0 = (RuleCall)cCommentAssignment_1_11.eContents().get(0);
		
		//PubBibliographyEntry BibliographyEntry:
		//	'Entry'
		//	'id:' name=ID
		//	'title:' title=STRING
		//	'authors:' authors=STRING
		//	'publisher:' publisher=STRING
		//	'date:' date=STRING
		//	'comment:' comment=STRING
		//	| '-' name=ID ':' title=STRING ',' authors=STRING ',' publisher=STRING ',' date=STRING ',' comment=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//'Entry' 'id:' name=ID 'title:' title=STRING 'authors:' authors=STRING 'publisher:' publisher=STRING 'date:' date=STRING
		//'comment:' comment=STRING | '-' name=ID ':' title=STRING ',' authors=STRING ',' publisher=STRING ',' date=STRING ','
		//comment=STRING
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'Entry' 'id:' name=ID 'title:' title=STRING 'authors:' authors=STRING 'publisher:' publisher=STRING 'date:' date=STRING
		//'comment:' comment=STRING
		public Group getGroup_0() { return cGroup_0; }
		
		//'Entry'
		public Keyword getEntryKeyword_0_0() { return cEntryKeyword_0_0; }
		
		//'id:'
		public Keyword getIdKeyword_0_1() { return cIdKeyword_0_1; }
		
		//name=ID
		public Assignment getNameAssignment_0_2() { return cNameAssignment_0_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_2_0() { return cNameIDTerminalRuleCall_0_2_0; }
		
		//'title:'
		public Keyword getTitleKeyword_0_3() { return cTitleKeyword_0_3; }
		
		//title=STRING
		public Assignment getTitleAssignment_0_4() { return cTitleAssignment_0_4; }
		
		//STRING
		public RuleCall getTitleSTRINGTerminalRuleCall_0_4_0() { return cTitleSTRINGTerminalRuleCall_0_4_0; }
		
		//'authors:'
		public Keyword getAuthorsKeyword_0_5() { return cAuthorsKeyword_0_5; }
		
		//authors=STRING
		public Assignment getAuthorsAssignment_0_6() { return cAuthorsAssignment_0_6; }
		
		//STRING
		public RuleCall getAuthorsSTRINGTerminalRuleCall_0_6_0() { return cAuthorsSTRINGTerminalRuleCall_0_6_0; }
		
		//'publisher:'
		public Keyword getPublisherKeyword_0_7() { return cPublisherKeyword_0_7; }
		
		//publisher=STRING
		public Assignment getPublisherAssignment_0_8() { return cPublisherAssignment_0_8; }
		
		//STRING
		public RuleCall getPublisherSTRINGTerminalRuleCall_0_8_0() { return cPublisherSTRINGTerminalRuleCall_0_8_0; }
		
		//'date:'
		public Keyword getDateKeyword_0_9() { return cDateKeyword_0_9; }
		
		//date=STRING
		public Assignment getDateAssignment_0_10() { return cDateAssignment_0_10; }
		
		//STRING
		public RuleCall getDateSTRINGTerminalRuleCall_0_10_0() { return cDateSTRINGTerminalRuleCall_0_10_0; }
		
		//'comment:'
		public Keyword getCommentKeyword_0_11() { return cCommentKeyword_0_11; }
		
		//comment=STRING
		public Assignment getCommentAssignment_0_12() { return cCommentAssignment_0_12; }
		
		//STRING
		public RuleCall getCommentSTRINGTerminalRuleCall_0_12_0() { return cCommentSTRINGTerminalRuleCall_0_12_0; }
		
		//'-' name=ID ':' title=STRING ',' authors=STRING ',' publisher=STRING ',' date=STRING ',' comment=STRING
		public Group getGroup_1() { return cGroup_1; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_1_0() { return cHyphenMinusKeyword_1_0; }
		
		//name=ID
		public Assignment getNameAssignment_1_1() { return cNameAssignment_1_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_1_0() { return cNameIDTerminalRuleCall_1_1_0; }
		
		//':'
		public Keyword getColonKeyword_1_2() { return cColonKeyword_1_2; }
		
		//title=STRING
		public Assignment getTitleAssignment_1_3() { return cTitleAssignment_1_3; }
		
		//STRING
		public RuleCall getTitleSTRINGTerminalRuleCall_1_3_0() { return cTitleSTRINGTerminalRuleCall_1_3_0; }
		
		//','
		public Keyword getCommaKeyword_1_4() { return cCommaKeyword_1_4; }
		
		//authors=STRING
		public Assignment getAuthorsAssignment_1_5() { return cAuthorsAssignment_1_5; }
		
		//STRING
		public RuleCall getAuthorsSTRINGTerminalRuleCall_1_5_0() { return cAuthorsSTRINGTerminalRuleCall_1_5_0; }
		
		//','
		public Keyword getCommaKeyword_1_6() { return cCommaKeyword_1_6; }
		
		//publisher=STRING
		public Assignment getPublisherAssignment_1_7() { return cPublisherAssignment_1_7; }
		
		//STRING
		public RuleCall getPublisherSTRINGTerminalRuleCall_1_7_0() { return cPublisherSTRINGTerminalRuleCall_1_7_0; }
		
		//','
		public Keyword getCommaKeyword_1_8() { return cCommaKeyword_1_8; }
		
		//date=STRING
		public Assignment getDateAssignment_1_9() { return cDateAssignment_1_9; }
		
		//STRING
		public RuleCall getDateSTRINGTerminalRuleCall_1_9_0() { return cDateSTRINGTerminalRuleCall_1_9_0; }
		
		//','
		public Keyword getCommaKeyword_1_10() { return cCommaKeyword_1_10; }
		
		//comment=STRING
		public Assignment getCommentAssignment_1_11() { return cCommentAssignment_1_11; }
		
		//STRING
		public RuleCall getCommentSTRINGTerminalRuleCall_1_11_0() { return cCommentSTRINGTerminalRuleCall_1_11_0; }
	}
	public class PubGlossaryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubGlossary");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGlossaryAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cGlossaryKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cEntriesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cEntriesPubGlossaryEntryParserRuleCall_3_0 = (RuleCall)cEntriesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//PubGlossary Glossary:
		//	{Glossary}
		//	'Glossary'
		//	'{'
		//	entries+=PubGlossaryEntry*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Glossary} 'Glossary' '{' entries+=PubGlossaryEntry* '}'
		public Group getGroup() { return cGroup; }
		
		//{Glossary}
		public Action getGlossaryAction_0() { return cGlossaryAction_0; }
		
		//'Glossary'
		public Keyword getGlossaryKeyword_1() { return cGlossaryKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//entries+=PubGlossaryEntry*
		public Assignment getEntriesAssignment_3() { return cEntriesAssignment_3; }
		
		//PubGlossaryEntry
		public RuleCall getEntriesPubGlossaryEntryParserRuleCall_3_0() { return cEntriesPubGlossaryEntryParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class PubGlossaryEntryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubGlossaryEntry");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cEntryKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Keyword cIdKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cNameAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_0_2_0 = (RuleCall)cNameAssignment_0_2.eContents().get(0);
		private final Keyword cTextKeyword_0_3 = (Keyword)cGroup_0.eContents().get(3);
		private final Assignment cTextAssignment_0_4 = (Assignment)cGroup_0.eContents().get(4);
		private final RuleCall cTextSTRINGTerminalRuleCall_0_4_0 = (RuleCall)cTextAssignment_0_4.eContents().get(0);
		private final Keyword cCommentKeyword_0_5 = (Keyword)cGroup_0.eContents().get(5);
		private final Assignment cCommentAssignment_0_6 = (Assignment)cGroup_0.eContents().get(6);
		private final RuleCall cCommentSTRINGTerminalRuleCall_0_6_0 = (RuleCall)cCommentAssignment_0_6.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cNameAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_1_0 = (RuleCall)cNameAssignment_1_1.eContents().get(0);
		private final Keyword cColonKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cTextAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cTextSTRINGTerminalRuleCall_1_3_0 = (RuleCall)cTextAssignment_1_3.eContents().get(0);
		private final Keyword cCommaKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		private final Assignment cCommentAssignment_1_5 = (Assignment)cGroup_1.eContents().get(5);
		private final RuleCall cCommentSTRINGTerminalRuleCall_1_5_0 = (RuleCall)cCommentAssignment_1_5.eContents().get(0);
		
		//PubGlossaryEntry GlossaryEntry:
		//	'Entry'
		//	'id:' name=ID
		//	'text' text=STRING
		//	'comment:' comment=STRING
		//	| '-' name=ID ':' text=STRING ',' comment=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//'Entry' 'id:' name=ID 'text' text=STRING 'comment:' comment=STRING | '-' name=ID ':' text=STRING ',' comment=STRING
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'Entry' 'id:' name=ID 'text' text=STRING 'comment:' comment=STRING
		public Group getGroup_0() { return cGroup_0; }
		
		//'Entry'
		public Keyword getEntryKeyword_0_0() { return cEntryKeyword_0_0; }
		
		//'id:'
		public Keyword getIdKeyword_0_1() { return cIdKeyword_0_1; }
		
		//name=ID
		public Assignment getNameAssignment_0_2() { return cNameAssignment_0_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_2_0() { return cNameIDTerminalRuleCall_0_2_0; }
		
		//'text'
		public Keyword getTextKeyword_0_3() { return cTextKeyword_0_3; }
		
		//text=STRING
		public Assignment getTextAssignment_0_4() { return cTextAssignment_0_4; }
		
		//STRING
		public RuleCall getTextSTRINGTerminalRuleCall_0_4_0() { return cTextSTRINGTerminalRuleCall_0_4_0; }
		
		//'comment:'
		public Keyword getCommentKeyword_0_5() { return cCommentKeyword_0_5; }
		
		//comment=STRING
		public Assignment getCommentAssignment_0_6() { return cCommentAssignment_0_6; }
		
		//STRING
		public RuleCall getCommentSTRINGTerminalRuleCall_0_6_0() { return cCommentSTRINGTerminalRuleCall_0_6_0; }
		
		//'-' name=ID ':' text=STRING ',' comment=STRING
		public Group getGroup_1() { return cGroup_1; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_1_0() { return cHyphenMinusKeyword_1_0; }
		
		//name=ID
		public Assignment getNameAssignment_1_1() { return cNameAssignment_1_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_1_0() { return cNameIDTerminalRuleCall_1_1_0; }
		
		//':'
		public Keyword getColonKeyword_1_2() { return cColonKeyword_1_2; }
		
		//text=STRING
		public Assignment getTextAssignment_1_3() { return cTextAssignment_1_3; }
		
		//STRING
		public RuleCall getTextSTRINGTerminalRuleCall_1_3_0() { return cTextSTRINGTerminalRuleCall_1_3_0; }
		
		//','
		public Keyword getCommaKeyword_1_4() { return cCommaKeyword_1_4; }
		
		//comment=STRING
		public Assignment getCommentAssignment_1_5() { return cCommentAssignment_1_5; }
		
		//STRING
		public RuleCall getCommentSTRINGTerminalRuleCall_1_5_0() { return cCommentSTRINGTerminalRuleCall_1_5_0; }
	}
	public class PubIndexElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubIndex");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cIndexAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cIndexKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cEntriesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cEntriesPubIndexEntryParserRuleCall_3_0 = (RuleCall)cEntriesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//PubIndex Index:
		//	{Index}
		//	'Index'
		//	'{'
		//	entries+=PubIndexEntry*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Index} 'Index' '{' entries+=PubIndexEntry* '}'
		public Group getGroup() { return cGroup; }
		
		//{Index}
		public Action getIndexAction_0() { return cIndexAction_0; }
		
		//'Index'
		public Keyword getIndexKeyword_1() { return cIndexKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//entries+=PubIndexEntry*
		public Assignment getEntriesAssignment_3() { return cEntriesAssignment_3; }
		
		//PubIndexEntry
		public RuleCall getEntriesPubIndexEntryParserRuleCall_3_0() { return cEntriesPubIndexEntryParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class PubIndexEntryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubIndexEntry");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cEntryKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Keyword cTextKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cTextAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cTextSTRINGTerminalRuleCall_0_2_0 = (RuleCall)cTextAssignment_0_2.eContents().get(0);
		private final Keyword cReferencesKeyword_0_3 = (Keyword)cGroup_0.eContents().get(3);
		private final Assignment cReferencesAssignment_0_4 = (Assignment)cGroup_0.eContents().get(4);
		private final CrossReference cReferencesDivisionCrossReference_0_4_0 = (CrossReference)cReferencesAssignment_0_4.eContents().get(0);
		private final RuleCall cReferencesDivisionIDTerminalRuleCall_0_4_0_1 = (RuleCall)cReferencesDivisionCrossReference_0_4_0.eContents().get(1);
		private final Group cGroup_0_5 = (Group)cGroup_0.eContents().get(5);
		private final Keyword cCommaKeyword_0_5_0 = (Keyword)cGroup_0_5.eContents().get(0);
		private final Assignment cReferencesAssignment_0_5_1 = (Assignment)cGroup_0_5.eContents().get(1);
		private final CrossReference cReferencesDivisionCrossReference_0_5_1_0 = (CrossReference)cReferencesAssignment_0_5_1.eContents().get(0);
		private final RuleCall cReferencesDivisionIDTerminalRuleCall_0_5_1_0_1 = (RuleCall)cReferencesDivisionCrossReference_0_5_1_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cTextAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cTextSTRINGTerminalRuleCall_1_1_0 = (RuleCall)cTextAssignment_1_1.eContents().get(0);
		private final Keyword cColonKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cReferencesAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final CrossReference cReferencesDivisionCrossReference_1_3_0 = (CrossReference)cReferencesAssignment_1_3.eContents().get(0);
		private final RuleCall cReferencesDivisionIDTerminalRuleCall_1_3_0_1 = (RuleCall)cReferencesDivisionCrossReference_1_3_0.eContents().get(1);
		private final Group cGroup_1_4 = (Group)cGroup_1.eContents().get(4);
		private final Keyword cCommaKeyword_1_4_0 = (Keyword)cGroup_1_4.eContents().get(0);
		private final Assignment cReferencesAssignment_1_4_1 = (Assignment)cGroup_1_4.eContents().get(1);
		private final CrossReference cReferencesDivisionCrossReference_1_4_1_0 = (CrossReference)cReferencesAssignment_1_4_1.eContents().get(0);
		private final RuleCall cReferencesDivisionIDTerminalRuleCall_1_4_1_0_1 = (RuleCall)cReferencesDivisionCrossReference_1_4_1_0.eContents().get(1);
		
		//PubIndexEntry IndexEntry:
		//	'Entry'
		//	'text' text=STRING
		//	'references:' references+=[Division] (',' references+=[Division])* // VALIDATION -> WARNING if none
		//	| '-' text=STRING ':' references+=[Division] (',' references+=[Division])* // VALIDATION -> WARNING if none
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Entry' 'text' text=STRING 'references:' references+=[Division] (',' references+=[Division])* // VALIDATION -> WARNING if none
		//| '-' text=STRING ':' references+=[Division] (',' references+=[Division])*
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'Entry' 'text' text=STRING 'references:' references+=[Division] (',' references+=[Division])*
		public Group getGroup_0() { return cGroup_0; }
		
		//'Entry'
		public Keyword getEntryKeyword_0_0() { return cEntryKeyword_0_0; }
		
		//'text'
		public Keyword getTextKeyword_0_1() { return cTextKeyword_0_1; }
		
		//text=STRING
		public Assignment getTextAssignment_0_2() { return cTextAssignment_0_2; }
		
		//STRING
		public RuleCall getTextSTRINGTerminalRuleCall_0_2_0() { return cTextSTRINGTerminalRuleCall_0_2_0; }
		
		//'references:'
		public Keyword getReferencesKeyword_0_3() { return cReferencesKeyword_0_3; }
		
		//references+=[Division]
		public Assignment getReferencesAssignment_0_4() { return cReferencesAssignment_0_4; }
		
		//[Division]
		public CrossReference getReferencesDivisionCrossReference_0_4_0() { return cReferencesDivisionCrossReference_0_4_0; }
		
		//ID
		public RuleCall getReferencesDivisionIDTerminalRuleCall_0_4_0_1() { return cReferencesDivisionIDTerminalRuleCall_0_4_0_1; }
		
		//(',' references+=[Division])*
		public Group getGroup_0_5() { return cGroup_0_5; }
		
		//','
		public Keyword getCommaKeyword_0_5_0() { return cCommaKeyword_0_5_0; }
		
		//references+=[Division]
		public Assignment getReferencesAssignment_0_5_1() { return cReferencesAssignment_0_5_1; }
		
		//[Division]
		public CrossReference getReferencesDivisionCrossReference_0_5_1_0() { return cReferencesDivisionCrossReference_0_5_1_0; }
		
		//ID
		public RuleCall getReferencesDivisionIDTerminalRuleCall_0_5_1_0_1() { return cReferencesDivisionIDTerminalRuleCall_0_5_1_0_1; }
		
		//'-' text=STRING ':' references+=[Division] (',' references+=[Division])*
		public Group getGroup_1() { return cGroup_1; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_1_0() { return cHyphenMinusKeyword_1_0; }
		
		//text=STRING
		public Assignment getTextAssignment_1_1() { return cTextAssignment_1_1; }
		
		//STRING
		public RuleCall getTextSTRINGTerminalRuleCall_1_1_0() { return cTextSTRINGTerminalRuleCall_1_1_0; }
		
		//':'
		public Keyword getColonKeyword_1_2() { return cColonKeyword_1_2; }
		
		//references+=[Division]
		public Assignment getReferencesAssignment_1_3() { return cReferencesAssignment_1_3; }
		
		//[Division]
		public CrossReference getReferencesDivisionCrossReference_1_3_0() { return cReferencesDivisionCrossReference_1_3_0; }
		
		//ID
		public RuleCall getReferencesDivisionIDTerminalRuleCall_1_3_0_1() { return cReferencesDivisionIDTerminalRuleCall_1_3_0_1; }
		
		//(',' references+=[Division])*
		public Group getGroup_1_4() { return cGroup_1_4; }
		
		//','
		public Keyword getCommaKeyword_1_4_0() { return cCommaKeyword_1_4_0; }
		
		//references+=[Division]
		public Assignment getReferencesAssignment_1_4_1() { return cReferencesAssignment_1_4_1; }
		
		//[Division]
		public CrossReference getReferencesDivisionCrossReference_1_4_1_0() { return cReferencesDivisionCrossReference_1_4_1_0; }
		
		//ID
		public RuleCall getReferencesDivisionIDTerminalRuleCall_1_4_1_0_1() { return cReferencesDivisionIDTerminalRuleCall_1_4_1_0_1; }
	}
	public class PubSegmentIncludeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubSegmentInclude");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSegmentIncludeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSegmentKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cIncludeKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cIncludeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cIncludeDocumentSegmentCrossReference_3_0 = (CrossReference)cIncludeAssignment_3.eContents().get(0);
		private final RuleCall cIncludeDocumentSegmentIDTerminalRuleCall_3_0_1 = (RuleCall)cIncludeDocumentSegmentCrossReference_3_0.eContents().get(1);
		
		//PubSegmentInclude SegmentInclude:
		//	{SegmentInclude}
		//	'Segment'
		//	'include:' include=[DocumentSegment];
		@Override public ParserRule getRule() { return rule; }
		
		//{SegmentInclude} 'Segment' 'include:' include=[DocumentSegment]
		public Group getGroup() { return cGroup; }
		
		//{SegmentInclude}
		public Action getSegmentIncludeAction_0() { return cSegmentIncludeAction_0; }
		
		//'Segment'
		public Keyword getSegmentKeyword_1() { return cSegmentKeyword_1; }
		
		//'include:'
		public Keyword getIncludeKeyword_2() { return cIncludeKeyword_2; }
		
		//include=[DocumentSegment]
		public Assignment getIncludeAssignment_3() { return cIncludeAssignment_3; }
		
		//[DocumentSegment]
		public CrossReference getIncludeDocumentSegmentCrossReference_3_0() { return cIncludeDocumentSegmentCrossReference_3_0; }
		
		//ID
		public RuleCall getIncludeDocumentSegmentIDTerminalRuleCall_3_0_1() { return cIncludeDocumentSegmentIDTerminalRuleCall_3_0_1; }
	}
	public class PubPublicationBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubPublicationBody");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPublicationBodyAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cBodyKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cDivisionsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Alternatives cDivisionsAlternatives_3_0 = (Alternatives)cDivisionsAssignment_3.eContents().get(0);
		private final RuleCall cDivisionsPubPartParserRuleCall_3_0_0 = (RuleCall)cDivisionsAlternatives_3_0.eContents().get(0);
		private final RuleCall cDivisionsPubAppendixParserRuleCall_3_0_1 = (RuleCall)cDivisionsAlternatives_3_0.eContents().get(1);
		private final RuleCall cDivisionsPubChapterParserRuleCall_3_0_2 = (RuleCall)cDivisionsAlternatives_3_0.eContents().get(2);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//PubPublicationBody PublicationBody:
		//	{PublicationBody}
		//	'Body'
		//	'{'
		//	divisions+=(PubPart | PubAppendix | PubChapter)*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{PublicationBody} 'Body' '{' divisions+=(PubPart | PubAppendix | PubChapter)* '}'
		public Group getGroup() { return cGroup; }
		
		//{PublicationBody}
		public Action getPublicationBodyAction_0() { return cPublicationBodyAction_0; }
		
		//'Body'
		public Keyword getBodyKeyword_1() { return cBodyKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//divisions+=(PubPart | PubAppendix | PubChapter)*
		public Assignment getDivisionsAssignment_3() { return cDivisionsAssignment_3; }
		
		//(PubPart | PubAppendix | PubChapter)
		public Alternatives getDivisionsAlternatives_3_0() { return cDivisionsAlternatives_3_0; }
		
		//PubPart
		public RuleCall getDivisionsPubPartParserRuleCall_3_0_0() { return cDivisionsPubPartParserRuleCall_3_0_0; }
		
		//PubAppendix
		public RuleCall getDivisionsPubAppendixParserRuleCall_3_0_1() { return cDivisionsPubAppendixParserRuleCall_3_0_1; }
		
		//PubChapter
		public RuleCall getDivisionsPubChapterParserRuleCall_3_0_2() { return cDivisionsPubChapterParserRuleCall_3_0_2; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class PubDivisionHeaderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubDivisionHeader");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cPubReferenceTargetNameParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cTitleAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTitleDRichTextParserRuleCall_1_0 = (RuleCall)cTitleAssignment_1.eContents().get(0);
		
		////
		//// DIVISIONS
		////
		//fragment PubDivisionHeader returns Division:
		//	PubReferenceTargetName?
		//	title=DRichText;
		@Override public ParserRule getRule() { return rule; }
		
		//PubReferenceTargetName? title=DRichText
		public Group getGroup() { return cGroup; }
		
		//PubReferenceTargetName?
		public RuleCall getPubReferenceTargetNameParserRuleCall_0() { return cPubReferenceTargetNameParserRuleCall_0; }
		
		//title=DRichText
		public Assignment getTitleAssignment_1() { return cTitleAssignment_1; }
		
		//DRichText
		public RuleCall getTitleDRichTextParserRuleCall_1_0() { return cTitleDRichTextParserRuleCall_1_0; }
	}
	public class PubDivisionIncludeHeaderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubDivisionIncludeHeader");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cPubReferenceTargetNameParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cIncludeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//fragment PubDivisionIncludeHeader returns Division:
		//	PubReferenceTargetName?
		//	'include:';
		@Override public ParserRule getRule() { return rule; }
		
		//PubReferenceTargetName? 'include:'
		public Group getGroup() { return cGroup; }
		
		//PubReferenceTargetName?
		public RuleCall getPubReferenceTargetNameParserRuleCall_0() { return cPubReferenceTargetNameParserRuleCall_0; }
		
		//'include:'
		public Keyword getIncludeKeyword_1() { return cIncludeKeyword_1; }
	}
	public class PubPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubPart");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPartAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPartKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final RuleCall cPubDivisionHeaderParserRuleCall_2_0_0 = (RuleCall)cGroup_2_0.eContents().get(0);
		private final Assignment cContentsAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final RuleCall cContentsPubContentBlockParserRuleCall_2_0_1_0 = (RuleCall)cContentsAssignment_2_0_1.eContents().get(0);
		private final Assignment cDivisionsAssignment_2_0_2 = (Assignment)cGroup_2_0.eContents().get(2);
		private final RuleCall cDivisionsPubChapterParserRuleCall_2_0_2_0 = (RuleCall)cDivisionsAssignment_2_0_2.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final RuleCall cPubDivisionIncludeHeaderParserRuleCall_2_1_0 = (RuleCall)cGroup_2_1.eContents().get(0);
		private final Assignment cIncludeAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final CrossReference cIncludePartCrossReference_2_1_1_0 = (CrossReference)cIncludeAssignment_2_1_1.eContents().get(0);
		private final RuleCall cIncludePartDQualifiedNameParserRuleCall_2_1_1_0_1 = (RuleCall)cIncludePartCrossReference_2_1_1_0.eContents().get(1);
		private final Group cGroup_2_1_2 = (Group)cGroup_2_1.eContents().get(2);
		private final Keyword cAsKeyword_2_1_2_0 = (Keyword)cGroup_2_1_2.eContents().get(0);
		private final Assignment cTitleAssignment_2_1_2_1 = (Assignment)cGroup_2_1_2.eContents().get(1);
		private final RuleCall cTitleDRichTextParserRuleCall_2_1_2_1_0 = (RuleCall)cTitleAssignment_2_1_2_1.eContents().get(0);
		
		//PubPart Part:
		//	{Part}
		//	'Part' (PubDivisionHeader
		//	contents+=PubContentBlock*
		//	-> divisions+=PubChapter*
		//	| PubDivisionIncludeHeader
		//	include=[Part|DQualifiedName] ('as' title=DRichText)?);
		@Override public ParserRule getRule() { return rule; }
		
		//{Part} 'Part' (PubDivisionHeader contents+=PubContentBlock* -> divisions+=PubChapter* | PubDivisionIncludeHeader
		//include=[Part|DQualifiedName] ('as' title=DRichText)?)
		public Group getGroup() { return cGroup; }
		
		//{Part}
		public Action getPartAction_0() { return cPartAction_0; }
		
		//'Part'
		public Keyword getPartKeyword_1() { return cPartKeyword_1; }
		
		//(PubDivisionHeader contents+=PubContentBlock* -> divisions+=PubChapter* | PubDivisionIncludeHeader
		//include=[Part|DQualifiedName] ('as' title=DRichText)?)
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//PubDivisionHeader contents+=PubContentBlock* -> divisions+=PubChapter*
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//PubDivisionHeader
		public RuleCall getPubDivisionHeaderParserRuleCall_2_0_0() { return cPubDivisionHeaderParserRuleCall_2_0_0; }
		
		//contents+=PubContentBlock*
		public Assignment getContentsAssignment_2_0_1() { return cContentsAssignment_2_0_1; }
		
		//PubContentBlock
		public RuleCall getContentsPubContentBlockParserRuleCall_2_0_1_0() { return cContentsPubContentBlockParserRuleCall_2_0_1_0; }
		
		//-> divisions+=PubChapter*
		public Assignment getDivisionsAssignment_2_0_2() { return cDivisionsAssignment_2_0_2; }
		
		//PubChapter
		public RuleCall getDivisionsPubChapterParserRuleCall_2_0_2_0() { return cDivisionsPubChapterParserRuleCall_2_0_2_0; }
		
		//PubDivisionIncludeHeader include=[Part|DQualifiedName] ('as' title=DRichText)?
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//PubDivisionIncludeHeader
		public RuleCall getPubDivisionIncludeHeaderParserRuleCall_2_1_0() { return cPubDivisionIncludeHeaderParserRuleCall_2_1_0; }
		
		//include=[Part|DQualifiedName]
		public Assignment getIncludeAssignment_2_1_1() { return cIncludeAssignment_2_1_1; }
		
		//[Part|DQualifiedName]
		public CrossReference getIncludePartCrossReference_2_1_1_0() { return cIncludePartCrossReference_2_1_1_0; }
		
		//DQualifiedName
		public RuleCall getIncludePartDQualifiedNameParserRuleCall_2_1_1_0_1() { return cIncludePartDQualifiedNameParserRuleCall_2_1_1_0_1; }
		
		//('as' title=DRichText)?
		public Group getGroup_2_1_2() { return cGroup_2_1_2; }
		
		//'as'
		public Keyword getAsKeyword_2_1_2_0() { return cAsKeyword_2_1_2_0; }
		
		//title=DRichText
		public Assignment getTitleAssignment_2_1_2_1() { return cTitleAssignment_2_1_2_1; }
		
		//DRichText
		public RuleCall getTitleDRichTextParserRuleCall_2_1_2_1_0() { return cTitleDRichTextParserRuleCall_2_1_2_1_0; }
	}
	public class PubAppendixElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubAppendix");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAppendixKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final RuleCall cPubDivisionHeaderParserRuleCall_1_0_0 = (RuleCall)cGroup_1_0.eContents().get(0);
		private final Assignment cContentsAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cContentsPubContentBlockParserRuleCall_1_0_1_0 = (RuleCall)cContentsAssignment_1_0_1.eContents().get(0);
		private final Assignment cDivisionsAssignment_1_0_2 = (Assignment)cGroup_1_0.eContents().get(2);
		private final RuleCall cDivisionsPubChapterParserRuleCall_1_0_2_0 = (RuleCall)cDivisionsAssignment_1_0_2.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final RuleCall cPubDivisionIncludeHeaderParserRuleCall_1_1_0 = (RuleCall)cGroup_1_1.eContents().get(0);
		private final Assignment cIncludeAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final CrossReference cIncludeAppendixCrossReference_1_1_1_0 = (CrossReference)cIncludeAssignment_1_1_1.eContents().get(0);
		private final RuleCall cIncludeAppendixDQualifiedNameParserRuleCall_1_1_1_0_1 = (RuleCall)cIncludeAppendixCrossReference_1_1_1_0.eContents().get(1);
		private final Group cGroup_1_1_2 = (Group)cGroup_1_1.eContents().get(2);
		private final Keyword cAsKeyword_1_1_2_0 = (Keyword)cGroup_1_1_2.eContents().get(0);
		private final Assignment cTitleAssignment_1_1_2_1 = (Assignment)cGroup_1_1_2.eContents().get(1);
		private final RuleCall cTitleDRichTextParserRuleCall_1_1_2_1_0 = (RuleCall)cTitleAssignment_1_1_2_1.eContents().get(0);
		
		//PubAppendix Appendix:
		//	'Appendix' (PubDivisionHeader
		//	contents+=PubContentBlock*
		//	-> divisions+=PubChapter*
		//	| PubDivisionIncludeHeader
		//	include=[Appendix|DQualifiedName] ('as' title=DRichText)?);
		@Override public ParserRule getRule() { return rule; }
		
		//'Appendix' (PubDivisionHeader contents+=PubContentBlock* -> divisions+=PubChapter* | PubDivisionIncludeHeader
		//include=[Appendix|DQualifiedName] ('as' title=DRichText)?)
		public Group getGroup() { return cGroup; }
		
		//'Appendix'
		public Keyword getAppendixKeyword_0() { return cAppendixKeyword_0; }
		
		//(PubDivisionHeader contents+=PubContentBlock* -> divisions+=PubChapter* | PubDivisionIncludeHeader
		//include=[Appendix|DQualifiedName] ('as' title=DRichText)?)
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//PubDivisionHeader contents+=PubContentBlock* -> divisions+=PubChapter*
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//PubDivisionHeader
		public RuleCall getPubDivisionHeaderParserRuleCall_1_0_0() { return cPubDivisionHeaderParserRuleCall_1_0_0; }
		
		//contents+=PubContentBlock*
		public Assignment getContentsAssignment_1_0_1() { return cContentsAssignment_1_0_1; }
		
		//PubContentBlock
		public RuleCall getContentsPubContentBlockParserRuleCall_1_0_1_0() { return cContentsPubContentBlockParserRuleCall_1_0_1_0; }
		
		//-> divisions+=PubChapter*
		public Assignment getDivisionsAssignment_1_0_2() { return cDivisionsAssignment_1_0_2; }
		
		//PubChapter
		public RuleCall getDivisionsPubChapterParserRuleCall_1_0_2_0() { return cDivisionsPubChapterParserRuleCall_1_0_2_0; }
		
		//PubDivisionIncludeHeader include=[Appendix|DQualifiedName] ('as' title=DRichText)?
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//PubDivisionIncludeHeader
		public RuleCall getPubDivisionIncludeHeaderParserRuleCall_1_1_0() { return cPubDivisionIncludeHeaderParserRuleCall_1_1_0; }
		
		//include=[Appendix|DQualifiedName]
		public Assignment getIncludeAssignment_1_1_1() { return cIncludeAssignment_1_1_1; }
		
		//[Appendix|DQualifiedName]
		public CrossReference getIncludeAppendixCrossReference_1_1_1_0() { return cIncludeAppendixCrossReference_1_1_1_0; }
		
		//DQualifiedName
		public RuleCall getIncludeAppendixDQualifiedNameParserRuleCall_1_1_1_0_1() { return cIncludeAppendixDQualifiedNameParserRuleCall_1_1_1_0_1; }
		
		//('as' title=DRichText)?
		public Group getGroup_1_1_2() { return cGroup_1_1_2; }
		
		//'as'
		public Keyword getAsKeyword_1_1_2_0() { return cAsKeyword_1_1_2_0; }
		
		//title=DRichText
		public Assignment getTitleAssignment_1_1_2_1() { return cTitleAssignment_1_1_2_1; }
		
		//DRichText
		public RuleCall getTitleDRichTextParserRuleCall_1_1_2_1_0() { return cTitleDRichTextParserRuleCall_1_1_2_1_0; }
	}
	public class PubChapterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubChapter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cChapterKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final RuleCall cPubDivisionHeaderParserRuleCall_1_0_0 = (RuleCall)cGroup_1_0.eContents().get(0);
		private final Assignment cContentsAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cContentsPubContentBlockParserRuleCall_1_0_1_0 = (RuleCall)cContentsAssignment_1_0_1.eContents().get(0);
		private final Assignment cDivisionsAssignment_1_0_2 = (Assignment)cGroup_1_0.eContents().get(2);
		private final RuleCall cDivisionsPubSectionParserRuleCall_1_0_2_0 = (RuleCall)cDivisionsAssignment_1_0_2.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final RuleCall cPubDivisionIncludeHeaderParserRuleCall_1_1_0 = (RuleCall)cGroup_1_1.eContents().get(0);
		private final Assignment cIncludeAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final CrossReference cIncludeChapterCrossReference_1_1_1_0 = (CrossReference)cIncludeAssignment_1_1_1.eContents().get(0);
		private final RuleCall cIncludeChapterDQualifiedNameParserRuleCall_1_1_1_0_1 = (RuleCall)cIncludeChapterCrossReference_1_1_1_0.eContents().get(1);
		private final Group cGroup_1_1_2 = (Group)cGroup_1_1.eContents().get(2);
		private final Keyword cAsKeyword_1_1_2_0 = (Keyword)cGroup_1_1_2.eContents().get(0);
		private final Assignment cTitleAssignment_1_1_2_1 = (Assignment)cGroup_1_1_2.eContents().get(1);
		private final RuleCall cTitleDRichTextParserRuleCall_1_1_2_1_0 = (RuleCall)cTitleAssignment_1_1_2_1.eContents().get(0);
		
		//PubChapter Chapter:
		//	'Chapter' (PubDivisionHeader
		//	contents+=PubContentBlock*
		//	divisions+=PubSection*
		//	| PubDivisionIncludeHeader
		//	include=[Chapter|DQualifiedName] ('as' title=DRichText)?);
		@Override public ParserRule getRule() { return rule; }
		
		//'Chapter' (PubDivisionHeader contents+=PubContentBlock* divisions+=PubSection* | PubDivisionIncludeHeader
		//include=[Chapter|DQualifiedName] ('as' title=DRichText)?)
		public Group getGroup() { return cGroup; }
		
		//'Chapter'
		public Keyword getChapterKeyword_0() { return cChapterKeyword_0; }
		
		//(PubDivisionHeader contents+=PubContentBlock* divisions+=PubSection* | PubDivisionIncludeHeader
		//include=[Chapter|DQualifiedName] ('as' title=DRichText)?)
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//PubDivisionHeader contents+=PubContentBlock* divisions+=PubSection*
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//PubDivisionHeader
		public RuleCall getPubDivisionHeaderParserRuleCall_1_0_0() { return cPubDivisionHeaderParserRuleCall_1_0_0; }
		
		//contents+=PubContentBlock*
		public Assignment getContentsAssignment_1_0_1() { return cContentsAssignment_1_0_1; }
		
		//PubContentBlock
		public RuleCall getContentsPubContentBlockParserRuleCall_1_0_1_0() { return cContentsPubContentBlockParserRuleCall_1_0_1_0; }
		
		//divisions+=PubSection*
		public Assignment getDivisionsAssignment_1_0_2() { return cDivisionsAssignment_1_0_2; }
		
		//PubSection
		public RuleCall getDivisionsPubSectionParserRuleCall_1_0_2_0() { return cDivisionsPubSectionParserRuleCall_1_0_2_0; }
		
		//PubDivisionIncludeHeader include=[Chapter|DQualifiedName] ('as' title=DRichText)?
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//PubDivisionIncludeHeader
		public RuleCall getPubDivisionIncludeHeaderParserRuleCall_1_1_0() { return cPubDivisionIncludeHeaderParserRuleCall_1_1_0; }
		
		//include=[Chapter|DQualifiedName]
		public Assignment getIncludeAssignment_1_1_1() { return cIncludeAssignment_1_1_1; }
		
		//[Chapter|DQualifiedName]
		public CrossReference getIncludeChapterCrossReference_1_1_1_0() { return cIncludeChapterCrossReference_1_1_1_0; }
		
		//DQualifiedName
		public RuleCall getIncludeChapterDQualifiedNameParserRuleCall_1_1_1_0_1() { return cIncludeChapterDQualifiedNameParserRuleCall_1_1_1_0_1; }
		
		//('as' title=DRichText)?
		public Group getGroup_1_1_2() { return cGroup_1_1_2; }
		
		//'as'
		public Keyword getAsKeyword_1_1_2_0() { return cAsKeyword_1_1_2_0; }
		
		//title=DRichText
		public Assignment getTitleAssignment_1_1_2_1() { return cTitleAssignment_1_1_2_1; }
		
		//DRichText
		public RuleCall getTitleDRichTextParserRuleCall_1_1_2_1_0() { return cTitleDRichTextParserRuleCall_1_1_2_1_0; }
	}
	public class PubSectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubSection");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSectionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final RuleCall cPubDivisionHeaderParserRuleCall_1_0_0 = (RuleCall)cGroup_1_0.eContents().get(0);
		private final Assignment cContentsAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cContentsPubContentBlockParserRuleCall_1_0_1_0 = (RuleCall)cContentsAssignment_1_0_1.eContents().get(0);
		private final Assignment cDivisionsAssignment_1_0_2 = (Assignment)cGroup_1_0.eContents().get(2);
		private final RuleCall cDivisionsPubSubsectionParserRuleCall_1_0_2_0 = (RuleCall)cDivisionsAssignment_1_0_2.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final RuleCall cPubDivisionIncludeHeaderParserRuleCall_1_1_0 = (RuleCall)cGroup_1_1.eContents().get(0);
		private final Assignment cIncludeAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final CrossReference cIncludeSectionCrossReference_1_1_1_0 = (CrossReference)cIncludeAssignment_1_1_1.eContents().get(0);
		private final RuleCall cIncludeSectionDQualifiedNameParserRuleCall_1_1_1_0_1 = (RuleCall)cIncludeSectionCrossReference_1_1_1_0.eContents().get(1);
		private final Group cGroup_1_1_2 = (Group)cGroup_1_1.eContents().get(2);
		private final Keyword cAsKeyword_1_1_2_0 = (Keyword)cGroup_1_1_2.eContents().get(0);
		private final Assignment cTitleAssignment_1_1_2_1 = (Assignment)cGroup_1_1_2.eContents().get(1);
		private final RuleCall cTitleDRichTextParserRuleCall_1_1_2_1_0 = (RuleCall)cTitleAssignment_1_1_2_1.eContents().get(0);
		
		//PubSection Section:
		//	'Section' (PubDivisionHeader
		//	contents+=PubContentBlock*
		//	divisions+=PubSubsection*
		//	| PubDivisionIncludeHeader
		//	include=[Section|DQualifiedName] ('as' title=DRichText)?);
		@Override public ParserRule getRule() { return rule; }
		
		//'Section' (PubDivisionHeader contents+=PubContentBlock* divisions+=PubSubsection* | PubDivisionIncludeHeader
		//include=[Section|DQualifiedName] ('as' title=DRichText)?)
		public Group getGroup() { return cGroup; }
		
		//'Section'
		public Keyword getSectionKeyword_0() { return cSectionKeyword_0; }
		
		//(PubDivisionHeader contents+=PubContentBlock* divisions+=PubSubsection* | PubDivisionIncludeHeader
		//include=[Section|DQualifiedName] ('as' title=DRichText)?)
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//PubDivisionHeader contents+=PubContentBlock* divisions+=PubSubsection*
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//PubDivisionHeader
		public RuleCall getPubDivisionHeaderParserRuleCall_1_0_0() { return cPubDivisionHeaderParserRuleCall_1_0_0; }
		
		//contents+=PubContentBlock*
		public Assignment getContentsAssignment_1_0_1() { return cContentsAssignment_1_0_1; }
		
		//PubContentBlock
		public RuleCall getContentsPubContentBlockParserRuleCall_1_0_1_0() { return cContentsPubContentBlockParserRuleCall_1_0_1_0; }
		
		//divisions+=PubSubsection*
		public Assignment getDivisionsAssignment_1_0_2() { return cDivisionsAssignment_1_0_2; }
		
		//PubSubsection
		public RuleCall getDivisionsPubSubsectionParserRuleCall_1_0_2_0() { return cDivisionsPubSubsectionParserRuleCall_1_0_2_0; }
		
		//PubDivisionIncludeHeader include=[Section|DQualifiedName] ('as' title=DRichText)?
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//PubDivisionIncludeHeader
		public RuleCall getPubDivisionIncludeHeaderParserRuleCall_1_1_0() { return cPubDivisionIncludeHeaderParserRuleCall_1_1_0; }
		
		//include=[Section|DQualifiedName]
		public Assignment getIncludeAssignment_1_1_1() { return cIncludeAssignment_1_1_1; }
		
		//[Section|DQualifiedName]
		public CrossReference getIncludeSectionCrossReference_1_1_1_0() { return cIncludeSectionCrossReference_1_1_1_0; }
		
		//DQualifiedName
		public RuleCall getIncludeSectionDQualifiedNameParserRuleCall_1_1_1_0_1() { return cIncludeSectionDQualifiedNameParserRuleCall_1_1_1_0_1; }
		
		//('as' title=DRichText)?
		public Group getGroup_1_1_2() { return cGroup_1_1_2; }
		
		//'as'
		public Keyword getAsKeyword_1_1_2_0() { return cAsKeyword_1_1_2_0; }
		
		//title=DRichText
		public Assignment getTitleAssignment_1_1_2_1() { return cTitleAssignment_1_1_2_1; }
		
		//DRichText
		public RuleCall getTitleDRichTextParserRuleCall_1_1_2_1_0() { return cTitleDRichTextParserRuleCall_1_1_2_1_0; }
	}
	public class PubSubsectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubSubsection");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Keyword cSubKeyword_0_0 = (Keyword)cAlternatives_0.eContents().get(0);
		private final Keyword cSubsectionKeyword_0_1 = (Keyword)cAlternatives_0.eContents().get(1);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final RuleCall cPubDivisionHeaderParserRuleCall_1_0_0 = (RuleCall)cGroup_1_0.eContents().get(0);
		private final Assignment cContentsAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cContentsPubContentBlockParserRuleCall_1_0_1_0 = (RuleCall)cContentsAssignment_1_0_1.eContents().get(0);
		private final Assignment cDivisionsAssignment_1_0_2 = (Assignment)cGroup_1_0.eContents().get(2);
		private final RuleCall cDivisionsPubSubsubsectionParserRuleCall_1_0_2_0 = (RuleCall)cDivisionsAssignment_1_0_2.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final RuleCall cPubDivisionIncludeHeaderParserRuleCall_1_1_0 = (RuleCall)cGroup_1_1.eContents().get(0);
		private final Assignment cIncludeAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final CrossReference cIncludeSubsectionCrossReference_1_1_1_0 = (CrossReference)cIncludeAssignment_1_1_1.eContents().get(0);
		private final RuleCall cIncludeSubsectionDQualifiedNameParserRuleCall_1_1_1_0_1 = (RuleCall)cIncludeSubsectionCrossReference_1_1_1_0.eContents().get(1);
		private final Group cGroup_1_1_2 = (Group)cGroup_1_1.eContents().get(2);
		private final Keyword cAsKeyword_1_1_2_0 = (Keyword)cGroup_1_1_2.eContents().get(0);
		private final Assignment cTitleAssignment_1_1_2_1 = (Assignment)cGroup_1_1_2.eContents().get(1);
		private final RuleCall cTitleDRichTextParserRuleCall_1_1_2_1_0 = (RuleCall)cTitleAssignment_1_1_2_1.eContents().get(0);
		
		//PubSubsection Subsection:
		//	('Sub' | 'Subsection') (PubDivisionHeader
		//	contents+=PubContentBlock*
		//	divisions+=PubSubsubsection*
		//	| PubDivisionIncludeHeader
		//	include=[Subsection|DQualifiedName] ('as' title=DRichText)?);
		@Override public ParserRule getRule() { return rule; }
		
		//('Sub' | 'Subsection') (PubDivisionHeader contents+=PubContentBlock* divisions+=PubSubsubsection* |
		//PubDivisionIncludeHeader include=[Subsection|DQualifiedName] ('as' title=DRichText)?)
		public Group getGroup() { return cGroup; }
		
		//('Sub' | 'Subsection')
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//'Sub'
		public Keyword getSubKeyword_0_0() { return cSubKeyword_0_0; }
		
		//'Subsection'
		public Keyword getSubsectionKeyword_0_1() { return cSubsectionKeyword_0_1; }
		
		//(PubDivisionHeader contents+=PubContentBlock* divisions+=PubSubsubsection* | PubDivisionIncludeHeader
		//include=[Subsection|DQualifiedName] ('as' title=DRichText)?)
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//PubDivisionHeader contents+=PubContentBlock* divisions+=PubSubsubsection*
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//PubDivisionHeader
		public RuleCall getPubDivisionHeaderParserRuleCall_1_0_0() { return cPubDivisionHeaderParserRuleCall_1_0_0; }
		
		//contents+=PubContentBlock*
		public Assignment getContentsAssignment_1_0_1() { return cContentsAssignment_1_0_1; }
		
		//PubContentBlock
		public RuleCall getContentsPubContentBlockParserRuleCall_1_0_1_0() { return cContentsPubContentBlockParserRuleCall_1_0_1_0; }
		
		//divisions+=PubSubsubsection*
		public Assignment getDivisionsAssignment_1_0_2() { return cDivisionsAssignment_1_0_2; }
		
		//PubSubsubsection
		public RuleCall getDivisionsPubSubsubsectionParserRuleCall_1_0_2_0() { return cDivisionsPubSubsubsectionParserRuleCall_1_0_2_0; }
		
		//PubDivisionIncludeHeader include=[Subsection|DQualifiedName] ('as' title=DRichText)?
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//PubDivisionIncludeHeader
		public RuleCall getPubDivisionIncludeHeaderParserRuleCall_1_1_0() { return cPubDivisionIncludeHeaderParserRuleCall_1_1_0; }
		
		//include=[Subsection|DQualifiedName]
		public Assignment getIncludeAssignment_1_1_1() { return cIncludeAssignment_1_1_1; }
		
		//[Subsection|DQualifiedName]
		public CrossReference getIncludeSubsectionCrossReference_1_1_1_0() { return cIncludeSubsectionCrossReference_1_1_1_0; }
		
		//DQualifiedName
		public RuleCall getIncludeSubsectionDQualifiedNameParserRuleCall_1_1_1_0_1() { return cIncludeSubsectionDQualifiedNameParserRuleCall_1_1_1_0_1; }
		
		//('as' title=DRichText)?
		public Group getGroup_1_1_2() { return cGroup_1_1_2; }
		
		//'as'
		public Keyword getAsKeyword_1_1_2_0() { return cAsKeyword_1_1_2_0; }
		
		//title=DRichText
		public Assignment getTitleAssignment_1_1_2_1() { return cTitleAssignment_1_1_2_1; }
		
		//DRichText
		public RuleCall getTitleDRichTextParserRuleCall_1_1_2_1_0() { return cTitleDRichTextParserRuleCall_1_1_2_1_0; }
	}
	public class PubSubsubsectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubSubsubsection");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Keyword cSubsubKeyword_0_0 = (Keyword)cAlternatives_0.eContents().get(0);
		private final Keyword cSubsubsectionKeyword_0_1 = (Keyword)cAlternatives_0.eContents().get(1);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final RuleCall cPubDivisionHeaderParserRuleCall_1_0_0 = (RuleCall)cGroup_1_0.eContents().get(0);
		private final Assignment cContentsAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cContentsPubContentBlockParserRuleCall_1_0_1_0 = (RuleCall)cContentsAssignment_1_0_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final RuleCall cPubDivisionIncludeHeaderParserRuleCall_1_1_0 = (RuleCall)cGroup_1_1.eContents().get(0);
		private final Assignment cIncludeAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final CrossReference cIncludeSubsubsectionCrossReference_1_1_1_0 = (CrossReference)cIncludeAssignment_1_1_1.eContents().get(0);
		private final RuleCall cIncludeSubsubsectionDQualifiedNameParserRuleCall_1_1_1_0_1 = (RuleCall)cIncludeSubsubsectionCrossReference_1_1_1_0.eContents().get(1);
		private final Group cGroup_1_1_2 = (Group)cGroup_1_1.eContents().get(2);
		private final Keyword cAsKeyword_1_1_2_0 = (Keyword)cGroup_1_1_2.eContents().get(0);
		private final Assignment cTitleAssignment_1_1_2_1 = (Assignment)cGroup_1_1_2.eContents().get(1);
		private final RuleCall cTitleDRichTextParserRuleCall_1_1_2_1_0 = (RuleCall)cTitleAssignment_1_1_2_1.eContents().get(0);
		
		//PubSubsubsection Subsubsection:
		//	('Subsub' | 'Subsubsection') (PubDivisionHeader
		//	contents+=PubContentBlock*
		//	| PubDivisionIncludeHeader
		//	include=[Subsubsection|DQualifiedName] ('as' title=DRichText)?);
		@Override public ParserRule getRule() { return rule; }
		
		//('Subsub' | 'Subsubsection') (PubDivisionHeader contents+=PubContentBlock* | PubDivisionIncludeHeader
		//include=[Subsubsection|DQualifiedName] ('as' title=DRichText)?)
		public Group getGroup() { return cGroup; }
		
		//('Subsub' | 'Subsubsection')
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//'Subsub'
		public Keyword getSubsubKeyword_0_0() { return cSubsubKeyword_0_0; }
		
		//'Subsubsection'
		public Keyword getSubsubsectionKeyword_0_1() { return cSubsubsectionKeyword_0_1; }
		
		//(PubDivisionHeader contents+=PubContentBlock* | PubDivisionIncludeHeader include=[Subsubsection|DQualifiedName] ('as'
		//title=DRichText)?)
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//PubDivisionHeader contents+=PubContentBlock*
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//PubDivisionHeader
		public RuleCall getPubDivisionHeaderParserRuleCall_1_0_0() { return cPubDivisionHeaderParserRuleCall_1_0_0; }
		
		//contents+=PubContentBlock*
		public Assignment getContentsAssignment_1_0_1() { return cContentsAssignment_1_0_1; }
		
		//PubContentBlock
		public RuleCall getContentsPubContentBlockParserRuleCall_1_0_1_0() { return cContentsPubContentBlockParserRuleCall_1_0_1_0; }
		
		//PubDivisionIncludeHeader include=[Subsubsection|DQualifiedName] ('as' title=DRichText)?
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//PubDivisionIncludeHeader
		public RuleCall getPubDivisionIncludeHeaderParserRuleCall_1_1_0() { return cPubDivisionIncludeHeaderParserRuleCall_1_1_0; }
		
		//include=[Subsubsection|DQualifiedName]
		public Assignment getIncludeAssignment_1_1_1() { return cIncludeAssignment_1_1_1; }
		
		//[Subsubsection|DQualifiedName]
		public CrossReference getIncludeSubsubsectionCrossReference_1_1_1_0() { return cIncludeSubsubsectionCrossReference_1_1_1_0; }
		
		//DQualifiedName
		public RuleCall getIncludeSubsubsectionDQualifiedNameParserRuleCall_1_1_1_0_1() { return cIncludeSubsubsectionDQualifiedNameParserRuleCall_1_1_1_0_1; }
		
		//('as' title=DRichText)?
		public Group getGroup_1_1_2() { return cGroup_1_1_2; }
		
		//'as'
		public Keyword getAsKeyword_1_1_2_0() { return cAsKeyword_1_1_2_0; }
		
		//title=DRichText
		public Assignment getTitleAssignment_1_1_2_1() { return cTitleAssignment_1_1_2_1; }
		
		//DRichText
		public RuleCall getTitleDRichTextParserRuleCall_1_1_2_1_0() { return cTitleDRichTextParserRuleCall_1_1_2_1_0; }
	}
	public class PubContentBlockElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubContentBlock");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPubAdmonitionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cPubListParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cPubTableParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cPubFigureParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cPubEquationParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cPubCodeListingParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cPubRichTextParagraphParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		
		////
		//// ACTUAL CONTENT
		////
		//PubContentBlock ContentBlock:
		//	PubAdmonition | PubList | PubTable | PubFigure | PubEquation | PubCodeListing | PubRichTextParagraph;
		@Override public ParserRule getRule() { return rule; }
		
		//PubAdmonition | PubList | PubTable | PubFigure | PubEquation | PubCodeListing | PubRichTextParagraph
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//PubAdmonition
		public RuleCall getPubAdmonitionParserRuleCall_0() { return cPubAdmonitionParserRuleCall_0; }
		
		//PubList
		public RuleCall getPubListParserRuleCall_1() { return cPubListParserRuleCall_1; }
		
		//PubTable
		public RuleCall getPubTableParserRuleCall_2() { return cPubTableParserRuleCall_2; }
		
		//PubFigure
		public RuleCall getPubFigureParserRuleCall_3() { return cPubFigureParserRuleCall_3; }
		
		//PubEquation
		public RuleCall getPubEquationParserRuleCall_4() { return cPubEquationParserRuleCall_4; }
		
		//PubCodeListing
		public RuleCall getPubCodeListingParserRuleCall_5() { return cPubCodeListingParserRuleCall_5; }
		
		//PubRichTextParagraph
		public RuleCall getPubRichTextParagraphParserRuleCall_6() { return cPubRichTextParagraphParserRuleCall_6; }
	}
	public class PubAdmonitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubAdmonition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAdmonitionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cPubReferenceTargetNameParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cKindKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cKindAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cKindPubAdmonitionKindEnumRuleCall_3_0 = (RuleCall)cKindAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTitleKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTitleAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cTitleDRichTextParserRuleCall_4_1_0 = (RuleCall)cTitleAssignment_4_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cContentsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cContentsPubContentBlockParserRuleCall_6_0 = (RuleCall)cContentsAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//PubAdmonition Admonition:
		//	'Admonition'
		//	PubReferenceTargetName?
		//	'kind:' kind=PubAdmonitionKind ('title:' title=DRichText)?
		//	'{'
		//	contents+=PubContentBlock*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Admonition' PubReferenceTargetName? 'kind:' kind=PubAdmonitionKind ('title:' title=DRichText)? '{'
		//contents+=PubContentBlock* '}'
		public Group getGroup() { return cGroup; }
		
		//'Admonition'
		public Keyword getAdmonitionKeyword_0() { return cAdmonitionKeyword_0; }
		
		//PubReferenceTargetName?
		public RuleCall getPubReferenceTargetNameParserRuleCall_1() { return cPubReferenceTargetNameParserRuleCall_1; }
		
		//'kind:'
		public Keyword getKindKeyword_2() { return cKindKeyword_2; }
		
		//kind=PubAdmonitionKind
		public Assignment getKindAssignment_3() { return cKindAssignment_3; }
		
		//PubAdmonitionKind
		public RuleCall getKindPubAdmonitionKindEnumRuleCall_3_0() { return cKindPubAdmonitionKindEnumRuleCall_3_0; }
		
		//('title:' title=DRichText)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'title:'
		public Keyword getTitleKeyword_4_0() { return cTitleKeyword_4_0; }
		
		//title=DRichText
		public Assignment getTitleAssignment_4_1() { return cTitleAssignment_4_1; }
		
		//DRichText
		public RuleCall getTitleDRichTextParserRuleCall_4_1_0() { return cTitleDRichTextParserRuleCall_4_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }
		
		//contents+=PubContentBlock*
		public Assignment getContentsAssignment_6() { return cContentsAssignment_6; }
		
		//PubContentBlock
		public RuleCall getContentsPubContentBlockParserRuleCall_6_0() { return cContentsPubContentBlockParserRuleCall_6_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class PubListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cListAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cListKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cNumberSignKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cNameAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_2_0 = (RuleCall)cNameAssignment_2_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cStyleKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cStyleAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cStylePubListStyleEnumRuleCall_3_1_0 = (RuleCall)cStyleAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cNumberingKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cNumberingStyleAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cNumberingStylePubSequenceNumberStyleEnumRuleCall_4_1_0 = (RuleCall)cNumberingStyleAssignment_4_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cItemsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cItemsPubListItemParserRuleCall_6_0 = (RuleCall)cItemsAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//PubList List:
		//	{List}
		//	'List' ('(' '#'? name=ID ')')? ('style:' style=PubListStyle)? ('numbering:' numberingStyle=PubSequenceNumberStyle)? // TODO VALIDATION: mandatory for 'sequence'
		//	'{'
		//	items+=PubListItem*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{List} 'List' ('(' '#'? name=ID ')')? ('style:' style=PubListStyle)? ('numbering:'
		//numberingStyle=PubSequenceNumberStyle)? // TODO VALIDATION: mandatory for 'sequence'
		//'{' items+=PubListItem* '}'
		public Group getGroup() { return cGroup; }
		
		//{List}
		public Action getListAction_0() { return cListAction_0; }
		
		//'List'
		public Keyword getListKeyword_1() { return cListKeyword_1; }
		
		//('(' '#'? name=ID ')')?
		public Group getGroup_2() { return cGroup_2; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2_0() { return cLeftParenthesisKeyword_2_0; }
		
		//'#'?
		public Keyword getNumberSignKeyword_2_1() { return cNumberSignKeyword_2_1; }
		
		//name=ID
		public Assignment getNameAssignment_2_2() { return cNameAssignment_2_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_2_0() { return cNameIDTerminalRuleCall_2_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2_3() { return cRightParenthesisKeyword_2_3; }
		
		//('style:' style=PubListStyle)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'style:'
		public Keyword getStyleKeyword_3_0() { return cStyleKeyword_3_0; }
		
		//style=PubListStyle
		public Assignment getStyleAssignment_3_1() { return cStyleAssignment_3_1; }
		
		//PubListStyle
		public RuleCall getStylePubListStyleEnumRuleCall_3_1_0() { return cStylePubListStyleEnumRuleCall_3_1_0; }
		
		//('numbering:' numberingStyle=PubSequenceNumberStyle)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'numbering:'
		public Keyword getNumberingKeyword_4_0() { return cNumberingKeyword_4_0; }
		
		//numberingStyle=PubSequenceNumberStyle
		public Assignment getNumberingStyleAssignment_4_1() { return cNumberingStyleAssignment_4_1; }
		
		//PubSequenceNumberStyle
		public RuleCall getNumberingStylePubSequenceNumberStyleEnumRuleCall_4_1_0() { return cNumberingStylePubSequenceNumberStyleEnumRuleCall_4_1_0; }
		
		//// TODO VALIDATION: mandatory for 'sequence'
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }
		
		//items+=PubListItem*
		public Assignment getItemsAssignment_6() { return cItemsAssignment_6; }
		
		//PubListItem
		public RuleCall getItemsPubListItemParserRuleCall_6_0() { return cItemsPubListItemParserRuleCall_6_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class PubListItemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubListItem");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cListItemAction_0 = (Action)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cItemKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final RuleCall cPubReferenceTargetNameParserRuleCall_1_0_1 = (RuleCall)cGroup_1_0.eContents().get(1);
		private final Group cGroup_1_0_2 = (Group)cGroup_1_0.eContents().get(2);
		private final Keyword cTitleKeyword_1_0_2_0 = (Keyword)cGroup_1_0_2.eContents().get(0);
		private final Assignment cTitleAssignment_1_0_2_1 = (Assignment)cGroup_1_0_2.eContents().get(1);
		private final RuleCall cTitleDRichTextParserRuleCall_1_0_2_1_0 = (RuleCall)cTitleAssignment_1_0_2_1.eContents().get(0);
		private final Alternatives cAlternatives_1_0_3 = (Alternatives)cGroup_1_0.eContents().get(3);
		private final Group cGroup_1_0_3_0 = (Group)cAlternatives_1_0_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1_0_3_0_0 = (Keyword)cGroup_1_0_3_0.eContents().get(0);
		private final Assignment cContentsAssignment_1_0_3_0_1 = (Assignment)cGroup_1_0_3_0.eContents().get(1);
		private final RuleCall cContentsPubContentBlockParserRuleCall_1_0_3_0_1_0 = (RuleCall)cContentsAssignment_1_0_3_0_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_0_3_0_2 = (Keyword)cGroup_1_0_3_0.eContents().get(2);
		private final Assignment cContentsAssignment_1_0_3_1 = (Assignment)cAlternatives_1_0_3.eContents().get(1);
		private final RuleCall cContentsPubContentBlockParserRuleCall_1_0_3_1_0 = (RuleCall)cContentsAssignment_1_0_3_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final RuleCall cPubReferenceTargetNameParserRuleCall_1_1_1 = (RuleCall)cGroup_1_1.eContents().get(1);
		private final Assignment cContentsAssignment_1_1_2 = (Assignment)cGroup_1_1.eContents().get(2);
		private final RuleCall cContentsPubParagraphTextOnlyParserRuleCall_1_1_2_0 = (RuleCall)cContentsAssignment_1_1_2.eContents().get(0);
		
		//PubListItem ListItem:
		//	{ListItem} ('Item'
		//	PubReferenceTargetName? ('title:' title=DRichText)? ('{' contents+=PubContentBlock* '}'
		//	| -> contents+=PubContentBlock*) | '-' PubReferenceTargetName? contents+=PubParagraphTextOnly);
		@Override public ParserRule getRule() { return rule; }
		
		//{ListItem} ('Item' PubReferenceTargetName? ('title:' title=DRichText)? ('{' contents+=PubContentBlock* '}' | ->
		//contents+=PubContentBlock*) | '-' PubReferenceTargetName? contents+=PubParagraphTextOnly)
		public Group getGroup() { return cGroup; }
		
		//{ListItem}
		public Action getListItemAction_0() { return cListItemAction_0; }
		
		//('Item' PubReferenceTargetName? ('title:' title=DRichText)? ('{' contents+=PubContentBlock* '}' | ->
		//contents+=PubContentBlock*) | '-' PubReferenceTargetName? contents+=PubParagraphTextOnly)
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'Item' PubReferenceTargetName? ('title:' title=DRichText)? ('{' contents+=PubContentBlock* '}' | ->
		//contents+=PubContentBlock*)
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'Item'
		public Keyword getItemKeyword_1_0_0() { return cItemKeyword_1_0_0; }
		
		//PubReferenceTargetName?
		public RuleCall getPubReferenceTargetNameParserRuleCall_1_0_1() { return cPubReferenceTargetNameParserRuleCall_1_0_1; }
		
		//('title:' title=DRichText)?
		public Group getGroup_1_0_2() { return cGroup_1_0_2; }
		
		//'title:'
		public Keyword getTitleKeyword_1_0_2_0() { return cTitleKeyword_1_0_2_0; }
		
		//title=DRichText
		public Assignment getTitleAssignment_1_0_2_1() { return cTitleAssignment_1_0_2_1; }
		
		//DRichText
		public RuleCall getTitleDRichTextParserRuleCall_1_0_2_1_0() { return cTitleDRichTextParserRuleCall_1_0_2_1_0; }
		
		//('{' contents+=PubContentBlock* '}' | -> contents+=PubContentBlock*)
		public Alternatives getAlternatives_1_0_3() { return cAlternatives_1_0_3; }
		
		//'{' contents+=PubContentBlock* '}'
		public Group getGroup_1_0_3_0() { return cGroup_1_0_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0_3_0_0() { return cLeftCurlyBracketKeyword_1_0_3_0_0; }
		
		//contents+=PubContentBlock*
		public Assignment getContentsAssignment_1_0_3_0_1() { return cContentsAssignment_1_0_3_0_1; }
		
		//PubContentBlock
		public RuleCall getContentsPubContentBlockParserRuleCall_1_0_3_0_1_0() { return cContentsPubContentBlockParserRuleCall_1_0_3_0_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_0_3_0_2() { return cRightCurlyBracketKeyword_1_0_3_0_2; }
		
		//-> contents+=PubContentBlock*
		public Assignment getContentsAssignment_1_0_3_1() { return cContentsAssignment_1_0_3_1; }
		
		//PubContentBlock
		public RuleCall getContentsPubContentBlockParserRuleCall_1_0_3_1_0() { return cContentsPubContentBlockParserRuleCall_1_0_3_1_0; }
		
		//'-' PubReferenceTargetName? contents+=PubParagraphTextOnly
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_1_1_0() { return cHyphenMinusKeyword_1_1_0; }
		
		//PubReferenceTargetName?
		public RuleCall getPubReferenceTargetNameParserRuleCall_1_1_1() { return cPubReferenceTargetNameParserRuleCall_1_1_1; }
		
		//contents+=PubParagraphTextOnly
		public Assignment getContentsAssignment_1_1_2() { return cContentsAssignment_1_1_2; }
		
		//PubParagraphTextOnly
		public RuleCall getContentsPubParagraphTextOnlyParserRuleCall_1_1_2_0() { return cContentsPubParagraphTextOnlyParserRuleCall_1_1_2_0; }
	}
	public class PubTitledBlockHeaderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubTitledBlockHeader");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cPubReferenceTargetNameParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cTitleAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTitleDRichTextParserRuleCall_1_0 = (RuleCall)cTitleAssignment_1.eContents().get(0);
		
		//fragment PubTitledBlockHeader returns TitledBlock:
		//	PubReferenceTargetName?
		//	title=DRichText;
		@Override public ParserRule getRule() { return rule; }
		
		//PubReferenceTargetName? title=DRichText
		public Group getGroup() { return cGroup; }
		
		//PubReferenceTargetName?
		public RuleCall getPubReferenceTargetNameParserRuleCall_0() { return cPubReferenceTargetNameParserRuleCall_0; }
		
		//title=DRichText
		public Assignment getTitleAssignment_1() { return cTitleAssignment_1; }
		
		//DRichText
		public RuleCall getTitleDRichTextParserRuleCall_1_0() { return cTitleDRichTextParserRuleCall_1_0; }
	}
	public class PubTableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubTable");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTableKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cPubTitledBlockHeaderParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTableAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTableAbstractTableParserRuleCall_3_0 = (RuleCall)cTableAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//PubTable TitledTable:
		//	'Table'
		//	PubTitledBlockHeader
		//	'{'
		//	table=AbstractTable
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Table' PubTitledBlockHeader '{' table=AbstractTable '}'
		public Group getGroup() { return cGroup; }
		
		//'Table'
		public Keyword getTableKeyword_0() { return cTableKeyword_0; }
		
		//PubTitledBlockHeader
		public RuleCall getPubTitledBlockHeaderParserRuleCall_1() { return cPubTitledBlockHeaderParserRuleCall_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//table=AbstractTable
		public Assignment getTableAssignment_3() { return cTableAssignment_3; }
		
		//AbstractTable
		public RuleCall getTableAbstractTableParserRuleCall_3_0() { return cTableAbstractTableParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class AbstractTableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.AbstractTable");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTableParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cProvidedTableParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//AbstractTable:
		//	Table | ProvidedTable;
		@Override public ParserRule getRule() { return rule; }
		
		//Table | ProvidedTable
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Table
		public RuleCall getTableParserRuleCall_0() { return cTableParserRuleCall_0; }
		
		//ProvidedTable
		public RuleCall getProvidedTableParserRuleCall_1() { return cProvidedTableParserRuleCall_1; }
	}
	public class TableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.Table");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cColumnsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cColumnsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cColumnsNATURALTerminalRuleCall_1_0 = (RuleCall)cColumnsAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cWidthPercentKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cWidthPercentAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cWidthPercentNATURALTerminalRuleCall_2_1_0 = (RuleCall)cWidthPercentAssignment_2_1.eContents().get(0);
		private final Assignment cRowsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cRowsPubTableRowParserRuleCall_3_0 = (RuleCall)cRowsAssignment_3.eContents().get(0);
		
		//Table:
		//	'columns:' columns=NATURAL ('widthPercent:' widthPercent=NATURAL)?
		//	rows+=PubTableRow*;
		@Override public ParserRule getRule() { return rule; }
		
		//'columns:' columns=NATURAL ('widthPercent:' widthPercent=NATURAL)? rows+=PubTableRow*
		public Group getGroup() { return cGroup; }
		
		//'columns:'
		public Keyword getColumnsKeyword_0() { return cColumnsKeyword_0; }
		
		//columns=NATURAL
		public Assignment getColumnsAssignment_1() { return cColumnsAssignment_1; }
		
		//NATURAL
		public RuleCall getColumnsNATURALTerminalRuleCall_1_0() { return cColumnsNATURALTerminalRuleCall_1_0; }
		
		//('widthPercent:' widthPercent=NATURAL)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'widthPercent:'
		public Keyword getWidthPercentKeyword_2_0() { return cWidthPercentKeyword_2_0; }
		
		//widthPercent=NATURAL
		public Assignment getWidthPercentAssignment_2_1() { return cWidthPercentAssignment_2_1; }
		
		//NATURAL
		public RuleCall getWidthPercentNATURALTerminalRuleCall_2_1_0() { return cWidthPercentNATURALTerminalRuleCall_2_1_0; }
		
		//rows+=PubTableRow*
		public Assignment getRowsAssignment_3() { return cRowsAssignment_3; }
		
		//PubTableRow
		public RuleCall getRowsPubTableRowParserRuleCall_3_0() { return cRowsPubTableRowParserRuleCall_3_0; }
	}
	public class PubTableRowElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubTableRow");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTableRowAction_0 = (Action)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Alternatives cAlternatives_1_0_0 = (Alternatives)cGroup_1_0.eContents().get(0);
		private final Group cGroup_1_0_0_0 = (Group)cAlternatives_1_0_0.eContents().get(0);
		private final Keyword cRowKeyword_1_0_0_0_0 = (Keyword)cGroup_1_0_0_0.eContents().get(0);
		private final Alternatives cAlternatives_1_0_0_0_1 = (Alternatives)cGroup_1_0_0_0.eContents().get(1);
		private final Group cGroup_1_0_0_0_1_0 = (Group)cAlternatives_1_0_0_0_1.eContents().get(0);
		private final Keyword cHeadingKeyword_1_0_0_0_1_0_0 = (Keyword)cGroup_1_0_0_0_1_0.eContents().get(0);
		private final Assignment cIsHeadingAssignment_1_0_0_0_1_0_1 = (Assignment)cGroup_1_0_0_0_1_0.eContents().get(1);
		private final Keyword cIsHeadingTrueKeyword_1_0_0_0_1_0_1_0 = (Keyword)cIsHeadingAssignment_1_0_0_0_1_0_1.eContents().get(0);
		private final Keyword cFalseKeyword_1_0_0_0_1_1 = (Keyword)cAlternatives_1_0_0_0_1.eContents().get(1);
		private final Group cGroup_1_0_0_1 = (Group)cAlternatives_1_0_0.eContents().get(1);
		private final Assignment cIsHeadingAssignment_1_0_0_1_0 = (Assignment)cGroup_1_0_0_1.eContents().get(0);
		private final Keyword cIsHeadingHeaderKeyword_1_0_0_1_0_0 = (Keyword)cIsHeadingAssignment_1_0_0_1_0.eContents().get(0);
		private final Keyword cRowKeyword_1_0_0_1_1 = (Keyword)cGroup_1_0_0_1.eContents().get(1);
		private final Group cGroup_1_0_1 = (Group)cGroup_1_0.eContents().get(1);
		private final Keyword cHeightKeyword_1_0_1_0 = (Keyword)cGroup_1_0_1.eContents().get(0);
		private final Assignment cHeightAssignment_1_0_1_1 = (Assignment)cGroup_1_0_1.eContents().get(1);
		private final RuleCall cHeightNATURALTerminalRuleCall_1_0_1_1_0 = (RuleCall)cHeightAssignment_1_0_1_1.eContents().get(0);
		private final Alternatives cAlternatives_1_0_2 = (Alternatives)cGroup_1_0.eContents().get(2);
		private final Group cGroup_1_0_2_0 = (Group)cAlternatives_1_0_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1_0_2_0_0 = (Keyword)cGroup_1_0_2_0.eContents().get(0);
		private final Assignment cCellsAssignment_1_0_2_0_1 = (Assignment)cGroup_1_0_2_0.eContents().get(1);
		private final RuleCall cCellsPubTableCellParserRuleCall_1_0_2_0_1_0 = (RuleCall)cCellsAssignment_1_0_2_0_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_0_2_0_2 = (Keyword)cGroup_1_0_2_0.eContents().get(2);
		private final Assignment cCellsAssignment_1_0_2_1 = (Assignment)cAlternatives_1_0_2.eContents().get(1);
		private final RuleCall cCellsPubTableCellParserRuleCall_1_0_2_1_0 = (RuleCall)cCellsAssignment_1_0_2_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Alternatives cAlternatives_1_1_0 = (Alternatives)cGroup_1_1.eContents().get(0);
		private final Assignment cIsHeadingAssignment_1_1_0_0 = (Assignment)cAlternatives_1_1_0.eContents().get(0);
		private final Keyword cIsHeadingVerticalLineVerticalLineVerticalLineKeyword_1_1_0_0_0 = (Keyword)cIsHeadingAssignment_1_1_0_0.eContents().get(0);
		private final Keyword cVerticalLineVerticalLineKeyword_1_1_0_1 = (Keyword)cAlternatives_1_1_0.eContents().get(1);
		private final Assignment cCellsAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cCellsPubTableSimpleCellParserRuleCall_1_1_1_0 = (RuleCall)cCellsAssignment_1_1_1.eContents().get(0);
		
		//PubTableRow TableRow:
		//	{TableRow} (('Row' ('heading:' isHeading?='true' | 'false')?
		//	| isHeading?='Header' 'Row') ('height:' height=NATURAL)? ('{' cells+=PubTableCell* '}'
		//	| cells+=PubTableCell*) | (isHeading?='|||' | '||') cells+=PubTableSimpleCell*);
		@Override public ParserRule getRule() { return rule; }
		
		//{TableRow} (('Row' ('heading:' isHeading?='true' | 'false')? | isHeading?='Header' 'Row') ('height:' height=NATURAL)?
		//('{' cells+=PubTableCell* '}' | cells+=PubTableCell*) | (isHeading?='|||' | '||') cells+=PubTableSimpleCell*)
		public Group getGroup() { return cGroup; }
		
		//{TableRow}
		public Action getTableRowAction_0() { return cTableRowAction_0; }
		
		//(('Row' ('heading:' isHeading?='true' | 'false')? | isHeading?='Header' 'Row') ('height:' height=NATURAL)? ('{'
		//cells+=PubTableCell* '}' | cells+=PubTableCell*) | (isHeading?='|||' | '||') cells+=PubTableSimpleCell*)
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//('Row' ('heading:' isHeading?='true' | 'false')? | isHeading?='Header' 'Row') ('height:' height=NATURAL)? ('{'
		//cells+=PubTableCell* '}' | cells+=PubTableCell*)
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//('Row' ('heading:' isHeading?='true' | 'false')? | isHeading?='Header' 'Row')
		public Alternatives getAlternatives_1_0_0() { return cAlternatives_1_0_0; }
		
		//'Row' ('heading:' isHeading?='true' | 'false')?
		public Group getGroup_1_0_0_0() { return cGroup_1_0_0_0; }
		
		//'Row'
		public Keyword getRowKeyword_1_0_0_0_0() { return cRowKeyword_1_0_0_0_0; }
		
		//('heading:' isHeading?='true' | 'false')?
		public Alternatives getAlternatives_1_0_0_0_1() { return cAlternatives_1_0_0_0_1; }
		
		//'heading:' isHeading?='true'
		public Group getGroup_1_0_0_0_1_0() { return cGroup_1_0_0_0_1_0; }
		
		//'heading:'
		public Keyword getHeadingKeyword_1_0_0_0_1_0_0() { return cHeadingKeyword_1_0_0_0_1_0_0; }
		
		//isHeading?='true'
		public Assignment getIsHeadingAssignment_1_0_0_0_1_0_1() { return cIsHeadingAssignment_1_0_0_0_1_0_1; }
		
		//'true'
		public Keyword getIsHeadingTrueKeyword_1_0_0_0_1_0_1_0() { return cIsHeadingTrueKeyword_1_0_0_0_1_0_1_0; }
		
		//'false'
		public Keyword getFalseKeyword_1_0_0_0_1_1() { return cFalseKeyword_1_0_0_0_1_1; }
		
		//isHeading?='Header' 'Row'
		public Group getGroup_1_0_0_1() { return cGroup_1_0_0_1; }
		
		//isHeading?='Header'
		public Assignment getIsHeadingAssignment_1_0_0_1_0() { return cIsHeadingAssignment_1_0_0_1_0; }
		
		//'Header'
		public Keyword getIsHeadingHeaderKeyword_1_0_0_1_0_0() { return cIsHeadingHeaderKeyword_1_0_0_1_0_0; }
		
		//'Row'
		public Keyword getRowKeyword_1_0_0_1_1() { return cRowKeyword_1_0_0_1_1; }
		
		//('height:' height=NATURAL)?
		public Group getGroup_1_0_1() { return cGroup_1_0_1; }
		
		//'height:'
		public Keyword getHeightKeyword_1_0_1_0() { return cHeightKeyword_1_0_1_0; }
		
		//height=NATURAL
		public Assignment getHeightAssignment_1_0_1_1() { return cHeightAssignment_1_0_1_1; }
		
		//NATURAL
		public RuleCall getHeightNATURALTerminalRuleCall_1_0_1_1_0() { return cHeightNATURALTerminalRuleCall_1_0_1_1_0; }
		
		//('{' cells+=PubTableCell* '}' | cells+=PubTableCell*)
		public Alternatives getAlternatives_1_0_2() { return cAlternatives_1_0_2; }
		
		//'{' cells+=PubTableCell* '}'
		public Group getGroup_1_0_2_0() { return cGroup_1_0_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0_2_0_0() { return cLeftCurlyBracketKeyword_1_0_2_0_0; }
		
		//cells+=PubTableCell*
		public Assignment getCellsAssignment_1_0_2_0_1() { return cCellsAssignment_1_0_2_0_1; }
		
		//PubTableCell
		public RuleCall getCellsPubTableCellParserRuleCall_1_0_2_0_1_0() { return cCellsPubTableCellParserRuleCall_1_0_2_0_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_0_2_0_2() { return cRightCurlyBracketKeyword_1_0_2_0_2; }
		
		//cells+=PubTableCell*
		public Assignment getCellsAssignment_1_0_2_1() { return cCellsAssignment_1_0_2_1; }
		
		//PubTableCell
		public RuleCall getCellsPubTableCellParserRuleCall_1_0_2_1_0() { return cCellsPubTableCellParserRuleCall_1_0_2_1_0; }
		
		//(isHeading?='|||' | '||') cells+=PubTableSimpleCell*
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//(isHeading?='|||' | '||')
		public Alternatives getAlternatives_1_1_0() { return cAlternatives_1_1_0; }
		
		//isHeading?='|||'
		public Assignment getIsHeadingAssignment_1_1_0_0() { return cIsHeadingAssignment_1_1_0_0; }
		
		//'|||'
		public Keyword getIsHeadingVerticalLineVerticalLineVerticalLineKeyword_1_1_0_0_0() { return cIsHeadingVerticalLineVerticalLineVerticalLineKeyword_1_1_0_0_0; }
		
		//'||'
		public Keyword getVerticalLineVerticalLineKeyword_1_1_0_1() { return cVerticalLineVerticalLineKeyword_1_1_0_1; }
		
		//cells+=PubTableSimpleCell*
		public Assignment getCellsAssignment_1_1_1() { return cCellsAssignment_1_1_1; }
		
		//PubTableSimpleCell
		public RuleCall getCellsPubTableSimpleCellParserRuleCall_1_1_1_0() { return cCellsPubTableSimpleCellParserRuleCall_1_1_1_0; }
	}
	public class PubTableCellElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubTableCell");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTableCellAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCellKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cWidthKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cWidthAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cWidthNATURALTerminalRuleCall_2_1_0 = (RuleCall)cWidthAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cHeightKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cHeightAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cHeightNATURALTerminalRuleCall_3_1_0 = (RuleCall)cHeightAssignment_3_1.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Group cGroup_4_0 = (Group)cAlternatives_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_0_0 = (Keyword)cGroup_4_0.eContents().get(0);
		private final Assignment cContentsAssignment_4_0_1 = (Assignment)cGroup_4_0.eContents().get(1);
		private final RuleCall cContentsPubContentBlockParserRuleCall_4_0_1_0 = (RuleCall)cContentsAssignment_4_0_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_0_2 = (Keyword)cGroup_4_0.eContents().get(2);
		private final Assignment cContentsAssignment_4_1 = (Assignment)cAlternatives_4.eContents().get(1);
		private final RuleCall cContentsPubContentBlockParserRuleCall_4_1_0 = (RuleCall)cContentsAssignment_4_1.eContents().get(0);
		
		//PubTableCell TableCell:
		//	{TableCell}
		//	'Cell' ('width:' width=NATURAL)? ('height:' height=NATURAL)? ('{' contents+=PubContentBlock* '}'
		//	| -> contents+=PubContentBlock*);
		@Override public ParserRule getRule() { return rule; }
		
		//{TableCell} 'Cell' ('width:' width=NATURAL)? ('height:' height=NATURAL)? ('{' contents+=PubContentBlock* '}' | ->
		//contents+=PubContentBlock*)
		public Group getGroup() { return cGroup; }
		
		//{TableCell}
		public Action getTableCellAction_0() { return cTableCellAction_0; }
		
		//'Cell'
		public Keyword getCellKeyword_1() { return cCellKeyword_1; }
		
		//('width:' width=NATURAL)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'width:'
		public Keyword getWidthKeyword_2_0() { return cWidthKeyword_2_0; }
		
		//width=NATURAL
		public Assignment getWidthAssignment_2_1() { return cWidthAssignment_2_1; }
		
		//NATURAL
		public RuleCall getWidthNATURALTerminalRuleCall_2_1_0() { return cWidthNATURALTerminalRuleCall_2_1_0; }
		
		//('height:' height=NATURAL)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'height:'
		public Keyword getHeightKeyword_3_0() { return cHeightKeyword_3_0; }
		
		//height=NATURAL
		public Assignment getHeightAssignment_3_1() { return cHeightAssignment_3_1; }
		
		//NATURAL
		public RuleCall getHeightNATURALTerminalRuleCall_3_1_0() { return cHeightNATURALTerminalRuleCall_3_1_0; }
		
		//('{' contents+=PubContentBlock* '}' | -> contents+=PubContentBlock*)
		public Alternatives getAlternatives_4() { return cAlternatives_4; }
		
		//'{' contents+=PubContentBlock* '}'
		public Group getGroup_4_0() { return cGroup_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_0_0() { return cLeftCurlyBracketKeyword_4_0_0; }
		
		//contents+=PubContentBlock*
		public Assignment getContentsAssignment_4_0_1() { return cContentsAssignment_4_0_1; }
		
		//PubContentBlock
		public RuleCall getContentsPubContentBlockParserRuleCall_4_0_1_0() { return cContentsPubContentBlockParserRuleCall_4_0_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_0_2() { return cRightCurlyBracketKeyword_4_0_2; }
		
		//-> contents+=PubContentBlock*
		public Assignment getContentsAssignment_4_1() { return cContentsAssignment_4_1; }
		
		//PubContentBlock
		public RuleCall getContentsPubContentBlockParserRuleCall_4_1_0() { return cContentsPubContentBlockParserRuleCall_4_1_0; }
	}
	public class PubTableSimpleCellElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubTableSimpleCell");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTableCellAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cContentsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cContentsPubParagraphTextOnlyParserRuleCall_1_0 = (RuleCall)cContentsAssignment_1.eContents().get(0);
		private final Keyword cVerticalLineKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//PubTableSimpleCell TableCell:
		//	{TableCell} contents+=PubParagraphTextOnly '|';
		@Override public ParserRule getRule() { return rule; }
		
		//{TableCell} contents+=PubParagraphTextOnly '|'
		public Group getGroup() { return cGroup; }
		
		//{TableCell}
		public Action getTableCellAction_0() { return cTableCellAction_0; }
		
		//contents+=PubParagraphTextOnly
		public Assignment getContentsAssignment_1() { return cContentsAssignment_1; }
		
		//PubParagraphTextOnly
		public RuleCall getContentsPubParagraphTextOnlyParserRuleCall_1_0() { return cContentsPubParagraphTextOnlyParserRuleCall_1_0; }
		
		//'|'
		public Keyword getVerticalLineKeyword_2() { return cVerticalLineKeyword_2; }
	}
	public class ProvidedTableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.ProvidedTable");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRootKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cDiagramRootAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cDiagramRootIDiagramRootCrossReference_1_0 = (CrossReference)cDiagramRootAssignment_1.eContents().get(0);
		private final RuleCall cDiagramRootIDiagramRootDQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cDiagramRootIDiagramRootCrossReference_1_0.eContents().get(1);
		private final Keyword cTableKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cRendererAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cRendererTableRendererCrossReference_3_0 = (CrossReference)cRendererAssignment_3.eContents().get(0);
		private final RuleCall cRendererTableRendererDQualifiedNameParserRuleCall_3_0_1 = (RuleCall)cRendererTableRendererCrossReference_3_0.eContents().get(1);
		
		//ProvidedTable:
		//	'root:' diagramRoot=[IDiagramRoot|DQualifiedName]
		//	'table:' renderer=[TableRenderer|DQualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//'root:' diagramRoot=[IDiagramRoot|DQualifiedName] 'table:' renderer=[TableRenderer|DQualifiedName]
		public Group getGroup() { return cGroup; }
		
		//'root:'
		public Keyword getRootKeyword_0() { return cRootKeyword_0; }
		
		//diagramRoot=[IDiagramRoot|DQualifiedName]
		public Assignment getDiagramRootAssignment_1() { return cDiagramRootAssignment_1; }
		
		//[IDiagramRoot|DQualifiedName]
		public CrossReference getDiagramRootIDiagramRootCrossReference_1_0() { return cDiagramRootIDiagramRootCrossReference_1_0; }
		
		//DQualifiedName
		public RuleCall getDiagramRootIDiagramRootDQualifiedNameParserRuleCall_1_0_1() { return cDiagramRootIDiagramRootDQualifiedNameParserRuleCall_1_0_1; }
		
		//'table:'
		public Keyword getTableKeyword_2() { return cTableKeyword_2; }
		
		//renderer=[TableRenderer|DQualifiedName]
		public Assignment getRendererAssignment_3() { return cRendererAssignment_3; }
		
		//[TableRenderer|DQualifiedName]
		public CrossReference getRendererTableRendererCrossReference_3_0() { return cRendererTableRendererCrossReference_3_0; }
		
		//DQualifiedName
		public RuleCall getRendererTableRendererDQualifiedNameParserRuleCall_3_0_1() { return cRendererTableRendererDQualifiedNameParserRuleCall_3_0_1; }
	}
	public class PubFigureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubFigure");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFigureKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cPubTitledBlockHeaderParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cFigureAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cFigureAbstractFigureParserRuleCall_3_0 = (RuleCall)cFigureAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//PubFigure TitledFigure:
		//	'Figure'
		//	PubTitledBlockHeader
		//	'{'
		//	figure=AbstractFigure
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Figure' PubTitledBlockHeader '{' figure=AbstractFigure '}'
		public Group getGroup() { return cGroup; }
		
		//'Figure'
		public Keyword getFigureKeyword_0() { return cFigureKeyword_0; }
		
		//PubTitledBlockHeader
		public RuleCall getPubTitledBlockHeaderParserRuleCall_1() { return cPubTitledBlockHeaderParserRuleCall_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//figure=AbstractFigure
		public Assignment getFigureAssignment_3() { return cFigureAssignment_3; }
		
		//AbstractFigure
		public RuleCall getFigureAbstractFigureParserRuleCall_3_0() { return cFigureAbstractFigureParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class AbstractFigureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.AbstractFigure");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIncludedFigureParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cProvidedFigureParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//AbstractFigure:
		//	IncludedFigure | ProvidedFigure;
		@Override public ParserRule getRule() { return rule; }
		
		//IncludedFigure | ProvidedFigure
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//IncludedFigure
		public RuleCall getIncludedFigureParserRuleCall_0() { return cIncludedFigureParserRuleCall_0; }
		
		//ProvidedFigure
		public RuleCall getProvidedFigureParserRuleCall_1() { return cProvidedFigureParserRuleCall_1; }
	}
	public class IncludedFigureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.IncludedFigure");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUriKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFileUriAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cFileUriSTRINGTerminalRuleCall_1_0 = (RuleCall)cFileUriAssignment_1.eContents().get(0);
		
		//IncludedFigure:
		//	'uri:' fileUri=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//'uri:' fileUri=STRING
		public Group getGroup() { return cGroup; }
		
		//'uri:'
		public Keyword getUriKeyword_0() { return cUriKeyword_0; }
		
		//fileUri=STRING
		public Assignment getFileUriAssignment_1() { return cFileUriAssignment_1; }
		
		//STRING
		public RuleCall getFileUriSTRINGTerminalRuleCall_1_0() { return cFileUriSTRINGTerminalRuleCall_1_0; }
	}
	public class ProvidedFigureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.ProvidedFigure");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRootKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cDiagramRootAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cDiagramRootIDiagramRootCrossReference_1_0 = (CrossReference)cDiagramRootAssignment_1.eContents().get(0);
		private final RuleCall cDiagramRootIDiagramRootDQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cDiagramRootIDiagramRootCrossReference_1_0.eContents().get(1);
		private final Keyword cFigureKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cRendererAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cRendererFigureRendererCrossReference_3_0 = (CrossReference)cRendererAssignment_3.eContents().get(0);
		private final RuleCall cRendererFigureRendererDQualifiedNameParserRuleCall_3_0_1 = (RuleCall)cRendererFigureRendererCrossReference_3_0.eContents().get(1);
		
		//// TODO Validation
		//ProvidedFigure:
		//	'root:' diagramRoot=[IDiagramRoot|DQualifiedName]
		//	'figure:' renderer=[FigureRenderer|DQualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//'root:' diagramRoot=[IDiagramRoot|DQualifiedName] 'figure:' renderer=[FigureRenderer|DQualifiedName]
		public Group getGroup() { return cGroup; }
		
		//'root:'
		public Keyword getRootKeyword_0() { return cRootKeyword_0; }
		
		//diagramRoot=[IDiagramRoot|DQualifiedName]
		public Assignment getDiagramRootAssignment_1() { return cDiagramRootAssignment_1; }
		
		//[IDiagramRoot|DQualifiedName]
		public CrossReference getDiagramRootIDiagramRootCrossReference_1_0() { return cDiagramRootIDiagramRootCrossReference_1_0; }
		
		//DQualifiedName
		public RuleCall getDiagramRootIDiagramRootDQualifiedNameParserRuleCall_1_0_1() { return cDiagramRootIDiagramRootDQualifiedNameParserRuleCall_1_0_1; }
		
		//'figure:'
		public Keyword getFigureKeyword_2() { return cFigureKeyword_2; }
		
		//renderer=[FigureRenderer|DQualifiedName]
		public Assignment getRendererAssignment_3() { return cRendererAssignment_3; }
		
		//[FigureRenderer|DQualifiedName]
		public CrossReference getRendererFigureRendererCrossReference_3_0() { return cRendererFigureRendererCrossReference_3_0; }
		
		//DQualifiedName
		public RuleCall getRendererFigureRendererDQualifiedNameParserRuleCall_3_0_1() { return cRendererFigureRendererDQualifiedNameParserRuleCall_3_0_1; }
	}
	public class PubEquationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubEquation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEquationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cPubTitledBlockHeaderParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cIncludeKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cUriKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cFileUriAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cFileUriSTRINGTerminalRuleCall_5_0 = (RuleCall)cFileUriAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//PubEquation Equation:
		//	'Equation'
		//	PubTitledBlockHeader
		//	'{'
		//	'include' 'uri:' fileUri=STRING // TODO Validation
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Equation' PubTitledBlockHeader '{' 'include' 'uri:' fileUri=STRING // TODO Validation
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Equation'
		public Keyword getEquationKeyword_0() { return cEquationKeyword_0; }
		
		//PubTitledBlockHeader
		public RuleCall getPubTitledBlockHeaderParserRuleCall_1() { return cPubTitledBlockHeaderParserRuleCall_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'include'
		public Keyword getIncludeKeyword_3() { return cIncludeKeyword_3; }
		
		//'uri:'
		public Keyword getUriKeyword_4() { return cUriKeyword_4; }
		
		//fileUri=STRING
		public Assignment getFileUriAssignment_5() { return cFileUriAssignment_5; }
		
		//STRING
		public RuleCall getFileUriSTRINGTerminalRuleCall_5_0() { return cFileUriSTRINGTerminalRuleCall_5_0; }
		
		//// TODO Validation
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class PubCodeListingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubCodeListing");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCodeListingKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cPubTitledBlockHeaderParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Group cGroup_2_0_0 = (Group)cGroup_2_0.eContents().get(0);
		private final Keyword cFormatKeyword_2_0_0_0 = (Keyword)cGroup_2_0_0.eContents().get(0);
		private final Assignment cFormatAssignment_2_0_0_1 = (Assignment)cGroup_2_0_0.eContents().get(1);
		private final RuleCall cFormatPubCodeLanguageEnumRuleCall_2_0_0_1_0 = (RuleCall)cFormatAssignment_2_0_0_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2_0_1 = (Keyword)cGroup_2_0.eContents().get(1);
		private final Assignment cCodeLinesAssignment_2_0_2 = (Assignment)cGroup_2_0.eContents().get(2);
		private final RuleCall cCodeLinesSTRINGTerminalRuleCall_2_0_2_0 = (RuleCall)cCodeLinesAssignment_2_0_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_0_3 = (Keyword)cGroup_2_0.eContents().get(3);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Keyword cIncludeKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cIncludeAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final CrossReference cIncludeEObjectCrossReference_2_1_1_0 = (CrossReference)cIncludeAssignment_2_1_1.eContents().get(0);
		private final RuleCall cIncludeEObjectDQualifiedNameParserRuleCall_2_1_1_0_1 = (RuleCall)cIncludeEObjectCrossReference_2_1_1_0.eContents().get(1);
		
		//PubCodeListing TitledCodeListing:
		//	'CodeListing'
		//	PubTitledBlockHeader (('format:' format=PubCodeLanguage)?
		//	'{'
		//	codeLines+=STRING*
		//	'}'
		//	| 'include' include=[ecore::EObject|DQualifiedName]);
		@Override public ParserRule getRule() { return rule; }
		
		//'CodeListing' PubTitledBlockHeader (('format:' format=PubCodeLanguage)? '{' codeLines+=STRING* '}' | 'include'
		//include=[ecore::EObject|DQualifiedName])
		public Group getGroup() { return cGroup; }
		
		//'CodeListing'
		public Keyword getCodeListingKeyword_0() { return cCodeListingKeyword_0; }
		
		//PubTitledBlockHeader
		public RuleCall getPubTitledBlockHeaderParserRuleCall_1() { return cPubTitledBlockHeaderParserRuleCall_1; }
		
		//(('format:' format=PubCodeLanguage)? '{' codeLines+=STRING* '}' | 'include' include=[ecore::EObject|DQualifiedName])
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//('format:' format=PubCodeLanguage)? '{' codeLines+=STRING* '}'
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//('format:' format=PubCodeLanguage)?
		public Group getGroup_2_0_0() { return cGroup_2_0_0; }
		
		//'format:'
		public Keyword getFormatKeyword_2_0_0_0() { return cFormatKeyword_2_0_0_0; }
		
		//format=PubCodeLanguage
		public Assignment getFormatAssignment_2_0_0_1() { return cFormatAssignment_2_0_0_1; }
		
		//PubCodeLanguage
		public RuleCall getFormatPubCodeLanguageEnumRuleCall_2_0_0_1_0() { return cFormatPubCodeLanguageEnumRuleCall_2_0_0_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2_0_1() { return cLeftCurlyBracketKeyword_2_0_1; }
		
		//codeLines+=STRING*
		public Assignment getCodeLinesAssignment_2_0_2() { return cCodeLinesAssignment_2_0_2; }
		
		//STRING
		public RuleCall getCodeLinesSTRINGTerminalRuleCall_2_0_2_0() { return cCodeLinesSTRINGTerminalRuleCall_2_0_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2_0_3() { return cRightCurlyBracketKeyword_2_0_3; }
		
		//'include' include=[ecore::EObject|DQualifiedName]
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'include'
		public Keyword getIncludeKeyword_2_1_0() { return cIncludeKeyword_2_1_0; }
		
		//include=[ecore::EObject|DQualifiedName]
		public Assignment getIncludeAssignment_2_1_1() { return cIncludeAssignment_2_1_1; }
		
		//[ecore::EObject|DQualifiedName]
		public CrossReference getIncludeEObjectCrossReference_2_1_1_0() { return cIncludeEObjectCrossReference_2_1_1_0; }
		
		//DQualifiedName
		public RuleCall getIncludeEObjectDQualifiedNameParserRuleCall_2_1_1_0_1() { return cIncludeEObjectDQualifiedNameParserRuleCall_2_1_1_0_1; }
	}
	public class PubRichTextParagraphElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubRichTextParagraph");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Keyword cParagraphKeyword_0_0 = (Keyword)cAlternatives_0.eContents().get(0);
		private final Keyword cPKeyword_0_1 = (Keyword)cAlternatives_0.eContents().get(1);
		private final Assignment cStyleAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cStylePubParagraphStyleEnumRuleCall_1_0 = (RuleCall)cStyleAssignment_1.eContents().get(0);
		private final Assignment cTextAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTextDRichTextParserRuleCall_2_0 = (RuleCall)cTextAssignment_2.eContents().get(0);
		
		//PubRichTextParagraph RichTextParagraph:
		//	('Paragraph' | 'P') style=PubParagraphStyle?
		//	text=DRichText;
		@Override public ParserRule getRule() { return rule; }
		
		//('Paragraph' | 'P') style=PubParagraphStyle? text=DRichText
		public Group getGroup() { return cGroup; }
		
		//('Paragraph' | 'P')
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//'Paragraph'
		public Keyword getParagraphKeyword_0_0() { return cParagraphKeyword_0_0; }
		
		//'P'
		public Keyword getPKeyword_0_1() { return cPKeyword_0_1; }
		
		//style=PubParagraphStyle?
		public Assignment getStyleAssignment_1() { return cStyleAssignment_1; }
		
		//PubParagraphStyle
		public RuleCall getStylePubParagraphStyleEnumRuleCall_1_0() { return cStylePubParagraphStyleEnumRuleCall_1_0; }
		
		//text=DRichText
		public Assignment getTextAssignment_2() { return cTextAssignment_2; }
		
		//DRichText
		public RuleCall getTextDRichTextParserRuleCall_2_0() { return cTextDRichTextParserRuleCall_2_0; }
	}
	public class PubParagraphTextOnlyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubParagraphTextOnly");
		private final Assignment cTextAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cTextDRichTextParserRuleCall_0 = (RuleCall)cTextAssignment.eContents().get(0);
		
		//PubParagraphTextOnly RichTextParagraph:
		//	text=DRichText;
		@Override public ParserRule getRule() { return rule; }
		
		//text=DRichText
		public Assignment getTextAssignment() { return cTextAssignment; }
		
		//DRichText
		public RuleCall getTextDRichTextParserRuleCall_0() { return cTextDRichTextParserRuleCall_0; }
	}
	public class DmxPrimaryExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.DmxPrimaryExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDmxLiteralExpressionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDmxParenthesizedExpressionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cDmxListExpressionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cDmxFunctionCallParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cDmxStaticReferenceParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cDmxContextReferenceParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cDmxIfExpressionParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cPubReferenceParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		
		//@Override
		//DmxPrimaryExpression DExpression:
		//	DmxLiteralExpression | DmxParenthesizedExpression | DmxListExpression | DmxFunctionCall | DmxStaticReference |
		//	DmxContextReference | DmxIfExpression | PubReference;
		@Override public ParserRule getRule() { return rule; }
		
		//DmxLiteralExpression | DmxParenthesizedExpression | DmxListExpression | DmxFunctionCall | DmxStaticReference |
		//DmxContextReference | DmxIfExpression | PubReference
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//DmxLiteralExpression
		public RuleCall getDmxLiteralExpressionParserRuleCall_0() { return cDmxLiteralExpressionParserRuleCall_0; }
		
		//DmxParenthesizedExpression
		public RuleCall getDmxParenthesizedExpressionParserRuleCall_1() { return cDmxParenthesizedExpressionParserRuleCall_1; }
		
		//DmxListExpression
		public RuleCall getDmxListExpressionParserRuleCall_2() { return cDmxListExpressionParserRuleCall_2; }
		
		//DmxFunctionCall
		public RuleCall getDmxFunctionCallParserRuleCall_3() { return cDmxFunctionCallParserRuleCall_3; }
		
		//DmxStaticReference
		public RuleCall getDmxStaticReferenceParserRuleCall_4() { return cDmxStaticReferenceParserRuleCall_4; }
		
		//DmxContextReference
		public RuleCall getDmxContextReferenceParserRuleCall_5() { return cDmxContextReferenceParserRuleCall_5; }
		
		//DmxIfExpression
		public RuleCall getDmxIfExpressionParserRuleCall_6() { return cDmxIfExpressionParserRuleCall_6; }
		
		//PubReference
		public RuleCall getPubReferenceParserRuleCall_7() { return cPubReferenceParserRuleCall_7; }
	}
	public class PubReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubReference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNumberSignKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cScopeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cScopePubReferenceScopeEnumRuleCall_1_0 = (RuleCall)cScopeAssignment_1.eContents().get(0);
		private final Assignment cTargetAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cTargetReferenceTargetCrossReference_2_0 = (CrossReference)cTargetAssignment_2.eContents().get(0);
		private final RuleCall cTargetReferenceTargetDQualifiedNameParserRuleCall_2_0_1 = (RuleCall)cTargetReferenceTargetCrossReference_2_0.eContents().get(1);
		
		//PubReference Reference:
		//	'#'
		//	scope=PubReferenceScope?
		//	target=[ReferenceTarget|DQualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//'#' scope=PubReferenceScope? target=[ReferenceTarget|DQualifiedName]
		public Group getGroup() { return cGroup; }
		
		//'#'
		public Keyword getNumberSignKeyword_0() { return cNumberSignKeyword_0; }
		
		//scope=PubReferenceScope?
		public Assignment getScopeAssignment_1() { return cScopeAssignment_1; }
		
		//PubReferenceScope
		public RuleCall getScopePubReferenceScopeEnumRuleCall_1_0() { return cScopePubReferenceScopeEnumRuleCall_1_0; }
		
		//target=[ReferenceTarget|DQualifiedName]
		public Assignment getTargetAssignment_2() { return cTargetAssignment_2; }
		
		//[ReferenceTarget|DQualifiedName]
		public CrossReference getTargetReferenceTargetCrossReference_2_0() { return cTargetReferenceTargetCrossReference_2_0; }
		
		//DQualifiedName
		public RuleCall getTargetReferenceTargetDQualifiedNameParserRuleCall_2_0_1() { return cTargetReferenceTargetDQualifiedNameParserRuleCall_2_0_1; }
	}
	
	public class PubAdmonitionKindElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubAdmonitionKind");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cNoteEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cNoteNoteKeyword_0_0 = (Keyword)cNoteEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cTipEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cTipTipKeyword_1_0 = (Keyword)cTipEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cCautionEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cCautionCautionKeyword_2_0 = (Keyword)cCautionEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cImportantEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cImportantImportantKeyword_3_0 = (Keyword)cImportantEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum PubAdmonitionKind returns AdmonitionKind:
		//	Note='note' | Tip='tip' | Caution='caution' | Important='important';
		public EnumRule getRule() { return rule; }
		
		//Note='note' | Tip='tip' | Caution='caution' | Important='important'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Note='note'
		public EnumLiteralDeclaration getNoteEnumLiteralDeclaration_0() { return cNoteEnumLiteralDeclaration_0; }
		
		//'note'
		public Keyword getNoteNoteKeyword_0_0() { return cNoteNoteKeyword_0_0; }
		
		//Tip='tip'
		public EnumLiteralDeclaration getTipEnumLiteralDeclaration_1() { return cTipEnumLiteralDeclaration_1; }
		
		//'tip'
		public Keyword getTipTipKeyword_1_0() { return cTipTipKeyword_1_0; }
		
		//Caution='caution'
		public EnumLiteralDeclaration getCautionEnumLiteralDeclaration_2() { return cCautionEnumLiteralDeclaration_2; }
		
		//'caution'
		public Keyword getCautionCautionKeyword_2_0() { return cCautionCautionKeyword_2_0; }
		
		//Important='important'
		public EnumLiteralDeclaration getImportantEnumLiteralDeclaration_3() { return cImportantEnumLiteralDeclaration_3; }
		
		//'important'
		public Keyword getImportantImportantKeyword_3_0() { return cImportantImportantKeyword_3_0; }
	}
	public class PubListStyleElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubListStyle");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cBulletEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cBulletBulletKeyword_0_0 = (Keyword)cBulletEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cSequenceEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cSequenceSequenceKeyword_1_0 = (Keyword)cSequenceEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cTitleEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cTitleTitleKeyword_2_0 = (Keyword)cTitleEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum PubListStyle returns ListStyle:
		//	Bullet='bullet' | Sequence='sequence' | Title='title';
		public EnumRule getRule() { return rule; }
		
		//Bullet='bullet' | Sequence='sequence' | Title='title'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Bullet='bullet'
		public EnumLiteralDeclaration getBulletEnumLiteralDeclaration_0() { return cBulletEnumLiteralDeclaration_0; }
		
		//'bullet'
		public Keyword getBulletBulletKeyword_0_0() { return cBulletBulletKeyword_0_0; }
		
		//Sequence='sequence'
		public EnumLiteralDeclaration getSequenceEnumLiteralDeclaration_1() { return cSequenceEnumLiteralDeclaration_1; }
		
		//'sequence'
		public Keyword getSequenceSequenceKeyword_1_0() { return cSequenceSequenceKeyword_1_0; }
		
		//Title='title'
		public EnumLiteralDeclaration getTitleEnumLiteralDeclaration_2() { return cTitleEnumLiteralDeclaration_2; }
		
		//'title'
		public Keyword getTitleTitleKeyword_2_0() { return cTitleTitleKeyword_2_0; }
	}
	public class PubSequenceNumberStyleElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubSequenceNumberStyle");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cArabicEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cArabicArabicKeyword_0_0 = (Keyword)cArabicEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cCapitalLetterEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cCapitalLetterCapitalLetterKeyword_1_0 = (Keyword)cCapitalLetterEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cSmallLetterEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cSmallLetterSmallLetterKeyword_2_0 = (Keyword)cSmallLetterEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cCapitalRomanEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cCapitalRomanCapitalRomanKeyword_3_0 = (Keyword)cCapitalRomanEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cSmallRomanEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cSmallRomanSmallRomanKeyword_4_0 = (Keyword)cSmallRomanEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cNoneEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cNoneNoneKeyword_5_0 = (Keyword)cNoneEnumLiteralDeclaration_5.eContents().get(0);
		
		//enum PubSequenceNumberStyle returns proto::ProtoSequenceNumberStyle:
		//	Arabic='arabic' | CapitalLetter='capitalLetter' | SmallLetter='smallLetter' | CapitalRoman='capitalRoman' |
		//	SmallRoman='smallRoman' | None='none';
		public EnumRule getRule() { return rule; }
		
		//Arabic='arabic' | CapitalLetter='capitalLetter' | SmallLetter='smallLetter' | CapitalRoman='capitalRoman' |
		//SmallRoman='smallRoman' | None='none'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Arabic='arabic'
		public EnumLiteralDeclaration getArabicEnumLiteralDeclaration_0() { return cArabicEnumLiteralDeclaration_0; }
		
		//'arabic'
		public Keyword getArabicArabicKeyword_0_0() { return cArabicArabicKeyword_0_0; }
		
		//CapitalLetter='capitalLetter'
		public EnumLiteralDeclaration getCapitalLetterEnumLiteralDeclaration_1() { return cCapitalLetterEnumLiteralDeclaration_1; }
		
		//'capitalLetter'
		public Keyword getCapitalLetterCapitalLetterKeyword_1_0() { return cCapitalLetterCapitalLetterKeyword_1_0; }
		
		//SmallLetter='smallLetter'
		public EnumLiteralDeclaration getSmallLetterEnumLiteralDeclaration_2() { return cSmallLetterEnumLiteralDeclaration_2; }
		
		//'smallLetter'
		public Keyword getSmallLetterSmallLetterKeyword_2_0() { return cSmallLetterSmallLetterKeyword_2_0; }
		
		//CapitalRoman='capitalRoman'
		public EnumLiteralDeclaration getCapitalRomanEnumLiteralDeclaration_3() { return cCapitalRomanEnumLiteralDeclaration_3; }
		
		//'capitalRoman'
		public Keyword getCapitalRomanCapitalRomanKeyword_3_0() { return cCapitalRomanCapitalRomanKeyword_3_0; }
		
		//SmallRoman='smallRoman'
		public EnumLiteralDeclaration getSmallRomanEnumLiteralDeclaration_4() { return cSmallRomanEnumLiteralDeclaration_4; }
		
		//'smallRoman'
		public Keyword getSmallRomanSmallRomanKeyword_4_0() { return cSmallRomanSmallRomanKeyword_4_0; }
		
		//None='none'
		public EnumLiteralDeclaration getNoneEnumLiteralDeclaration_5() { return cNoneEnumLiteralDeclaration_5; }
		
		//'none'
		public Keyword getNoneNoneKeyword_5_0() { return cNoneNoneKeyword_5_0; }
	}
	public class PubCodeLanguageElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubCodeLanguage");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cJavaEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cJavaJavaKeyword_0_0 = (Keyword)cJavaEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cJavaScriptEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cJavaScriptJavaScriptKeyword_1_0 = (Keyword)cJavaScriptEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cHTMLEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cHTMLHTMLKeyword_2_0 = (Keyword)cHTMLEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cXMLEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cXMLXMLKeyword_3_0 = (Keyword)cXMLEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum PubCodeLanguage returns CodeLanguage:
		//	Java | JavaScript | HTML | XML;
		public EnumRule getRule() { return rule; }
		
		//Java | JavaScript | HTML | XML
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Java
		public EnumLiteralDeclaration getJavaEnumLiteralDeclaration_0() { return cJavaEnumLiteralDeclaration_0; }
		
		//'Java'
		public Keyword getJavaJavaKeyword_0_0() { return cJavaJavaKeyword_0_0; }
		
		//JavaScript
		public EnumLiteralDeclaration getJavaScriptEnumLiteralDeclaration_1() { return cJavaScriptEnumLiteralDeclaration_1; }
		
		//'JavaScript'
		public Keyword getJavaScriptJavaScriptKeyword_1_0() { return cJavaScriptJavaScriptKeyword_1_0; }
		
		//HTML
		public EnumLiteralDeclaration getHTMLEnumLiteralDeclaration_2() { return cHTMLEnumLiteralDeclaration_2; }
		
		//'HTML'
		public Keyword getHTMLHTMLKeyword_2_0() { return cHTMLHTMLKeyword_2_0; }
		
		//XML
		public EnumLiteralDeclaration getXMLEnumLiteralDeclaration_3() { return cXMLEnumLiteralDeclaration_3; }
		
		//'XML'
		public Keyword getXMLXMLKeyword_3_0() { return cXMLXMLKeyword_3_0; }
	}
	public class PubParagraphStyleElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubParagraphStyle");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cPlainEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cPlainPlainKeyword_0_0 = (Keyword)cPlainEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cQuoteEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cQuoteQuoteKeyword_1_0 = (Keyword)cQuoteEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum PubParagraphStyle returns ParagraphStyle:
		//	Plain='plain' | Quote='quote';
		public EnumRule getRule() { return rule; }
		
		//Plain='plain' | Quote='quote'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Plain='plain'
		public EnumLiteralDeclaration getPlainEnumLiteralDeclaration_0() { return cPlainEnumLiteralDeclaration_0; }
		
		//'plain'
		public Keyword getPlainPlainKeyword_0_0() { return cPlainPlainKeyword_0_0; }
		
		//Quote='quote'
		public EnumLiteralDeclaration getQuoteEnumLiteralDeclaration_1() { return cQuoteEnumLiteralDeclaration_1; }
		
		//'quote'
		public Keyword getQuoteQuoteKeyword_1_0() { return cQuoteQuoteKeyword_1_0; }
	}
	public class PubReferenceScopeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "com.mimacom.ddd.pub.pub.Pub.PubReferenceScope");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cDocumentSegmentEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cDocumentSegmentSegKeyword_0_0 = (Keyword)cDocumentSegmentEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cDivisionEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cDivisionDivKeyword_1_0 = (Keyword)cDivisionEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cPartEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cPartPartKeyword_2_0 = (Keyword)cPartEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cAppendixEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cAppendixAppendixKeyword_3_0 = (Keyword)cAppendixEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cChapterEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cChapterChapterKeyword_4_0 = (Keyword)cChapterEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cSectionEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cSectionSectionKeyword_5_0 = (Keyword)cSectionEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cSubsectionEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cSubsectionSubKeyword_6_0 = (Keyword)cSubsectionEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cSubsubsectionEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cSubsubsectionSubsubKeyword_7_0 = (Keyword)cSubsubsectionEnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cTableEnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cTableTableKeyword_8_0 = (Keyword)cTableEnumLiteralDeclaration_8.eContents().get(0);
		private final EnumLiteralDeclaration cFigureEnumLiteralDeclaration_9 = (EnumLiteralDeclaration)cAlternatives.eContents().get(9);
		private final Keyword cFigureFigureKeyword_9_0 = (Keyword)cFigureEnumLiteralDeclaration_9.eContents().get(0);
		private final EnumLiteralDeclaration cEquationEnumLiteralDeclaration_10 = (EnumLiteralDeclaration)cAlternatives.eContents().get(10);
		private final Keyword cEquationEquationKeyword_10_0 = (Keyword)cEquationEnumLiteralDeclaration_10.eContents().get(0);
		private final EnumLiteralDeclaration cCodeListingEnumLiteralDeclaration_11 = (EnumLiteralDeclaration)cAlternatives.eContents().get(11);
		private final Keyword cCodeListingCodeKeyword_11_0 = (Keyword)cCodeListingEnumLiteralDeclaration_11.eContents().get(0);
		private final EnumLiteralDeclaration cAdmonitionEnumLiteralDeclaration_12 = (EnumLiteralDeclaration)cAlternatives.eContents().get(12);
		private final Keyword cAdmonitionAdmonitionKeyword_12_0 = (Keyword)cAdmonitionEnumLiteralDeclaration_12.eContents().get(0);
		private final EnumLiteralDeclaration cAbbreviationEnumLiteralDeclaration_13 = (EnumLiteralDeclaration)cAlternatives.eContents().get(13);
		private final Keyword cAbbreviationAbbrevKeyword_13_0 = (Keyword)cAbbreviationEnumLiteralDeclaration_13.eContents().get(0);
		private final EnumLiteralDeclaration cGlossaryEnumLiteralDeclaration_14 = (EnumLiteralDeclaration)cAlternatives.eContents().get(14);
		private final Keyword cGlossaryGlossaryKeyword_14_0 = (Keyword)cGlossaryEnumLiteralDeclaration_14.eContents().get(0);
		private final EnumLiteralDeclaration cBibliographyEnumLiteralDeclaration_15 = (EnumLiteralDeclaration)cAlternatives.eContents().get(15);
		private final Keyword cBibliographyBilioKeyword_15_0 = (Keyword)cBibliographyEnumLiteralDeclaration_15.eContents().get(0);
		
		//enum PubReferenceScope returns ReferenceScope:
		//	DocumentSegment='seg' |
		//	Division='div' |
		//	Part='part' |
		//	Appendix='appendix' |
		//	Chapter='chapter' |
		//	Section='section' |
		//	Subsection='sub' |
		//	Subsubsection='subsub' |
		//	Table='table' |
		//	Figure='figure' |
		//	Equation='equation' |
		//	CodeListing='code' |
		//	Admonition='admonition' |
		//	Abbreviation='abbrev' |
		//	Glossary='glossary' |
		//	Bibliography='bilio';
		public EnumRule getRule() { return rule; }
		
		//DocumentSegment='seg' | Division='div' | Part='part' | Appendix='appendix' | Chapter='chapter' | Section='section' |
		//Subsection='sub' | Subsubsection='subsub' | Table='table' | Figure='figure' | Equation='equation' | CodeListing='code'
		//| Admonition='admonition' | Abbreviation='abbrev' | Glossary='glossary' | Bibliography='bilio'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//DocumentSegment='seg'
		public EnumLiteralDeclaration getDocumentSegmentEnumLiteralDeclaration_0() { return cDocumentSegmentEnumLiteralDeclaration_0; }
		
		//'seg'
		public Keyword getDocumentSegmentSegKeyword_0_0() { return cDocumentSegmentSegKeyword_0_0; }
		
		//Division='div'
		public EnumLiteralDeclaration getDivisionEnumLiteralDeclaration_1() { return cDivisionEnumLiteralDeclaration_1; }
		
		//'div'
		public Keyword getDivisionDivKeyword_1_0() { return cDivisionDivKeyword_1_0; }
		
		//Part='part'
		public EnumLiteralDeclaration getPartEnumLiteralDeclaration_2() { return cPartEnumLiteralDeclaration_2; }
		
		//'part'
		public Keyword getPartPartKeyword_2_0() { return cPartPartKeyword_2_0; }
		
		//Appendix='appendix'
		public EnumLiteralDeclaration getAppendixEnumLiteralDeclaration_3() { return cAppendixEnumLiteralDeclaration_3; }
		
		//'appendix'
		public Keyword getAppendixAppendixKeyword_3_0() { return cAppendixAppendixKeyword_3_0; }
		
		//Chapter='chapter'
		public EnumLiteralDeclaration getChapterEnumLiteralDeclaration_4() { return cChapterEnumLiteralDeclaration_4; }
		
		//'chapter'
		public Keyword getChapterChapterKeyword_4_0() { return cChapterChapterKeyword_4_0; }
		
		//Section='section'
		public EnumLiteralDeclaration getSectionEnumLiteralDeclaration_5() { return cSectionEnumLiteralDeclaration_5; }
		
		//'section'
		public Keyword getSectionSectionKeyword_5_0() { return cSectionSectionKeyword_5_0; }
		
		//Subsection='sub'
		public EnumLiteralDeclaration getSubsectionEnumLiteralDeclaration_6() { return cSubsectionEnumLiteralDeclaration_6; }
		
		//'sub'
		public Keyword getSubsectionSubKeyword_6_0() { return cSubsectionSubKeyword_6_0; }
		
		//Subsubsection='subsub'
		public EnumLiteralDeclaration getSubsubsectionEnumLiteralDeclaration_7() { return cSubsubsectionEnumLiteralDeclaration_7; }
		
		//'subsub'
		public Keyword getSubsubsectionSubsubKeyword_7_0() { return cSubsubsectionSubsubKeyword_7_0; }
		
		//Table='table'
		public EnumLiteralDeclaration getTableEnumLiteralDeclaration_8() { return cTableEnumLiteralDeclaration_8; }
		
		//'table'
		public Keyword getTableTableKeyword_8_0() { return cTableTableKeyword_8_0; }
		
		//Figure='figure'
		public EnumLiteralDeclaration getFigureEnumLiteralDeclaration_9() { return cFigureEnumLiteralDeclaration_9; }
		
		//'figure'
		public Keyword getFigureFigureKeyword_9_0() { return cFigureFigureKeyword_9_0; }
		
		//Equation='equation'
		public EnumLiteralDeclaration getEquationEnumLiteralDeclaration_10() { return cEquationEnumLiteralDeclaration_10; }
		
		//'equation'
		public Keyword getEquationEquationKeyword_10_0() { return cEquationEquationKeyword_10_0; }
		
		//CodeListing='code'
		public EnumLiteralDeclaration getCodeListingEnumLiteralDeclaration_11() { return cCodeListingEnumLiteralDeclaration_11; }
		
		//'code'
		public Keyword getCodeListingCodeKeyword_11_0() { return cCodeListingCodeKeyword_11_0; }
		
		//Admonition='admonition'
		public EnumLiteralDeclaration getAdmonitionEnumLiteralDeclaration_12() { return cAdmonitionEnumLiteralDeclaration_12; }
		
		//'admonition'
		public Keyword getAdmonitionAdmonitionKeyword_12_0() { return cAdmonitionAdmonitionKeyword_12_0; }
		
		//Abbreviation='abbrev'
		public EnumLiteralDeclaration getAbbreviationEnumLiteralDeclaration_13() { return cAbbreviationEnumLiteralDeclaration_13; }
		
		//'abbrev'
		public Keyword getAbbreviationAbbrevKeyword_13_0() { return cAbbreviationAbbrevKeyword_13_0; }
		
		//Glossary='glossary'
		public EnumLiteralDeclaration getGlossaryEnumLiteralDeclaration_14() { return cGlossaryEnumLiteralDeclaration_14; }
		
		//'glossary'
		public Keyword getGlossaryGlossaryKeyword_14_0() { return cGlossaryGlossaryKeyword_14_0; }
		
		//Bibliography='bilio'
		public EnumLiteralDeclaration getBibliographyEnumLiteralDeclaration_15() { return cBibliographyEnumLiteralDeclaration_15; }
		
		//'bilio'
		public Keyword getBibliographyBilioKeyword_15_0() { return cBibliographyBilioKeyword_15_0; }
	}
	
	private final PubModelElements pPubModel;
	private final PubDocumentElements pPubDocument;
	private final PubPublicationElements pPubPublication;
	private final PubComponentElements pPubComponent;
	private final PubSymbolElements pPubSymbol;
	private final PubReferenceTargetNameElements pPubReferenceTargetName;
	private final PubDocumentSegmentElements pPubDocumentSegment;
	private final PubAbstractElements pPubAbstract;
	private final PubPrefaceElements pPubPreface;
	private final PubEpilogueElements pPubEpilogue;
	private final PubChangeHistoryElements pPubChangeHistory;
	private final PubChangeDescriptionElements pPubChangeDescription;
	private final PubTOCElements pPubTOC;
	private final PubAbbreviationsElements pPubAbbreviations;
	private final PubAbbreviationElements pPubAbbreviation;
	private final PubListOfTablesElements pPubListOfTables;
	private final PubListOfFiguresElements pPubListOfFigures;
	private final PubBibliographyElements pPubBibliography;
	private final PubBibliographyEntryElements pPubBibliographyEntry;
	private final PubGlossaryElements pPubGlossary;
	private final PubGlossaryEntryElements pPubGlossaryEntry;
	private final PubIndexElements pPubIndex;
	private final PubIndexEntryElements pPubIndexEntry;
	private final PubSegmentIncludeElements pPubSegmentInclude;
	private final PubPublicationBodyElements pPubPublicationBody;
	private final PubDivisionHeaderElements pPubDivisionHeader;
	private final PubDivisionIncludeHeaderElements pPubDivisionIncludeHeader;
	private final PubPartElements pPubPart;
	private final PubAppendixElements pPubAppendix;
	private final PubChapterElements pPubChapter;
	private final PubSectionElements pPubSection;
	private final PubSubsectionElements pPubSubsection;
	private final PubSubsubsectionElements pPubSubsubsection;
	private final PubContentBlockElements pPubContentBlock;
	private final PubAdmonitionElements pPubAdmonition;
	private final PubAdmonitionKindElements ePubAdmonitionKind;
	private final PubListElements pPubList;
	private final PubListStyleElements ePubListStyle;
	private final PubSequenceNumberStyleElements ePubSequenceNumberStyle;
	private final PubListItemElements pPubListItem;
	private final PubTitledBlockHeaderElements pPubTitledBlockHeader;
	private final PubTableElements pPubTable;
	private final AbstractTableElements pAbstractTable;
	private final TableElements pTable;
	private final PubTableRowElements pPubTableRow;
	private final PubTableCellElements pPubTableCell;
	private final PubTableSimpleCellElements pPubTableSimpleCell;
	private final ProvidedTableElements pProvidedTable;
	private final PubFigureElements pPubFigure;
	private final AbstractFigureElements pAbstractFigure;
	private final IncludedFigureElements pIncludedFigure;
	private final ProvidedFigureElements pProvidedFigure;
	private final PubEquationElements pPubEquation;
	private final PubCodeListingElements pPubCodeListing;
	private final PubCodeLanguageElements ePubCodeLanguage;
	private final PubRichTextParagraphElements pPubRichTextParagraph;
	private final PubParagraphTextOnlyElements pPubParagraphTextOnly;
	private final PubParagraphStyleElements ePubParagraphStyle;
	private final DmxPrimaryExpressionElements pDmxPrimaryExpression;
	private final PubReferenceElements pPubReference;
	private final PubReferenceScopeElements ePubReferenceScope;
	
	private final Grammar grammar;
	
	private final DmxGrammarAccess gaDmx;

	@Inject
	public PubGrammarAccess(GrammarProvider grammarProvider,
			DmxGrammarAccess gaDmx) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaDmx = gaDmx;
		this.pPubModel = new PubModelElements();
		this.pPubDocument = new PubDocumentElements();
		this.pPubPublication = new PubPublicationElements();
		this.pPubComponent = new PubComponentElements();
		this.pPubSymbol = new PubSymbolElements();
		this.pPubReferenceTargetName = new PubReferenceTargetNameElements();
		this.pPubDocumentSegment = new PubDocumentSegmentElements();
		this.pPubAbstract = new PubAbstractElements();
		this.pPubPreface = new PubPrefaceElements();
		this.pPubEpilogue = new PubEpilogueElements();
		this.pPubChangeHistory = new PubChangeHistoryElements();
		this.pPubChangeDescription = new PubChangeDescriptionElements();
		this.pPubTOC = new PubTOCElements();
		this.pPubAbbreviations = new PubAbbreviationsElements();
		this.pPubAbbreviation = new PubAbbreviationElements();
		this.pPubListOfTables = new PubListOfTablesElements();
		this.pPubListOfFigures = new PubListOfFiguresElements();
		this.pPubBibliography = new PubBibliographyElements();
		this.pPubBibliographyEntry = new PubBibliographyEntryElements();
		this.pPubGlossary = new PubGlossaryElements();
		this.pPubGlossaryEntry = new PubGlossaryEntryElements();
		this.pPubIndex = new PubIndexElements();
		this.pPubIndexEntry = new PubIndexEntryElements();
		this.pPubSegmentInclude = new PubSegmentIncludeElements();
		this.pPubPublicationBody = new PubPublicationBodyElements();
		this.pPubDivisionHeader = new PubDivisionHeaderElements();
		this.pPubDivisionIncludeHeader = new PubDivisionIncludeHeaderElements();
		this.pPubPart = new PubPartElements();
		this.pPubAppendix = new PubAppendixElements();
		this.pPubChapter = new PubChapterElements();
		this.pPubSection = new PubSectionElements();
		this.pPubSubsection = new PubSubsectionElements();
		this.pPubSubsubsection = new PubSubsubsectionElements();
		this.pPubContentBlock = new PubContentBlockElements();
		this.pPubAdmonition = new PubAdmonitionElements();
		this.ePubAdmonitionKind = new PubAdmonitionKindElements();
		this.pPubList = new PubListElements();
		this.ePubListStyle = new PubListStyleElements();
		this.ePubSequenceNumberStyle = new PubSequenceNumberStyleElements();
		this.pPubListItem = new PubListItemElements();
		this.pPubTitledBlockHeader = new PubTitledBlockHeaderElements();
		this.pPubTable = new PubTableElements();
		this.pAbstractTable = new AbstractTableElements();
		this.pTable = new TableElements();
		this.pPubTableRow = new PubTableRowElements();
		this.pPubTableCell = new PubTableCellElements();
		this.pPubTableSimpleCell = new PubTableSimpleCellElements();
		this.pProvidedTable = new ProvidedTableElements();
		this.pPubFigure = new PubFigureElements();
		this.pAbstractFigure = new AbstractFigureElements();
		this.pIncludedFigure = new IncludedFigureElements();
		this.pProvidedFigure = new ProvidedFigureElements();
		this.pPubEquation = new PubEquationElements();
		this.pPubCodeListing = new PubCodeListingElements();
		this.ePubCodeLanguage = new PubCodeLanguageElements();
		this.pPubRichTextParagraph = new PubRichTextParagraphElements();
		this.pPubParagraphTextOnly = new PubParagraphTextOnlyElements();
		this.ePubParagraphStyle = new PubParagraphStyleElements();
		this.pDmxPrimaryExpression = new DmxPrimaryExpressionElements();
		this.pPubReference = new PubReferenceElements();
		this.ePubReferenceScope = new PubReferenceScopeElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("com.mimacom.ddd.pub.pub.Pub".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public DmxGrammarAccess getDmxGrammarAccess() {
		return gaDmx;
	}

	
	//PubModel:
	//	{PubModel} imports+=DImport*
	//	document=PubDocument;
	public PubModelElements getPubModelAccess() {
		return pPubModel;
	}
	
	public ParserRule getPubModelRule() {
		return getPubModelAccess().getRule();
	}
	
	//PubDocument Document:
	//	PubPublication | PubComponent;
	public PubDocumentElements getPubDocumentAccess() {
		return pPubDocument;
	}
	
	public ParserRule getPubDocumentRule() {
		return getPubDocumentAccess().getRule();
	}
	
	//PubPublication Publication:
	//	{Publication}
	//	'Publication'
	//	PubReferenceTargetName
	//	title=STRING
	//	'class:' publicationClass=[proto::PublicationClass] symbols+=PubSymbol*
	//	'includes:'
	//	includes+=[Component]*;
	public PubPublicationElements getPubPublicationAccess() {
		return pPubPublication;
	}
	
	public ParserRule getPubPublicationRule() {
		return getPubPublicationAccess().getRule();
	}
	
	//PubComponent Component:
	//	{Component}
	//	'Component'
	//	PubReferenceTargetName
	//	title=STRING
	//	'class:' publicationClass=[proto::PublicationClass] symbols+=PubSymbol*
	//	segments+=PubDocumentSegment*;
	public PubComponentElements getPubComponentAccess() {
		return pPubComponent;
	}
	
	public ParserRule getPubComponentRule() {
		return getPubComponentAccess().getRule();
	}
	
	//PubSymbol Symbol:
	//	'symbol:'
	//	name=ID '=' value=DRichText;
	public PubSymbolElements getPubSymbolAccess() {
		return pPubSymbol;
	}
	
	public ParserRule getPubSymbolRule() {
		return getPubSymbolAccess().getRule();
	}
	
	//fragment PubReferenceTargetName returns ReferenceTarget:
	//	'(' '#'? name=ID ')';
	public PubReferenceTargetNameElements getPubReferenceTargetNameAccess() {
		return pPubReferenceTargetName;
	}
	
	public ParserRule getPubReferenceTargetNameRule() {
		return getPubReferenceTargetNameAccess().getRule();
	}
	
	////
	//// SEGMENTS
	////
	//PubDocumentSegment DocumentSegment:
	//	PubAbstract | PubPreface | PubPublicationBody | PubEpilogue | PubChangeHistory | PubTOC | PubAbbreviations |
	//	PubListOfTables | PubListOfFigures | PubBibliography | PubGlossary | PubIndex | PubSegmentInclude;
	public PubDocumentSegmentElements getPubDocumentSegmentAccess() {
		return pPubDocumentSegment;
	}
	
	public ParserRule getPubDocumentSegmentRule() {
		return getPubDocumentSegmentAccess().getRule();
	}
	
	//PubAbstract Abstract:
	//	{Abstract}
	//	'Abstract'
	//	'{'
	//	contents+=PubContentBlock*
	//	'}';
	public PubAbstractElements getPubAbstractAccess() {
		return pPubAbstract;
	}
	
	public ParserRule getPubAbstractRule() {
		return getPubAbstractAccess().getRule();
	}
	
	//PubPreface Preface:
	//	{Preface}
	//	'Preface'
	//	'{'
	//	contents+=PubContentBlock*
	//	'}';
	public PubPrefaceElements getPubPrefaceAccess() {
		return pPubPreface;
	}
	
	public ParserRule getPubPrefaceRule() {
		return getPubPrefaceAccess().getRule();
	}
	
	//PubEpilogue Epilogue:
	//	{Epilogue}
	//	'Epilogue'
	//	'{'
	//	contents+=PubContentBlock*
	//	'}';
	public PubEpilogueElements getPubEpilogueAccess() {
		return pPubEpilogue;
	}
	
	public ParserRule getPubEpilogueRule() {
		return getPubEpilogueAccess().getRule();
	}
	
	//PubChangeHistory ChangeHistory:
	//	{ChangeHistory}
	//	'ChangeHistory'
	//	'{'
	//	entries+=PubChangeDescription*
	//	'}';
	public PubChangeHistoryElements getPubChangeHistoryAccess() {
		return pPubChangeHistory;
	}
	
	public ParserRule getPubChangeHistoryRule() {
		return getPubChangeHistoryAccess().getRule();
	}
	
	//PubChangeDescription ChangeDescription:
	//	'Entry'
	//	'version:' version=STRING
	//	'date:' date=STRING
	//	'author:' author=STRING
	//	'description:' description=STRING
	//	| '-' version=STRING ':' date=STRING ',' author=STRING ',' description=STRING;
	public PubChangeDescriptionElements getPubChangeDescriptionAccess() {
		return pPubChangeDescription;
	}
	
	public ParserRule getPubChangeDescriptionRule() {
		return getPubChangeDescriptionAccess().getRule();
	}
	
	//PubTOC TOC:
	//	{TOC}
	//	'TableOfContents'
	//	'{' '}';
	public PubTOCElements getPubTOCAccess() {
		return pPubTOC;
	}
	
	public ParserRule getPubTOCRule() {
		return getPubTOCAccess().getRule();
	}
	
	//PubAbbreviations Abbreviations:
	//	{Abbreviations}
	//	'Abbreviations'
	//	'{'
	//	entries+=PubAbbreviation*
	//	'}';
	public PubAbbreviationsElements getPubAbbreviationsAccess() {
		return pPubAbbreviations;
	}
	
	public ParserRule getPubAbbreviationsRule() {
		return getPubAbbreviationsAccess().getRule();
	}
	
	//PubAbbreviation Abbreviation:
	//	'Entry'
	//	'id:' name=ID
	//	'text:' longForm=STRING
	//	| '-' name=ID ':' longForm=STRING;
	public PubAbbreviationElements getPubAbbreviationAccess() {
		return pPubAbbreviation;
	}
	
	public ParserRule getPubAbbreviationRule() {
		return getPubAbbreviationAccess().getRule();
	}
	
	//PubListOfTables ListOfTables:
	//	{ListOfTables}
	//	'ListOfTables'
	//	'{' '}';
	public PubListOfTablesElements getPubListOfTablesAccess() {
		return pPubListOfTables;
	}
	
	public ParserRule getPubListOfTablesRule() {
		return getPubListOfTablesAccess().getRule();
	}
	
	//PubListOfFigures ListOfFigures:
	//	{ListOfFigures}
	//	'ListOfFigures'
	//	'{' '}';
	public PubListOfFiguresElements getPubListOfFiguresAccess() {
		return pPubListOfFigures;
	}
	
	public ParserRule getPubListOfFiguresRule() {
		return getPubListOfFiguresAccess().getRule();
	}
	
	//PubBibliography Bibliography:
	//	{Bibliography}
	//	'Bibliography'
	//	'{'
	//	entries+=PubBibliographyEntry*
	//	'}';
	public PubBibliographyElements getPubBibliographyAccess() {
		return pPubBibliography;
	}
	
	public ParserRule getPubBibliographyRule() {
		return getPubBibliographyAccess().getRule();
	}
	
	//PubBibliographyEntry BibliographyEntry:
	//	'Entry'
	//	'id:' name=ID
	//	'title:' title=STRING
	//	'authors:' authors=STRING
	//	'publisher:' publisher=STRING
	//	'date:' date=STRING
	//	'comment:' comment=STRING
	//	| '-' name=ID ':' title=STRING ',' authors=STRING ',' publisher=STRING ',' date=STRING ',' comment=STRING;
	public PubBibliographyEntryElements getPubBibliographyEntryAccess() {
		return pPubBibliographyEntry;
	}
	
	public ParserRule getPubBibliographyEntryRule() {
		return getPubBibliographyEntryAccess().getRule();
	}
	
	//PubGlossary Glossary:
	//	{Glossary}
	//	'Glossary'
	//	'{'
	//	entries+=PubGlossaryEntry*
	//	'}';
	public PubGlossaryElements getPubGlossaryAccess() {
		return pPubGlossary;
	}
	
	public ParserRule getPubGlossaryRule() {
		return getPubGlossaryAccess().getRule();
	}
	
	//PubGlossaryEntry GlossaryEntry:
	//	'Entry'
	//	'id:' name=ID
	//	'text' text=STRING
	//	'comment:' comment=STRING
	//	| '-' name=ID ':' text=STRING ',' comment=STRING;
	public PubGlossaryEntryElements getPubGlossaryEntryAccess() {
		return pPubGlossaryEntry;
	}
	
	public ParserRule getPubGlossaryEntryRule() {
		return getPubGlossaryEntryAccess().getRule();
	}
	
	//PubIndex Index:
	//	{Index}
	//	'Index'
	//	'{'
	//	entries+=PubIndexEntry*
	//	'}';
	public PubIndexElements getPubIndexAccess() {
		return pPubIndex;
	}
	
	public ParserRule getPubIndexRule() {
		return getPubIndexAccess().getRule();
	}
	
	//PubIndexEntry IndexEntry:
	//	'Entry'
	//	'text' text=STRING
	//	'references:' references+=[Division] (',' references+=[Division])* // VALIDATION -> WARNING if none
	//	| '-' text=STRING ':' references+=[Division] (',' references+=[Division])* // VALIDATION -> WARNING if none
	//;
	public PubIndexEntryElements getPubIndexEntryAccess() {
		return pPubIndexEntry;
	}
	
	public ParserRule getPubIndexEntryRule() {
		return getPubIndexEntryAccess().getRule();
	}
	
	//PubSegmentInclude SegmentInclude:
	//	{SegmentInclude}
	//	'Segment'
	//	'include:' include=[DocumentSegment];
	public PubSegmentIncludeElements getPubSegmentIncludeAccess() {
		return pPubSegmentInclude;
	}
	
	public ParserRule getPubSegmentIncludeRule() {
		return getPubSegmentIncludeAccess().getRule();
	}
	
	//PubPublicationBody PublicationBody:
	//	{PublicationBody}
	//	'Body'
	//	'{'
	//	divisions+=(PubPart | PubAppendix | PubChapter)*
	//	'}';
	public PubPublicationBodyElements getPubPublicationBodyAccess() {
		return pPubPublicationBody;
	}
	
	public ParserRule getPubPublicationBodyRule() {
		return getPubPublicationBodyAccess().getRule();
	}
	
	////
	//// DIVISIONS
	////
	//fragment PubDivisionHeader returns Division:
	//	PubReferenceTargetName?
	//	title=DRichText;
	public PubDivisionHeaderElements getPubDivisionHeaderAccess() {
		return pPubDivisionHeader;
	}
	
	public ParserRule getPubDivisionHeaderRule() {
		return getPubDivisionHeaderAccess().getRule();
	}
	
	//fragment PubDivisionIncludeHeader returns Division:
	//	PubReferenceTargetName?
	//	'include:';
	public PubDivisionIncludeHeaderElements getPubDivisionIncludeHeaderAccess() {
		return pPubDivisionIncludeHeader;
	}
	
	public ParserRule getPubDivisionIncludeHeaderRule() {
		return getPubDivisionIncludeHeaderAccess().getRule();
	}
	
	//PubPart Part:
	//	{Part}
	//	'Part' (PubDivisionHeader
	//	contents+=PubContentBlock*
	//	-> divisions+=PubChapter*
	//	| PubDivisionIncludeHeader
	//	include=[Part|DQualifiedName] ('as' title=DRichText)?);
	public PubPartElements getPubPartAccess() {
		return pPubPart;
	}
	
	public ParserRule getPubPartRule() {
		return getPubPartAccess().getRule();
	}
	
	//PubAppendix Appendix:
	//	'Appendix' (PubDivisionHeader
	//	contents+=PubContentBlock*
	//	-> divisions+=PubChapter*
	//	| PubDivisionIncludeHeader
	//	include=[Appendix|DQualifiedName] ('as' title=DRichText)?);
	public PubAppendixElements getPubAppendixAccess() {
		return pPubAppendix;
	}
	
	public ParserRule getPubAppendixRule() {
		return getPubAppendixAccess().getRule();
	}
	
	//PubChapter Chapter:
	//	'Chapter' (PubDivisionHeader
	//	contents+=PubContentBlock*
	//	divisions+=PubSection*
	//	| PubDivisionIncludeHeader
	//	include=[Chapter|DQualifiedName] ('as' title=DRichText)?);
	public PubChapterElements getPubChapterAccess() {
		return pPubChapter;
	}
	
	public ParserRule getPubChapterRule() {
		return getPubChapterAccess().getRule();
	}
	
	//PubSection Section:
	//	'Section' (PubDivisionHeader
	//	contents+=PubContentBlock*
	//	divisions+=PubSubsection*
	//	| PubDivisionIncludeHeader
	//	include=[Section|DQualifiedName] ('as' title=DRichText)?);
	public PubSectionElements getPubSectionAccess() {
		return pPubSection;
	}
	
	public ParserRule getPubSectionRule() {
		return getPubSectionAccess().getRule();
	}
	
	//PubSubsection Subsection:
	//	('Sub' | 'Subsection') (PubDivisionHeader
	//	contents+=PubContentBlock*
	//	divisions+=PubSubsubsection*
	//	| PubDivisionIncludeHeader
	//	include=[Subsection|DQualifiedName] ('as' title=DRichText)?);
	public PubSubsectionElements getPubSubsectionAccess() {
		return pPubSubsection;
	}
	
	public ParserRule getPubSubsectionRule() {
		return getPubSubsectionAccess().getRule();
	}
	
	//PubSubsubsection Subsubsection:
	//	('Subsub' | 'Subsubsection') (PubDivisionHeader
	//	contents+=PubContentBlock*
	//	| PubDivisionIncludeHeader
	//	include=[Subsubsection|DQualifiedName] ('as' title=DRichText)?);
	public PubSubsubsectionElements getPubSubsubsectionAccess() {
		return pPubSubsubsection;
	}
	
	public ParserRule getPubSubsubsectionRule() {
		return getPubSubsubsectionAccess().getRule();
	}
	
	////
	//// ACTUAL CONTENT
	////
	//PubContentBlock ContentBlock:
	//	PubAdmonition | PubList | PubTable | PubFigure | PubEquation | PubCodeListing | PubRichTextParagraph;
	public PubContentBlockElements getPubContentBlockAccess() {
		return pPubContentBlock;
	}
	
	public ParserRule getPubContentBlockRule() {
		return getPubContentBlockAccess().getRule();
	}
	
	//PubAdmonition Admonition:
	//	'Admonition'
	//	PubReferenceTargetName?
	//	'kind:' kind=PubAdmonitionKind ('title:' title=DRichText)?
	//	'{'
	//	contents+=PubContentBlock*
	//	'}';
	public PubAdmonitionElements getPubAdmonitionAccess() {
		return pPubAdmonition;
	}
	
	public ParserRule getPubAdmonitionRule() {
		return getPubAdmonitionAccess().getRule();
	}
	
	//enum PubAdmonitionKind returns AdmonitionKind:
	//	Note='note' | Tip='tip' | Caution='caution' | Important='important';
	public PubAdmonitionKindElements getPubAdmonitionKindAccess() {
		return ePubAdmonitionKind;
	}
	
	public EnumRule getPubAdmonitionKindRule() {
		return getPubAdmonitionKindAccess().getRule();
	}
	
	//PubList List:
	//	{List}
	//	'List' ('(' '#'? name=ID ')')? ('style:' style=PubListStyle)? ('numbering:' numberingStyle=PubSequenceNumberStyle)? // TODO VALIDATION: mandatory for 'sequence'
	//	'{'
	//	items+=PubListItem*
	//	'}';
	public PubListElements getPubListAccess() {
		return pPubList;
	}
	
	public ParserRule getPubListRule() {
		return getPubListAccess().getRule();
	}
	
	//enum PubListStyle returns ListStyle:
	//	Bullet='bullet' | Sequence='sequence' | Title='title';
	public PubListStyleElements getPubListStyleAccess() {
		return ePubListStyle;
	}
	
	public EnumRule getPubListStyleRule() {
		return getPubListStyleAccess().getRule();
	}
	
	//enum PubSequenceNumberStyle returns proto::ProtoSequenceNumberStyle:
	//	Arabic='arabic' | CapitalLetter='capitalLetter' | SmallLetter='smallLetter' | CapitalRoman='capitalRoman' |
	//	SmallRoman='smallRoman' | None='none';
	public PubSequenceNumberStyleElements getPubSequenceNumberStyleAccess() {
		return ePubSequenceNumberStyle;
	}
	
	public EnumRule getPubSequenceNumberStyleRule() {
		return getPubSequenceNumberStyleAccess().getRule();
	}
	
	//PubListItem ListItem:
	//	{ListItem} ('Item'
	//	PubReferenceTargetName? ('title:' title=DRichText)? ('{' contents+=PubContentBlock* '}'
	//	| -> contents+=PubContentBlock*) | '-' PubReferenceTargetName? contents+=PubParagraphTextOnly);
	public PubListItemElements getPubListItemAccess() {
		return pPubListItem;
	}
	
	public ParserRule getPubListItemRule() {
		return getPubListItemAccess().getRule();
	}
	
	//fragment PubTitledBlockHeader returns TitledBlock:
	//	PubReferenceTargetName?
	//	title=DRichText;
	public PubTitledBlockHeaderElements getPubTitledBlockHeaderAccess() {
		return pPubTitledBlockHeader;
	}
	
	public ParserRule getPubTitledBlockHeaderRule() {
		return getPubTitledBlockHeaderAccess().getRule();
	}
	
	//PubTable TitledTable:
	//	'Table'
	//	PubTitledBlockHeader
	//	'{'
	//	table=AbstractTable
	//	'}';
	public PubTableElements getPubTableAccess() {
		return pPubTable;
	}
	
	public ParserRule getPubTableRule() {
		return getPubTableAccess().getRule();
	}
	
	//AbstractTable:
	//	Table | ProvidedTable;
	public AbstractTableElements getAbstractTableAccess() {
		return pAbstractTable;
	}
	
	public ParserRule getAbstractTableRule() {
		return getAbstractTableAccess().getRule();
	}
	
	//Table:
	//	'columns:' columns=NATURAL ('widthPercent:' widthPercent=NATURAL)?
	//	rows+=PubTableRow*;
	public TableElements getTableAccess() {
		return pTable;
	}
	
	public ParserRule getTableRule() {
		return getTableAccess().getRule();
	}
	
	//PubTableRow TableRow:
	//	{TableRow} (('Row' ('heading:' isHeading?='true' | 'false')?
	//	| isHeading?='Header' 'Row') ('height:' height=NATURAL)? ('{' cells+=PubTableCell* '}'
	//	| cells+=PubTableCell*) | (isHeading?='|||' | '||') cells+=PubTableSimpleCell*);
	public PubTableRowElements getPubTableRowAccess() {
		return pPubTableRow;
	}
	
	public ParserRule getPubTableRowRule() {
		return getPubTableRowAccess().getRule();
	}
	
	//PubTableCell TableCell:
	//	{TableCell}
	//	'Cell' ('width:' width=NATURAL)? ('height:' height=NATURAL)? ('{' contents+=PubContentBlock* '}'
	//	| -> contents+=PubContentBlock*);
	public PubTableCellElements getPubTableCellAccess() {
		return pPubTableCell;
	}
	
	public ParserRule getPubTableCellRule() {
		return getPubTableCellAccess().getRule();
	}
	
	//PubTableSimpleCell TableCell:
	//	{TableCell} contents+=PubParagraphTextOnly '|';
	public PubTableSimpleCellElements getPubTableSimpleCellAccess() {
		return pPubTableSimpleCell;
	}
	
	public ParserRule getPubTableSimpleCellRule() {
		return getPubTableSimpleCellAccess().getRule();
	}
	
	//ProvidedTable:
	//	'root:' diagramRoot=[IDiagramRoot|DQualifiedName]
	//	'table:' renderer=[TableRenderer|DQualifiedName];
	public ProvidedTableElements getProvidedTableAccess() {
		return pProvidedTable;
	}
	
	public ParserRule getProvidedTableRule() {
		return getProvidedTableAccess().getRule();
	}
	
	//PubFigure TitledFigure:
	//	'Figure'
	//	PubTitledBlockHeader
	//	'{'
	//	figure=AbstractFigure
	//	'}';
	public PubFigureElements getPubFigureAccess() {
		return pPubFigure;
	}
	
	public ParserRule getPubFigureRule() {
		return getPubFigureAccess().getRule();
	}
	
	//AbstractFigure:
	//	IncludedFigure | ProvidedFigure;
	public AbstractFigureElements getAbstractFigureAccess() {
		return pAbstractFigure;
	}
	
	public ParserRule getAbstractFigureRule() {
		return getAbstractFigureAccess().getRule();
	}
	
	//IncludedFigure:
	//	'uri:' fileUri=STRING;
	public IncludedFigureElements getIncludedFigureAccess() {
		return pIncludedFigure;
	}
	
	public ParserRule getIncludedFigureRule() {
		return getIncludedFigureAccess().getRule();
	}
	
	//// TODO Validation
	//ProvidedFigure:
	//	'root:' diagramRoot=[IDiagramRoot|DQualifiedName]
	//	'figure:' renderer=[FigureRenderer|DQualifiedName];
	public ProvidedFigureElements getProvidedFigureAccess() {
		return pProvidedFigure;
	}
	
	public ParserRule getProvidedFigureRule() {
		return getProvidedFigureAccess().getRule();
	}
	
	//PubEquation Equation:
	//	'Equation'
	//	PubTitledBlockHeader
	//	'{'
	//	'include' 'uri:' fileUri=STRING // TODO Validation
	//	'}';
	public PubEquationElements getPubEquationAccess() {
		return pPubEquation;
	}
	
	public ParserRule getPubEquationRule() {
		return getPubEquationAccess().getRule();
	}
	
	//PubCodeListing TitledCodeListing:
	//	'CodeListing'
	//	PubTitledBlockHeader (('format:' format=PubCodeLanguage)?
	//	'{'
	//	codeLines+=STRING*
	//	'}'
	//	| 'include' include=[ecore::EObject|DQualifiedName]);
	public PubCodeListingElements getPubCodeListingAccess() {
		return pPubCodeListing;
	}
	
	public ParserRule getPubCodeListingRule() {
		return getPubCodeListingAccess().getRule();
	}
	
	//enum PubCodeLanguage returns CodeLanguage:
	//	Java | JavaScript | HTML | XML;
	public PubCodeLanguageElements getPubCodeLanguageAccess() {
		return ePubCodeLanguage;
	}
	
	public EnumRule getPubCodeLanguageRule() {
		return getPubCodeLanguageAccess().getRule();
	}
	
	//PubRichTextParagraph RichTextParagraph:
	//	('Paragraph' | 'P') style=PubParagraphStyle?
	//	text=DRichText;
	public PubRichTextParagraphElements getPubRichTextParagraphAccess() {
		return pPubRichTextParagraph;
	}
	
	public ParserRule getPubRichTextParagraphRule() {
		return getPubRichTextParagraphAccess().getRule();
	}
	
	//PubParagraphTextOnly RichTextParagraph:
	//	text=DRichText;
	public PubParagraphTextOnlyElements getPubParagraphTextOnlyAccess() {
		return pPubParagraphTextOnly;
	}
	
	public ParserRule getPubParagraphTextOnlyRule() {
		return getPubParagraphTextOnlyAccess().getRule();
	}
	
	//enum PubParagraphStyle returns ParagraphStyle:
	//	Plain='plain' | Quote='quote';
	public PubParagraphStyleElements getPubParagraphStyleAccess() {
		return ePubParagraphStyle;
	}
	
	public EnumRule getPubParagraphStyleRule() {
		return getPubParagraphStyleAccess().getRule();
	}
	
	//@Override
	//DmxPrimaryExpression DExpression:
	//	DmxLiteralExpression | DmxParenthesizedExpression | DmxListExpression | DmxFunctionCall | DmxStaticReference |
	//	DmxContextReference | DmxIfExpression | PubReference;
	public DmxPrimaryExpressionElements getDmxPrimaryExpressionAccess() {
		return pDmxPrimaryExpression;
	}
	
	public ParserRule getDmxPrimaryExpressionRule() {
		return getDmxPrimaryExpressionAccess().getRule();
	}
	
	//PubReference Reference:
	//	'#'
	//	scope=PubReferenceScope?
	//	target=[ReferenceTarget|DQualifiedName];
	public PubReferenceElements getPubReferenceAccess() {
		return pPubReference;
	}
	
	public ParserRule getPubReferenceRule() {
		return getPubReferenceAccess().getRule();
	}
	
	//enum PubReferenceScope returns ReferenceScope:
	//	DocumentSegment='seg' |
	//	Division='div' |
	//	Part='part' |
	//	Appendix='appendix' |
	//	Chapter='chapter' |
	//	Section='section' |
	//	Subsection='sub' |
	//	Subsubsection='subsub' |
	//	Table='table' |
	//	Figure='figure' |
	//	Equation='equation' |
	//	CodeListing='code' |
	//	Admonition='admonition' |
	//	Abbreviation='abbrev' |
	//	Glossary='glossary' |
	//	Bibliography='bilio';
	public PubReferenceScopeElements getPubReferenceScopeAccess() {
		return ePubReferenceScope;
	}
	
	public EnumRule getPubReferenceScopeRule() {
		return getPubReferenceScopeAccess().getRule();
	}
	
	//DNamespace:
	//	'namespace'
	//	name=DQualifiedName
	//	imports+=DImport*
	//	model=DmxModel;
	public DmxGrammarAccess.DNamespaceElements getDNamespaceAccess() {
		return gaDmx.getDNamespaceAccess();
	}
	
	public ParserRule getDNamespaceRule() {
		return getDNamespaceAccess().getRule();
	}
	
	//DmxModel:
	//	{DmxModel} types+=DmxArchetype*
	//	filters+=DmxFilter*
	//	// For unit-testing purposes:
	//	tests+=DmxTest*;
	public DmxGrammarAccess.DmxModelElements getDmxModelAccess() {
		return gaDmx.getDmxModelAccess();
	}
	
	public ParserRule getDmxModelRule() {
		return getDmxModelAccess().getRule();
	}
	
	//DImport:
	//	'import' importedNamespace=DQualifiedNameWithWildcard;
	public DmxGrammarAccess.DImportElements getDImportAccess() {
		return gaDmx.getDImportAccess();
	}
	
	public ParserRule getDImportRule() {
		return getDImportAccess().getRule();
	}
	
	///* 
	// * Testing
	// */ DmxTest:
	//	'test'
	//	name=ID ('context'
	//	context+=DmxTestContext (',' context+=DmxTestContext)*)?
	//	'{'
	//	expr=DExpression
	//	'}';
	public DmxGrammarAccess.DmxTestElements getDmxTestAccess() {
		return gaDmx.getDmxTestAccess();
	}
	
	public ParserRule getDmxTestRule() {
		return getDmxTestAccess().getRule();
	}
	
	//DmxTestContext:
	//	name=ID
	//	':'
	//	type=[DType] multiplicity=DMultiplicity? (':=' (value=DmxLiteralExpression | value=DmxLiteralListExpression))?;
	public DmxGrammarAccess.DmxTestContextElements getDmxTestContextAccess() {
		return gaDmx.getDmxTestContextAccess();
	}
	
	public ParserRule getDmxTestContextRule() {
		return getDmxTestContextAccess().getRule();
	}
	
	//enum DmxBaseType:
	//	VOID | BOOLEAN | NUMBER | TEXT | IDENTIFIER | TIMEPOINT | STATE /*transition*/ | STATE_EVENT | COMPLEX | NOTIFICATION
	//	/*sent* */ | SERVICE /*invoked* */;
	public DmxGrammarAccess.DmxBaseTypeElements getDmxBaseTypeAccess() {
		return gaDmx.getDmxBaseTypeAccess();
	}
	
	public EnumRule getDmxBaseTypeRule() {
		return getDmxBaseTypeAccess().getRule();
	}
	
	//DmxBaseTypeSet:
	//	name=ID
	//	'in'
	//	'(' members+=DmxBaseType (',' members+=DmxBaseType)+ ')';
	public DmxGrammarAccess.DmxBaseTypeSetElements getDmxBaseTypeSetAccess() {
		return gaDmx.getDmxBaseTypeSetAccess();
	}
	
	public ParserRule getDmxBaseTypeSetRule() {
		return getDmxBaseTypeSetAccess().getRule();
	}
	
	//DmxArchetype:
	//	'archetype'
	//	name=ID
	//	'is'
	//	baseType=DmxBaseType
	//	description=DRichText?;
	public DmxGrammarAccess.DmxArchetypeElements getDmxArchetypeAccess() {
		return gaDmx.getDmxArchetypeAccess();
	}
	
	public ParserRule getDmxArchetypeRule() {
		return getDmxArchetypeAccess().getRule();
	}
	
	//DmxFilter:
	//	'filter'
	//	name=ID
	//	'(' (parameters+=DmxFilterParameter (',' parameters+=DmxFilterParameter)*)? ')'
	//	':'
	//	typeDesc=DmxFilterTypeDescriptor ('with' withTypeSet=DmxBaseTypeSet)?;
	public DmxGrammarAccess.DmxFilterElements getDmxFilterAccess() {
		return gaDmx.getDmxFilterAccess();
	}
	
	public ParserRule getDmxFilterRule() {
		return getDmxFilterAccess().getRule();
	}
	
	//DmxFilterTypeDescriptor:
	//	(single=DmxBaseType
	//	| multiple=[DmxBaseTypeSet]) collection?='*'?;
	public DmxGrammarAccess.DmxFilterTypeDescriptorElements getDmxFilterTypeDescriptorAccess() {
		return gaDmx.getDmxFilterTypeDescriptorAccess();
	}
	
	public ParserRule getDmxFilterTypeDescriptorRule() {
		return getDmxFilterTypeDescriptorAccess().getRule();
	}
	
	//DmxFilterParameter:
	//	name=ID
	//	':'
	//	typeDesc=DmxFilterTypeDescriptor;
	public DmxGrammarAccess.DmxFilterParameterElements getDmxFilterParameterAccess() {
		return gaDmx.getDmxFilterParameterAccess();
	}
	
	public ParserRule getDmxFilterParameterRule() {
		return getDmxFilterParameterAccess().getRule();
	}
	
	///*
	// * Expressions
	// */ DExpression:
	//	DmxAssignment | DmxPredicateWithCorrelationVariable | DRichText;
	public DmxGrammarAccess.DExpressionElements getDExpressionAccess() {
		return gaDmx.getDExpressionAccess();
	}
	
	public ParserRule getDExpressionRule() {
		return getDExpressionAccess().getRule();
	}
	
	//DRichText:
	//	segments+=DmxTextOnly
	//	| segments+=DmxTextStart
	//	segments+=DExpression (segments+=DmxTextMiddle segments+=DExpression)*
	//	segments+=DmxTextEnd;
	public DmxGrammarAccess.DRichTextElements getDRichTextAccess() {
		return gaDmx.getDRichTextAccess();
	}
	
	public ParserRule getDRichTextRule() {
		return getDRichTextAccess().getRule();
	}
	
	//DmxTextOnly DTextSegment:
	//	value=PLAIN_TEXT_ONLY;
	public DmxGrammarAccess.DmxTextOnlyElements getDmxTextOnlyAccess() {
		return gaDmx.getDmxTextOnlyAccess();
	}
	
	public ParserRule getDmxTextOnlyRule() {
		return getDmxTextOnlyAccess().getRule();
	}
	
	//DmxTextStart DTextSegment:
	//	value=RICH_TEXT_START;
	public DmxGrammarAccess.DmxTextStartElements getDmxTextStartAccess() {
		return gaDmx.getDmxTextStartAccess();
	}
	
	public ParserRule getDmxTextStartRule() {
		return getDmxTextStartAccess().getRule();
	}
	
	//DmxTextMiddle DTextSegment:
	//	value=RICH_TEXT_MIDDLE;
	public DmxGrammarAccess.DmxTextMiddleElements getDmxTextMiddleAccess() {
		return gaDmx.getDmxTextMiddleAccess();
	}
	
	public ParserRule getDmxTextMiddleRule() {
		return getDmxTextMiddleAccess().getRule();
	}
	
	//DmxTextEnd DTextSegment:
	//	value=RICH_TEXT_END;
	public DmxGrammarAccess.DmxTextEndElements getDmxTextEndAccess() {
		return gaDmx.getDmxTextEndAccess();
	}
	
	public ParserRule getDmxTextEndRule() {
		return getDmxTextEndAccess().getRule();
	}
	
	//DmxNavigableMemberReference DExpression:
	//	super::DmxPrimaryExpression (=> ({DmxAssignment.precedingNavigationSegment=current} '.'
	//	assignToMember=[DNavigableMember] DmxOpSingleAssign) value=DmxOrExpression
	//	| => ({DmxMemberNavigation.precedingNavigationSegment=current} '.') member=[DNavigableMember] (=>
	//	explicitOperationCall?='(' // => boolean => has 0.n explicit arguments
	//	callArguments=DmxCallArguments
	//	')'
	//	| before?="@before")?)*;
	public DmxGrammarAccess.DmxNavigableMemberReferenceElements getDmxNavigableMemberReferenceAccess() {
		return gaDmx.getDmxNavigableMemberReferenceAccess();
	}
	
	public ParserRule getDmxNavigableMemberReferenceRule() {
		return getDmxNavigableMemberReferenceAccess().getRule();
	}
	
	//DmxCallArguments:
	//	{DmxCallArguments} (arguments+=DmxPredicateWithCorrelationVariable (','
	//	arguments+=DmxPredicateWithCorrelationVariable)*)?;
	public DmxGrammarAccess.DmxCallArgumentsElements getDmxCallArgumentsAccess() {
		return gaDmx.getDmxCallArgumentsAccess();
	}
	
	public ParserRule getDmxCallArgumentsRule() {
		return getDmxCallArgumentsAccess().getRule();
	}
	
	//DmxAssignment DExpression:
	//	{DmxAssignment} assignToMember=[DNavigableMember] DmxOpSingleAssign value=DmxOrExpression;
	public DmxGrammarAccess.DmxAssignmentElements getDmxAssignmentAccess() {
		return gaDmx.getDmxAssignmentAccess();
	}
	
	public ParserRule getDmxAssignmentRule() {
		return getDmxAssignmentAccess().getRule();
	}
	
	//DmxOpSingleAssign:
	//	':=';
	public DmxGrammarAccess.DmxOpSingleAssignElements getDmxOpSingleAssignAccess() {
		return gaDmx.getDmxOpSingleAssignAccess();
	}
	
	public ParserRule getDmxOpSingleAssignRule() {
		return getDmxOpSingleAssignAccess().getRule();
	}
	
	//DmxPredicateWithCorrelationVariable DExpression:
	//	{DmxPredicateWithCorrelationVariable} correlationVariable=DmxCorrelationVariable
	//	'|'
	//	predicate=DmxOrExpression
	//	| DmxOrExpression;
	public DmxGrammarAccess.DmxPredicateWithCorrelationVariableElements getDmxPredicateWithCorrelationVariableAccess() {
		return gaDmx.getDmxPredicateWithCorrelationVariableAccess();
	}
	
	public ParserRule getDmxPredicateWithCorrelationVariableRule() {
		return getDmxPredicateWithCorrelationVariableAccess().getRule();
	}
	
	//DmxCorrelationVariable:
	//	name=ID;
	public DmxGrammarAccess.DmxCorrelationVariableElements getDmxCorrelationVariableAccess() {
		return gaDmx.getDmxCorrelationVariableAccess();
	}
	
	public ParserRule getDmxCorrelationVariableRule() {
		return getDmxCorrelationVariableAccess().getRule();
	}
	
	////	(':' type=[DType])? => type is always NULL!
	//DmxOrExpression DExpression:
	//	DmxAndExpression (=> ({DmxBinaryOperation.leftOperand=current} operator=DmxOpOr) rightOperand=DmxAndExpression)*;
	public DmxGrammarAccess.DmxOrExpressionElements getDmxOrExpressionAccess() {
		return gaDmx.getDmxOrExpressionAccess();
	}
	
	public ParserRule getDmxOrExpressionRule() {
		return getDmxOrExpressionAccess().getRule();
	}
	
	//enum DmxOpOr returns DmxBinaryOperator:
	//	OR | OR='or' | XOR | XOR='xor';
	public DmxGrammarAccess.DmxOpOrElements getDmxOpOrAccess() {
		return gaDmx.getDmxOpOrAccess();
	}
	
	public EnumRule getDmxOpOrRule() {
		return getDmxOpOrAccess().getRule();
	}
	
	//DmxAndExpression DExpression:
	//	DmxEqualityExpression (=> ({DmxBinaryOperation.leftOperand=current} operator=DmxOpAnd)
	//	rightOperand=DmxEqualityExpression)*;
	public DmxGrammarAccess.DmxAndExpressionElements getDmxAndExpressionAccess() {
		return gaDmx.getDmxAndExpressionAccess();
	}
	
	public ParserRule getDmxAndExpressionRule() {
		return getDmxAndExpressionAccess().getRule();
	}
	
	//enum DmxOpAnd returns DmxBinaryOperator:
	//	AND | AND='and';
	public DmxGrammarAccess.DmxOpAndElements getDmxOpAndAccess() {
		return gaDmx.getDmxOpAndAccess();
	}
	
	public EnumRule getDmxOpAndRule() {
		return getDmxOpAndAccess().getRule();
	}
	
	//DmxEqualityExpression DExpression:
	//	DmxRelationalExpression (=> ({DmxBinaryOperation.leftOperand=current} operator=DmxOpEquality)
	//	rightOperand=DmxRelationalExpression)*;
	public DmxGrammarAccess.DmxEqualityExpressionElements getDmxEqualityExpressionAccess() {
		return gaDmx.getDmxEqualityExpressionAccess();
	}
	
	public ParserRule getDmxEqualityExpressionRule() {
		return getDmxEqualityExpressionAccess().getRule();
	}
	
	//enum DmxOpEquality returns DmxBinaryOperator:
	//	EQUAL='=' | NOT_EQUAL='!=' | NOT_EQUAL='<>';
	public DmxGrammarAccess.DmxOpEqualityElements getDmxOpEqualityAccess() {
		return gaDmx.getDmxOpEqualityAccess();
	}
	
	public EnumRule getDmxOpEqualityRule() {
		return getDmxOpEqualityAccess().getRule();
	}
	
	//DmxRelationalExpression DExpression:
	//	DmxOtherOperatorExpression (=> ({DmxInstanceOfExpression.expression=current} DmxOpInstanceOf) type=[DType] | =>
	//	({DmxBinaryOperation.leftOperand=current} operator=OpCompare) rightOperand=DmxOtherOperatorExpression)*;
	public DmxGrammarAccess.DmxRelationalExpressionElements getDmxRelationalExpressionAccess() {
		return gaDmx.getDmxRelationalExpressionAccess();
	}
	
	public ParserRule getDmxRelationalExpressionRule() {
		return getDmxRelationalExpressionAccess().getRule();
	}
	
	//DmxOpInstanceOf:
	//	'ISA' | 'isa';
	public DmxGrammarAccess.DmxOpInstanceOfElements getDmxOpInstanceOfAccess() {
		return gaDmx.getDmxOpInstanceOfAccess();
	}
	
	public ParserRule getDmxOpInstanceOfRule() {
		return getDmxOpInstanceOfAccess().getRule();
	}
	
	//enum OpCompare returns DmxBinaryOperator:
	//	LESS='<' | LESS_OR_EQUAL='<=' | LESS_OR_EQUAL='≤' | GREATER_OR_EQUAL='>=' | GREATER_OR_EQUAL='≥' | GREATER='>';
	public DmxGrammarAccess.OpCompareElements getOpCompareAccess() {
		return gaDmx.getOpCompareAccess();
	}
	
	public EnumRule getOpCompareRule() {
		return getOpCompareAccess().getRule();
	}
	
	//DmxOtherOperatorExpression DExpression:
	//	DmxAdditiveExpression (=> ({DmxBinaryOperation.leftOperand=current} operator=OpOther)
	//	rightOperand=DmxAdditiveExpression)*;
	public DmxGrammarAccess.DmxOtherOperatorExpressionElements getDmxOtherOperatorExpressionAccess() {
		return gaDmx.getDmxOtherOperatorExpressionAccess();
	}
	
	public ParserRule getDmxOtherOperatorExpressionRule() {
		return getDmxOtherOperatorExpressionAccess().getRule();
	}
	
	//enum OpOther returns DmxBinaryOperator:
	//	IN | IN='in' | UNTIL='..' | SINGLE_ARROW='->' | DOUBLE_ARROW='=>';
	public DmxGrammarAccess.OpOtherElements getOpOtherAccess() {
		return gaDmx.getOpOtherAccess();
	}
	
	public EnumRule getOpOtherRule() {
		return getOpOtherAccess().getRule();
	}
	
	//DmxAdditiveExpression DExpression:
	//	DmxMultiplicativeExpression (=> ({DmxBinaryOperation.leftOperand=current} operator=OpAdd)
	//	rightOperand=DmxMultiplicativeExpression)*;
	public DmxGrammarAccess.DmxAdditiveExpressionElements getDmxAdditiveExpressionAccess() {
		return gaDmx.getDmxAdditiveExpressionAccess();
	}
	
	public ParserRule getDmxAdditiveExpressionRule() {
		return getDmxAdditiveExpressionAccess().getRule();
	}
	
	//enum OpAdd returns DmxBinaryOperator:
	//	ADD='+' | SUBTRACT='-';
	public DmxGrammarAccess.OpAddElements getOpAddAccess() {
		return gaDmx.getOpAddAccess();
	}
	
	public EnumRule getOpAddRule() {
		return getOpAddAccess().getRule();
	}
	
	//DmxMultiplicativeExpression DExpression:
	//	DmxUnaryOperation (=> ({DmxBinaryOperation.leftOperand=current} operator=OpMulti) rightOperand=DmxUnaryOperation)*;
	public DmxGrammarAccess.DmxMultiplicativeExpressionElements getDmxMultiplicativeExpressionAccess() {
		return gaDmx.getDmxMultiplicativeExpressionAccess();
	}
	
	public ParserRule getDmxMultiplicativeExpressionRule() {
		return getDmxMultiplicativeExpressionAccess().getRule();
	}
	
	//enum OpMulti returns DmxBinaryOperator:
	//	MULTIPLY='*' | DIVIDE='/' | POWER='**' | MODULO='%';
	public DmxGrammarAccess.OpMultiElements getOpMultiAccess() {
		return gaDmx.getOpMultiAccess();
	}
	
	public EnumRule getOpMultiRule() {
		return getOpMultiAccess().getRule();
	}
	
	//DmxUnaryOperation DExpression:
	//	{DmxUnaryOperation} operator=OpUnary operand=DmxUnaryOperation
	//	| DmxCastExpression;
	public DmxGrammarAccess.DmxUnaryOperationElements getDmxUnaryOperationAccess() {
		return gaDmx.getDmxUnaryOperationAccess();
	}
	
	public ParserRule getDmxUnaryOperationRule() {
		return getDmxUnaryOperationAccess().getRule();
	}
	
	//enum OpUnary returns DmxUnaryOperator:
	//	PLUS='+' | MINUS='-' | NOT='!' | NOT | NOT='not';
	public DmxGrammarAccess.OpUnaryElements getOpUnaryAccess() {
		return gaDmx.getOpUnaryAccess();
	}
	
	public EnumRule getOpUnaryRule() {
		return getOpUnaryAccess().getRule();
	}
	
	//DmxCastExpression DExpression:
	//	DmxNavigableMemberReference (=> ({DmxCastExpression.target=current} DmxOpCast) type=[DType])?;
	public DmxGrammarAccess.DmxCastExpressionElements getDmxCastExpressionAccess() {
		return gaDmx.getDmxCastExpressionAccess();
	}
	
	public ParserRule getDmxCastExpressionRule() {
		return getDmxCastExpressionAccess().getRule();
	}
	
	//DmxOpCast:
	//	'AS' | 'as';
	public DmxGrammarAccess.DmxOpCastElements getDmxOpCastAccess() {
		return gaDmx.getDmxOpCastAccess();
	}
	
	public ParserRule getDmxOpCastRule() {
		return getDmxOpCastAccess().getRule();
	}
	
	//DmxLiteralExpression DExpression:
	//	DmxBooleanLiteral | DmxStringLiteral | DmxNaturalLiteral | DmxDecimalLiteral | DmxUndefinedLiteral | DmxEntity |
	//	DmxDetail;
	public DmxGrammarAccess.DmxLiteralExpressionElements getDmxLiteralExpressionAccess() {
		return gaDmx.getDmxLiteralExpressionAccess();
	}
	
	public ParserRule getDmxLiteralExpressionRule() {
		return getDmxLiteralExpressionAccess().getRule();
	}
	
	//DmxParenthesizedExpression DExpression:
	//	'(' DExpression ')';
	public DmxGrammarAccess.DmxParenthesizedExpressionElements getDmxParenthesizedExpressionAccess() {
		return gaDmx.getDmxParenthesizedExpressionAccess();
	}
	
	public ParserRule getDmxParenthesizedExpressionRule() {
		return getDmxParenthesizedExpressionAccess().getRule();
	}
	
	//DmxListExpression DExpression:
	//	{DmxListExpression}
	//	'{' (elements+=DExpression (',' elements+=DExpression)*)?
	//	'}';
	public DmxGrammarAccess.DmxListExpressionElements getDmxListExpressionAccess() {
		return gaDmx.getDmxListExpressionAccess();
	}
	
	public ParserRule getDmxListExpressionRule() {
		return getDmxListExpressionAccess().getRule();
	}
	
	//DmxLiteralListExpression DExpression:
	//	{DmxListExpression}
	//	'{' (elements+=DmxLiteralExpression (',' elements+=DmxLiteralExpression)*)?
	//	'}';
	public DmxGrammarAccess.DmxLiteralListExpressionElements getDmxLiteralListExpressionAccess() {
		return gaDmx.getDmxLiteralListExpressionAccess();
	}
	
	public ParserRule getDmxLiteralListExpressionRule() {
		return getDmxLiteralListExpressionAccess().getRule();
	}
	
	//DmxFunctionCall DExpression:
	//	{DmxFunctionCall} function=[DmxFilter]
	//	'('
	//	callArguments=DmxFunctionCallArguments
	//	')';
	public DmxGrammarAccess.DmxFunctionCallElements getDmxFunctionCallAccess() {
		return gaDmx.getDmxFunctionCallAccess();
	}
	
	public ParserRule getDmxFunctionCallRule() {
		return getDmxFunctionCallAccess().getRule();
	}
	
	//DmxFunctionCallArguments DmxCallArguments:
	//	{DmxCallArguments} (arguments+=DExpression (',' arguments+=DExpression)*)?;
	public DmxGrammarAccess.DmxFunctionCallArgumentsElements getDmxFunctionCallArgumentsAccess() {
		return gaDmx.getDmxFunctionCallArgumentsAccess();
	}
	
	public ParserRule getDmxFunctionCallArgumentsRule() {
		return getDmxFunctionCallArgumentsAccess().getRule();
	}
	
	//DmxEntity:
	//	'entity'
	//	DmxComplexObject;
	public DmxGrammarAccess.DmxEntityElements getDmxEntityAccess() {
		return gaDmx.getDmxEntityAccess();
	}
	
	public ParserRule getDmxEntityRule() {
		return getDmxEntityAccess().getRule();
	}
	
	//DmxDetail:
	//	'detail'
	//	DmxComplexObject;
	public DmxGrammarAccess.DmxDetailElements getDmxDetailAccess() {
		return gaDmx.getDmxDetailAccess();
	}
	
	public ParserRule getDmxDetailRule() {
		return getDmxDetailAccess().getRule();
	}
	
	//fragment DmxComplexObject:
	//	type=[DComplexType] DomFieldListStartSymbol
	//	fields+=DmxField*
	//	'}';
	public DmxGrammarAccess.DmxComplexObjectElements getDmxComplexObjectAccess() {
		return gaDmx.getDmxComplexObjectAccess();
	}
	
	public ParserRule getDmxComplexObjectRule() {
		return getDmxComplexObjectAccess().getRule();
	}
	
	//DmxField:
	//	feature=[DFeature] "=" value=DExpression;
	public DmxGrammarAccess.DmxFieldElements getDmxFieldAccess() {
		return gaDmx.getDmxFieldAccess();
	}
	
	public ParserRule getDmxFieldRule() {
		return getDmxFieldAccess().getRule();
	}
	
	//DmxStaticReference DExpression:
	//	{DmxStaticReference}
	//	'['
	//	target=[IStaticReferenceTarget|DQualifiedName] ('#' member=[DNavigableMember])? ("|" (displayName=ID | plural?="*"))?
	//	-> ']';
	public DmxGrammarAccess.DmxStaticReferenceElements getDmxStaticReferenceAccess() {
		return gaDmx.getDmxStaticReferenceAccess();
	}
	
	public ParserRule getDmxStaticReferenceRule() {
		return getDmxStaticReferenceAccess().getRule();
	}
	
	//// '->' gives precedence to this ']' over PLAIN_TEXT_MIDDLE ('=>' works too but generates more lookahead overhead)
	//DmxContextReference DExpression:
	//	{DmxContextReference} target=[DNamedElement] (before?="@before"
	//	| '.' all?='all')?;
	public DmxGrammarAccess.DmxContextReferenceElements getDmxContextReferenceAccess() {
		return gaDmx.getDmxContextReferenceAccess();
	}
	
	public ParserRule getDmxContextReferenceRule() {
		return getDmxContextReferenceAccess().getRule();
	}
	
	//DmxIfExpression DExpression:
	//	{DmxIfExpression}
	//	'if' if=DExpression
	//	'then' then=DExpression (=> 'else' else=DExpression)?
	//	'end';
	public DmxGrammarAccess.DmxIfExpressionElements getDmxIfExpressionAccess() {
		return gaDmx.getDmxIfExpressionAccess();
	}
	
	public ParserRule getDmxIfExpressionRule() {
		return getDmxIfExpressionAccess().getRule();
	}
	
	//DMultiplicity:
	//	shorthand=DMultiplicityShorthand | '(' minOccurs=NATURAL '..' maxOccurs=MULTIPLICITY ')';
	public DmxGrammarAccess.DMultiplicityElements getDMultiplicityAccess() {
		return gaDmx.getDMultiplicityAccess();
	}
	
	public ParserRule getDMultiplicityRule() {
		return getDMultiplicityAccess().getRule();
	}
	
	//enum DMultiplicityShorthand:
	//	ZERO_OR_ONE='?' | ONE_OR_MORE='+' | ZERO_OR_MORE='*';
	public DmxGrammarAccess.DMultiplicityShorthandElements getDMultiplicityShorthandAccess() {
		return gaDmx.getDMultiplicityShorthandAccess();
	}
	
	public EnumRule getDMultiplicityShorthandRule() {
		return getDMultiplicityShorthandAccess().getRule();
	}
	
	//MULTIPLICITY ecore::EInt:
	//	NATURAL | '*';
	public DmxGrammarAccess.MULTIPLICITYElements getMULTIPLICITYAccess() {
		return gaDmx.getMULTIPLICITYAccess();
	}
	
	public ParserRule getMULTIPLICITYRule() {
		return getMULTIPLICITYAccess().getRule();
	}
	
	//DmxBooleanLiteral DExpression:
	//	{DmxBooleanLiteral} (value?='TRUE' | value?='true' | 'FALSE' | 'false');
	public DmxGrammarAccess.DmxBooleanLiteralElements getDmxBooleanLiteralAccess() {
		return gaDmx.getDmxBooleanLiteralAccess();
	}
	
	public ParserRule getDmxBooleanLiteralRule() {
		return getDmxBooleanLiteralAccess().getRule();
	}
	
	//DmxNaturalLiteral DExpression:
	//	{DmxNaturalLiteral} value=NATURAL;
	public DmxGrammarAccess.DmxNaturalLiteralElements getDmxNaturalLiteralAccess() {
		return gaDmx.getDmxNaturalLiteralAccess();
	}
	
	public ParserRule getDmxNaturalLiteralRule() {
		return getDmxNaturalLiteralAccess().getRule();
	}
	
	//DmxDecimalLiteral DExpression:
	//	{DmxDecimalLiteral} value=DECIMAL;
	public DmxGrammarAccess.DmxDecimalLiteralElements getDmxDecimalLiteralAccess() {
		return gaDmx.getDmxDecimalLiteralAccess();
	}
	
	public ParserRule getDmxDecimalLiteralRule() {
		return getDmxDecimalLiteralAccess().getRule();
	}
	
	//DmxStringLiteral DExpression:
	//	{DmxStringLiteral} value=STRING;
	public DmxGrammarAccess.DmxStringLiteralElements getDmxStringLiteralAccess() {
		return gaDmx.getDmxStringLiteralAccess();
	}
	
	public ParserRule getDmxStringLiteralRule() {
		return getDmxStringLiteralAccess().getRule();
	}
	
	//DmxUndefinedLiteral DExpression:
	//	{DmxUndefinedLiteral} ('UNDEFINED' | 'undefined');
	public DmxGrammarAccess.DmxUndefinedLiteralElements getDmxUndefinedLiteralAccess() {
		return gaDmx.getDmxUndefinedLiteralAccess();
	}
	
	public ParserRule getDmxUndefinedLiteralRule() {
		return getDmxUndefinedLiteralAccess().getRule();
	}
	
	//DECIMAL:
	//	NATURAL '.' NATURAL (('E' | 'e') ('+' | '-')? NATURAL)?;
	public DmxGrammarAccess.DECIMALElements getDECIMALAccess() {
		return gaDmx.getDECIMALAccess();
	}
	
	public ParserRule getDECIMALRule() {
		return getDECIMALAccess().getRule();
	}
	
	//DomFieldListStartSymbol:
	//	'{';
	public DmxGrammarAccess.DomFieldListStartSymbolElements getDomFieldListStartSymbolAccess() {
		return gaDmx.getDomFieldListStartSymbolAccess();
	}
	
	public ParserRule getDomFieldListStartSymbolRule() {
		return getDomFieldListStartSymbolAccess().getRule();
	}
	
	//DQualifiedNameWithWildcard:
	//	DQualifiedName '.*'?;
	public DmxGrammarAccess.DQualifiedNameWithWildcardElements getDQualifiedNameWithWildcardAccess() {
		return gaDmx.getDQualifiedNameWithWildcardAccess();
	}
	
	public ParserRule getDQualifiedNameWithWildcardRule() {
		return getDQualifiedNameWithWildcardAccess().getRule();
	}
	
	//DQualifiedName:
	//	ID ('.' ID)*;
	public DmxGrammarAccess.DQualifiedNameElements getDQualifiedNameAccess() {
		return gaDmx.getDQualifiedNameAccess();
	}
	
	public ParserRule getDQualifiedNameRule() {
		return getDQualifiedNameAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? (LETTER | '_') (LETTER | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaDmx.getIDRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"';
	public TerminalRule getSTRINGRule() {
		return gaDmx.getSTRINGRule();
	}
	
	//terminal NATURAL returns ecore::EInt:
	//	'0'..'9'+ | '∞';
	public TerminalRule getNATURALRule() {
		return gaDmx.getNATURALRule();
	}
	
	//terminal fragment LETTER:
	//	'a'..'z' | 'A'..'Z' | '\\u00c0'..'\\u00d6' | '\\u00d8'..'\\u00f6' | '\\u00f8'..'\\u00ff';
	public TerminalRule getLETTERRule() {
		return gaDmx.getLETTERRule();
	}
	
	//terminal fragment PLAIN_TEXT:
	//	!('»' | ']' | '[');
	public TerminalRule getPLAIN_TEXTRule() {
		return gaDmx.getPLAIN_TEXTRule();
	}
	
	//terminal PLAIN_TEXT_ONLY:
	//	'«' PLAIN_TEXT* '»';
	public TerminalRule getPLAIN_TEXT_ONLYRule() {
		return gaDmx.getPLAIN_TEXT_ONLYRule();
	}
	
	//terminal RICH_TEXT_START:
	//	'«' PLAIN_TEXT* '[';
	public TerminalRule getRICH_TEXT_STARTRule() {
		return gaDmx.getRICH_TEXT_STARTRule();
	}
	
	//terminal RICH_TEXT_MIDDLE:
	//	']' PLAIN_TEXT* '[';
	public TerminalRule getRICH_TEXT_MIDDLERule() {
		return gaDmx.getRICH_TEXT_MIDDLERule();
	}
	
	//terminal RICH_TEXT_END:
	//	']' PLAIN_TEXT* '»';
	public TerminalRule getRICH_TEXT_ENDRule() {
		return gaDmx.getRICH_TEXT_ENDRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaDmx.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaDmx.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaDmx.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaDmx.getANY_OTHERRule();
	}
}
