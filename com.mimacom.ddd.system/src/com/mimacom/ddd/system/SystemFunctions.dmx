namespace dm.filters

filter exists(collection : T*, predicate: BOOLEAN): BOOLEAN 	with T in (NUMBER, TEXT, TIMEPOINT, COMPLEX)
filter unique(collection : T*, predicate: BOOLEAN): BOOLEAN 	with T in (NUMBER, TEXT, TIMEPOINT, COMPLEX)  // like exists but returns true only if there is exactly 1 result
filter select(collection : T*, predicate: BOOLEAN): T* 			with T in (NUMBER, TEXT, TIMEPOINT, COMPLEX)
filter one   (collection : T*, predicate: BOOLEAN): T 			with T in (NUMBER, TEXT, TIMEPOINT, COMPLEX)	// like select but returns exactly 1 result
filter reject(collection : T*, predicate: BOOLEAN): T* 			with T in (NUMBER, TEXT, TIMEPOINT, COMPLEX)

filter count(list : T*): NUMBER 			with T in (NUMBER, TEXT, TIMEPOINT, COMPLEX)
filter first(list : T*): T 					with T in (NUMBER, TEXT, TIMEPOINT, COMPLEX)
filter last (list : T*): T 					with T in (NUMBER, TEXT, TIMEPOINT, COMPLEX)
filter get  (list : T*, index: NUMBER): T 	with T in (NUMBER, TEXT, TIMEPOINT, COMPLEX)

filter min(collection : T*): T 				with T in (NUMBER, TIMEPOINT)
filter max(collection : T*): T 				with T in (NUMBER, TIMEPOINT)
filter sum(collection : NUMBER*): NUMBER 
filter avg(collection : NUMBER*): NUMBER 

filter length(arg : TEXT): NUMBER
filter now(): TIMEPOINT

filter delivered(arg : NOTIFICATION): BOOLEAN  // always returns true
filter invoked(arg : SERVICE): BOOLEAN  		// always returns true
