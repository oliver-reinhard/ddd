/*
 * generated by Xtext 2.17.1
 */
package com.mimacom.ddd.dm.dim.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import com.mimacom.ddd.dm.dim.ide.contentassist.antlr.internal.InternalDimParser;
import com.mimacom.ddd.dm.dim.services.DimGrammarAccess;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class DimParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(DimGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, DimGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getDDomainAccess().getAlternatives_5(), "rule__DDomain__Alternatives_5");
			builder.put(grammarAccess.getDTypeAccess().getAlternatives(), "rule__DType__Alternatives");
			builder.put(grammarAccess.getDComplexTypeAccess().getAlternatives_5(), "rule__DComplexType__Alternatives_5");
			builder.put(grammarAccess.getDFeatureAccess().getAlternatives(), "rule__DFeature__Alternatives");
			builder.put(grammarAccess.getDAssociationAccess().getAlternatives_1(), "rule__DAssociation__Alternatives_1");
			builder.put(grammarAccess.getDExistingApplicationAccess().getAlternatives_4(), "rule__DExistingApplication__Alternatives_4");
			builder.put(grammarAccess.getDExpressionAccess().getAlternatives(), "rule__DExpression__Alternatives");
			builder.put(grammarAccess.getDRichTextAccess().getAlternatives(), "rule__DRichText__Alternatives");
			builder.put(grammarAccess.getDAssignmentAccess().getAlternatives(), "rule__DAssignment__Alternatives");
			builder.put(grammarAccess.getDRelationalExpressionAccess().getAlternatives_1(), "rule__DRelationalExpression__Alternatives_1");
			builder.put(grammarAccess.getOpInstanceOfAccess().getAlternatives(), "rule__OpInstanceOf__Alternatives");
			builder.put(grammarAccess.getDUnaryOperationAccess().getAlternatives(), "rule__DUnaryOperation__Alternatives");
			builder.put(grammarAccess.getOpCastAccess().getAlternatives(), "rule__OpCast__Alternatives");
			builder.put(grammarAccess.getDNavigableMemberReferenceAccess().getAlternatives_1(), "rule__DNavigableMemberReference__Alternatives_1");
			builder.put(grammarAccess.getDNavigableMemberReferenceAccess().getAlternatives_1_1_2(), "rule__DNavigableMemberReference__Alternatives_1_1_2");
			builder.put(grammarAccess.getDPrimaryExpressionAccess().getAlternatives(), "rule__DPrimaryExpression__Alternatives");
			builder.put(grammarAccess.getDLiteralExpressionAccess().getAlternatives(), "rule__DLiteralExpression__Alternatives");
			builder.put(grammarAccess.getDSelfExpressionAccess().getAlternatives_1(), "rule__DSelfExpression__Alternatives_1");
			builder.put(grammarAccess.getDReturnExpressionAccess().getAlternatives_1(), "rule__DReturnExpression__Alternatives_1");
			builder.put(grammarAccess.getDRaiseExpressionAccess().getAlternatives_1(), "rule__DRaiseExpression__Alternatives_1");
			builder.put(grammarAccess.getOpConstructorAccess().getAlternatives(), "rule__OpConstructor__Alternatives");
			builder.put(grammarAccess.getDContextReferenceAccess().getAlternatives_1(), "rule__DContextReference__Alternatives_1");
			builder.put(grammarAccess.getDContextReferenceAccess().getAlternatives_1_1_3_1(), "rule__DContextReference__Alternatives_1_1_3_1");
			builder.put(grammarAccess.getMULTIPLICITYAccess().getAlternatives(), "rule__MULTIPLICITY__Alternatives");
			builder.put(grammarAccess.getDBooleanLiteralAccess().getAlternatives_1(), "rule__DBooleanLiteral__Alternatives_1");
			builder.put(grammarAccess.getDNilLiteralAccess().getAlternatives_1(), "rule__DNilLiteral__Alternatives_1");
			builder.put(grammarAccess.getDECIMALAccess().getAlternatives_3_0(), "rule__DECIMAL__Alternatives_3_0");
			builder.put(grammarAccess.getDECIMALAccess().getAlternatives_3_1(), "rule__DECIMAL__Alternatives_3_1");
			builder.put(grammarAccess.getDAssociationKindAccess().getAlternatives(), "rule__DAssociationKind__Alternatives");
			builder.put(grammarAccess.getDServiceKindAccess().getAlternatives(), "rule__DServiceKind__Alternatives");
			builder.put(grammarAccess.getDDirectionAccess().getAlternatives(), "rule__DDirection__Alternatives");
			builder.put(grammarAccess.getOpOrAccess().getAlternatives(), "rule__OpOr__Alternatives");
			builder.put(grammarAccess.getOpAndAccess().getAlternatives(), "rule__OpAnd__Alternatives");
			builder.put(grammarAccess.getOpEqualityAccess().getAlternatives(), "rule__OpEquality__Alternatives");
			builder.put(grammarAccess.getOpCompareAccess().getAlternatives(), "rule__OpCompare__Alternatives");
			builder.put(grammarAccess.getOpOtherAccess().getAlternatives(), "rule__OpOther__Alternatives");
			builder.put(grammarAccess.getOpAddAccess().getAlternatives(), "rule__OpAdd__Alternatives");
			builder.put(grammarAccess.getOpMultiAccess().getAlternatives(), "rule__OpMulti__Alternatives");
			builder.put(grammarAccess.getOpUnaryAccess().getAlternatives(), "rule__OpUnary__Alternatives");
			builder.put(grammarAccess.getDDomainAccess().getGroup(), "rule__DDomain__Group__0");
			builder.put(grammarAccess.getDDomainAccess().getGroup_3(), "rule__DDomain__Group_3__0");
			builder.put(grammarAccess.getDImportAccess().getGroup(), "rule__DImport__Group__0");
			builder.put(grammarAccess.getDFunctionAccess().getGroup(), "rule__DFunction__Group__0");
			builder.put(grammarAccess.getDAggregateAccess().getGroup(), "rule__DAggregate__Group__0");
			builder.put(grammarAccess.getDConstraintAccess().getGroup(), "rule__DConstraint__Group__0");
			builder.put(grammarAccess.getDConstraintAccess().getGroup_2(), "rule__DConstraint__Group_2__0");
			builder.put(grammarAccess.getDPrimitiveAccess().getGroup(), "rule__DPrimitive__Group__0");
			builder.put(grammarAccess.getDPrimitiveAccess().getGroup_2(), "rule__DPrimitive__Group_2__0");
			builder.put(grammarAccess.getDPrimitiveArchetypeAccess().getGroup(), "rule__DPrimitiveArchetype__Group__0");
			builder.put(grammarAccess.getDPrimitiveArchetypeAccess().getGroup_2(), "rule__DPrimitiveArchetype__Group_2__0");
			builder.put(grammarAccess.getDEnumerationAccess().getGroup(), "rule__DEnumeration__Group__0");
			builder.put(grammarAccess.getDEnumerationAccess().getGroup_2(), "rule__DEnumeration__Group_2__0");
			builder.put(grammarAccess.getDEnumerationAccess().getGroup_5(), "rule__DEnumeration__Group_5__0");
			builder.put(grammarAccess.getDEnumerationAccess().getGroup_5_1(), "rule__DEnumeration__Group_5_1__0");
			builder.put(grammarAccess.getDLiteralAccess().getGroup(), "rule__DLiteral__Group__0");
			builder.put(grammarAccess.getDLiteralAccess().getGroup_1(), "rule__DLiteral__Group_1__0");
			builder.put(grammarAccess.getDEntityTypeAccess().getGroup(), "rule__DEntityType__Group__0");
			builder.put(grammarAccess.getDRelationshipAccess().getGroup(), "rule__DRelationship__Group__0");
			builder.put(grammarAccess.getDDetailTypeAccess().getGroup(), "rule__DDetailType__Group__0");
			builder.put(grammarAccess.getDComplexTypeAccess().getGroup(), "rule__DComplexType__Group__0");
			builder.put(grammarAccess.getDComplexTypeAccess().getGroup_1(), "rule__DComplexType__Group_1__0");
			builder.put(grammarAccess.getDComplexTypeAccess().getGroup_2(), "rule__DComplexType__Group_2__0");
			builder.put(grammarAccess.getDAssociationAccess().getGroup(), "rule__DAssociation__Group__0");
			builder.put(grammarAccess.getDAssociationAccess().getGroup_1_1(), "rule__DAssociation__Group_1_1__0");
			builder.put(grammarAccess.getDAssociationAccess().getGroup_3(), "rule__DAssociation__Group_3__0");
			builder.put(grammarAccess.getDAttributeAccess().getGroup(), "rule__DAttribute__Group__0");
			builder.put(grammarAccess.getDAttributeAccess().getGroup_1(), "rule__DAttribute__Group_1__0");
			builder.put(grammarAccess.getDAttributeAccess().getGroup_1_1(), "rule__DAttribute__Group_1_1__0");
			builder.put(grammarAccess.getDQueryAccess().getGroup(), "rule__DQuery__Group__0");
			builder.put(grammarAccess.getDQueryAccess().getGroup_1(), "rule__DQuery__Group_1__0");
			builder.put(grammarAccess.getDQueryAccess().getGroup_3(), "rule__DQuery__Group_3__0");
			builder.put(grammarAccess.getDQueryAccess().getGroup_3_1(), "rule__DQuery__Group_3_1__0");
			builder.put(grammarAccess.getDQueryAccess().getGroup_8(), "rule__DQuery__Group_8__0");
			builder.put(grammarAccess.getDQueryParameterAccess().getGroup(), "rule__DQueryParameter__Group__0");
			builder.put(grammarAccess.getDExistingApplicationAccess().getGroup(), "rule__DExistingApplication__Group__0");
			builder.put(grammarAccess.getDServiceAccess().getGroup(), "rule__DService__Group__0");
			builder.put(grammarAccess.getDServiceAccess().getGroup_3(), "rule__DService__Group_3__0");
			builder.put(grammarAccess.getDServiceAccess().getGroup_3_1(), "rule__DService__Group_3_1__0");
			builder.put(grammarAccess.getDServiceAccess().getGroup_3_1_1(), "rule__DService__Group_3_1_1__0");
			builder.put(grammarAccess.getDServiceAccess().getGroup_4(), "rule__DService__Group_4__0");
			builder.put(grammarAccess.getDServiceAccess().getGroup_4_2(), "rule__DService__Group_4_2__0");
			builder.put(grammarAccess.getDServiceAccess().getGroup_7(), "rule__DService__Group_7__0");
			builder.put(grammarAccess.getDServiceAccess().getGroup_8(), "rule__DService__Group_8__0");
			builder.put(grammarAccess.getDServiceParameterAccess().getGroup(), "rule__DServiceParameter__Group__0");
			builder.put(grammarAccess.getDExceptionAccess().getGroup(), "rule__DException__Group__0");
			builder.put(grammarAccess.getDmxModelAccess().getGroup(), "rule__DmxModel__Group__0");
			builder.put(grammarAccess.getDmxModelAccess().getGroup_1(), "rule__DmxModel__Group_1__0");
			builder.put(grammarAccess.getDmxModelAccess().getGroup_2(), "rule__DmxModel__Group_2__0");
			builder.put(grammarAccess.getDRichTextAccess().getGroup_1(), "rule__DRichText__Group_1__0");
			builder.put(grammarAccess.getDRichTextAccess().getGroup_1_2(), "rule__DRichText__Group_1_2__0");
			builder.put(grammarAccess.getDAssignmentAccess().getGroup_0(), "rule__DAssignment__Group_0__0");
			builder.put(grammarAccess.getDOrExpressionAccess().getGroup(), "rule__DOrExpression__Group__0");
			builder.put(grammarAccess.getDOrExpressionAccess().getGroup_1(), "rule__DOrExpression__Group_1__0");
			builder.put(grammarAccess.getDOrExpressionAccess().getGroup_1_0(), "rule__DOrExpression__Group_1_0__0");
			builder.put(grammarAccess.getDOrExpressionAccess().getGroup_1_0_0(), "rule__DOrExpression__Group_1_0_0__0");
			builder.put(grammarAccess.getDAndExpressionAccess().getGroup(), "rule__DAndExpression__Group__0");
			builder.put(grammarAccess.getDAndExpressionAccess().getGroup_1(), "rule__DAndExpression__Group_1__0");
			builder.put(grammarAccess.getDAndExpressionAccess().getGroup_1_0(), "rule__DAndExpression__Group_1_0__0");
			builder.put(grammarAccess.getDAndExpressionAccess().getGroup_1_0_0(), "rule__DAndExpression__Group_1_0_0__0");
			builder.put(grammarAccess.getDEqualityExpressionAccess().getGroup(), "rule__DEqualityExpression__Group__0");
			builder.put(grammarAccess.getDEqualityExpressionAccess().getGroup_1(), "rule__DEqualityExpression__Group_1__0");
			builder.put(grammarAccess.getDEqualityExpressionAccess().getGroup_1_0(), "rule__DEqualityExpression__Group_1_0__0");
			builder.put(grammarAccess.getDEqualityExpressionAccess().getGroup_1_0_0(), "rule__DEqualityExpression__Group_1_0_0__0");
			builder.put(grammarAccess.getDRelationalExpressionAccess().getGroup(), "rule__DRelationalExpression__Group__0");
			builder.put(grammarAccess.getDRelationalExpressionAccess().getGroup_1_0(), "rule__DRelationalExpression__Group_1_0__0");
			builder.put(grammarAccess.getDRelationalExpressionAccess().getGroup_1_0_0(), "rule__DRelationalExpression__Group_1_0_0__0");
			builder.put(grammarAccess.getDRelationalExpressionAccess().getGroup_1_0_0_0(), "rule__DRelationalExpression__Group_1_0_0_0__0");
			builder.put(grammarAccess.getDRelationalExpressionAccess().getGroup_1_1(), "rule__DRelationalExpression__Group_1_1__0");
			builder.put(grammarAccess.getDRelationalExpressionAccess().getGroup_1_1_0(), "rule__DRelationalExpression__Group_1_1_0__0");
			builder.put(grammarAccess.getDRelationalExpressionAccess().getGroup_1_1_0_0(), "rule__DRelationalExpression__Group_1_1_0_0__0");
			builder.put(grammarAccess.getDOtherOperatorExpressionAccess().getGroup(), "rule__DOtherOperatorExpression__Group__0");
			builder.put(grammarAccess.getDOtherOperatorExpressionAccess().getGroup_1(), "rule__DOtherOperatorExpression__Group_1__0");
			builder.put(grammarAccess.getDOtherOperatorExpressionAccess().getGroup_1_0(), "rule__DOtherOperatorExpression__Group_1_0__0");
			builder.put(grammarAccess.getDOtherOperatorExpressionAccess().getGroup_1_0_0(), "rule__DOtherOperatorExpression__Group_1_0_0__0");
			builder.put(grammarAccess.getDAdditiveExpressionAccess().getGroup(), "rule__DAdditiveExpression__Group__0");
			builder.put(grammarAccess.getDAdditiveExpressionAccess().getGroup_1(), "rule__DAdditiveExpression__Group_1__0");
			builder.put(grammarAccess.getDAdditiveExpressionAccess().getGroup_1_0(), "rule__DAdditiveExpression__Group_1_0__0");
			builder.put(grammarAccess.getDAdditiveExpressionAccess().getGroup_1_0_0(), "rule__DAdditiveExpression__Group_1_0_0__0");
			builder.put(grammarAccess.getDMultiplicativeExpressionAccess().getGroup(), "rule__DMultiplicativeExpression__Group__0");
			builder.put(grammarAccess.getDMultiplicativeExpressionAccess().getGroup_1(), "rule__DMultiplicativeExpression__Group_1__0");
			builder.put(grammarAccess.getDMultiplicativeExpressionAccess().getGroup_1_0(), "rule__DMultiplicativeExpression__Group_1_0__0");
			builder.put(grammarAccess.getDMultiplicativeExpressionAccess().getGroup_1_0_0(), "rule__DMultiplicativeExpression__Group_1_0_0__0");
			builder.put(grammarAccess.getDUnaryOperationAccess().getGroup_0(), "rule__DUnaryOperation__Group_0__0");
			builder.put(grammarAccess.getDCastExpressionAccess().getGroup(), "rule__DCastExpression__Group__0");
			builder.put(grammarAccess.getDCastExpressionAccess().getGroup_1(), "rule__DCastExpression__Group_1__0");
			builder.put(grammarAccess.getDCastExpressionAccess().getGroup_1_0(), "rule__DCastExpression__Group_1_0__0");
			builder.put(grammarAccess.getDCastExpressionAccess().getGroup_1_0_0(), "rule__DCastExpression__Group_1_0_0__0");
			builder.put(grammarAccess.getDNavigableMemberReferenceAccess().getGroup(), "rule__DNavigableMemberReference__Group__0");
			builder.put(grammarAccess.getDNavigableMemberReferenceAccess().getGroup_1_0(), "rule__DNavigableMemberReference__Group_1_0__0");
			builder.put(grammarAccess.getDNavigableMemberReferenceAccess().getGroup_1_0_0(), "rule__DNavigableMemberReference__Group_1_0_0__0");
			builder.put(grammarAccess.getDNavigableMemberReferenceAccess().getGroup_1_0_0_0(), "rule__DNavigableMemberReference__Group_1_0_0_0__0");
			builder.put(grammarAccess.getDNavigableMemberReferenceAccess().getGroup_1_1(), "rule__DNavigableMemberReference__Group_1_1__0");
			builder.put(grammarAccess.getDNavigableMemberReferenceAccess().getGroup_1_1_0(), "rule__DNavigableMemberReference__Group_1_1_0__0");
			builder.put(grammarAccess.getDNavigableMemberReferenceAccess().getGroup_1_1_0_0(), "rule__DNavigableMemberReference__Group_1_1_0_0__0");
			builder.put(grammarAccess.getDNavigableMemberReferenceAccess().getGroup_1_1_2_0(), "rule__DNavigableMemberReference__Group_1_1_2_0__0");
			builder.put(grammarAccess.getDNavigableMemberReferenceAccess().getGroup_1_1_2_0_1(), "rule__DNavigableMemberReference__Group_1_1_2_0_1__0");
			builder.put(grammarAccess.getDNavigableMemberReferenceAccess().getGroup_1_1_2_0_1_1(), "rule__DNavigableMemberReference__Group_1_1_2_0_1_1__0");
			builder.put(grammarAccess.getDSelfExpressionAccess().getGroup(), "rule__DSelfExpression__Group__0");
			builder.put(grammarAccess.getDReturnExpressionAccess().getGroup(), "rule__DReturnExpression__Group__0");
			builder.put(grammarAccess.getDRaiseExpressionAccess().getGroup(), "rule__DRaiseExpression__Group__0");
			builder.put(grammarAccess.getDParenthesizedExpressionAccess().getGroup(), "rule__DParenthesizedExpression__Group__0");
			builder.put(grammarAccess.getDFunctionCallAccess().getGroup(), "rule__DFunctionCall__Group__0");
			builder.put(grammarAccess.getDFunctionCallAccess().getGroup_3(), "rule__DFunctionCall__Group_3__0");
			builder.put(grammarAccess.getDFunctionCallAccess().getGroup_3_1(), "rule__DFunctionCall__Group_3_1__0");
			builder.put(grammarAccess.getDConstructorCallAccess().getGroup(), "rule__DConstructorCall__Group__0");
			builder.put(grammarAccess.getDConstructorCallAccess().getGroup_3(), "rule__DConstructorCall__Group_3__0");
			builder.put(grammarAccess.getDConstructorCallAccess().getGroup_3_1(), "rule__DConstructorCall__Group_3_1__0");
			builder.put(grammarAccess.getDConstructorCallAccess().getGroup_3_1_1(), "rule__DConstructorCall__Group_3_1_1__0");
			builder.put(grammarAccess.getDContextReferenceAccess().getGroup(), "rule__DContextReference__Group__0");
			builder.put(grammarAccess.getDContextReferenceAccess().getGroup_1_0(), "rule__DContextReference__Group_1_0__0");
			builder.put(grammarAccess.getDContextReferenceAccess().getGroup_1_1(), "rule__DContextReference__Group_1_1__0");
			builder.put(grammarAccess.getDContextReferenceAccess().getGroup_1_1_2(), "rule__DContextReference__Group_1_1_2__0");
			builder.put(grammarAccess.getDContextReferenceAccess().getGroup_1_1_3(), "rule__DContextReference__Group_1_1_3__0");
			builder.put(grammarAccess.getDIfExpressionAccess().getGroup(), "rule__DIfExpression__Group__0");
			builder.put(grammarAccess.getDIfExpressionAccess().getGroup_5(), "rule__DIfExpression__Group_5__0");
			builder.put(grammarAccess.getDForLoopExpressionAccess().getGroup(), "rule__DForLoopExpression__Group__0");
			builder.put(grammarAccess.getDForLoopExpressionAccess().getGroup_0(), "rule__DForLoopExpression__Group_0__0");
			builder.put(grammarAccess.getDForLoopExpressionAccess().getGroup_0_0(), "rule__DForLoopExpression__Group_0_0__0");
			builder.put(grammarAccess.getDMultiplicityAccess().getGroup(), "rule__DMultiplicity__Group__0");
			builder.put(grammarAccess.getDBooleanLiteralAccess().getGroup(), "rule__DBooleanLiteral__Group__0");
			builder.put(grammarAccess.getDStringLiteralAccess().getGroup(), "rule__DStringLiteral__Group__0");
			builder.put(grammarAccess.getDNaturalLiteralAccess().getGroup(), "rule__DNaturalLiteral__Group__0");
			builder.put(grammarAccess.getDDecimalLiteralAccess().getGroup(), "rule__DDecimalLiteral__Group__0");
			builder.put(grammarAccess.getDNilLiteralAccess().getGroup(), "rule__DNilLiteral__Group__0");
			builder.put(grammarAccess.getDECIMALAccess().getGroup(), "rule__DECIMAL__Group__0");
			builder.put(grammarAccess.getDECIMALAccess().getGroup_3(), "rule__DECIMAL__Group_3__0");
			builder.put(grammarAccess.getDQualifiedNameWithWildcardAccess().getGroup(), "rule__DQualifiedNameWithWildcard__Group__0");
			builder.put(grammarAccess.getDQualifiedNameAccess().getGroup(), "rule__DQualifiedName__Group__0");
			builder.put(grammarAccess.getDQualifiedNameAccess().getGroup_1(), "rule__DQualifiedName__Group_1__0");
			builder.put(grammarAccess.getDDomainAccess().getImportsAssignment_0(), "rule__DDomain__ImportsAssignment_0");
			builder.put(grammarAccess.getDDomainAccess().getNameAssignment_2(), "rule__DDomain__NameAssignment_2");
			builder.put(grammarAccess.getDDomainAccess().getAliasesAssignment_3_1(), "rule__DDomain__AliasesAssignment_3_1");
			builder.put(grammarAccess.getDDomainAccess().getDescriptionAssignment_4(), "rule__DDomain__DescriptionAssignment_4");
			builder.put(grammarAccess.getDDomainAccess().getTypesAssignment_5_0(), "rule__DDomain__TypesAssignment_5_0");
			builder.put(grammarAccess.getDDomainAccess().getFunctionsAssignment_5_1(), "rule__DDomain__FunctionsAssignment_5_1");
			builder.put(grammarAccess.getDDomainAccess().getAggregatesAssignment_5_2(), "rule__DDomain__AggregatesAssignment_5_2");
			builder.put(grammarAccess.getDDomainAccess().getApplicationsAssignment_5_3(), "rule__DDomain__ApplicationsAssignment_5_3");
			builder.put(grammarAccess.getDDomainAccess().getActorsAssignment_5_4(), "rule__DDomain__ActorsAssignment_5_4");
			builder.put(grammarAccess.getDImportAccess().getImportedNamespaceAssignment_1(), "rule__DImport__ImportedNamespaceAssignment_1");
			builder.put(grammarAccess.getDFunctionAccess().getNameAssignment_1(), "rule__DFunction__NameAssignment_1");
			builder.put(grammarAccess.getDFunctionAccess().getTypeAssignment_5(), "rule__DFunction__TypeAssignment_5");
			builder.put(grammarAccess.getDFunctionAccess().getMultiplicityAssignment_6(), "rule__DFunction__MultiplicityAssignment_6");
			builder.put(grammarAccess.getDAggregateAccess().getDescriptionAssignment_2(), "rule__DAggregate__DescriptionAssignment_2");
			builder.put(grammarAccess.getDAggregateAccess().getTypesAssignment_4(), "rule__DAggregate__TypesAssignment_4");
			builder.put(grammarAccess.getDConstraintAccess().getNameAssignment_1(), "rule__DConstraint__NameAssignment_1");
			builder.put(grammarAccess.getDConstraintAccess().getAliasesAssignment_2_1(), "rule__DConstraint__AliasesAssignment_2_1");
			builder.put(grammarAccess.getDConstraintAccess().getConditionAssignment_4(), "rule__DConstraint__ConditionAssignment_4");
			builder.put(grammarAccess.getDConstraintAccess().getDescriptionAssignment_5(), "rule__DConstraint__DescriptionAssignment_5");
			builder.put(grammarAccess.getDPrimitiveAccess().getNameAssignment_1(), "rule__DPrimitive__NameAssignment_1");
			builder.put(grammarAccess.getDPrimitiveAccess().getAliasesAssignment_2_1(), "rule__DPrimitive__AliasesAssignment_2_1");
			builder.put(grammarAccess.getDPrimitiveAccess().getRedefinesAssignment_4(), "rule__DPrimitive__RedefinesAssignment_4");
			builder.put(grammarAccess.getDPrimitiveAccess().getDescriptionAssignment_5(), "rule__DPrimitive__DescriptionAssignment_5");
			builder.put(grammarAccess.getDPrimitiveAccess().getConstraintsAssignment_7(), "rule__DPrimitive__ConstraintsAssignment_7");
			builder.put(grammarAccess.getDPrimitiveArchetypeAccess().getNameAssignment_1(), "rule__DPrimitiveArchetype__NameAssignment_1");
			builder.put(grammarAccess.getDPrimitiveArchetypeAccess().getAliasesAssignment_2_1(), "rule__DPrimitiveArchetype__AliasesAssignment_2_1");
			builder.put(grammarAccess.getDPrimitiveArchetypeAccess().getDescriptionAssignment_3(), "rule__DPrimitiveArchetype__DescriptionAssignment_3");
			builder.put(grammarAccess.getDPrimitiveArchetypeAccess().getConstraintsAssignment_5(), "rule__DPrimitiveArchetype__ConstraintsAssignment_5");
			builder.put(grammarAccess.getDEnumerationAccess().getNameAssignment_1(), "rule__DEnumeration__NameAssignment_1");
			builder.put(grammarAccess.getDEnumerationAccess().getAliasesAssignment_2_1(), "rule__DEnumeration__AliasesAssignment_2_1");
			builder.put(grammarAccess.getDEnumerationAccess().getDescriptionAssignment_3(), "rule__DEnumeration__DescriptionAssignment_3");
			builder.put(grammarAccess.getDEnumerationAccess().getLiteralsAssignment_5_0(), "rule__DEnumeration__LiteralsAssignment_5_0");
			builder.put(grammarAccess.getDEnumerationAccess().getLiteralsAssignment_5_1_1(), "rule__DEnumeration__LiteralsAssignment_5_1_1");
			builder.put(grammarAccess.getDEnumerationAccess().getConstraintsAssignment_6(), "rule__DEnumeration__ConstraintsAssignment_6");
			builder.put(grammarAccess.getDLiteralAccess().getNameAssignment_0(), "rule__DLiteral__NameAssignment_0");
			builder.put(grammarAccess.getDLiteralAccess().getAliasesAssignment_1_1(), "rule__DLiteral__AliasesAssignment_1_1");
			builder.put(grammarAccess.getDLiteralAccess().getDescriptionAssignment_2(), "rule__DLiteral__DescriptionAssignment_2");
			builder.put(grammarAccess.getDEntityTypeAccess().getAbstractAssignment_0(), "rule__DEntityType__AbstractAssignment_0");
			builder.put(grammarAccess.getDEntityTypeAccess().getRootAssignment_1(), "rule__DEntityType__RootAssignment_1");
			builder.put(grammarAccess.getDRelationshipAccess().getAbstractAssignment_0(), "rule__DRelationship__AbstractAssignment_0");
			builder.put(grammarAccess.getDRelationshipAccess().getRootAssignment_1(), "rule__DRelationship__RootAssignment_1");
			builder.put(grammarAccess.getDDetailTypeAccess().getAbstractAssignment_0(), "rule__DDetailType__AbstractAssignment_0");
			builder.put(grammarAccess.getDComplexTypeAccess().getNameAssignment_0(), "rule__DComplexType__NameAssignment_0");
			builder.put(grammarAccess.getDComplexTypeAccess().getAliasesAssignment_1_1(), "rule__DComplexType__AliasesAssignment_1_1");
			builder.put(grammarAccess.getDComplexTypeAccess().getSuperTypeAssignment_2_1(), "rule__DComplexType__SuperTypeAssignment_2_1");
			builder.put(grammarAccess.getDComplexTypeAccess().getDescriptionAssignment_3(), "rule__DComplexType__DescriptionAssignment_3");
			builder.put(grammarAccess.getDComplexTypeAccess().getFeaturesAssignment_5_0(), "rule__DComplexType__FeaturesAssignment_5_0");
			builder.put(grammarAccess.getDComplexTypeAccess().getConstraintsAssignment_5_1(), "rule__DComplexType__ConstraintsAssignment_5_1");
			builder.put(grammarAccess.getDAssociationAccess().getDerivedAssignment_0(), "rule__DAssociation__DerivedAssignment_0");
			builder.put(grammarAccess.getDAssociationAccess().getKindAssignment_1_0(), "rule__DAssociation__KindAssignment_1_0");
			builder.put(grammarAccess.getDAssociationAccess().getKindAssignment_1_1_0(), "rule__DAssociation__KindAssignment_1_1_0");
			builder.put(grammarAccess.getDAssociationAccess().getNameAssignment_2(), "rule__DAssociation__NameAssignment_2");
			builder.put(grammarAccess.getDAssociationAccess().getAliasesAssignment_3_1(), "rule__DAssociation__AliasesAssignment_3_1");
			builder.put(grammarAccess.getDAssociationAccess().getTypeAssignment_5(), "rule__DAssociation__TypeAssignment_5");
			builder.put(grammarAccess.getDAssociationAccess().getMultiplicityAssignment_6(), "rule__DAssociation__MultiplicityAssignment_6");
			builder.put(grammarAccess.getDAssociationAccess().getDescriptionAssignment_7(), "rule__DAssociation__DescriptionAssignment_7");
			builder.put(grammarAccess.getDAttributeAccess().getDetailAssignment_0(), "rule__DAttribute__DetailAssignment_0");
			builder.put(grammarAccess.getDAttributeAccess().getNameAssignment_1_0(), "rule__DAttribute__NameAssignment_1_0");
			builder.put(grammarAccess.getDAttributeAccess().getAliasesAssignment_1_1_1(), "rule__DAttribute__AliasesAssignment_1_1_1");
			builder.put(grammarAccess.getDAttributeAccess().getTypeAssignment_1_3(), "rule__DAttribute__TypeAssignment_1_3");
			builder.put(grammarAccess.getDAttributeAccess().getMultiplicityAssignment_2(), "rule__DAttribute__MultiplicityAssignment_2");
			builder.put(grammarAccess.getDAttributeAccess().getKeyAssignment_3(), "rule__DAttribute__KeyAssignment_3");
			builder.put(grammarAccess.getDAttributeAccess().getDescriptionAssignment_4(), "rule__DAttribute__DescriptionAssignment_4");
			builder.put(grammarAccess.getDQueryAccess().getNameAssignment_0(), "rule__DQuery__NameAssignment_0");
			builder.put(grammarAccess.getDQueryAccess().getAliasesAssignment_1_1(), "rule__DQuery__AliasesAssignment_1_1");
			builder.put(grammarAccess.getDQueryAccess().getParametersAssignment_3_0(), "rule__DQuery__ParametersAssignment_3_0");
			builder.put(grammarAccess.getDQueryAccess().getParametersAssignment_3_1_1(), "rule__DQuery__ParametersAssignment_3_1_1");
			builder.put(grammarAccess.getDQueryAccess().getTypeAssignment_6(), "rule__DQuery__TypeAssignment_6");
			builder.put(grammarAccess.getDQueryAccess().getMultiplicityAssignment_7(), "rule__DQuery__MultiplicityAssignment_7");
			builder.put(grammarAccess.getDQueryAccess().getReturnsAssignment_8_1(), "rule__DQuery__ReturnsAssignment_8_1");
			builder.put(grammarAccess.getDQueryAccess().getDescriptionAssignment_9(), "rule__DQuery__DescriptionAssignment_9");
			builder.put(grammarAccess.getDQueryParameterAccess().getNameAssignment_0(), "rule__DQueryParameter__NameAssignment_0");
			builder.put(grammarAccess.getDQueryParameterAccess().getTypeAssignment_2(), "rule__DQueryParameter__TypeAssignment_2");
			builder.put(grammarAccess.getDQueryParameterAccess().getMultiplicityAssignment_3(), "rule__DQueryParameter__MultiplicityAssignment_3");
			builder.put(grammarAccess.getDQueryParameterAccess().getDescriptionAssignment_4(), "rule__DQueryParameter__DescriptionAssignment_4");
			builder.put(grammarAccess.getDExistingApplicationAccess().getNameAssignment_1(), "rule__DExistingApplication__NameAssignment_1");
			builder.put(grammarAccess.getDExistingApplicationAccess().getDescriptionAssignment_2(), "rule__DExistingApplication__DescriptionAssignment_2");
			builder.put(grammarAccess.getDExistingApplicationAccess().getServicesAssignment_4_0(), "rule__DExistingApplication__ServicesAssignment_4_0");
			builder.put(grammarAccess.getDExistingApplicationAccess().getExceptionsAssignment_4_1(), "rule__DExistingApplication__ExceptionsAssignment_4_1");
			builder.put(grammarAccess.getDExistingApplicationAccess().getTypesAssignment_4_2(), "rule__DExistingApplication__TypesAssignment_4_2");
			builder.put(grammarAccess.getDServiceAccess().getKindAssignment_0(), "rule__DService__KindAssignment_0");
			builder.put(grammarAccess.getDServiceAccess().getNameAssignment_2(), "rule__DService__NameAssignment_2");
			builder.put(grammarAccess.getDServiceAccess().getParametersAssignment_3_1_0(), "rule__DService__ParametersAssignment_3_1_0");
			builder.put(grammarAccess.getDServiceAccess().getParametersAssignment_3_1_1_1(), "rule__DService__ParametersAssignment_3_1_1_1");
			builder.put(grammarAccess.getDServiceAccess().getRaisesAssignment_4_1(), "rule__DService__RaisesAssignment_4_1");
			builder.put(grammarAccess.getDServiceAccess().getRaisesAssignment_4_2_1(), "rule__DService__RaisesAssignment_4_2_1");
			builder.put(grammarAccess.getDServiceAccess().getDescriptionAssignment_5(), "rule__DService__DescriptionAssignment_5");
			builder.put(grammarAccess.getDServiceAccess().getGuardsAssignment_7_1(), "rule__DService__GuardsAssignment_7_1");
			builder.put(grammarAccess.getDServiceAccess().getEffectsAssignment_8_1(), "rule__DService__EffectsAssignment_8_1");
			builder.put(grammarAccess.getDServiceAccess().getTypesAssignment_9(), "rule__DService__TypesAssignment_9");
			builder.put(grammarAccess.getDServiceParameterAccess().getDirectionAssignment_0(), "rule__DServiceParameter__DirectionAssignment_0");
			builder.put(grammarAccess.getDServiceParameterAccess().getNameAssignment_1(), "rule__DServiceParameter__NameAssignment_1");
			builder.put(grammarAccess.getDServiceParameterAccess().getTypeAssignment_3(), "rule__DServiceParameter__TypeAssignment_3");
			builder.put(grammarAccess.getDServiceParameterAccess().getMultiplicityAssignment_4(), "rule__DServiceParameter__MultiplicityAssignment_4");
			builder.put(grammarAccess.getDServiceParameterAccess().getDescriptionAssignment_5(), "rule__DServiceParameter__DescriptionAssignment_5");
			builder.put(grammarAccess.getDExceptionAccess().getNameAssignment_1(), "rule__DException__NameAssignment_1");
			builder.put(grammarAccess.getDExceptionAccess().getDescriptionAssignment_2(), "rule__DException__DescriptionAssignment_2");
			builder.put(grammarAccess.getDmxModelAccess().getTextsAssignment_1_3(), "rule__DmxModel__TextsAssignment_1_3");
			builder.put(grammarAccess.getDmxModelAccess().getExpressionsAssignment_2_3(), "rule__DmxModel__ExpressionsAssignment_2_3");
			builder.put(grammarAccess.getDRichTextAccess().getSegmentsAssignment_0(), "rule__DRichText__SegmentsAssignment_0");
			builder.put(grammarAccess.getDRichTextAccess().getSegmentsAssignment_1_0(), "rule__DRichText__SegmentsAssignment_1_0");
			builder.put(grammarAccess.getDRichTextAccess().getSegmentsAssignment_1_1(), "rule__DRichText__SegmentsAssignment_1_1");
			builder.put(grammarAccess.getDRichTextAccess().getSegmentsAssignment_1_2_0(), "rule__DRichText__SegmentsAssignment_1_2_0");
			builder.put(grammarAccess.getDRichTextAccess().getSegmentsAssignment_1_2_1(), "rule__DRichText__SegmentsAssignment_1_2_1");
			builder.put(grammarAccess.getDRichTextAccess().getSegmentsAssignment_1_3(), "rule__DRichText__SegmentsAssignment_1_3");
			builder.put(grammarAccess.getDTextOnlyAccess().getValueAssignment(), "rule__DTextOnly__ValueAssignment");
			builder.put(grammarAccess.getDTextStartAccess().getValueAssignment(), "rule__DTextStart__ValueAssignment");
			builder.put(grammarAccess.getDTextMiddleAccess().getValueAssignment(), "rule__DTextMiddle__ValueAssignment");
			builder.put(grammarAccess.getDTextEndAccess().getValueAssignment(), "rule__DTextEnd__ValueAssignment");
			builder.put(grammarAccess.getDAssignmentAccess().getMemberAssignment_0_1(), "rule__DAssignment__MemberAssignment_0_1");
			builder.put(grammarAccess.getDAssignmentAccess().getValueAssignment_0_3(), "rule__DAssignment__ValueAssignment_0_3");
			builder.put(grammarAccess.getDOrExpressionAccess().getOperatorAssignment_1_0_0_1(), "rule__DOrExpression__OperatorAssignment_1_0_0_1");
			builder.put(grammarAccess.getDOrExpressionAccess().getRightOperandAssignment_1_1(), "rule__DOrExpression__RightOperandAssignment_1_1");
			builder.put(grammarAccess.getDAndExpressionAccess().getOperatorAssignment_1_0_0_1(), "rule__DAndExpression__OperatorAssignment_1_0_0_1");
			builder.put(grammarAccess.getDAndExpressionAccess().getRightOperandAssignment_1_1(), "rule__DAndExpression__RightOperandAssignment_1_1");
			builder.put(grammarAccess.getDEqualityExpressionAccess().getOperatorAssignment_1_0_0_1(), "rule__DEqualityExpression__OperatorAssignment_1_0_0_1");
			builder.put(grammarAccess.getDEqualityExpressionAccess().getRightOperandAssignment_1_1(), "rule__DEqualityExpression__RightOperandAssignment_1_1");
			builder.put(grammarAccess.getDRelationalExpressionAccess().getTypeAssignment_1_0_1(), "rule__DRelationalExpression__TypeAssignment_1_0_1");
			builder.put(grammarAccess.getDRelationalExpressionAccess().getOperatorAssignment_1_1_0_0_1(), "rule__DRelationalExpression__OperatorAssignment_1_1_0_0_1");
			builder.put(grammarAccess.getDRelationalExpressionAccess().getRightOperandAssignment_1_1_1(), "rule__DRelationalExpression__RightOperandAssignment_1_1_1");
			builder.put(grammarAccess.getDOtherOperatorExpressionAccess().getOperatorAssignment_1_0_0_1(), "rule__DOtherOperatorExpression__OperatorAssignment_1_0_0_1");
			builder.put(grammarAccess.getDOtherOperatorExpressionAccess().getRightOperandAssignment_1_1(), "rule__DOtherOperatorExpression__RightOperandAssignment_1_1");
			builder.put(grammarAccess.getDAdditiveExpressionAccess().getOperatorAssignment_1_0_0_1(), "rule__DAdditiveExpression__OperatorAssignment_1_0_0_1");
			builder.put(grammarAccess.getDAdditiveExpressionAccess().getRightOperandAssignment_1_1(), "rule__DAdditiveExpression__RightOperandAssignment_1_1");
			builder.put(grammarAccess.getDMultiplicativeExpressionAccess().getOperatorAssignment_1_0_0_1(), "rule__DMultiplicativeExpression__OperatorAssignment_1_0_0_1");
			builder.put(grammarAccess.getDMultiplicativeExpressionAccess().getRightOperandAssignment_1_1(), "rule__DMultiplicativeExpression__RightOperandAssignment_1_1");
			builder.put(grammarAccess.getDUnaryOperationAccess().getOperatorAssignment_0_1(), "rule__DUnaryOperation__OperatorAssignment_0_1");
			builder.put(grammarAccess.getDUnaryOperationAccess().getOperandAssignment_0_2(), "rule__DUnaryOperation__OperandAssignment_0_2");
			builder.put(grammarAccess.getDCastExpressionAccess().getTypeAssignment_1_1(), "rule__DCastExpression__TypeAssignment_1_1");
			builder.put(grammarAccess.getDNavigableMemberReferenceAccess().getMemberAssignment_1_0_0_0_2(), "rule__DNavigableMemberReference__MemberAssignment_1_0_0_0_2");
			builder.put(grammarAccess.getDNavigableMemberReferenceAccess().getValueAssignment_1_0_1(), "rule__DNavigableMemberReference__ValueAssignment_1_0_1");
			builder.put(grammarAccess.getDNavigableMemberReferenceAccess().getMemberAssignment_1_1_1(), "rule__DNavigableMemberReference__MemberAssignment_1_1_1");
			builder.put(grammarAccess.getDNavigableMemberReferenceAccess().getExplicitOperationCallAssignment_1_1_2_0_0(), "rule__DNavigableMemberReference__ExplicitOperationCallAssignment_1_1_2_0_0");
			builder.put(grammarAccess.getDNavigableMemberReferenceAccess().getMemberCallArgumentsAssignment_1_1_2_0_1_0(), "rule__DNavigableMemberReference__MemberCallArgumentsAssignment_1_1_2_0_1_0");
			builder.put(grammarAccess.getDNavigableMemberReferenceAccess().getMemberCallArgumentsAssignment_1_1_2_0_1_1_1(), "rule__DNavigableMemberReference__MemberCallArgumentsAssignment_1_1_2_0_1_1_1");
			builder.put(grammarAccess.getDNavigableMemberReferenceAccess().getBeforeAssignment_1_1_2_1(), "rule__DNavigableMemberReference__BeforeAssignment_1_1_2_1");
			builder.put(grammarAccess.getDReturnExpressionAccess().getExpressionAssignment_2(), "rule__DReturnExpression__ExpressionAssignment_2");
			builder.put(grammarAccess.getDRaiseExpressionAccess().getExpressionAssignment_2(), "rule__DRaiseExpression__ExpressionAssignment_2");
			builder.put(grammarAccess.getDFunctionCallAccess().getFunctionAssignment_1(), "rule__DFunctionCall__FunctionAssignment_1");
			builder.put(grammarAccess.getDFunctionCallAccess().getFunctionCallArgumentsAssignment_3_0(), "rule__DFunctionCall__FunctionCallArgumentsAssignment_3_0");
			builder.put(grammarAccess.getDFunctionCallAccess().getFunctionCallArgumentsAssignment_3_1_1(), "rule__DFunctionCall__FunctionCallArgumentsAssignment_3_1_1");
			builder.put(grammarAccess.getDConstructorCallAccess().getConstructorAssignment_2(), "rule__DConstructorCall__ConstructorAssignment_2");
			builder.put(grammarAccess.getDConstructorCallAccess().getExplicitConstructorCallAssignment_3_0(), "rule__DConstructorCall__ExplicitConstructorCallAssignment_3_0");
			builder.put(grammarAccess.getDConstructorCallAccess().getArgumentsAssignment_3_1_0(), "rule__DConstructorCall__ArgumentsAssignment_3_1_0");
			builder.put(grammarAccess.getDConstructorCallAccess().getArgumentsAssignment_3_1_1_1(), "rule__DConstructorCall__ArgumentsAssignment_3_1_1_1");
			builder.put(grammarAccess.getDContextReferenceAccess().getTargetAssignment_1_0_0(), "rule__DContextReference__TargetAssignment_1_0_0");
			builder.put(grammarAccess.getDContextReferenceAccess().getBeforeAssignment_1_0_1(), "rule__DContextReference__BeforeAssignment_1_0_1");
			builder.put(grammarAccess.getDContextReferenceAccess().getTargetAssignment_1_1_1(), "rule__DContextReference__TargetAssignment_1_1_1");
			builder.put(grammarAccess.getDContextReferenceAccess().getMemberAssignment_1_1_2_1(), "rule__DContextReference__MemberAssignment_1_1_2_1");
			builder.put(grammarAccess.getDContextReferenceAccess().getDisplayNameAssignment_1_1_3_1_0(), "rule__DContextReference__DisplayNameAssignment_1_1_3_1_0");
			builder.put(grammarAccess.getDContextReferenceAccess().getPluralAssignment_1_1_3_1_1(), "rule__DContextReference__PluralAssignment_1_1_3_1_1");
			builder.put(grammarAccess.getDIfExpressionAccess().getIfAssignment_2(), "rule__DIfExpression__IfAssignment_2");
			builder.put(grammarAccess.getDIfExpressionAccess().getThenAssignment_4(), "rule__DIfExpression__ThenAssignment_4");
			builder.put(grammarAccess.getDIfExpressionAccess().getElseAssignment_5_1(), "rule__DIfExpression__ElseAssignment_5_1");
			builder.put(grammarAccess.getDForLoopExpressionAccess().getDeclaredParamAssignment_0_0_2(), "rule__DForLoopExpression__DeclaredParamAssignment_0_0_2");
			builder.put(grammarAccess.getDForLoopExpressionAccess().getForExpressionAssignment_1(), "rule__DForLoopExpression__ForExpressionAssignment_1");
			builder.put(grammarAccess.getDForLoopExpressionAccess().getEachExpressionAssignment_3(), "rule__DForLoopExpression__EachExpressionAssignment_3");
			builder.put(grammarAccess.getDMultiplicityAccess().getMinOccursAssignment_1(), "rule__DMultiplicity__MinOccursAssignment_1");
			builder.put(grammarAccess.getDMultiplicityAccess().getMaxOccursAssignment_3(), "rule__DMultiplicity__MaxOccursAssignment_3");
			builder.put(grammarAccess.getDBooleanLiteralAccess().getValueAssignment_1_0(), "rule__DBooleanLiteral__ValueAssignment_1_0");
			builder.put(grammarAccess.getDBooleanLiteralAccess().getValueAssignment_1_1(), "rule__DBooleanLiteral__ValueAssignment_1_1");
			builder.put(grammarAccess.getDStringLiteralAccess().getValueAssignment_1(), "rule__DStringLiteral__ValueAssignment_1");
			builder.put(grammarAccess.getDNaturalLiteralAccess().getValueAssignment_1(), "rule__DNaturalLiteral__ValueAssignment_1");
			builder.put(grammarAccess.getDDecimalLiteralAccess().getValueAssignment_1(), "rule__DDecimalLiteral__ValueAssignment_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private DimGrammarAccess grammarAccess;

	@Override
	protected InternalDimParser createParser() {
		InternalDimParser result = new InternalDimParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public DimGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(DimGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
