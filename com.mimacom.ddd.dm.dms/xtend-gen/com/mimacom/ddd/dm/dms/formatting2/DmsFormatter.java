/**
 * generated by Xtext 2.16.0
 */
package com.mimacom.ddd.dm.dms.formatting2;

import com.google.inject.Inject;
import com.mimacom.ddd.dm.base.DActor;
import com.mimacom.ddd.dm.base.DAggregate;
import com.mimacom.ddd.dm.base.DDomain;
import com.mimacom.ddd.dm.base.DDomainEvent;
import com.mimacom.ddd.dm.base.DExistingApplication;
import com.mimacom.ddd.dm.base.DModel;
import com.mimacom.ddd.dm.base.DRichText;
import com.mimacom.ddd.dm.base.DType;
import com.mimacom.ddd.dm.dms.services.DmsGrammarAccess;
import java.util.Arrays;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;

@SuppressWarnings("all")
public class DmsFormatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private DmsGrammarAccess _dmsGrammarAccess;
  
  protected void _format(final DModel dModel, @Extension final IFormattableDocument document) {
    document.<DDomain>format(dModel.getDomain());
  }
  
  protected void _format(final DDomain dDomain, @Extension final IFormattableDocument document) {
    document.<DRichText>format(dDomain.getDescription());
    EList<DType> _types = dDomain.getTypes();
    for (final DType dType : _types) {
      document.<DType>format(dType);
    }
    EList<DAggregate> _aggregates = dDomain.getAggregates();
    for (final DAggregate dAggregate : _aggregates) {
      document.<DAggregate>format(dAggregate);
    }
    EList<DExistingApplication> _applications = dDomain.getApplications();
    for (final DExistingApplication dExistingApplication : _applications) {
      document.<DExistingApplication>format(dExistingApplication);
    }
    EList<DDomainEvent> _events = dDomain.getEvents();
    for (final DDomainEvent dDomainEvent : _events) {
      document.<DDomainEvent>format(dDomainEvent);
    }
    EList<DActor> _actors = dDomain.getActors();
    for (final DActor dActor : _actors) {
      document.<DActor>format(dActor);
    }
  }
  
  public void format(final Object dDomain, final IFormattableDocument document) {
    if (dDomain instanceof XtextResource) {
      _format((XtextResource)dDomain, document);
      return;
    } else if (dDomain instanceof DDomain) {
      _format((DDomain)dDomain, document);
      return;
    } else if (dDomain instanceof DModel) {
      _format((DModel)dDomain, document);
      return;
    } else if (dDomain instanceof EObject) {
      _format((EObject)dDomain, document);
      return;
    } else if (dDomain == null) {
      _format((Void)null, document);
      return;
    } else if (dDomain != null) {
      _format(dDomain, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(dDomain, document).toString());
    }
  }
}
