/**
 * generated by Xtext 2.17.1
 */
package com.mimacom.ddd.dm.dom.scoping;

import com.google.common.base.Objects;
import com.mimacom.ddd.dm.base.DComplexType;
import com.mimacom.ddd.dm.base.DDetailType;
import com.mimacom.ddd.dm.dom.DomDetailObject;
import com.mimacom.ddd.dm.dom.DomField;
import com.mimacom.ddd.dm.dom.DomPackage;
import com.mimacom.ddd.dm.dom.scoping.AbstractDomScopeProvider;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EReference;
import org.eclipse.xtext.scoping.IScope;
import org.eclipse.xtext.scoping.Scopes;

/**
 * This class contains custom scoping description.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#scoping
 * on how and when to use it.
 */
@SuppressWarnings("all")
public class DomScopeProvider extends AbstractDomScopeProvider {
  private final DomPackage DOM = DomPackage.eINSTANCE;
  
  @Override
  public IScope getScope(final EObject context, final EReference reference) {
    IScope _xblockexpression = null;
    {
      EReference _domField_Ref = this.DOM.getDomField_Ref();
      boolean _equals = Objects.equal(reference, _domField_Ref);
      if (_equals) {
        if ((context instanceof DomField)) {
          final EObject parent = ((DomField)context).eContainer();
          if ((parent instanceof DomDetailObject)) {
            DComplexType _ref = ((DomDetailObject)parent).getRef();
            if ((_ref instanceof DDetailType)) {
              return Scopes.scopeFor(((DomDetailObject)parent).getRef().getFeatures());
            }
          }
        }
      }
      _xblockexpression = super.getScope(context, reference);
    }
    return _xblockexpression;
  }
}
