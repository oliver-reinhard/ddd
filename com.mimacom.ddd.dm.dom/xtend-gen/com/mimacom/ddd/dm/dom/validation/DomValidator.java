/**
 * generated by Xtext 2.17.1
 */
package com.mimacom.ddd.dm.dom.validation;

import com.mimacom.ddd.dm.dmx.typecomputer.AbstractDmxTypeDescriptor;
import com.mimacom.ddd.dm.dmx.typecomputer.DmxTypeDescriptorProvider;
import com.mimacom.ddd.dm.dom.DomField;
import com.mimacom.ddd.dm.dom.DomPackage;
import com.mimacom.ddd.dm.dom.validation.AbstractDomValidator;
import org.eclipse.xtext.validation.Check;

/**
 * This class contains custom validation rules.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
@SuppressWarnings("all")
public class DomValidator extends AbstractDomValidator {
  protected static final DomPackage DOM = DomPackage.eINSTANCE;
  
  @Check
  public Boolean checkType(final DomField expr) {
    Boolean _xblockexpression = null;
    {
      final AbstractDmxTypeDescriptor<?> leftType = this.getTypeAndCheckNotNull(expr, DomValidator.DOM.getDomField_Ref());
      Boolean _xifexpression = null;
      boolean _isCompatibleWith = leftType.isCompatibleWith(DmxTypeDescriptorProvider.TIMEPOINT);
      if (_isCompatibleWith) {
        _xifexpression = this.expectTimepointValue(expr.getValue(), leftType, DomValidator.DOM.getDomField_Value());
      } else {
        _xifexpression = Boolean.valueOf(this.expectType(expr.getValue(), leftType, DomValidator.DOM.getDomField_Value()));
      }
      _xblockexpression = _xifexpression;
    }
    return _xblockexpression;
  }
}
