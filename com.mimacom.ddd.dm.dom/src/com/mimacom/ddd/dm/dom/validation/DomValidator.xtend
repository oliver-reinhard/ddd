/*
 * generated by Xtext 2.17.1
 */
package com.mimacom.ddd.dm.dom.validation

import com.mimacom.ddd.dm.base.DQuery
import com.mimacom.ddd.dm.dmx.DmxField
import com.mimacom.ddd.dm.dmx.DmxPackage
import org.eclipse.xtext.validation.Check

import static com.mimacom.ddd.dm.dmx.typecomputer.DmxTypeDescriptorProvider.*

/**
 * This class contains custom validation rules. 
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class DomValidator extends AbstractDomValidator {
	
	protected static val DMX = DmxPackage.eINSTANCE

	@Check
	def checkType(DmxField expr) {
		val leftType = getTypeAndCheckNotNull(expr.value, DMX.dmxField_Feature)
		if (leftType.isCompatibleWith(TIMEPOINT)) {
			// allow string literals as Timepoints 
			expectTimepointValue(expr.value, leftType, DMX.dmxField_Value)
		} else {
			expectType(expr.value, leftType, DMX.dmxField_Value)
		}
	}
	
	@Check
	def checkFieldKind(DmxField f) {
		if (f.feature !== null && f.feature instanceof DQuery) {
			error("Cannot assign a value to a query", f,  DMX.dmxField_Feature)
		}
	}

}
