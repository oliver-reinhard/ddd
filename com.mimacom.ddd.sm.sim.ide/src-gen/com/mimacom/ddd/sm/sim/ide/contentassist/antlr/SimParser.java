/*
 * generated by Xtext 2.19.0
 */
package com.mimacom.ddd.sm.sim.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import com.mimacom.ddd.sm.sim.ide.contentassist.antlr.internal.InternalSimParser;
import com.mimacom.ddd.sm.sim.services.SimGrammarAccess;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class SimParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(SimGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, SimGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getSImportAccess().getAlternatives_1(), "rule__SImport__Alternatives_1");
			builder.put(grammarAccess.getSInformationModelAccess().getAlternatives_0(), "rule__SInformationModel__Alternatives_0");
			builder.put(grammarAccess.getSInformationModelAccess().getAlternatives_5(), "rule__SInformationModel__Alternatives_5");
			builder.put(grammarAccess.getChangeComplexTypeAccess().getAlternatives_2(), "rule__ChangeComplexType__Alternatives_2");
			builder.put(grammarAccess.getSAggregateAccess().getAlternatives(), "rule__SAggregate__Alternatives");
			builder.put(grammarAccess.getSAggregateDeductionAccess().getAlternatives_5_1(), "rule__SAggregateDeduction__Alternatives_5_1");
			builder.put(grammarAccess.getDTypeAccess().getAlternatives(), "rule__DType__Alternatives");
			builder.put(grammarAccess.getSTypeAccess().getAlternatives(), "rule__SType__Alternatives");
			builder.put(grammarAccess.getSPrimitiveDeductionAccess().getAlternatives_1(), "rule__SPrimitiveDeduction__Alternatives_1");
			builder.put(grammarAccess.getSEnumerationDeductionAccess().getAlternatives_1(), "rule__SEnumerationDeduction__Alternatives_1");
			builder.put(grammarAccess.getSLiteralAccess().getAlternatives(), "rule__SLiteral__Alternatives");
			builder.put(grammarAccess.getSLiteralDeductionAccess().getAlternatives_1(), "rule__SLiteralDeduction__Alternatives_1");
			builder.put(grammarAccess.getSEntityTypeDeductionAccess().getAlternatives_1(), "rule__SEntityTypeDeduction__Alternatives_1");
			builder.put(grammarAccess.getSDetailTypeDeductionAccess().getAlternatives_1(), "rule__SDetailTypeDeduction__Alternatives_1");
			builder.put(grammarAccess.getSComplexTypeFeaturesAccess().getAlternatives_1(), "rule__SComplexTypeFeatures__Alternatives_1");
			builder.put(grammarAccess.getSFeatureAccess().getAlternatives(), "rule__SFeature__Alternatives");
			builder.put(grammarAccess.getSAssociationDeductionAccess().getAlternatives_1(), "rule__SAssociationDeduction__Alternatives_1");
			builder.put(grammarAccess.getSAssociationDeductionAccess().getAlternatives_1_0_1(), "rule__SAssociationDeduction__Alternatives_1_0_1");
			builder.put(grammarAccess.getSAssociationDeductionAccess().getAlternatives_1_1_1(), "rule__SAssociationDeduction__Alternatives_1_1_1");
			builder.put(grammarAccess.getSAssociationDeductionAccess().getAlternatives_1_2_1(), "rule__SAssociationDeduction__Alternatives_1_2_1");
			builder.put(grammarAccess.getSAttributeDeductionAccess().getAlternatives_1(), "rule__SAttributeDeduction__Alternatives_1");
			builder.put(grammarAccess.getSAttributeDeductionAccess().getAlternatives_1_0_1(), "rule__SAttributeDeduction__Alternatives_1_0_1");
			builder.put(grammarAccess.getSAttributeDeductionAccess().getAlternatives_1_1_1(), "rule__SAttributeDeduction__Alternatives_1_1_1");
			builder.put(grammarAccess.getSAttributeDeductionAccess().getAlternatives_1_2_1(), "rule__SAttributeDeduction__Alternatives_1_2_1");
			builder.put(grammarAccess.getSQueryDeductionAccess().getAlternatives_1(), "rule__SQueryDeduction__Alternatives_1");
			builder.put(grammarAccess.getSQueryDeductionAccess().getAlternatives_1_0_0(), "rule__SQueryDeduction__Alternatives_1_0_0");
			builder.put(grammarAccess.getSQueryDeductionAccess().getAlternatives_1_0_2(), "rule__SQueryDeduction__Alternatives_1_0_2");
			builder.put(grammarAccess.getSQueryParameterAccess().getAlternatives(), "rule__SQueryParameter__Alternatives");
			builder.put(grammarAccess.getSQueryParameterDeductionAccess().getAlternatives_1(), "rule__SQueryParameterDeduction__Alternatives_1");
			builder.put(grammarAccess.getDInformationModelAccess().getAlternatives_6(), "rule__DInformationModel__Alternatives_6");
			builder.put(grammarAccess.getDEntityTypeAccess().getAlternatives_2(), "rule__DEntityType__Alternatives_2");
			builder.put(grammarAccess.getDEntityTypeAccess().getAlternatives_6(), "rule__DEntityType__Alternatives_6");
			builder.put(grammarAccess.getDDetailTypeAccess().getAlternatives_4(), "rule__DDetailType__Alternatives_4");
			builder.put(grammarAccess.getDFeatureAccess().getAlternatives(), "rule__DFeature__Alternatives");
			builder.put(grammarAccess.getDAssociationAccess().getAlternatives_3(), "rule__DAssociation__Alternatives_3");
			builder.put(grammarAccess.getDmxTestContextAccess().getAlternatives_4_1(), "rule__DmxTestContext__Alternatives_4_1");
			builder.put(grammarAccess.getDmxFilterTypeDescriptorAccess().getAlternatives_0(), "rule__DmxFilterTypeDescriptor__Alternatives_0");
			builder.put(grammarAccess.getDExpressionAccess().getAlternatives(), "rule__DExpression__Alternatives");
			builder.put(grammarAccess.getDRichTextAccess().getAlternatives(), "rule__DRichText__Alternatives");
			builder.put(grammarAccess.getDmxNavigableMemberReferenceAccess().getAlternatives_1(), "rule__DmxNavigableMemberReference__Alternatives_1");
			builder.put(grammarAccess.getDmxNavigableMemberReferenceAccess().getAlternatives_1_1_2(), "rule__DmxNavigableMemberReference__Alternatives_1_1_2");
			builder.put(grammarAccess.getDmxPredicateWithCorrelationVariableAccess().getAlternatives(), "rule__DmxPredicateWithCorrelationVariable__Alternatives");
			builder.put(grammarAccess.getDmxRelationalExpressionAccess().getAlternatives_1(), "rule__DmxRelationalExpression__Alternatives_1");
			builder.put(grammarAccess.getDmxOpInstanceOfAccess().getAlternatives(), "rule__DmxOpInstanceOf__Alternatives");
			builder.put(grammarAccess.getDmxUnaryOperationAccess().getAlternatives(), "rule__DmxUnaryOperation__Alternatives");
			builder.put(grammarAccess.getDmxOpCastAccess().getAlternatives(), "rule__DmxOpCast__Alternatives");
			builder.put(grammarAccess.getDmxPrimaryExpressionAccess().getAlternatives(), "rule__DmxPrimaryExpression__Alternatives");
			builder.put(grammarAccess.getDmxLiteralExpressionAccess().getAlternatives(), "rule__DmxLiteralExpression__Alternatives");
			builder.put(grammarAccess.getDmxStaticReferenceAccess().getAlternatives_4_1(), "rule__DmxStaticReference__Alternatives_4_1");
			builder.put(grammarAccess.getDmxContextReferenceAccess().getAlternatives_2(), "rule__DmxContextReference__Alternatives_2");
			builder.put(grammarAccess.getDMultiplicityAccess().getAlternatives(), "rule__DMultiplicity__Alternatives");
			builder.put(grammarAccess.getMULTIPLICITYAccess().getAlternatives(), "rule__MULTIPLICITY__Alternatives");
			builder.put(grammarAccess.getDmxBooleanLiteralAccess().getAlternatives_1(), "rule__DmxBooleanLiteral__Alternatives_1");
			builder.put(grammarAccess.getDmxUndefinedLiteralAccess().getAlternatives_1(), "rule__DmxUndefinedLiteral__Alternatives_1");
			builder.put(grammarAccess.getDECIMALAccess().getAlternatives_3_0(), "rule__DECIMAL__Alternatives_3_0");
			builder.put(grammarAccess.getDECIMALAccess().getAlternatives_3_1(), "rule__DECIMAL__Alternatives_3_1");
			builder.put(grammarAccess.getSInformationModelKindAccess().getAlternatives(), "rule__SInformationModelKind__Alternatives");
			builder.put(grammarAccess.getSAbstractTypeAccess().getAlternatives(), "rule__SAbstractType__Alternatives");
			builder.put(grammarAccess.getSRootEntityAccess().getAlternatives(), "rule__SRootEntity__Alternatives");
			builder.put(grammarAccess.getDAssociationKindAccess().getAlternatives(), "rule__DAssociationKind__Alternatives");
			builder.put(grammarAccess.getDmxBaseTypeAccess().getAlternatives(), "rule__DmxBaseType__Alternatives");
			builder.put(grammarAccess.getDmxOpOrAccess().getAlternatives(), "rule__DmxOpOr__Alternatives");
			builder.put(grammarAccess.getDmxOpAndAccess().getAlternatives(), "rule__DmxOpAnd__Alternatives");
			builder.put(grammarAccess.getDmxOpEqualityAccess().getAlternatives(), "rule__DmxOpEquality__Alternatives");
			builder.put(grammarAccess.getOpCompareAccess().getAlternatives(), "rule__OpCompare__Alternatives");
			builder.put(grammarAccess.getOpOtherAccess().getAlternatives(), "rule__OpOther__Alternatives");
			builder.put(grammarAccess.getOpAddAccess().getAlternatives(), "rule__OpAdd__Alternatives");
			builder.put(grammarAccess.getOpMultiAccess().getAlternatives(), "rule__OpMulti__Alternatives");
			builder.put(grammarAccess.getOpUnaryAccess().getAlternatives(), "rule__OpUnary__Alternatives");
			builder.put(grammarAccess.getDMultiplicityShorthandAccess().getAlternatives(), "rule__DMultiplicityShorthand__Alternatives");
			builder.put(grammarAccess.getDNamespaceAccess().getGroup(), "rule__DNamespace__Group__0");
			builder.put(grammarAccess.getSImportAccess().getGroup(), "rule__SImport__Group__0");
			builder.put(grammarAccess.getSImportAccess().getGroup_1_1(), "rule__SImport__Group_1_1__0");
			builder.put(grammarAccess.getSInformationModelAccess().getGroup(), "rule__SInformationModel__Group__0");
			builder.put(grammarAccess.getSInformationModelAccess().getGroup_0_0(), "rule__SInformationModel__Group_0_0__0");
			builder.put(grammarAccess.getSInformationModelAccess().getGroup_0_1(), "rule__SInformationModel__Group_0_1__0");
			builder.put(grammarAccess.getSGrabAggregateRuleAccess().getGroup(), "rule__SGrabAggregateRule__Group__0");
			builder.put(grammarAccess.getSGrabAggregateRuleAccess().getGroup_1(), "rule__SGrabAggregateRule__Group_1__0");
			builder.put(grammarAccess.getSGrabPrimitiveRuleAccess().getGroup(), "rule__SGrabPrimitiveRule__Group__0");
			builder.put(grammarAccess.getSGrabPrimitiveRuleAccess().getGroup_1(), "rule__SGrabPrimitiveRule__Group_1__0");
			builder.put(grammarAccess.getSGrabEnumerationRuleAccess().getGroup(), "rule__SGrabEnumerationRule__Group__0");
			builder.put(grammarAccess.getSGrabEnumerationRuleAccess().getGroup_1(), "rule__SGrabEnumerationRule__Group_1__0");
			builder.put(grammarAccess.getSGrabEnumerationLiteralRuleAccess().getGroup(), "rule__SGrabEnumerationLiteralRule__Group__0");
			builder.put(grammarAccess.getSGrabEnumerationLiteralRuleAccess().getGroup_1(), "rule__SGrabEnumerationLiteralRule__Group_1__0");
			builder.put(grammarAccess.getSGrabComplexTypeRuleAccess().getGroup(), "rule__SGrabComplexTypeRule__Group__0");
			builder.put(grammarAccess.getSGrabComplexTypeRuleAccess().getGroup_1(), "rule__SGrabComplexTypeRule__Group_1__0");
			builder.put(grammarAccess.getSMorphComplexTypeRuleAccess().getGroup(), "rule__SMorphComplexTypeRule__Group__0");
			builder.put(grammarAccess.getSFuseComplexTypeRuleAccess().getGroup(), "rule__SFuseComplexTypeRule__Group__0");
			builder.put(grammarAccess.getSFuseComplexTypeRuleAccess().getGroup_1(), "rule__SFuseComplexTypeRule__Group_1__0");
			builder.put(grammarAccess.getChangeComplexTypeAccess().getGroup(), "rule__ChangeComplexType__Group__0");
			builder.put(grammarAccess.getChangeComplexTypeAccess().getGroup_2_1(), "rule__ChangeComplexType__Group_2_1__0");
			builder.put(grammarAccess.getChangeComplexTypeAccess().getGroup_4(), "rule__ChangeComplexType__Group_4__0");
			builder.put(grammarAccess.getSGrabFeatureRuleAccess().getGroup(), "rule__SGrabFeatureRule__Group__0");
			builder.put(grammarAccess.getSGrabFeatureRuleAccess().getGroup_1(), "rule__SGrabFeatureRule__Group_1__0");
			builder.put(grammarAccess.getSMorphFeatureRuleAccess().getGroup(), "rule__SMorphFeatureRule__Group__0");
			builder.put(grammarAccess.getSMorphFeatureRuleAccess().getGroup_2(), "rule__SMorphFeatureRule__Group_2__0");
			builder.put(grammarAccess.getSGrabQueryParameterRuleAccess().getGroup(), "rule__SGrabQueryParameterRule__Group__0");
			builder.put(grammarAccess.getSGrabQueryParameterRuleAccess().getGroup_1(), "rule__SGrabQueryParameterRule__Group_1__0");
			builder.put(grammarAccess.getSMorphQueryParameterRuleAccess().getGroup(), "rule__SMorphQueryParameterRule__Group__0");
			builder.put(grammarAccess.getSMorphQueryParameterRuleAccess().getGroup_2(), "rule__SMorphQueryParameterRule__Group_2__0");
			builder.put(grammarAccess.getSAggregateDeductionAccess().getGroup(), "rule__SAggregateDeduction__Group__0");
			builder.put(grammarAccess.getSAggregateDeductionAccess().getGroup_5(), "rule__SAggregateDeduction__Group_5__0");
			builder.put(grammarAccess.getSAggregateDeductionAccess().getGroup_5_1_1(), "rule__SAggregateDeduction__Group_5_1_1__0");
			builder.put(grammarAccess.getSTypeAccess().getGroup_1(), "rule__SType__Group_1__0");
			builder.put(grammarAccess.getSTypeAccess().getGroup_3(), "rule__SType__Group_3__0");
			builder.put(grammarAccess.getSTypeAccess().getGroup_5(), "rule__SType__Group_5__0");
			builder.put(grammarAccess.getSTypeAccess().getGroup_7(), "rule__SType__Group_7__0");
			builder.put(grammarAccess.getSPrimitiveDeductionAccess().getGroup(), "rule__SPrimitiveDeduction__Group__0");
			builder.put(grammarAccess.getSPrimitiveDeductionAccess().getGroup_1_0(), "rule__SPrimitiveDeduction__Group_1_0__0");
			builder.put(grammarAccess.getSPrimitiveDeductionAccess().getGroup_1_1(), "rule__SPrimitiveDeduction__Group_1_1__0");
			builder.put(grammarAccess.getSPrimitiveDeductionAccess().getGroup_3(), "rule__SPrimitiveDeduction__Group_3__0");
			builder.put(grammarAccess.getSPrimitiveDeductionAccess().getGroup_3_1(), "rule__SPrimitiveDeduction__Group_3_1__0");
			builder.put(grammarAccess.getSEnumerationDeductionAccess().getGroup(), "rule__SEnumerationDeduction__Group__0");
			builder.put(grammarAccess.getSEnumerationDeductionAccess().getGroup_1_0(), "rule__SEnumerationDeduction__Group_1_0__0");
			builder.put(grammarAccess.getSEnumerationDeductionAccess().getGroup_1_1(), "rule__SEnumerationDeduction__Group_1_1__0");
			builder.put(grammarAccess.getSEnumerationDeductionAccess().getGroup_3(), "rule__SEnumerationDeduction__Group_3__0");
			builder.put(grammarAccess.getSEnumerationDeductionAccess().getGroup_3_1(), "rule__SEnumerationDeduction__Group_3_1__0");
			builder.put(grammarAccess.getSEnumerationDeductionAccess().getGroup_3_1_1(), "rule__SEnumerationDeduction__Group_3_1_1__0");
			builder.put(grammarAccess.getSEnumerationDeductionAccess().getGroup_3_2(), "rule__SEnumerationDeduction__Group_3_2__0");
			builder.put(grammarAccess.getSLiteralAccess().getGroup_1(), "rule__SLiteral__Group_1__0");
			builder.put(grammarAccess.getSLiteralDeductionAccess().getGroup(), "rule__SLiteralDeduction__Group__0");
			builder.put(grammarAccess.getSLiteralDeductionAccess().getGroup_1_0(), "rule__SLiteralDeduction__Group_1_0__0");
			builder.put(grammarAccess.getSLiteralDeductionAccess().getGroup_1_1(), "rule__SLiteralDeduction__Group_1_1__0");
			builder.put(grammarAccess.getSEntityTypeDeductionAccess().getGroup(), "rule__SEntityTypeDeduction__Group__0");
			builder.put(grammarAccess.getSEntityTypeDeductionAccess().getGroup_1_0(), "rule__SEntityTypeDeduction__Group_1_0__0");
			builder.put(grammarAccess.getSEntityTypeDeductionAccess().getGroup_1_1(), "rule__SEntityTypeDeduction__Group_1_1__0");
			builder.put(grammarAccess.getSEntityTypeDeductionAccess().getGroup_1_2(), "rule__SEntityTypeDeduction__Group_1_2__0");
			builder.put(grammarAccess.getSEntityTypeDeductionAccess().getGroup_1_3(), "rule__SEntityTypeDeduction__Group_1_3__0");
			builder.put(grammarAccess.getSDetailTypeDeductionAccess().getGroup(), "rule__SDetailTypeDeduction__Group__0");
			builder.put(grammarAccess.getSDetailTypeDeductionAccess().getGroup_1_0(), "rule__SDetailTypeDeduction__Group_1_0__0");
			builder.put(grammarAccess.getSDetailTypeDeductionAccess().getGroup_1_1(), "rule__SDetailTypeDeduction__Group_1_1__0");
			builder.put(grammarAccess.getSDetailTypeDeductionAccess().getGroup_1_2(), "rule__SDetailTypeDeduction__Group_1_2__0");
			builder.put(grammarAccess.getSDetailTypeDeductionAccess().getGroup_1_3(), "rule__SDetailTypeDeduction__Group_1_3__0");
			builder.put(grammarAccess.getSComplexTypeFeaturesAccess().getGroup(), "rule__SComplexTypeFeatures__Group__0");
			builder.put(grammarAccess.getSComplexTypeFeaturesAccess().getGroup_1_1(), "rule__SComplexTypeFeatures__Group_1_1__0");
			builder.put(grammarAccess.getSFeatureAccess().getGroup_1(), "rule__SFeature__Group_1__0");
			builder.put(grammarAccess.getSFeatureAccess().getGroup_3(), "rule__SFeature__Group_3__0");
			builder.put(grammarAccess.getSFeatureAccess().getGroup_5(), "rule__SFeature__Group_5__0");
			builder.put(grammarAccess.getSAssociationDeductionAccess().getGroup(), "rule__SAssociationDeduction__Group__0");
			builder.put(grammarAccess.getSAssociationDeductionAccess().getGroup_1_0(), "rule__SAssociationDeduction__Group_1_0__0");
			builder.put(grammarAccess.getSAssociationDeductionAccess().getGroup_1_1(), "rule__SAssociationDeduction__Group_1_1__0");
			builder.put(grammarAccess.getSAssociationDeductionAccess().getGroup_1_2(), "rule__SAssociationDeduction__Group_1_2__0");
			builder.put(grammarAccess.getSAttributeDeductionAccess().getGroup(), "rule__SAttributeDeduction__Group__0");
			builder.put(grammarAccess.getSAttributeDeductionAccess().getGroup_1_0(), "rule__SAttributeDeduction__Group_1_0__0");
			builder.put(grammarAccess.getSAttributeDeductionAccess().getGroup_1_1(), "rule__SAttributeDeduction__Group_1_1__0");
			builder.put(grammarAccess.getSAttributeDeductionAccess().getGroup_1_2(), "rule__SAttributeDeduction__Group_1_2__0");
			builder.put(grammarAccess.getSQueryDeductionAccess().getGroup(), "rule__SQueryDeduction__Group__0");
			builder.put(grammarAccess.getSQueryDeductionAccess().getGroup_1_0(), "rule__SQueryDeduction__Group_1_0__0");
			builder.put(grammarAccess.getSQueryDeductionAccess().getGroup_1_0_0_0(), "rule__SQueryDeduction__Group_1_0_0_0__0");
			builder.put(grammarAccess.getSQueryDeductionAccess().getGroup_1_0_0_1(), "rule__SQueryDeduction__Group_1_0_0_1__0");
			builder.put(grammarAccess.getSQueryDeductionAccess().getGroup_1_0_2_1(), "rule__SQueryDeduction__Group_1_0_2_1__0");
			builder.put(grammarAccess.getSQueryDeductionAccess().getGroup_1_0_2_1_1(), "rule__SQueryDeduction__Group_1_0_2_1_1__0");
			builder.put(grammarAccess.getSQueryDeductionAccess().getGroup_1_1(), "rule__SQueryDeduction__Group_1_1__0");
			builder.put(grammarAccess.getSQueryParameterAccess().getGroup_1(), "rule__SQueryParameter__Group_1__0");
			builder.put(grammarAccess.getSQueryParameterDeductionAccess().getGroup(), "rule__SQueryParameterDeduction__Group__0");
			builder.put(grammarAccess.getSQueryParameterDeductionAccess().getGroup_1_0(), "rule__SQueryParameterDeduction__Group_1_0__0");
			builder.put(grammarAccess.getSQueryParameterDeductionAccess().getGroup_1_1(), "rule__SQueryParameterDeduction__Group_1_1__0");
			builder.put(grammarAccess.getSQueryParameterDeductionAccess().getGroup_1_2(), "rule__SQueryParameterDeduction__Group_1_2__0");
			builder.put(grammarAccess.getDInformationModelAccess().getGroup(), "rule__DInformationModel__Group__0");
			builder.put(grammarAccess.getDInformationModelAccess().getGroup_3(), "rule__DInformationModel__Group_3__0");
			builder.put(grammarAccess.getDAggregateAccess().getGroup(), "rule__DAggregate__Group__0");
			builder.put(grammarAccess.getDAggregateAccess().getGroup_5(), "rule__DAggregate__Group_5__0");
			builder.put(grammarAccess.getDConstraintAccess().getGroup(), "rule__DConstraint__Group__0");
			builder.put(grammarAccess.getDConstraintAccess().getGroup_2(), "rule__DConstraint__Group_2__0");
			builder.put(grammarAccess.getDPrimitiveAccess().getGroup(), "rule__DPrimitive__Group__0");
			builder.put(grammarAccess.getDPrimitiveAccess().getGroup_2(), "rule__DPrimitive__Group_2__0");
			builder.put(grammarAccess.getDPrimitiveAccess().getGroup_6(), "rule__DPrimitive__Group_6__0");
			builder.put(grammarAccess.getDEnumerationAccess().getGroup(), "rule__DEnumeration__Group__0");
			builder.put(grammarAccess.getDEnumerationAccess().getGroup_2(), "rule__DEnumeration__Group_2__0");
			builder.put(grammarAccess.getDEnumerationAccess().getGroup_5(), "rule__DEnumeration__Group_5__0");
			builder.put(grammarAccess.getDEnumerationAccess().getGroup_5_1(), "rule__DEnumeration__Group_5_1__0");
			builder.put(grammarAccess.getDLiteralAccess().getGroup(), "rule__DLiteral__Group__0");
			builder.put(grammarAccess.getDLiteralAccess().getGroup_1(), "rule__DLiteral__Group_1__0");
			builder.put(grammarAccess.getDEntityTypeAccess().getGroup(), "rule__DEntityType__Group__0");
			builder.put(grammarAccess.getDEntityTypeAccess().getGroup_2_1(), "rule__DEntityType__Group_2_1__0");
			builder.put(grammarAccess.getDEntityTypeAccess().getGroup_5(), "rule__DEntityType__Group_5__0");
			builder.put(grammarAccess.getDEntityTypeAccess().getGroup_5_3(), "rule__DEntityType__Group_5_3__0");
			builder.put(grammarAccess.getDEntityTypeAccess().getGroup_5_5(), "rule__DEntityType__Group_5_5__0");
			builder.put(grammarAccess.getDEntityTypeAccess().getGroup_5_5_3(), "rule__DEntityType__Group_5_5_3__0");
			builder.put(grammarAccess.getDDetailTypeAccess().getGroup(), "rule__DDetailType__Group__0");
			builder.put(grammarAccess.getDComplexTypeAccess().getGroup(), "rule__DComplexType__Group__0");
			builder.put(grammarAccess.getDComplexTypeAccess().getGroup_1(), "rule__DComplexType__Group_1__0");
			builder.put(grammarAccess.getDComplexTypeAccess().getGroup_2(), "rule__DComplexType__Group_2__0");
			builder.put(grammarAccess.getDAssociationAccess().getGroup(), "rule__DAssociation__Group__0");
			builder.put(grammarAccess.getDAssociationAccess().getGroup_2(), "rule__DAssociation__Group_2__0");
			builder.put(grammarAccess.getDAssociationAccess().getGroup_3_1(), "rule__DAssociation__Group_3_1__0");
			builder.put(grammarAccess.getDAttributeAccess().getGroup(), "rule__DAttribute__Group__0");
			builder.put(grammarAccess.getDAttributeAccess().getGroup_2(), "rule__DAttribute__Group_2__0");
			builder.put(grammarAccess.getDQueryAccess().getGroup(), "rule__DQuery__Group__0");
			builder.put(grammarAccess.getDQueryAccess().getGroup_1(), "rule__DQuery__Group_1__0");
			builder.put(grammarAccess.getDQueryAccess().getGroup_3(), "rule__DQuery__Group_3__0");
			builder.put(grammarAccess.getDQueryAccess().getGroup_3_1(), "rule__DQuery__Group_3_1__0");
			builder.put(grammarAccess.getDQueryAccess().getGroup_8(), "rule__DQuery__Group_8__0");
			builder.put(grammarAccess.getDQueryParameterAccess().getGroup(), "rule__DQueryParameter__Group__0");
			builder.put(grammarAccess.getDmxModelAccess().getGroup(), "rule__DmxModel__Group__0");
			builder.put(grammarAccess.getDImportAccess().getGroup(), "rule__DImport__Group__0");
			builder.put(grammarAccess.getDmxTestAccess().getGroup(), "rule__DmxTest__Group__0");
			builder.put(grammarAccess.getDmxTestAccess().getGroup_2(), "rule__DmxTest__Group_2__0");
			builder.put(grammarAccess.getDmxTestAccess().getGroup_2_2(), "rule__DmxTest__Group_2_2__0");
			builder.put(grammarAccess.getDmxTestContextAccess().getGroup(), "rule__DmxTestContext__Group__0");
			builder.put(grammarAccess.getDmxTestContextAccess().getGroup_4(), "rule__DmxTestContext__Group_4__0");
			builder.put(grammarAccess.getDmxBaseTypeSetAccess().getGroup(), "rule__DmxBaseTypeSet__Group__0");
			builder.put(grammarAccess.getDmxBaseTypeSetAccess().getGroup_4(), "rule__DmxBaseTypeSet__Group_4__0");
			builder.put(grammarAccess.getDmxArchetypeAccess().getGroup(), "rule__DmxArchetype__Group__0");
			builder.put(grammarAccess.getDmxFilterAccess().getGroup(), "rule__DmxFilter__Group__0");
			builder.put(grammarAccess.getDmxFilterAccess().getGroup_3(), "rule__DmxFilter__Group_3__0");
			builder.put(grammarAccess.getDmxFilterAccess().getGroup_3_1(), "rule__DmxFilter__Group_3_1__0");
			builder.put(grammarAccess.getDmxFilterAccess().getGroup_7(), "rule__DmxFilter__Group_7__0");
			builder.put(grammarAccess.getDmxFilterTypeDescriptorAccess().getGroup(), "rule__DmxFilterTypeDescriptor__Group__0");
			builder.put(grammarAccess.getDmxFilterParameterAccess().getGroup(), "rule__DmxFilterParameter__Group__0");
			builder.put(grammarAccess.getDRichTextAccess().getGroup_1(), "rule__DRichText__Group_1__0");
			builder.put(grammarAccess.getDRichTextAccess().getGroup_1_2(), "rule__DRichText__Group_1_2__0");
			builder.put(grammarAccess.getDmxNavigableMemberReferenceAccess().getGroup(), "rule__DmxNavigableMemberReference__Group__0");
			builder.put(grammarAccess.getDmxNavigableMemberReferenceAccess().getGroup_1_0(), "rule__DmxNavigableMemberReference__Group_1_0__0");
			builder.put(grammarAccess.getDmxNavigableMemberReferenceAccess().getGroup_1_0_0(), "rule__DmxNavigableMemberReference__Group_1_0_0__0");
			builder.put(grammarAccess.getDmxNavigableMemberReferenceAccess().getGroup_1_0_0_0(), "rule__DmxNavigableMemberReference__Group_1_0_0_0__0");
			builder.put(grammarAccess.getDmxNavigableMemberReferenceAccess().getGroup_1_1(), "rule__DmxNavigableMemberReference__Group_1_1__0");
			builder.put(grammarAccess.getDmxNavigableMemberReferenceAccess().getGroup_1_1_0(), "rule__DmxNavigableMemberReference__Group_1_1_0__0");
			builder.put(grammarAccess.getDmxNavigableMemberReferenceAccess().getGroup_1_1_0_0(), "rule__DmxNavigableMemberReference__Group_1_1_0_0__0");
			builder.put(grammarAccess.getDmxNavigableMemberReferenceAccess().getGroup_1_1_2_0(), "rule__DmxNavigableMemberReference__Group_1_1_2_0__0");
			builder.put(grammarAccess.getDmxCallArgumentsAccess().getGroup(), "rule__DmxCallArguments__Group__0");
			builder.put(grammarAccess.getDmxCallArgumentsAccess().getGroup_1(), "rule__DmxCallArguments__Group_1__0");
			builder.put(grammarAccess.getDmxCallArgumentsAccess().getGroup_1_1(), "rule__DmxCallArguments__Group_1_1__0");
			builder.put(grammarAccess.getDmxAssignmentAccess().getGroup(), "rule__DmxAssignment__Group__0");
			builder.put(grammarAccess.getDmxPredicateWithCorrelationVariableAccess().getGroup_0(), "rule__DmxPredicateWithCorrelationVariable__Group_0__0");
			builder.put(grammarAccess.getDmxOrExpressionAccess().getGroup(), "rule__DmxOrExpression__Group__0");
			builder.put(grammarAccess.getDmxOrExpressionAccess().getGroup_1(), "rule__DmxOrExpression__Group_1__0");
			builder.put(grammarAccess.getDmxOrExpressionAccess().getGroup_1_0(), "rule__DmxOrExpression__Group_1_0__0");
			builder.put(grammarAccess.getDmxOrExpressionAccess().getGroup_1_0_0(), "rule__DmxOrExpression__Group_1_0_0__0");
			builder.put(grammarAccess.getDmxAndExpressionAccess().getGroup(), "rule__DmxAndExpression__Group__0");
			builder.put(grammarAccess.getDmxAndExpressionAccess().getGroup_1(), "rule__DmxAndExpression__Group_1__0");
			builder.put(grammarAccess.getDmxAndExpressionAccess().getGroup_1_0(), "rule__DmxAndExpression__Group_1_0__0");
			builder.put(grammarAccess.getDmxAndExpressionAccess().getGroup_1_0_0(), "rule__DmxAndExpression__Group_1_0_0__0");
			builder.put(grammarAccess.getDmxEqualityExpressionAccess().getGroup(), "rule__DmxEqualityExpression__Group__0");
			builder.put(grammarAccess.getDmxEqualityExpressionAccess().getGroup_1(), "rule__DmxEqualityExpression__Group_1__0");
			builder.put(grammarAccess.getDmxEqualityExpressionAccess().getGroup_1_0(), "rule__DmxEqualityExpression__Group_1_0__0");
			builder.put(grammarAccess.getDmxEqualityExpressionAccess().getGroup_1_0_0(), "rule__DmxEqualityExpression__Group_1_0_0__0");
			builder.put(grammarAccess.getDmxRelationalExpressionAccess().getGroup(), "rule__DmxRelationalExpression__Group__0");
			builder.put(grammarAccess.getDmxRelationalExpressionAccess().getGroup_1_0(), "rule__DmxRelationalExpression__Group_1_0__0");
			builder.put(grammarAccess.getDmxRelationalExpressionAccess().getGroup_1_0_0(), "rule__DmxRelationalExpression__Group_1_0_0__0");
			builder.put(grammarAccess.getDmxRelationalExpressionAccess().getGroup_1_0_0_0(), "rule__DmxRelationalExpression__Group_1_0_0_0__0");
			builder.put(grammarAccess.getDmxRelationalExpressionAccess().getGroup_1_1(), "rule__DmxRelationalExpression__Group_1_1__0");
			builder.put(grammarAccess.getDmxRelationalExpressionAccess().getGroup_1_1_0(), "rule__DmxRelationalExpression__Group_1_1_0__0");
			builder.put(grammarAccess.getDmxRelationalExpressionAccess().getGroup_1_1_0_0(), "rule__DmxRelationalExpression__Group_1_1_0_0__0");
			builder.put(grammarAccess.getDmxOtherOperatorExpressionAccess().getGroup(), "rule__DmxOtherOperatorExpression__Group__0");
			builder.put(grammarAccess.getDmxOtherOperatorExpressionAccess().getGroup_1(), "rule__DmxOtherOperatorExpression__Group_1__0");
			builder.put(grammarAccess.getDmxOtherOperatorExpressionAccess().getGroup_1_0(), "rule__DmxOtherOperatorExpression__Group_1_0__0");
			builder.put(grammarAccess.getDmxOtherOperatorExpressionAccess().getGroup_1_0_0(), "rule__DmxOtherOperatorExpression__Group_1_0_0__0");
			builder.put(grammarAccess.getDmxAdditiveExpressionAccess().getGroup(), "rule__DmxAdditiveExpression__Group__0");
			builder.put(grammarAccess.getDmxAdditiveExpressionAccess().getGroup_1(), "rule__DmxAdditiveExpression__Group_1__0");
			builder.put(grammarAccess.getDmxAdditiveExpressionAccess().getGroup_1_0(), "rule__DmxAdditiveExpression__Group_1_0__0");
			builder.put(grammarAccess.getDmxAdditiveExpressionAccess().getGroup_1_0_0(), "rule__DmxAdditiveExpression__Group_1_0_0__0");
			builder.put(grammarAccess.getDmxMultiplicativeExpressionAccess().getGroup(), "rule__DmxMultiplicativeExpression__Group__0");
			builder.put(grammarAccess.getDmxMultiplicativeExpressionAccess().getGroup_1(), "rule__DmxMultiplicativeExpression__Group_1__0");
			builder.put(grammarAccess.getDmxMultiplicativeExpressionAccess().getGroup_1_0(), "rule__DmxMultiplicativeExpression__Group_1_0__0");
			builder.put(grammarAccess.getDmxMultiplicativeExpressionAccess().getGroup_1_0_0(), "rule__DmxMultiplicativeExpression__Group_1_0_0__0");
			builder.put(grammarAccess.getDmxUnaryOperationAccess().getGroup_0(), "rule__DmxUnaryOperation__Group_0__0");
			builder.put(grammarAccess.getDmxCastExpressionAccess().getGroup(), "rule__DmxCastExpression__Group__0");
			builder.put(grammarAccess.getDmxCastExpressionAccess().getGroup_1(), "rule__DmxCastExpression__Group_1__0");
			builder.put(grammarAccess.getDmxCastExpressionAccess().getGroup_1_0(), "rule__DmxCastExpression__Group_1_0__0");
			builder.put(grammarAccess.getDmxCastExpressionAccess().getGroup_1_0_0(), "rule__DmxCastExpression__Group_1_0_0__0");
			builder.put(grammarAccess.getDmxParenthesizedExpressionAccess().getGroup(), "rule__DmxParenthesizedExpression__Group__0");
			builder.put(grammarAccess.getDmxListExpressionAccess().getGroup(), "rule__DmxListExpression__Group__0");
			builder.put(grammarAccess.getDmxListExpressionAccess().getGroup_2(), "rule__DmxListExpression__Group_2__0");
			builder.put(grammarAccess.getDmxListExpressionAccess().getGroup_2_1(), "rule__DmxListExpression__Group_2_1__0");
			builder.put(grammarAccess.getDmxLiteralListExpressionAccess().getGroup(), "rule__DmxLiteralListExpression__Group__0");
			builder.put(grammarAccess.getDmxLiteralListExpressionAccess().getGroup_2(), "rule__DmxLiteralListExpression__Group_2__0");
			builder.put(grammarAccess.getDmxLiteralListExpressionAccess().getGroup_2_1(), "rule__DmxLiteralListExpression__Group_2_1__0");
			builder.put(grammarAccess.getDmxFunctionCallAccess().getGroup(), "rule__DmxFunctionCall__Group__0");
			builder.put(grammarAccess.getDmxFunctionCallArgumentsAccess().getGroup(), "rule__DmxFunctionCallArguments__Group__0");
			builder.put(grammarAccess.getDmxFunctionCallArgumentsAccess().getGroup_1(), "rule__DmxFunctionCallArguments__Group_1__0");
			builder.put(grammarAccess.getDmxFunctionCallArgumentsAccess().getGroup_1_1(), "rule__DmxFunctionCallArguments__Group_1_1__0");
			builder.put(grammarAccess.getDmxEntityAccess().getGroup(), "rule__DmxEntity__Group__0");
			builder.put(grammarAccess.getDmxDetailAccess().getGroup(), "rule__DmxDetail__Group__0");
			builder.put(grammarAccess.getDmxComplexObjectAccess().getGroup(), "rule__DmxComplexObject__Group__0");
			builder.put(grammarAccess.getDmxFieldAccess().getGroup(), "rule__DmxField__Group__0");
			builder.put(grammarAccess.getDmxStaticReferenceAccess().getGroup(), "rule__DmxStaticReference__Group__0");
			builder.put(grammarAccess.getDmxStaticReferenceAccess().getGroup_3(), "rule__DmxStaticReference__Group_3__0");
			builder.put(grammarAccess.getDmxStaticReferenceAccess().getGroup_4(), "rule__DmxStaticReference__Group_4__0");
			builder.put(grammarAccess.getDmxContextReferenceAccess().getGroup(), "rule__DmxContextReference__Group__0");
			builder.put(grammarAccess.getDmxContextReferenceAccess().getGroup_2_1(), "rule__DmxContextReference__Group_2_1__0");
			builder.put(grammarAccess.getDmxIfExpressionAccess().getGroup(), "rule__DmxIfExpression__Group__0");
			builder.put(grammarAccess.getDmxIfExpressionAccess().getGroup_5(), "rule__DmxIfExpression__Group_5__0");
			builder.put(grammarAccess.getDMultiplicityAccess().getGroup_1(), "rule__DMultiplicity__Group_1__0");
			builder.put(grammarAccess.getDmxBooleanLiteralAccess().getGroup(), "rule__DmxBooleanLiteral__Group__0");
			builder.put(grammarAccess.getDmxNaturalLiteralAccess().getGroup(), "rule__DmxNaturalLiteral__Group__0");
			builder.put(grammarAccess.getDmxDecimalLiteralAccess().getGroup(), "rule__DmxDecimalLiteral__Group__0");
			builder.put(grammarAccess.getDmxStringLiteralAccess().getGroup(), "rule__DmxStringLiteral__Group__0");
			builder.put(grammarAccess.getDmxUndefinedLiteralAccess().getGroup(), "rule__DmxUndefinedLiteral__Group__0");
			builder.put(grammarAccess.getDmxUrlLiteralAccess().getGroup(), "rule__DmxUrlLiteral__Group__0");
			builder.put(grammarAccess.getDmxUrlLiteralAccess().getGroup_3(), "rule__DmxUrlLiteral__Group_3__0");
			builder.put(grammarAccess.getDECIMALAccess().getGroup(), "rule__DECIMAL__Group__0");
			builder.put(grammarAccess.getDECIMALAccess().getGroup_3(), "rule__DECIMAL__Group_3__0");
			builder.put(grammarAccess.getDQualifiedNameWithWildcardAccess().getGroup(), "rule__DQualifiedNameWithWildcard__Group__0");
			builder.put(grammarAccess.getDQualifiedNameAccess().getGroup(), "rule__DQualifiedName__Group__0");
			builder.put(grammarAccess.getDQualifiedNameAccess().getGroup_1(), "rule__DQualifiedName__Group_1__0");
			builder.put(grammarAccess.getDNamespaceAccess().getNameAssignment_1(), "rule__DNamespace__NameAssignment_1");
			builder.put(grammarAccess.getDNamespaceAccess().getImportsAssignment_2(), "rule__DNamespace__ImportsAssignment_2");
			builder.put(grammarAccess.getDNamespaceAccess().getModelAssignment_3(), "rule__DNamespace__ModelAssignment_3");
			builder.put(grammarAccess.getSImportAccess().getImportedNamespaceAssignment_1_0(), "rule__SImport__ImportedNamespaceAssignment_1_0");
			builder.put(grammarAccess.getSImportAccess().getModelAssignment_1_1_1(), "rule__SImport__ModelAssignment_1_1_1");
			builder.put(grammarAccess.getSInformationModelAccess().getKindAssignment_0_0_0(), "rule__SInformationModel__KindAssignment_0_0_0");
			builder.put(grammarAccess.getSInformationModelAccess().getKindAssignment_0_1_0(), "rule__SInformationModel__KindAssignment_0_1_0");
			builder.put(grammarAccess.getSInformationModelAccess().getNameAssignment_1(), "rule__SInformationModel__NameAssignment_1");
			builder.put(grammarAccess.getSInformationModelAccess().getGenerateAssignment_2(), "rule__SInformationModel__GenerateAssignment_2");
			builder.put(grammarAccess.getSInformationModelAccess().getDescriptionAssignment_3(), "rule__SInformationModel__DescriptionAssignment_3");
			builder.put(grammarAccess.getSInformationModelAccess().getTypesAssignment_5_0(), "rule__SInformationModel__TypesAssignment_5_0");
			builder.put(grammarAccess.getSInformationModelAccess().getAggregatesAssignment_5_1(), "rule__SInformationModel__AggregatesAssignment_5_1");
			builder.put(grammarAccess.getSGrabAggregateRuleAccess().getSourceAssignment_0(), "rule__SGrabAggregateRule__SourceAssignment_0");
			builder.put(grammarAccess.getSGrabAggregateRuleAccess().getRenameToAssignment_1_1(), "rule__SGrabAggregateRule__RenameToAssignment_1_1");
			builder.put(grammarAccess.getSGrabPrimitiveRuleAccess().getSourceAssignment_0(), "rule__SGrabPrimitiveRule__SourceAssignment_0");
			builder.put(grammarAccess.getSGrabPrimitiveRuleAccess().getRenameToAssignment_1_1(), "rule__SGrabPrimitiveRule__RenameToAssignment_1_1");
			builder.put(grammarAccess.getSDitchPrimitiveRuleAccess().getSourceAssignment(), "rule__SDitchPrimitiveRule__SourceAssignment");
			builder.put(grammarAccess.getSGrabEnumerationRuleAccess().getSourceAssignment_0(), "rule__SGrabEnumerationRule__SourceAssignment_0");
			builder.put(grammarAccess.getSGrabEnumerationRuleAccess().getRenameToAssignment_1_1(), "rule__SGrabEnumerationRule__RenameToAssignment_1_1");
			builder.put(grammarAccess.getSDitchEnumerationRuleAccess().getSourceAssignment(), "rule__SDitchEnumerationRule__SourceAssignment");
			builder.put(grammarAccess.getSGrabEnumerationLiteralRuleAccess().getSourceAssignment_0(), "rule__SGrabEnumerationLiteralRule__SourceAssignment_0");
			builder.put(grammarAccess.getSGrabEnumerationLiteralRuleAccess().getRenameToAssignment_1_1(), "rule__SGrabEnumerationLiteralRule__RenameToAssignment_1_1");
			builder.put(grammarAccess.getSDitchEnumerationLiteralRuleAccess().getSourceAssignment(), "rule__SDitchEnumerationLiteralRule__SourceAssignment");
			builder.put(grammarAccess.getSGrabComplexTypeRuleAccess().getSourceAssignment_0(), "rule__SGrabComplexTypeRule__SourceAssignment_0");
			builder.put(grammarAccess.getSGrabComplexTypeRuleAccess().getRenameToAssignment_1_1(), "rule__SGrabComplexTypeRule__RenameToAssignment_1_1");
			builder.put(grammarAccess.getSDitchComplexTypeRuleAccess().getSourceAssignment(), "rule__SDitchComplexTypeRule__SourceAssignment");
			builder.put(grammarAccess.getSMorphComplexTypeRuleAccess().getSourceAssignment_0(), "rule__SMorphComplexTypeRule__SourceAssignment_0");
			builder.put(grammarAccess.getSFuseComplexTypeRuleAccess().getSourceAssignment_0(), "rule__SFuseComplexTypeRule__SourceAssignment_0");
			builder.put(grammarAccess.getSFuseComplexTypeRuleAccess().getOtherSourcesAssignment_1_1(), "rule__SFuseComplexTypeRule__OtherSourcesAssignment_1_1");
			builder.put(grammarAccess.getChangeComplexTypeAccess().getAbstractAssignment_1(), "rule__ChangeComplexType__AbstractAssignment_1");
			builder.put(grammarAccess.getChangeComplexTypeAccess().getDetailAssignment_2_0(), "rule__ChangeComplexType__DetailAssignment_2_0");
			builder.put(grammarAccess.getChangeComplexTypeAccess().getRootEntityAssignment_2_1_0(), "rule__ChangeComplexType__RootEntityAssignment_2_1_0");
			builder.put(grammarAccess.getChangeComplexTypeAccess().getDetailAssignment_2_1_1(), "rule__ChangeComplexType__DetailAssignment_2_1_1");
			builder.put(grammarAccess.getChangeComplexTypeAccess().getRenameToAssignment_3(), "rule__ChangeComplexType__RenameToAssignment_3");
			builder.put(grammarAccess.getChangeComplexTypeAccess().getExtendFromAssignment_4_1(), "rule__ChangeComplexType__ExtendFromAssignment_4_1");
			builder.put(grammarAccess.getSGrabFeatureRuleAccess().getSourceAssignment_0(), "rule__SGrabFeatureRule__SourceAssignment_0");
			builder.put(grammarAccess.getSGrabFeatureRuleAccess().getRenameToAssignment_1_1(), "rule__SGrabFeatureRule__RenameToAssignment_1_1");
			builder.put(grammarAccess.getSMorphFeatureRuleAccess().getSourceAssignment_0(), "rule__SMorphFeatureRule__SourceAssignment_0");
			builder.put(grammarAccess.getSMorphFeatureRuleAccess().getRenameToAssignment_2_0(), "rule__SMorphFeatureRule__RenameToAssignment_2_0");
			builder.put(grammarAccess.getSMorphFeatureRuleAccess().getRetypeToAssignment_3(), "rule__SMorphFeatureRule__RetypeToAssignment_3");
			builder.put(grammarAccess.getSMorphFeatureRuleAccess().getRemultiplyToAssignment_4(), "rule__SMorphFeatureRule__RemultiplyToAssignment_4");
			builder.put(grammarAccess.getSDitchFeatureRuleAccess().getSourceAssignment(), "rule__SDitchFeatureRule__SourceAssignment");
			builder.put(grammarAccess.getSGrabQueryParameterRuleAccess().getSourceAssignment_0(), "rule__SGrabQueryParameterRule__SourceAssignment_0");
			builder.put(grammarAccess.getSGrabQueryParameterRuleAccess().getRenameToAssignment_1_1(), "rule__SGrabQueryParameterRule__RenameToAssignment_1_1");
			builder.put(grammarAccess.getSMorphQueryParameterRuleAccess().getSourceAssignment_0(), "rule__SMorphQueryParameterRule__SourceAssignment_0");
			builder.put(grammarAccess.getSMorphQueryParameterRuleAccess().getRenameToAssignment_2_0(), "rule__SMorphQueryParameterRule__RenameToAssignment_2_0");
			builder.put(grammarAccess.getSMorphQueryParameterRuleAccess().getRetypeToAssignment_3(), "rule__SMorphQueryParameterRule__RetypeToAssignment_3");
			builder.put(grammarAccess.getSMorphQueryParameterRuleAccess().getRemultiplyToAssignment_4(), "rule__SMorphQueryParameterRule__RemultiplyToAssignment_4");
			builder.put(grammarAccess.getSDitchQueryParameterRuleAccess().getSourceAssignment(), "rule__SDitchQueryParameterRule__SourceAssignment");
			builder.put(grammarAccess.getSAggregateDeductionAccess().getDeductionRuleAssignment_3(), "rule__SAggregateDeduction__DeductionRuleAssignment_3");
			builder.put(grammarAccess.getSAggregateDeductionAccess().getDescriptionAssignment_4(), "rule__SAggregateDeduction__DescriptionAssignment_4");
			builder.put(grammarAccess.getSAggregateDeductionAccess().getFeaturesAssignment_5_1_0(), "rule__SAggregateDeduction__FeaturesAssignment_5_1_0");
			builder.put(grammarAccess.getSAggregateDeductionAccess().getFeaturesAssignment_5_1_1_2(), "rule__SAggregateDeduction__FeaturesAssignment_5_1_1_2");
			builder.put(grammarAccess.getSAggregateDeductionAccess().getTypesAssignment_5_2(), "rule__SAggregateDeduction__TypesAssignment_5_2");
			builder.put(grammarAccess.getSPrimitiveDeductionAccess().getDeductionRuleAssignment_1_0_2(), "rule__SPrimitiveDeduction__DeductionRuleAssignment_1_0_2");
			builder.put(grammarAccess.getSPrimitiveDeductionAccess().getDeductionRuleAssignment_1_1_2(), "rule__SPrimitiveDeduction__DeductionRuleAssignment_1_1_2");
			builder.put(grammarAccess.getSPrimitiveDeductionAccess().getDescriptionAssignment_2(), "rule__SPrimitiveDeduction__DescriptionAssignment_2");
			builder.put(grammarAccess.getSPrimitiveDeductionAccess().getConstraintsAssignment_3_1_1(), "rule__SPrimitiveDeduction__ConstraintsAssignment_3_1_1");
			builder.put(grammarAccess.getSEnumerationDeductionAccess().getDeductionRuleAssignment_1_0_2(), "rule__SEnumerationDeduction__DeductionRuleAssignment_1_0_2");
			builder.put(grammarAccess.getSEnumerationDeductionAccess().getDeductionRuleAssignment_1_1_2(), "rule__SEnumerationDeduction__DeductionRuleAssignment_1_1_2");
			builder.put(grammarAccess.getSEnumerationDeductionAccess().getDescriptionAssignment_2(), "rule__SEnumerationDeduction__DescriptionAssignment_2");
			builder.put(grammarAccess.getSEnumerationDeductionAccess().getLiteralsAssignment_3_1_0(), "rule__SEnumerationDeduction__LiteralsAssignment_3_1_0");
			builder.put(grammarAccess.getSEnumerationDeductionAccess().getLiteralsAssignment_3_1_1_1(), "rule__SEnumerationDeduction__LiteralsAssignment_3_1_1_1");
			builder.put(grammarAccess.getSEnumerationDeductionAccess().getConstraintsAssignment_3_2_1(), "rule__SEnumerationDeduction__ConstraintsAssignment_3_2_1");
			builder.put(grammarAccess.getSLiteralDeductionAccess().getDeductionRuleAssignment_1_0_1(), "rule__SLiteralDeduction__DeductionRuleAssignment_1_0_1");
			builder.put(grammarAccess.getSLiteralDeductionAccess().getDeductionRuleAssignment_1_1_1(), "rule__SLiteralDeduction__DeductionRuleAssignment_1_1_1");
			builder.put(grammarAccess.getSLiteralDeductionAccess().getDescriptionAssignment_2(), "rule__SLiteralDeduction__DescriptionAssignment_2");
			builder.put(grammarAccess.getSEntityTypeDeductionAccess().getRootAssignment_1_0_1(), "rule__SEntityTypeDeduction__RootAssignment_1_0_1");
			builder.put(grammarAccess.getSEntityTypeDeductionAccess().getDeductionRuleAssignment_1_0_3(), "rule__SEntityTypeDeduction__DeductionRuleAssignment_1_0_3");
			builder.put(grammarAccess.getSEntityTypeDeductionAccess().getRootAssignment_1_1_1(), "rule__SEntityTypeDeduction__RootAssignment_1_1_1");
			builder.put(grammarAccess.getSEntityTypeDeductionAccess().getDeductionRuleAssignment_1_1_3(), "rule__SEntityTypeDeduction__DeductionRuleAssignment_1_1_3");
			builder.put(grammarAccess.getSEntityTypeDeductionAccess().getRootAssignment_1_2_1(), "rule__SEntityTypeDeduction__RootAssignment_1_2_1");
			builder.put(grammarAccess.getSEntityTypeDeductionAccess().getDeductionRuleAssignment_1_2_3(), "rule__SEntityTypeDeduction__DeductionRuleAssignment_1_2_3");
			builder.put(grammarAccess.getSEntityTypeDeductionAccess().getRootAssignment_1_3_1(), "rule__SEntityTypeDeduction__RootAssignment_1_3_1");
			builder.put(grammarAccess.getSEntityTypeDeductionAccess().getDeductionRuleAssignment_1_3_3(), "rule__SEntityTypeDeduction__DeductionRuleAssignment_1_3_3");
			builder.put(grammarAccess.getSEntityTypeDeductionAccess().getDescriptionAssignment_2(), "rule__SEntityTypeDeduction__DescriptionAssignment_2");
			builder.put(grammarAccess.getSDetailTypeDeductionAccess().getDeductionRuleAssignment_1_0_2(), "rule__SDetailTypeDeduction__DeductionRuleAssignment_1_0_2");
			builder.put(grammarAccess.getSDetailTypeDeductionAccess().getDeductionRuleAssignment_1_1_2(), "rule__SDetailTypeDeduction__DeductionRuleAssignment_1_1_2");
			builder.put(grammarAccess.getSDetailTypeDeductionAccess().getDeductionRuleAssignment_1_2_2(), "rule__SDetailTypeDeduction__DeductionRuleAssignment_1_2_2");
			builder.put(grammarAccess.getSDetailTypeDeductionAccess().getDeductionRuleAssignment_1_3_2(), "rule__SDetailTypeDeduction__DeductionRuleAssignment_1_3_2");
			builder.put(grammarAccess.getSDetailTypeDeductionAccess().getDescriptionAssignment_2(), "rule__SDetailTypeDeduction__DescriptionAssignment_2");
			builder.put(grammarAccess.getSComplexTypeFeaturesAccess().getFeaturesAssignment_1_0(), "rule__SComplexTypeFeatures__FeaturesAssignment_1_0");
			builder.put(grammarAccess.getSComplexTypeFeaturesAccess().getConstraintsAssignment_1_1_1(), "rule__SComplexTypeFeatures__ConstraintsAssignment_1_1_1");
			builder.put(grammarAccess.getSAssociationDeductionAccess().getDeductionRuleAssignment_1_0_2(), "rule__SAssociationDeduction__DeductionRuleAssignment_1_0_2");
			builder.put(grammarAccess.getSAssociationDeductionAccess().getDeductionRuleAssignment_1_1_2(), "rule__SAssociationDeduction__DeductionRuleAssignment_1_1_2");
			builder.put(grammarAccess.getSAssociationDeductionAccess().getDeductionRuleAssignment_1_2_2(), "rule__SAssociationDeduction__DeductionRuleAssignment_1_2_2");
			builder.put(grammarAccess.getSAssociationDeductionAccess().getDescriptionAssignment_2(), "rule__SAssociationDeduction__DescriptionAssignment_2");
			builder.put(grammarAccess.getSAttributeDeductionAccess().getDetailAssignment_1_0_1_1(), "rule__SAttributeDeduction__DetailAssignment_1_0_1_1");
			builder.put(grammarAccess.getSAttributeDeductionAccess().getDeductionRuleAssignment_1_0_2(), "rule__SAttributeDeduction__DeductionRuleAssignment_1_0_2");
			builder.put(grammarAccess.getSAttributeDeductionAccess().getDetailAssignment_1_1_1_1(), "rule__SAttributeDeduction__DetailAssignment_1_1_1_1");
			builder.put(grammarAccess.getSAttributeDeductionAccess().getDeductionRuleAssignment_1_1_2(), "rule__SAttributeDeduction__DeductionRuleAssignment_1_1_2");
			builder.put(grammarAccess.getSAttributeDeductionAccess().getDetailAssignment_1_2_1_1(), "rule__SAttributeDeduction__DetailAssignment_1_2_1_1");
			builder.put(grammarAccess.getSAttributeDeductionAccess().getDeductionRuleAssignment_1_2_2(), "rule__SAttributeDeduction__DeductionRuleAssignment_1_2_2");
			builder.put(grammarAccess.getSAttributeDeductionAccess().getDescriptionAssignment_2(), "rule__SAttributeDeduction__DescriptionAssignment_2");
			builder.put(grammarAccess.getSQueryDeductionAccess().getDeductionRuleAssignment_1_0_0_0_2(), "rule__SQueryDeduction__DeductionRuleAssignment_1_0_0_0_2");
			builder.put(grammarAccess.getSQueryDeductionAccess().getDeductionRuleAssignment_1_0_0_1_2(), "rule__SQueryDeduction__DeductionRuleAssignment_1_0_0_1_2");
			builder.put(grammarAccess.getSQueryDeductionAccess().getParametersAssignment_1_0_2_1_0(), "rule__SQueryDeduction__ParametersAssignment_1_0_2_1_0");
			builder.put(grammarAccess.getSQueryDeductionAccess().getParametersAssignment_1_0_2_1_1_1(), "rule__SQueryDeduction__ParametersAssignment_1_0_2_1_1_1");
			builder.put(grammarAccess.getSQueryDeductionAccess().getDeductionRuleAssignment_1_1_2(), "rule__SQueryDeduction__DeductionRuleAssignment_1_1_2");
			builder.put(grammarAccess.getSQueryDeductionAccess().getDescriptionAssignment_2(), "rule__SQueryDeduction__DescriptionAssignment_2");
			builder.put(grammarAccess.getSQueryParameterDeductionAccess().getDeductionRuleAssignment_1_0_1(), "rule__SQueryParameterDeduction__DeductionRuleAssignment_1_0_1");
			builder.put(grammarAccess.getSQueryParameterDeductionAccess().getDeductionRuleAssignment_1_1_1(), "rule__SQueryParameterDeduction__DeductionRuleAssignment_1_1_1");
			builder.put(grammarAccess.getSQueryParameterDeductionAccess().getDeductionRuleAssignment_1_2_1(), "rule__SQueryParameterDeduction__DeductionRuleAssignment_1_2_1");
			builder.put(grammarAccess.getSQueryParameterDeductionAccess().getDescriptionAssignment_2(), "rule__SQueryParameterDeduction__DescriptionAssignment_2");
			builder.put(grammarAccess.getDInformationModelAccess().getNameAssignment_2(), "rule__DInformationModel__NameAssignment_2");
			builder.put(grammarAccess.getDInformationModelAccess().getAliasesAssignment_3_1(), "rule__DInformationModel__AliasesAssignment_3_1");
			builder.put(grammarAccess.getDInformationModelAccess().getDescriptionAssignment_4(), "rule__DInformationModel__DescriptionAssignment_4");
			builder.put(grammarAccess.getDInformationModelAccess().getTypesAssignment_6_0(), "rule__DInformationModel__TypesAssignment_6_0");
			builder.put(grammarAccess.getDInformationModelAccess().getAggregatesAssignment_6_1(), "rule__DInformationModel__AggregatesAssignment_6_1");
			builder.put(grammarAccess.getDAggregateAccess().getNameAssignment_2(), "rule__DAggregate__NameAssignment_2");
			builder.put(grammarAccess.getDAggregateAccess().getDescriptionAssignment_3(), "rule__DAggregate__DescriptionAssignment_3");
			builder.put(grammarAccess.getDAggregateAccess().getFeaturesAssignment_5_1(), "rule__DAggregate__FeaturesAssignment_5_1");
			builder.put(grammarAccess.getDAggregateAccess().getTypesAssignment_6(), "rule__DAggregate__TypesAssignment_6");
			builder.put(grammarAccess.getDConstraintAccess().getNameAssignment_1(), "rule__DConstraint__NameAssignment_1");
			builder.put(grammarAccess.getDConstraintAccess().getAliasesAssignment_2_1(), "rule__DConstraint__AliasesAssignment_2_1");
			builder.put(grammarAccess.getDConstraintAccess().getPredicateAssignment_4(), "rule__DConstraint__PredicateAssignment_4");
			builder.put(grammarAccess.getDConstraintAccess().getDescriptionAssignment_5(), "rule__DConstraint__DescriptionAssignment_5");
			builder.put(grammarAccess.getDPrimitiveAccess().getNameAssignment_1(), "rule__DPrimitive__NameAssignment_1");
			builder.put(grammarAccess.getDPrimitiveAccess().getAliasesAssignment_2_1(), "rule__DPrimitive__AliasesAssignment_2_1");
			builder.put(grammarAccess.getDPrimitiveAccess().getRedefinesAssignment_4(), "rule__DPrimitive__RedefinesAssignment_4");
			builder.put(grammarAccess.getDPrimitiveAccess().getDescriptionAssignment_5(), "rule__DPrimitive__DescriptionAssignment_5");
			builder.put(grammarAccess.getDPrimitiveAccess().getConstraintsAssignment_6_1(), "rule__DPrimitive__ConstraintsAssignment_6_1");
			builder.put(grammarAccess.getDEnumerationAccess().getNameAssignment_1(), "rule__DEnumeration__NameAssignment_1");
			builder.put(grammarAccess.getDEnumerationAccess().getAliasesAssignment_2_1(), "rule__DEnumeration__AliasesAssignment_2_1");
			builder.put(grammarAccess.getDEnumerationAccess().getDescriptionAssignment_3(), "rule__DEnumeration__DescriptionAssignment_3");
			builder.put(grammarAccess.getDEnumerationAccess().getLiteralsAssignment_5_0(), "rule__DEnumeration__LiteralsAssignment_5_0");
			builder.put(grammarAccess.getDEnumerationAccess().getLiteralsAssignment_5_1_1(), "rule__DEnumeration__LiteralsAssignment_5_1_1");
			builder.put(grammarAccess.getDEnumerationAccess().getConstraintsAssignment_6(), "rule__DEnumeration__ConstraintsAssignment_6");
			builder.put(grammarAccess.getDLiteralAccess().getNameAssignment_0(), "rule__DLiteral__NameAssignment_0");
			builder.put(grammarAccess.getDLiteralAccess().getAliasesAssignment_1_1(), "rule__DLiteral__AliasesAssignment_1_1");
			builder.put(grammarAccess.getDLiteralAccess().getDescriptionAssignment_2(), "rule__DLiteral__DescriptionAssignment_2");
			builder.put(grammarAccess.getDEntityTypeAccess().getAbstractAssignment_0(), "rule__DEntityType__AbstractAssignment_0");
			builder.put(grammarAccess.getDEntityTypeAccess().getRootAssignment_1(), "rule__DEntityType__RootAssignment_1");
			builder.put(grammarAccess.getDEntityTypeAccess().getNatureAssignment_2_1_0(), "rule__DEntityType__NatureAssignment_2_1_0");
			builder.put(grammarAccess.getDEntityTypeAccess().getNatureAssignment_2_2(), "rule__DEntityType__NatureAssignment_2_2");
			builder.put(grammarAccess.getDEntityTypeAccess().getStatesAssignment_5_2(), "rule__DEntityType__StatesAssignment_5_2");
			builder.put(grammarAccess.getDEntityTypeAccess().getStatesAssignment_5_3_1(), "rule__DEntityType__StatesAssignment_5_3_1");
			builder.put(grammarAccess.getDEntityTypeAccess().getEventsAssignment_5_5_2(), "rule__DEntityType__EventsAssignment_5_5_2");
			builder.put(grammarAccess.getDEntityTypeAccess().getEventsAssignment_5_5_3_1(), "rule__DEntityType__EventsAssignment_5_5_3_1");
			builder.put(grammarAccess.getDEntityTypeAccess().getFeaturesAssignment_6_0(), "rule__DEntityType__FeaturesAssignment_6_0");
			builder.put(grammarAccess.getDEntityTypeAccess().getConstraintsAssignment_6_1(), "rule__DEntityType__ConstraintsAssignment_6_1");
			builder.put(grammarAccess.getDStateAccess().getNameAssignment(), "rule__DState__NameAssignment");
			builder.put(grammarAccess.getDStateEventAccess().getNameAssignment(), "rule__DStateEvent__NameAssignment");
			builder.put(grammarAccess.getDDetailTypeAccess().getAbstractAssignment_0(), "rule__DDetailType__AbstractAssignment_0");
			builder.put(grammarAccess.getDDetailTypeAccess().getFeaturesAssignment_4_0(), "rule__DDetailType__FeaturesAssignment_4_0");
			builder.put(grammarAccess.getDDetailTypeAccess().getConstraintsAssignment_4_1(), "rule__DDetailType__ConstraintsAssignment_4_1");
			builder.put(grammarAccess.getDComplexTypeAccess().getNameAssignment_0(), "rule__DComplexType__NameAssignment_0");
			builder.put(grammarAccess.getDComplexTypeAccess().getAliasesAssignment_1_1(), "rule__DComplexType__AliasesAssignment_1_1");
			builder.put(grammarAccess.getDComplexTypeAccess().getSuperTypeAssignment_2_1(), "rule__DComplexType__SuperTypeAssignment_2_1");
			builder.put(grammarAccess.getDComplexTypeAccess().getDescriptionAssignment_3(), "rule__DComplexType__DescriptionAssignment_3");
			builder.put(grammarAccess.getDAssociationAccess().getDerivedAssignment_0(), "rule__DAssociation__DerivedAssignment_0");
			builder.put(grammarAccess.getDAssociationAccess().getNameAssignment_1(), "rule__DAssociation__NameAssignment_1");
			builder.put(grammarAccess.getDAssociationAccess().getAliasesAssignment_2_1(), "rule__DAssociation__AliasesAssignment_2_1");
			builder.put(grammarAccess.getDAssociationAccess().getKindAssignment_3_0(), "rule__DAssociation__KindAssignment_3_0");
			builder.put(grammarAccess.getDAssociationAccess().getKindAssignment_3_1_0(), "rule__DAssociation__KindAssignment_3_1_0");
			builder.put(grammarAccess.getDAssociationAccess().getTypeAssignment_4(), "rule__DAssociation__TypeAssignment_4");
			builder.put(grammarAccess.getDAssociationAccess().getMultiplicityAssignment_5(), "rule__DAssociation__MultiplicityAssignment_5");
			builder.put(grammarAccess.getDAssociationAccess().getDescriptionAssignment_6(), "rule__DAssociation__DescriptionAssignment_6");
			builder.put(grammarAccess.getDAttributeAccess().getDetailAssignment_0(), "rule__DAttribute__DetailAssignment_0");
			builder.put(grammarAccess.getDAttributeAccess().getNameAssignment_1(), "rule__DAttribute__NameAssignment_1");
			builder.put(grammarAccess.getDAttributeAccess().getAliasesAssignment_2_1(), "rule__DAttribute__AliasesAssignment_2_1");
			builder.put(grammarAccess.getDAttributeAccess().getTypeAssignment_4(), "rule__DAttribute__TypeAssignment_4");
			builder.put(grammarAccess.getDAttributeAccess().getMultiplicityAssignment_5(), "rule__DAttribute__MultiplicityAssignment_5");
			builder.put(grammarAccess.getDAttributeAccess().getKeyAssignment_6(), "rule__DAttribute__KeyAssignment_6");
			builder.put(grammarAccess.getDAttributeAccess().getDescriptionAssignment_7(), "rule__DAttribute__DescriptionAssignment_7");
			builder.put(grammarAccess.getDQueryAccess().getNameAssignment_0(), "rule__DQuery__NameAssignment_0");
			builder.put(grammarAccess.getDQueryAccess().getAliasesAssignment_1_1(), "rule__DQuery__AliasesAssignment_1_1");
			builder.put(grammarAccess.getDQueryAccess().getParametersAssignment_3_0(), "rule__DQuery__ParametersAssignment_3_0");
			builder.put(grammarAccess.getDQueryAccess().getParametersAssignment_3_1_1(), "rule__DQuery__ParametersAssignment_3_1_1");
			builder.put(grammarAccess.getDQueryAccess().getTypeAssignment_6(), "rule__DQuery__TypeAssignment_6");
			builder.put(grammarAccess.getDQueryAccess().getMultiplicityAssignment_7(), "rule__DQuery__MultiplicityAssignment_7");
			builder.put(grammarAccess.getDQueryAccess().getReturnsAssignment_8_1(), "rule__DQuery__ReturnsAssignment_8_1");
			builder.put(grammarAccess.getDQueryAccess().getDescriptionAssignment_9(), "rule__DQuery__DescriptionAssignment_9");
			builder.put(grammarAccess.getDQueryParameterAccess().getNameAssignment_0(), "rule__DQueryParameter__NameAssignment_0");
			builder.put(grammarAccess.getDQueryParameterAccess().getTypeAssignment_2(), "rule__DQueryParameter__TypeAssignment_2");
			builder.put(grammarAccess.getDQueryParameterAccess().getMultiplicityAssignment_3(), "rule__DQueryParameter__MultiplicityAssignment_3");
			builder.put(grammarAccess.getDQueryParameterAccess().getDescriptionAssignment_4(), "rule__DQueryParameter__DescriptionAssignment_4");
			builder.put(grammarAccess.getDmxModelAccess().getTypesAssignment_1(), "rule__DmxModel__TypesAssignment_1");
			builder.put(grammarAccess.getDmxModelAccess().getFiltersAssignment_2(), "rule__DmxModel__FiltersAssignment_2");
			builder.put(grammarAccess.getDmxModelAccess().getTestsAssignment_3(), "rule__DmxModel__TestsAssignment_3");
			builder.put(grammarAccess.getDImportAccess().getImportedNamespaceAssignment_1(), "rule__DImport__ImportedNamespaceAssignment_1");
			builder.put(grammarAccess.getDmxTestAccess().getNameAssignment_1(), "rule__DmxTest__NameAssignment_1");
			builder.put(grammarAccess.getDmxTestAccess().getContextAssignment_2_1(), "rule__DmxTest__ContextAssignment_2_1");
			builder.put(grammarAccess.getDmxTestAccess().getContextAssignment_2_2_1(), "rule__DmxTest__ContextAssignment_2_2_1");
			builder.put(grammarAccess.getDmxTestAccess().getExprAssignment_4(), "rule__DmxTest__ExprAssignment_4");
			builder.put(grammarAccess.getDmxTestContextAccess().getNameAssignment_0(), "rule__DmxTestContext__NameAssignment_0");
			builder.put(grammarAccess.getDmxTestContextAccess().getTypeAssignment_2(), "rule__DmxTestContext__TypeAssignment_2");
			builder.put(grammarAccess.getDmxTestContextAccess().getMultiplicityAssignment_3(), "rule__DmxTestContext__MultiplicityAssignment_3");
			builder.put(grammarAccess.getDmxTestContextAccess().getValueAssignment_4_1_0(), "rule__DmxTestContext__ValueAssignment_4_1_0");
			builder.put(grammarAccess.getDmxTestContextAccess().getValueAssignment_4_1_1(), "rule__DmxTestContext__ValueAssignment_4_1_1");
			builder.put(grammarAccess.getDmxBaseTypeSetAccess().getNameAssignment_0(), "rule__DmxBaseTypeSet__NameAssignment_0");
			builder.put(grammarAccess.getDmxBaseTypeSetAccess().getMembersAssignment_3(), "rule__DmxBaseTypeSet__MembersAssignment_3");
			builder.put(grammarAccess.getDmxBaseTypeSetAccess().getMembersAssignment_4_1(), "rule__DmxBaseTypeSet__MembersAssignment_4_1");
			builder.put(grammarAccess.getDmxArchetypeAccess().getNameAssignment_1(), "rule__DmxArchetype__NameAssignment_1");
			builder.put(grammarAccess.getDmxArchetypeAccess().getBaseTypeAssignment_3(), "rule__DmxArchetype__BaseTypeAssignment_3");
			builder.put(grammarAccess.getDmxArchetypeAccess().getDescriptionAssignment_4(), "rule__DmxArchetype__DescriptionAssignment_4");
			builder.put(grammarAccess.getDmxFilterAccess().getNameAssignment_1(), "rule__DmxFilter__NameAssignment_1");
			builder.put(grammarAccess.getDmxFilterAccess().getParametersAssignment_3_0(), "rule__DmxFilter__ParametersAssignment_3_0");
			builder.put(grammarAccess.getDmxFilterAccess().getParametersAssignment_3_1_1(), "rule__DmxFilter__ParametersAssignment_3_1_1");
			builder.put(grammarAccess.getDmxFilterAccess().getTypeDescAssignment_6(), "rule__DmxFilter__TypeDescAssignment_6");
			builder.put(grammarAccess.getDmxFilterAccess().getWithTypeSetAssignment_7_1(), "rule__DmxFilter__WithTypeSetAssignment_7_1");
			builder.put(grammarAccess.getDmxFilterTypeDescriptorAccess().getSingleAssignment_0_0(), "rule__DmxFilterTypeDescriptor__SingleAssignment_0_0");
			builder.put(grammarAccess.getDmxFilterTypeDescriptorAccess().getMultipleAssignment_0_1(), "rule__DmxFilterTypeDescriptor__MultipleAssignment_0_1");
			builder.put(grammarAccess.getDmxFilterTypeDescriptorAccess().getCollectionAssignment_1(), "rule__DmxFilterTypeDescriptor__CollectionAssignment_1");
			builder.put(grammarAccess.getDmxFilterParameterAccess().getNameAssignment_0(), "rule__DmxFilterParameter__NameAssignment_0");
			builder.put(grammarAccess.getDmxFilterParameterAccess().getTypeDescAssignment_2(), "rule__DmxFilterParameter__TypeDescAssignment_2");
			builder.put(grammarAccess.getDRichTextAccess().getSegmentsAssignment_0(), "rule__DRichText__SegmentsAssignment_0");
			builder.put(grammarAccess.getDRichTextAccess().getSegmentsAssignment_1_0(), "rule__DRichText__SegmentsAssignment_1_0");
			builder.put(grammarAccess.getDRichTextAccess().getSegmentsAssignment_1_1(), "rule__DRichText__SegmentsAssignment_1_1");
			builder.put(grammarAccess.getDRichTextAccess().getSegmentsAssignment_1_2_0(), "rule__DRichText__SegmentsAssignment_1_2_0");
			builder.put(grammarAccess.getDRichTextAccess().getSegmentsAssignment_1_2_1(), "rule__DRichText__SegmentsAssignment_1_2_1");
			builder.put(grammarAccess.getDRichTextAccess().getSegmentsAssignment_1_3(), "rule__DRichText__SegmentsAssignment_1_3");
			builder.put(grammarAccess.getDmxTextOnlyAccess().getValueAssignment(), "rule__DmxTextOnly__ValueAssignment");
			builder.put(grammarAccess.getDmxTextStartAccess().getValueAssignment(), "rule__DmxTextStart__ValueAssignment");
			builder.put(grammarAccess.getDmxTextMiddleAccess().getValueAssignment(), "rule__DmxTextMiddle__ValueAssignment");
			builder.put(grammarAccess.getDmxTextEndAccess().getValueAssignment(), "rule__DmxTextEnd__ValueAssignment");
			builder.put(grammarAccess.getDmxNavigableMemberReferenceAccess().getAssignToMemberAssignment_1_0_0_0_2(), "rule__DmxNavigableMemberReference__AssignToMemberAssignment_1_0_0_0_2");
			builder.put(grammarAccess.getDmxNavigableMemberReferenceAccess().getValueAssignment_1_0_1(), "rule__DmxNavigableMemberReference__ValueAssignment_1_0_1");
			builder.put(grammarAccess.getDmxNavigableMemberReferenceAccess().getMemberAssignment_1_1_1(), "rule__DmxNavigableMemberReference__MemberAssignment_1_1_1");
			builder.put(grammarAccess.getDmxNavigableMemberReferenceAccess().getExplicitOperationCallAssignment_1_1_2_0_0(), "rule__DmxNavigableMemberReference__ExplicitOperationCallAssignment_1_1_2_0_0");
			builder.put(grammarAccess.getDmxNavigableMemberReferenceAccess().getCallArgumentsAssignment_1_1_2_0_1(), "rule__DmxNavigableMemberReference__CallArgumentsAssignment_1_1_2_0_1");
			builder.put(grammarAccess.getDmxNavigableMemberReferenceAccess().getBeforeAssignment_1_1_2_1(), "rule__DmxNavigableMemberReference__BeforeAssignment_1_1_2_1");
			builder.put(grammarAccess.getDmxCallArgumentsAccess().getArgumentsAssignment_1_0(), "rule__DmxCallArguments__ArgumentsAssignment_1_0");
			builder.put(grammarAccess.getDmxCallArgumentsAccess().getArgumentsAssignment_1_1_1(), "rule__DmxCallArguments__ArgumentsAssignment_1_1_1");
			builder.put(grammarAccess.getDmxAssignmentAccess().getAssignToMemberAssignment_1(), "rule__DmxAssignment__AssignToMemberAssignment_1");
			builder.put(grammarAccess.getDmxAssignmentAccess().getValueAssignment_3(), "rule__DmxAssignment__ValueAssignment_3");
			builder.put(grammarAccess.getDmxPredicateWithCorrelationVariableAccess().getCorrelationVariableAssignment_0_1(), "rule__DmxPredicateWithCorrelationVariable__CorrelationVariableAssignment_0_1");
			builder.put(grammarAccess.getDmxPredicateWithCorrelationVariableAccess().getPredicateAssignment_0_3(), "rule__DmxPredicateWithCorrelationVariable__PredicateAssignment_0_3");
			builder.put(grammarAccess.getDmxCorrelationVariableAccess().getNameAssignment(), "rule__DmxCorrelationVariable__NameAssignment");
			builder.put(grammarAccess.getDmxOrExpressionAccess().getOperatorAssignment_1_0_0_1(), "rule__DmxOrExpression__OperatorAssignment_1_0_0_1");
			builder.put(grammarAccess.getDmxOrExpressionAccess().getRightOperandAssignment_1_1(), "rule__DmxOrExpression__RightOperandAssignment_1_1");
			builder.put(grammarAccess.getDmxAndExpressionAccess().getOperatorAssignment_1_0_0_1(), "rule__DmxAndExpression__OperatorAssignment_1_0_0_1");
			builder.put(grammarAccess.getDmxAndExpressionAccess().getRightOperandAssignment_1_1(), "rule__DmxAndExpression__RightOperandAssignment_1_1");
			builder.put(grammarAccess.getDmxEqualityExpressionAccess().getOperatorAssignment_1_0_0_1(), "rule__DmxEqualityExpression__OperatorAssignment_1_0_0_1");
			builder.put(grammarAccess.getDmxEqualityExpressionAccess().getRightOperandAssignment_1_1(), "rule__DmxEqualityExpression__RightOperandAssignment_1_1");
			builder.put(grammarAccess.getDmxRelationalExpressionAccess().getTypeAssignment_1_0_1(), "rule__DmxRelationalExpression__TypeAssignment_1_0_1");
			builder.put(grammarAccess.getDmxRelationalExpressionAccess().getOperatorAssignment_1_1_0_0_1(), "rule__DmxRelationalExpression__OperatorAssignment_1_1_0_0_1");
			builder.put(grammarAccess.getDmxRelationalExpressionAccess().getRightOperandAssignment_1_1_1(), "rule__DmxRelationalExpression__RightOperandAssignment_1_1_1");
			builder.put(grammarAccess.getDmxOtherOperatorExpressionAccess().getOperatorAssignment_1_0_0_1(), "rule__DmxOtherOperatorExpression__OperatorAssignment_1_0_0_1");
			builder.put(grammarAccess.getDmxOtherOperatorExpressionAccess().getRightOperandAssignment_1_1(), "rule__DmxOtherOperatorExpression__RightOperandAssignment_1_1");
			builder.put(grammarAccess.getDmxAdditiveExpressionAccess().getOperatorAssignment_1_0_0_1(), "rule__DmxAdditiveExpression__OperatorAssignment_1_0_0_1");
			builder.put(grammarAccess.getDmxAdditiveExpressionAccess().getRightOperandAssignment_1_1(), "rule__DmxAdditiveExpression__RightOperandAssignment_1_1");
			builder.put(grammarAccess.getDmxMultiplicativeExpressionAccess().getOperatorAssignment_1_0_0_1(), "rule__DmxMultiplicativeExpression__OperatorAssignment_1_0_0_1");
			builder.put(grammarAccess.getDmxMultiplicativeExpressionAccess().getRightOperandAssignment_1_1(), "rule__DmxMultiplicativeExpression__RightOperandAssignment_1_1");
			builder.put(grammarAccess.getDmxUnaryOperationAccess().getOperatorAssignment_0_1(), "rule__DmxUnaryOperation__OperatorAssignment_0_1");
			builder.put(grammarAccess.getDmxUnaryOperationAccess().getOperandAssignment_0_2(), "rule__DmxUnaryOperation__OperandAssignment_0_2");
			builder.put(grammarAccess.getDmxCastExpressionAccess().getTypeAssignment_1_1(), "rule__DmxCastExpression__TypeAssignment_1_1");
			builder.put(grammarAccess.getDmxListExpressionAccess().getElementsAssignment_2_0(), "rule__DmxListExpression__ElementsAssignment_2_0");
			builder.put(grammarAccess.getDmxListExpressionAccess().getElementsAssignment_2_1_1(), "rule__DmxListExpression__ElementsAssignment_2_1_1");
			builder.put(grammarAccess.getDmxLiteralListExpressionAccess().getElementsAssignment_2_0(), "rule__DmxLiteralListExpression__ElementsAssignment_2_0");
			builder.put(grammarAccess.getDmxLiteralListExpressionAccess().getElementsAssignment_2_1_1(), "rule__DmxLiteralListExpression__ElementsAssignment_2_1_1");
			builder.put(grammarAccess.getDmxFunctionCallAccess().getFunctionAssignment_1(), "rule__DmxFunctionCall__FunctionAssignment_1");
			builder.put(grammarAccess.getDmxFunctionCallAccess().getCallArgumentsAssignment_3(), "rule__DmxFunctionCall__CallArgumentsAssignment_3");
			builder.put(grammarAccess.getDmxFunctionCallArgumentsAccess().getArgumentsAssignment_1_0(), "rule__DmxFunctionCallArguments__ArgumentsAssignment_1_0");
			builder.put(grammarAccess.getDmxFunctionCallArgumentsAccess().getArgumentsAssignment_1_1_1(), "rule__DmxFunctionCallArguments__ArgumentsAssignment_1_1_1");
			builder.put(grammarAccess.getDmxComplexObjectAccess().getTypeAssignment_0(), "rule__DmxComplexObject__TypeAssignment_0");
			builder.put(grammarAccess.getDmxComplexObjectAccess().getFieldsAssignment_2(), "rule__DmxComplexObject__FieldsAssignment_2");
			builder.put(grammarAccess.getDmxFieldAccess().getFeatureAssignment_0(), "rule__DmxField__FeatureAssignment_0");
			builder.put(grammarAccess.getDmxFieldAccess().getValueAssignment_2(), "rule__DmxField__ValueAssignment_2");
			builder.put(grammarAccess.getDmxStaticReferenceAccess().getTargetAssignment_2(), "rule__DmxStaticReference__TargetAssignment_2");
			builder.put(grammarAccess.getDmxStaticReferenceAccess().getMemberAssignment_3_1(), "rule__DmxStaticReference__MemberAssignment_3_1");
			builder.put(grammarAccess.getDmxStaticReferenceAccess().getDisplayNameAssignment_4_1_0(), "rule__DmxStaticReference__DisplayNameAssignment_4_1_0");
			builder.put(grammarAccess.getDmxStaticReferenceAccess().getPluralAssignment_4_1_1(), "rule__DmxStaticReference__PluralAssignment_4_1_1");
			builder.put(grammarAccess.getDmxContextReferenceAccess().getTargetAssignment_1(), "rule__DmxContextReference__TargetAssignment_1");
			builder.put(grammarAccess.getDmxContextReferenceAccess().getBeforeAssignment_2_0(), "rule__DmxContextReference__BeforeAssignment_2_0");
			builder.put(grammarAccess.getDmxContextReferenceAccess().getAllAssignment_2_1_1(), "rule__DmxContextReference__AllAssignment_2_1_1");
			builder.put(grammarAccess.getDmxIfExpressionAccess().getIfAssignment_2(), "rule__DmxIfExpression__IfAssignment_2");
			builder.put(grammarAccess.getDmxIfExpressionAccess().getThenAssignment_4(), "rule__DmxIfExpression__ThenAssignment_4");
			builder.put(grammarAccess.getDmxIfExpressionAccess().getElseAssignment_5_1(), "rule__DmxIfExpression__ElseAssignment_5_1");
			builder.put(grammarAccess.getDMultiplicityAccess().getShorthandAssignment_0(), "rule__DMultiplicity__ShorthandAssignment_0");
			builder.put(grammarAccess.getDMultiplicityAccess().getMinOccursAssignment_1_1(), "rule__DMultiplicity__MinOccursAssignment_1_1");
			builder.put(grammarAccess.getDMultiplicityAccess().getMaxOccursAssignment_1_3(), "rule__DMultiplicity__MaxOccursAssignment_1_3");
			builder.put(grammarAccess.getDmxBooleanLiteralAccess().getValueAssignment_1_0(), "rule__DmxBooleanLiteral__ValueAssignment_1_0");
			builder.put(grammarAccess.getDmxBooleanLiteralAccess().getValueAssignment_1_1(), "rule__DmxBooleanLiteral__ValueAssignment_1_1");
			builder.put(grammarAccess.getDmxNaturalLiteralAccess().getValueAssignment_1(), "rule__DmxNaturalLiteral__ValueAssignment_1");
			builder.put(grammarAccess.getDmxDecimalLiteralAccess().getValueAssignment_1(), "rule__DmxDecimalLiteral__ValueAssignment_1");
			builder.put(grammarAccess.getDmxStringLiteralAccess().getValueAssignment_1(), "rule__DmxStringLiteral__ValueAssignment_1");
			builder.put(grammarAccess.getDmxUrlLiteralAccess().getValueAssignment_2(), "rule__DmxUrlLiteral__ValueAssignment_2");
			builder.put(grammarAccess.getDmxUrlLiteralAccess().getDisplayAssignment_3_1(), "rule__DmxUrlLiteral__DisplayAssignment_3_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private SimGrammarAccess grammarAccess;

	@Override
	protected InternalSimParser createParser() {
		InternalSimParser result = new InternalSimParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public SimGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(SimGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
