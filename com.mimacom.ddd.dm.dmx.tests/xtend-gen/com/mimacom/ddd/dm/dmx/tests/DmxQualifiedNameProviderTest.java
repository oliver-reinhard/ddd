package com.mimacom.ddd.dm.dmx.tests;

import com.mimacom.ddd.dm.base.base.BaseFactory;
import com.mimacom.ddd.dm.base.base.DAggregate;
import com.mimacom.ddd.dm.base.base.DAttribute;
import com.mimacom.ddd.dm.base.base.DEntityType;
import com.mimacom.ddd.dm.base.base.DEnumeration;
import com.mimacom.ddd.dm.base.base.DInformationModel;
import com.mimacom.ddd.dm.base.base.DLiteral;
import com.mimacom.ddd.dm.base.base.DNamespace;
import com.mimacom.ddd.dm.base.base.DPrimitive;
import com.mimacom.ddd.dm.base.base.DQuery;
import com.mimacom.ddd.dm.base.base.DQueryParameter;
import com.mimacom.ddd.dm.dmx.scoping.DmxQualifiedNameProvider;
import java.util.Arrays;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.naming.IQualifiedNameConverter;
import org.eclipse.xtext.naming.QualifiedName;
import org.eclipse.xtext.xbase.lib.Conversions;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

@SuppressWarnings("all")
public class DmxQualifiedNameProviderTest {
  private final BaseFactory BASE = BaseFactory.eINSTANCE;
  
  private final IQualifiedNameConverter.DefaultImpl DFLT_QN_PROVIDER = new IQualifiedNameConverter.DefaultImpl();
  
  private final DmxQualifiedNameProvider DMX_QN_PROVIDER = new DmxQualifiedNameProvider();
  
  @Test
  public void testWithNamespace() {
    final DNamespace namespace = this.BASE.createDNamespace();
    namespace.setName("a.b");
    final DInformationModel model = this.BASE.createDInformationModel();
    model.setName("model");
    namespace.setModel(model);
    final DPrimitive primitive1 = this.BASE.createDPrimitive();
    primitive1.setName("primitive1");
    model.getTypes().add(primitive1);
    final DAggregate aggregate = this.BASE.createDAggregate();
    aggregate.setName("aggr");
    model.getAggregates().add(aggregate);
    final DEntityType root = this.BASE.createDEntityType();
    root.setRoot(true);
    root.setName("root");
    aggregate.getTypes().add(root);
    final DAttribute attr1 = this.BASE.createDAttribute();
    attr1.setName("attr1");
    root.getFeatures().add(attr1);
    final DQuery query1 = this.BASE.createDQuery();
    query1.setName("query1");
    root.getFeatures().add(query1);
    final DQueryParameter queryParam1 = this.BASE.createDQueryParameter();
    queryParam1.setName("queryParam1");
    query1.getParameters().add(queryParam1);
    final DEntityType entity = this.BASE.createDEntityType();
    entity.setName("entity");
    aggregate.getTypes().add(entity);
    final DAttribute attr2 = this.BASE.createDAttribute();
    attr2.setName("attr2");
    entity.getFeatures().add(attr2);
    entity.getFeatures().add(attr2);
    final DQuery query2 = this.BASE.createDQuery();
    query2.setName("query1");
    entity.getFeatures().add(query2);
    final DQueryParameter queryParam2 = this.BASE.createDQueryParameter();
    queryParam2.setName("queryParam1");
    query2.getParameters().add(queryParam2);
    final DPrimitive primitive2 = this.BASE.createDPrimitive();
    primitive2.setName("primitive2");
    aggregate.getTypes().add(primitive2);
    final DEnumeration enumeration = this.BASE.createDEnumeration();
    enumeration.setName("enumeration");
    aggregate.getTypes().add(enumeration);
    final DLiteral literal = this.BASE.createDLiteral();
    literal.setName("literal");
    enumeration.getLiterals().add(literal);
    this.assertQualifiedName(namespace.getName(), namespace);
    String _name = namespace.getName();
    String _plus = (_name + ".");
    String _name_1 = model.getName();
    String _plus_1 = (_plus + _name_1);
    this.assertQualifiedName(_plus_1, model);
    String _name_2 = namespace.getName();
    String _plus_2 = (_name_2 + ".");
    String _name_3 = primitive1.getName();
    String _plus_3 = (_plus_2 + _name_3);
    this.assertQualifiedName(_plus_3, primitive1);
    String _name_4 = namespace.getName();
    String _plus_4 = (_name_4 + ".");
    String _name_5 = aggregate.getName();
    String _plus_5 = (_plus_4 + _name_5);
    this.assertQualifiedName(_plus_5, aggregate);
    String _name_6 = namespace.getName();
    String _plus_6 = (_name_6 + ".");
    String _name_7 = root.getName();
    String _plus_7 = (_plus_6 + _name_7);
    this.assertQualifiedName(_plus_7, root);
    String _name_8 = namespace.getName();
    String _plus_8 = (_name_8 + ".");
    String _name_9 = root.getName();
    String _plus_9 = (_plus_8 + _name_9);
    String _plus_10 = (_plus_9 + ".");
    String _name_10 = attr1.getName();
    String _plus_11 = (_plus_10 + _name_10);
    this.assertQualifiedName(_plus_11, attr1);
    String _name_11 = namespace.getName();
    String _plus_12 = (_name_11 + ".");
    String _name_12 = root.getName();
    String _plus_13 = (_plus_12 + _name_12);
    String _plus_14 = (_plus_13 + ".");
    String _name_13 = query1.getName();
    String _plus_15 = (_plus_14 + _name_13);
    this.assertQualifiedName(_plus_15, query1);
    String _name_14 = namespace.getName();
    String _plus_16 = (_name_14 + ".");
    String _name_15 = root.getName();
    String _plus_17 = (_plus_16 + _name_15);
    String _plus_18 = (_plus_17 + ".");
    String _name_16 = query1.getName();
    String _plus_19 = (_plus_18 + _name_16);
    String _plus_20 = (_plus_19 + ".");
    String _name_17 = queryParam1.getName();
    String _plus_21 = (_plus_20 + _name_17);
    this.assertQualifiedName(_plus_21, queryParam1);
    String _name_18 = namespace.getName();
    String _plus_22 = (_name_18 + ".");
    String _name_19 = aggregate.getName();
    String _plus_23 = (_plus_22 + _name_19);
    String _plus_24 = (_plus_23 + ".");
    String _name_20 = entity.getName();
    String _plus_25 = (_plus_24 + _name_20);
    this.assertQualifiedName(_plus_25, entity);
    String _name_21 = namespace.getName();
    String _plus_26 = (_name_21 + ".");
    String _name_22 = aggregate.getName();
    String _plus_27 = (_plus_26 + _name_22);
    String _plus_28 = (_plus_27 + ".");
    String _name_23 = entity.getName();
    String _plus_29 = (_plus_28 + _name_23);
    String _plus_30 = (_plus_29 + ".");
    String _name_24 = attr2.getName();
    String _plus_31 = (_plus_30 + _name_24);
    this.assertQualifiedName(_plus_31, attr2);
    String _name_25 = namespace.getName();
    String _plus_32 = (_name_25 + ".");
    String _name_26 = aggregate.getName();
    String _plus_33 = (_plus_32 + _name_26);
    String _plus_34 = (_plus_33 + ".");
    String _name_27 = entity.getName();
    String _plus_35 = (_plus_34 + _name_27);
    String _plus_36 = (_plus_35 + ".");
    String _name_28 = query2.getName();
    String _plus_37 = (_plus_36 + _name_28);
    this.assertQualifiedName(_plus_37, query2);
    String _name_29 = namespace.getName();
    String _plus_38 = (_name_29 + ".");
    String _name_30 = aggregate.getName();
    String _plus_39 = (_plus_38 + _name_30);
    String _plus_40 = (_plus_39 + ".");
    String _name_31 = entity.getName();
    String _plus_41 = (_plus_40 + _name_31);
    String _plus_42 = (_plus_41 + ".");
    String _name_32 = query2.getName();
    String _plus_43 = (_plus_42 + _name_32);
    String _plus_44 = (_plus_43 + ".");
    String _name_33 = queryParam2.getName();
    String _plus_45 = (_plus_44 + _name_33);
    this.assertQualifiedName(_plus_45, queryParam2);
    String _name_34 = namespace.getName();
    String _plus_46 = (_name_34 + ".");
    String _name_35 = aggregate.getName();
    String _plus_47 = (_plus_46 + _name_35);
    String _plus_48 = (_plus_47 + ".");
    String _name_36 = primitive2.getName();
    String _plus_49 = (_plus_48 + _name_36);
    this.assertQualifiedName(_plus_49, primitive2);
    String _name_37 = namespace.getName();
    String _plus_50 = (_name_37 + ".");
    String _name_38 = aggregate.getName();
    String _plus_51 = (_plus_50 + _name_38);
    String _plus_52 = (_plus_51 + ".");
    String _name_39 = enumeration.getName();
    String _plus_53 = (_plus_52 + _name_39);
    this.assertQualifiedName(_plus_53, enumeration);
    String _name_40 = namespace.getName();
    String _plus_54 = (_name_40 + ".");
    String _name_41 = aggregate.getName();
    String _plus_55 = (_plus_54 + _name_41);
    String _plus_56 = (_plus_55 + ".");
    String _name_42 = enumeration.getName();
    String _plus_57 = (_plus_56 + _name_42);
    String _plus_58 = (_plus_57 + ".");
    String _name_43 = literal.getName();
    String _plus_59 = (_plus_58 + _name_43);
    this.assertQualifiedName(_plus_59, literal);
  }
  
  private void assertQualifiedName(final String expected, final EObject obj) {
    final QualifiedName expectedQN = this.DFLT_QN_PROVIDER.toQualifiedName(expected);
    final QualifiedName dmxQN = this.DMX_QN_PROVIDER.getFullyQualifiedName(obj);
    boolean _equals = Arrays.equals(((Object[])Conversions.unwrapArray(expectedQN.getSegments(), Object.class)), ((Object[])Conversions.unwrapArray(dmxQN.getSegments(), Object.class)));
    boolean _not = (!_equals);
    if (_not) {
      String _string = expectedQN.toString("|");
      String _plus = ("expected: <" + _string);
      String _plus_1 = (_plus + "> but was <");
      String _string_1 = dmxQN.toString("|");
      String _plus_2 = (_plus_1 + _string_1);
      String _plus_3 = (_plus_2 + ">");
      Assertions.<Object>fail(_plus_3);
    }
  }
}
