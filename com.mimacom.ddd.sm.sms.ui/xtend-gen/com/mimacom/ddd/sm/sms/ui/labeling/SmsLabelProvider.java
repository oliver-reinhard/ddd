/**
 * generated by Xtext 2.16.0
 */
package com.mimacom.ddd.sm.sms.ui.labeling;

import com.google.inject.Inject;
import com.mimacom.ddd.sm.sms.SAggregate;
import com.mimacom.ddd.sm.sms.SCondition;
import com.mimacom.ddd.sm.sms.SDeductionRule;
import com.mimacom.ddd.sm.sms.SFeature;
import com.mimacom.ddd.sm.sms.SLiteral;
import com.mimacom.ddd.sm.sms.SType;
import com.mimacom.ddd.sm.sms.SmsUtil;
import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider;
import org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider;
import org.eclipse.xtext.xbase.lib.Extension;

/**
 * Provides labels for EObjects.
 * 
 * See https://www.eclipse.org/Xtext/documentation/304_ide_concepts.html#label-provider
 */
@SuppressWarnings("all")
public class SmsLabelProvider extends DefaultEObjectLabelProvider {
  @Inject
  @Extension
  private SmsUtil _smsUtil;
  
  @Inject
  public SmsLabelProvider(final AdapterFactoryLabelProvider delegate) {
    super(delegate);
  }
  
  public String text(final SAggregate a) {
    return this._smsUtil.label(a);
  }
  
  public String text(final SType t) {
    return this._smsUtil.label(t);
  }
  
  public String text(final SFeature f) {
    SDeductionRule _deductionRule = f.getDeductionRule();
    boolean _tripleNotEquals = (_deductionRule != null);
    if (_tripleNotEquals) {
      String _label = this._smsUtil.label(f.getDeductionRule());
      return (">" + _label);
    }
    return this._smsUtil.label(f);
  }
  
  public String text(final SCondition c) {
    return this._smsUtil.label(c);
  }
  
  public String text(final SLiteral literal) {
    SDeductionRule _deductionRule = literal.getDeductionRule();
    boolean _tripleNotEquals = (_deductionRule != null);
    if (_tripleNotEquals) {
      String _label = this._smsUtil.label(literal.getDeductionRule());
      return (">" + _label);
    }
    return literal.getName();
  }
}
