/*
 * generated by Xtext 2.16.0
 */
grammar InternalSim;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package com.mimacom.ddd.sm.sim.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package com.mimacom.ddd.sm.sim.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.mimacom.ddd.sm.sim.services.SimGrammarAccess;

}

@parser::members {

 	private SimGrammarAccess grammarAccess;

    public InternalSimParser(TokenStream input, SimGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "SDomain";
   	}

   	@Override
   	protected SimGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleSDomain
entryRuleSDomain returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSDomainRule()); }
	iv_ruleSDomain=ruleSDomain
	{ $current=$iv_ruleSDomain.current; }
	EOF;

// Rule SDomain
ruleSDomain returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='domain'
		{
			newLeafNode(otherlv_0, grammarAccess.getSDomainAccess().getDomainKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSDomainAccess().getNameSQualifiedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleSQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSDomainRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"com.mimacom.ddd.sm.sim.Sim.SQualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSDomainAccess().getImportsSImportParserRuleCall_2_0());
				}
				lv_imports_2_0=ruleSImport
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSDomainRule());
					}
					add(
						$current,
						"imports",
						lv_imports_2_0,
						"com.mimacom.ddd.sm.sim.Sim.SImport");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSDomainAccess().getTypesSTypeParserRuleCall_3_0_0());
					}
					lv_types_3_0=ruleSType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSDomainRule());
						}
						add(
							$current,
							"types",
							lv_types_3_0,
							"com.mimacom.ddd.sm.sim.Sim.SType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getSDomainAccess().getAggregatesSAggregateParserRuleCall_3_1_0());
					}
					lv_aggregates_4_0=ruleSAggregate
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSDomainRule());
						}
						add(
							$current,
							"aggregates",
							lv_aggregates_4_0,
							"com.mimacom.ddd.sm.sim.Sim.SAggregate");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleSImport
entryRuleSImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSImportRule()); }
	iv_ruleSImport=ruleSImport
	{ $current=$iv_ruleSImport.current; }
	EOF;

// Rule SImport
ruleSImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getSImportAccess().getImportKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSImportAccess().getImportedNamespaceSQualifiedNameWithWildcardParserRuleCall_1_0());
				}
				lv_importedNamespace_1_0=ruleSQualifiedNameWithWildcard
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSImportRule());
					}
					set(
						$current,
						"importedNamespace",
						lv_importedNamespace_1_0,
						"com.mimacom.ddd.sm.sim.Sim.SQualifiedNameWithWildcard");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSGrabAggregateRule
entryRuleSGrabAggregateRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSGrabAggregateRuleRule()); }
	iv_ruleSGrabAggregateRule=ruleSGrabAggregateRule
	{ $current=$iv_ruleSGrabAggregateRule.current; }
	EOF;

// Rule SGrabAggregateRule
ruleSGrabAggregateRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getSGrabAggregateRuleRule());
				}
			}
			otherlv_0=RULE_ID
			{
				newLeafNode(otherlv_0, grammarAccess.getSGrabAggregateRuleAccess().getSourceDAggregateCrossReference_0());
			}
		)
	)
;

// Entry rule entryRuleSGrabEnumerationRule
entryRuleSGrabEnumerationRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSGrabEnumerationRuleRule()); }
	iv_ruleSGrabEnumerationRule=ruleSGrabEnumerationRule
	{ $current=$iv_ruleSGrabEnumerationRule.current; }
	EOF;

// Rule SGrabEnumerationRule
ruleSGrabEnumerationRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSGrabEnumerationRuleRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getSGrabEnumerationRuleAccess().getSourceDEnumerationCrossReference_0_0());
				}
				ruleSQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='as'
			{
				newLeafNode(otherlv_1, grammarAccess.getSGrabEnumerationRuleAccess().getAsKeyword_1_0());
			}
			(
				(
					lv_renameTo_2_0=RULE_ID
					{
						newLeafNode(lv_renameTo_2_0, grammarAccess.getSGrabEnumerationRuleAccess().getRenameToIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSGrabEnumerationRuleRule());
						}
						setWithLastConsumed(
							$current,
							"renameTo",
							lv_renameTo_2_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleSDitchEnumerationRule
entryRuleSDitchEnumerationRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSDitchEnumerationRuleRule()); }
	iv_ruleSDitchEnumerationRule=ruleSDitchEnumerationRule
	{ $current=$iv_ruleSDitchEnumerationRule.current; }
	EOF;

// Rule SDitchEnumerationRule
ruleSDitchEnumerationRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getSDitchEnumerationRuleRule());
				}
			}
			otherlv_0=RULE_ID
			{
				newLeafNode(otherlv_0, grammarAccess.getSDitchEnumerationRuleAccess().getSourceDEnumerationCrossReference_0());
			}
		)
	)
;

// Entry rule entryRuleSGrabEnumerationLiteralRule
entryRuleSGrabEnumerationLiteralRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSGrabEnumerationLiteralRuleRule()); }
	iv_ruleSGrabEnumerationLiteralRule=ruleSGrabEnumerationLiteralRule
	{ $current=$iv_ruleSGrabEnumerationLiteralRule.current; }
	EOF;

// Rule SGrabEnumerationLiteralRule
ruleSGrabEnumerationLiteralRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSGrabEnumerationLiteralRuleRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getSGrabEnumerationLiteralRuleAccess().getSourceDLiteralCrossReference_0_0());
				}
			)
		)
		(
			otherlv_1='as'
			{
				newLeafNode(otherlv_1, grammarAccess.getSGrabEnumerationLiteralRuleAccess().getAsKeyword_1_0());
			}
			(
				(
					lv_renameTo_2_0=RULE_ID
					{
						newLeafNode(lv_renameTo_2_0, grammarAccess.getSGrabEnumerationLiteralRuleAccess().getRenameToIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSGrabEnumerationLiteralRuleRule());
						}
						setWithLastConsumed(
							$current,
							"renameTo",
							lv_renameTo_2_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleSDitchEnumerationLiteralRule
entryRuleSDitchEnumerationLiteralRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSDitchEnumerationLiteralRuleRule()); }
	iv_ruleSDitchEnumerationLiteralRule=ruleSDitchEnumerationLiteralRule
	{ $current=$iv_ruleSDitchEnumerationLiteralRule.current; }
	EOF;

// Rule SDitchEnumerationLiteralRule
ruleSDitchEnumerationLiteralRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getSDitchEnumerationLiteralRuleRule());
				}
			}
			otherlv_0=RULE_ID
			{
				newLeafNode(otherlv_0, grammarAccess.getSDitchEnumerationLiteralRuleAccess().getSourceDLiteralCrossReference_0());
			}
		)
	)
;

// Entry rule entryRuleSGrabComplexTypeRule
entryRuleSGrabComplexTypeRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSGrabComplexTypeRuleRule()); }
	iv_ruleSGrabComplexTypeRule=ruleSGrabComplexTypeRule
	{ $current=$iv_ruleSGrabComplexTypeRule.current; }
	EOF;

// Rule SGrabComplexTypeRule
ruleSGrabComplexTypeRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSGrabComplexTypeRuleRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getSGrabComplexTypeRuleAccess().getSourceDComplexTypeCrossReference_0_0());
				}
				ruleSQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='as'
			{
				newLeafNode(otherlv_1, grammarAccess.getSGrabComplexTypeRuleAccess().getAsKeyword_1_0());
			}
			(
				(
					lv_renameTo_2_0=RULE_ID
					{
						newLeafNode(lv_renameTo_2_0, grammarAccess.getSGrabComplexTypeRuleAccess().getRenameToIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSGrabComplexTypeRuleRule());
						}
						setWithLastConsumed(
							$current,
							"renameTo",
							lv_renameTo_2_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleSDitchComplexTypeRule
entryRuleSDitchComplexTypeRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSDitchComplexTypeRuleRule()); }
	iv_ruleSDitchComplexTypeRule=ruleSDitchComplexTypeRule
	{ $current=$iv_ruleSDitchComplexTypeRule.current; }
	EOF;

// Rule SDitchComplexTypeRule
ruleSDitchComplexTypeRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getSDitchComplexTypeRuleRule());
				}
			}
			otherlv_0=RULE_ID
			{
				newLeafNode(otherlv_0, grammarAccess.getSDitchComplexTypeRuleAccess().getSourceDEnumerationCrossReference_0());
			}
		)
	)
;

// Entry rule entryRuleSMorphComplexTypeRule
entryRuleSMorphComplexTypeRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSMorphComplexTypeRuleRule()); }
	iv_ruleSMorphComplexTypeRule=ruleSMorphComplexTypeRule
	{ $current=$iv_ruleSMorphComplexTypeRule.current; }
	EOF;

// Rule SMorphComplexTypeRule
ruleSMorphComplexTypeRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSMorphComplexTypeRuleRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getSMorphComplexTypeRuleAccess().getSourceDComplexTypeCrossReference_0_0());
				}
				ruleSQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='as'
			{
				newLeafNode(otherlv_1, grammarAccess.getSMorphComplexTypeRuleAccess().getAsKeyword_1_0());
			}
			(
				(
					lv_renameTo_2_0=RULE_ID
					{
						newLeafNode(lv_renameTo_2_0, grammarAccess.getSMorphComplexTypeRuleAccess().getRenameToIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSMorphComplexTypeRuleRule());
						}
						setWithLastConsumed(
							$current,
							"renameTo",
							lv_renameTo_2_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)?
		(
			otherlv_3='extends'
			{
				newLeafNode(otherlv_3, grammarAccess.getSMorphComplexTypeRuleAccess().getExtendsKeyword_2_0());
			}
			otherlv_4='='
			{
				newLeafNode(otherlv_4, grammarAccess.getSMorphComplexTypeRuleAccess().getEqualsSignKeyword_2_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSMorphComplexTypeRuleRule());
						}
					}
					otherlv_5=RULE_ID
					{
						newLeafNode(otherlv_5, grammarAccess.getSMorphComplexTypeRuleAccess().getRetypeToSComplexTypeCrossReference_2_2_0());
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleSFuseComplexTypeRule
entryRuleSFuseComplexTypeRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSFuseComplexTypeRuleRule()); }
	iv_ruleSFuseComplexTypeRule=ruleSFuseComplexTypeRule
	{ $current=$iv_ruleSFuseComplexTypeRule.current; }
	EOF;

// Rule SFuseComplexTypeRule
ruleSFuseComplexTypeRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSFuseComplexTypeRuleRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getSFuseComplexTypeRuleAccess().getSourceDComplexTypeCrossReference_0_0());
				}
				ruleSQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='and'
		{
			newLeafNode(otherlv_1, grammarAccess.getSFuseComplexTypeRuleAccess().getAndKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSFuseComplexTypeRuleRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getSFuseComplexTypeRuleAccess().getSource2DComplexTypeCrossReference_2_0());
				}
				ruleSQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='as'
			{
				newLeafNode(otherlv_3, grammarAccess.getSFuseComplexTypeRuleAccess().getAsKeyword_3_0());
			}
			(
				(
					lv_renameTo_4_0=RULE_ID
					{
						newLeafNode(lv_renameTo_4_0, grammarAccess.getSFuseComplexTypeRuleAccess().getRenameToIDTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSFuseComplexTypeRuleRule());
						}
						setWithLastConsumed(
							$current,
							"renameTo",
							lv_renameTo_4_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)?
		(
			otherlv_5='extends'
			{
				newLeafNode(otherlv_5, grammarAccess.getSFuseComplexTypeRuleAccess().getExtendsKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSFuseComplexTypeRuleRule());
						}
					}
					otherlv_6=RULE_ID
					{
						newLeafNode(otherlv_6, grammarAccess.getSFuseComplexTypeRuleAccess().getExtendFromSComplexTypeCrossReference_4_1_0());
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleSGrabFeatureRule
entryRuleSGrabFeatureRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSGrabFeatureRuleRule()); }
	iv_ruleSGrabFeatureRule=ruleSGrabFeatureRule
	{ $current=$iv_ruleSGrabFeatureRule.current; }
	EOF;

// Rule SGrabFeatureRule
ruleSGrabFeatureRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSGrabFeatureRuleRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getSGrabFeatureRuleAccess().getSourceDFeatureCrossReference_0_0());
				}
			)
		)
		(
			otherlv_1='as'
			{
				newLeafNode(otherlv_1, grammarAccess.getSGrabFeatureRuleAccess().getAsKeyword_1_0());
			}
			(
				(
					lv_renameTo_2_0=RULE_ID
					{
						newLeafNode(lv_renameTo_2_0, grammarAccess.getSGrabFeatureRuleAccess().getRenameToIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSGrabFeatureRuleRule());
						}
						setWithLastConsumed(
							$current,
							"renameTo",
							lv_renameTo_2_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleSMorphFeatureRule
entryRuleSMorphFeatureRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSMorphFeatureRuleRule()); }
	iv_ruleSMorphFeatureRule=ruleSMorphFeatureRule
	{ $current=$iv_ruleSMorphFeatureRule.current; }
	EOF;

// Rule SMorphFeatureRule
ruleSMorphFeatureRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSMorphFeatureRuleRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getSMorphFeatureRuleAccess().getSourceDFeatureCrossReference_0_0());
				}
			)
		)
		(
			otherlv_1='as'
			{
				newLeafNode(otherlv_1, grammarAccess.getSMorphFeatureRuleAccess().getAsKeyword_1_0());
			}
			(
				(
					lv_renameTo_2_0=RULE_ID
					{
						newLeafNode(lv_renameTo_2_0, grammarAccess.getSMorphFeatureRuleAccess().getRenameToIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSMorphFeatureRuleRule());
						}
						setWithLastConsumed(
							$current,
							"renameTo",
							lv_renameTo_2_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)?
		(
			otherlv_3=':'
			{
				newLeafNode(otherlv_3, grammarAccess.getSMorphFeatureRuleAccess().getColonKeyword_2_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSMorphFeatureRuleRule());
						}
					}
					otherlv_4=RULE_ID
					{
						newLeafNode(otherlv_4, grammarAccess.getSMorphFeatureRuleAccess().getRetypeToSTypeCrossReference_2_1_0());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getSMorphFeatureRuleAccess().getRemultiplyToSMultiplicityParserRuleCall_2_2_0());
					}
					lv_remultiplyTo_5_0=ruleSMultiplicity
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSMorphFeatureRuleRule());
						}
						set(
							$current,
							"remultiplyTo",
							lv_remultiplyTo_5_0,
							"com.mimacom.ddd.sm.sim.Sim.SMultiplicity");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)?
	)
;

// Entry rule entryRuleSDitchFeatureRule
entryRuleSDitchFeatureRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSDitchFeatureRuleRule()); }
	iv_ruleSDitchFeatureRule=ruleSDitchFeatureRule
	{ $current=$iv_ruleSDitchFeatureRule.current; }
	EOF;

// Rule SDitchFeatureRule
ruleSDitchFeatureRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getSDitchFeatureRuleRule());
				}
			}
			otherlv_0=RULE_ID
			{
				newLeafNode(otherlv_0, grammarAccess.getSDitchFeatureRuleAccess().getSourceDFeatureCrossReference_0());
			}
		)
	)
;

// Entry rule entryRuleSAggregate
entryRuleSAggregate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSAggregateRule()); }
	iv_ruleSAggregate=ruleSAggregate
	{ $current=$iv_ruleSAggregate.current; }
	EOF;

// Rule SAggregate
ruleSAggregate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSAggregateAccess().getSAggregateAction_0(),
					$current);
			}
		)
		(
			(
				otherlv_1='grab'
				{
					newLeafNode(otherlv_1, grammarAccess.getSAggregateAccess().getGrabKeyword_1_0_0());
				}
				otherlv_2='aggregate'
				{
					newLeafNode(otherlv_2, grammarAccess.getSAggregateAccess().getAggregateKeyword_1_0_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSAggregateAccess().getDeductionRuleSGrabAggregateRuleParserRuleCall_1_0_2_0());
						}
						lv_deductionRule_3_0=ruleSGrabAggregateRule
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSAggregateRule());
							}
							set(
								$current,
								"deductionRule",
								lv_deductionRule_3_0,
								"com.mimacom.ddd.sm.sim.Sim.SGrabAggregateRule");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			otherlv_4='aggregate'
			{
				newLeafNode(otherlv_4, grammarAccess.getSAggregateAccess().getAggregateKeyword_1_1());
			}
		)
		otherlv_5='{'
		{
			newLeafNode(otherlv_5, grammarAccess.getSAggregateAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSAggregateAccess().getTypesSTypeParserRuleCall_3_0());
				}
				lv_types_6_0=ruleSType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSAggregateRule());
					}
					add(
						$current,
						"types",
						lv_types_6_0,
						"com.mimacom.ddd.sm.sim.Sim.SType");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getSAggregateAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleSType
entryRuleSType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSTypeRule()); }
	iv_ruleSType=ruleSType
	{ $current=$iv_ruleSType.current; }
	EOF;

// Rule SType
ruleSType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSTypeAccess().getSPrimitiveParserRuleCall_0());
		}
		this_SPrimitive_0=ruleSPrimitive
		{
			$current = $this_SPrimitive_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSTypeAccess().getSPrimitiveArchetypeParserRuleCall_1());
		}
		this_SPrimitiveArchetype_1=ruleSPrimitiveArchetype
		{
			$current = $this_SPrimitiveArchetype_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSTypeAccess().getSEnumerationParserRuleCall_2());
		}
		this_SEnumeration_2=ruleSEnumeration
		{
			$current = $this_SEnumeration_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSTypeAccess().getSRootTypeParserRuleCall_3());
		}
		this_SRootType_3=ruleSRootType
		{
			$current = $this_SRootType_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSTypeAccess().getSDetailTypeParserRuleCall_4());
		}
		this_SDetailType_4=ruleSDetailType
		{
			$current = $this_SDetailType_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSConstraint
entryRuleSConstraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSConstraintRule()); }
	iv_ruleSConstraint=ruleSConstraint
	{ $current=$iv_ruleSConstraint.current; }
	EOF;

// Rule SConstraint
ruleSConstraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='constraint'
		{
			newLeafNode(otherlv_0, grammarAccess.getSConstraintAccess().getConstraintKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSConstraintAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSConstraintRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getSConstraintAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSConstraintAccess().getConditionSExpressionParserRuleCall_3_0());
				}
				lv_condition_3_0=ruleSExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSConstraintRule());
					}
					set(
						$current,
						"condition",
						lv_condition_3_0,
						"com.mimacom.ddd.sm.sim.Sim.SExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSPrimitive
entryRuleSPrimitive returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSPrimitiveRule()); }
	iv_ruleSPrimitive=ruleSPrimitive
	{ $current=$iv_ruleSPrimitive.current; }
	EOF;

// Rule SPrimitive
ruleSPrimitive returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='primitive'
		{
			newLeafNode(otherlv_0, grammarAccess.getSPrimitiveAccess().getPrimitiveKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSPrimitiveAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSPrimitiveRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				otherlv_2='redefines'
				{
					newLeafNode(otherlv_2, grammarAccess.getSPrimitiveAccess().getRedefinesKeyword_2_0_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSPrimitiveRule());
							}
						}
						otherlv_3=RULE_ID
						{
							newLeafNode(otherlv_3, grammarAccess.getSPrimitiveAccess().getRedefinesSPrimitiveCrossReference_2_0_1_0());
						}
					)
				)
			)
			    |
			(
				(
					otherlv_4='realizes'
					{
						newLeafNode(otherlv_4, grammarAccess.getSPrimitiveAccess().getRealizesKeyword_2_1_0_0());
					}
					    |
					otherlv_5='realises'
					{
						newLeafNode(otherlv_5, grammarAccess.getSPrimitiveAccess().getRealisesKeyword_2_1_0_1());
					}
				)
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSPrimitiveRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getSPrimitiveAccess().getRealizesDPrimitiveCrossReference_2_1_1_0());
						}
						ruleSQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
		otherlv_7='{'
		{
			newLeafNode(otherlv_7, grammarAccess.getSPrimitiveAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSPrimitiveAccess().getConstraintsSConstraintParserRuleCall_4_0());
				}
				lv_constraints_8_0=ruleSConstraint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSPrimitiveRule());
					}
					add(
						$current,
						"constraints",
						lv_constraints_8_0,
						"com.mimacom.ddd.sm.sim.Sim.SConstraint");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getSPrimitiveAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleSPrimitiveArchetype
entryRuleSPrimitiveArchetype returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSPrimitiveArchetypeRule()); }
	iv_ruleSPrimitiveArchetype=ruleSPrimitiveArchetype
	{ $current=$iv_ruleSPrimitiveArchetype.current; }
	EOF;

// Rule SPrimitiveArchetype
ruleSPrimitiveArchetype returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='archetype'
		{
			newLeafNode(otherlv_0, grammarAccess.getSPrimitiveArchetypeAccess().getArchetypeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSPrimitiveArchetypeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSPrimitiveArchetypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getSPrimitiveArchetypeAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSPrimitiveArchetypeAccess().getConstraintsSConstraintParserRuleCall_3_0());
				}
				lv_constraints_3_0=ruleSConstraint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSPrimitiveArchetypeRule());
					}
					add(
						$current,
						"constraints",
						lv_constraints_3_0,
						"com.mimacom.ddd.sm.sim.Sim.SConstraint");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getSPrimitiveArchetypeAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleSEnumeration
entryRuleSEnumeration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSEnumerationRule()); }
	iv_ruleSEnumeration=ruleSEnumeration
	{ $current=$iv_ruleSEnumeration.current; }
	EOF;

// Rule SEnumeration
ruleSEnumeration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						$current = forceCreateModelElement(
							grammarAccess.getSEnumerationAccess().getSEnumerationAction_0_0_0(),
							$current);
					}
				)
				otherlv_1='grab'
				{
					newLeafNode(otherlv_1, grammarAccess.getSEnumerationAccess().getGrabKeyword_0_0_1());
				}
				otherlv_2='enumeration'
				{
					newLeafNode(otherlv_2, grammarAccess.getSEnumerationAccess().getEnumerationKeyword_0_0_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSEnumerationAccess().getDeductionRuleSGrabEnumerationRuleParserRuleCall_0_0_3_0());
						}
						lv_deductionRule_3_0=ruleSGrabEnumerationRule
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSEnumerationRule());
							}
							set(
								$current,
								"deductionRule",
								lv_deductionRule_3_0,
								"com.mimacom.ddd.sm.sim.Sim.SGrabEnumerationRule");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						$current = forceCreateModelElement(
							grammarAccess.getSEnumerationAccess().getSEnumerationAction_0_1_0(),
							$current);
					}
				)
				otherlv_5='ditch'
				{
					newLeafNode(otherlv_5, grammarAccess.getSEnumerationAccess().getDitchKeyword_0_1_1());
				}
				otherlv_6='enumeration'
				{
					newLeafNode(otherlv_6, grammarAccess.getSEnumerationAccess().getEnumerationKeyword_0_1_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSEnumerationAccess().getDeductionRuleSDitchEnumerationRuleParserRuleCall_0_1_3_0());
						}
						lv_deductionRule_7_0=ruleSDitchEnumerationRule
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSEnumerationRule());
							}
							set(
								$current,
								"deductionRule",
								lv_deductionRule_7_0,
								"com.mimacom.ddd.sm.sim.Sim.SDitchEnumerationRule");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_8='enumeration'
				{
					newLeafNode(otherlv_8, grammarAccess.getSEnumerationAccess().getEnumerationKeyword_0_2_0());
				}
				(
					(
						lv_name_9_0=RULE_ID
						{
							newLeafNode(lv_name_9_0, grammarAccess.getSEnumerationAccess().getNameIDTerminalRuleCall_0_2_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSEnumerationRule());
							}
							setWithLastConsumed(
								$current,
								"name",
								lv_name_9_0,
								"org.eclipse.xtext.common.Terminals.ID");
						}
					)
				)
			)
		)
		otherlv_10='{'
		{
			newLeafNode(otherlv_10, grammarAccess.getSEnumerationAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSEnumerationAccess().getLiteralsSLiteralParserRuleCall_2_0_0());
					}
					lv_literals_11_0=ruleSLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSEnumerationRule());
						}
						add(
							$current,
							"literals",
							lv_literals_11_0,
							"com.mimacom.ddd.sm.sim.Sim.SLiteral");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_12=','
				{
					newLeafNode(otherlv_12, grammarAccess.getSEnumerationAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSEnumerationAccess().getLiteralsSLiteralParserRuleCall_2_1_1_0());
						}
						lv_literals_13_0=ruleSLiteral
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSEnumerationRule());
							}
							add(
								$current,
								"literals",
								lv_literals_13_0,
								"com.mimacom.ddd.sm.sim.Sim.SLiteral");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getSEnumerationAccess().getConstraintsSConstraintParserRuleCall_3_0());
				}
				lv_constraints_14_0=ruleSConstraint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSEnumerationRule());
					}
					add(
						$current,
						"constraints",
						lv_constraints_14_0,
						"com.mimacom.ddd.sm.sim.Sim.SConstraint");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getSEnumerationAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleSLiteral
entryRuleSLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSLiteralRule()); }
	iv_ruleSLiteral=ruleSLiteral
	{ $current=$iv_ruleSLiteral.current; }
	EOF;

// Rule SLiteral
ruleSLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getSLiteralAccess().getSLiteralAction_0_0(),
						$current);
				}
			)
			otherlv_1='grab'
			{
				newLeafNode(otherlv_1, grammarAccess.getSLiteralAccess().getGrabKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSLiteralAccess().getDeductionRuleSGrabEnumerationLiteralRuleParserRuleCall_0_2_0());
					}
					lv_deductionRule_2_0=ruleSGrabEnumerationLiteralRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSLiteralRule());
						}
						set(
							$current,
							"deductionRule",
							lv_deductionRule_2_0,
							"com.mimacom.ddd.sm.sim.Sim.SGrabEnumerationLiteralRule");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getSLiteralAccess().getSLiteralAction_1_0(),
						$current);
				}
			)
			otherlv_4='ditch'
			{
				newLeafNode(otherlv_4, grammarAccess.getSLiteralAccess().getDitchKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSLiteralAccess().getDeductionRuleSDitchEnumerationLiteralRuleParserRuleCall_1_2_0());
					}
					lv_deductionRule_5_0=ruleSDitchEnumerationLiteralRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSLiteralRule());
						}
						set(
							$current,
							"deductionRule",
							lv_deductionRule_5_0,
							"com.mimacom.ddd.sm.sim.Sim.SDitchEnumerationLiteralRule");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				lv_name_6_0=RULE_ID
				{
					newLeafNode(lv_name_6_0, grammarAccess.getSLiteralAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSLiteralRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_6_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleSRootType
entryRuleSRootType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSRootTypeRule()); }
	iv_ruleSRootType=ruleSRootType
	{ $current=$iv_ruleSRootType.current; }
	EOF;

// Rule SRootType
ruleSRootType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						$current = forceCreateModelElement(
							grammarAccess.getSRootTypeAccess().getSRootTypeAction_0_0_0(),
							$current);
					}
				)
				otherlv_1='grab'
				{
					newLeafNode(otherlv_1, grammarAccess.getSRootTypeAccess().getGrabKeyword_0_0_1());
				}
				(
					(
						lv_abstract_2_0='abstract'
						{
							newLeafNode(lv_abstract_2_0, grammarAccess.getSRootTypeAccess().getAbstractAbstractKeyword_0_0_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSRootTypeRule());
							}
							setWithLastConsumed($current, "abstract", true, "abstract");
						}
					)
				)?
				otherlv_3='root'
				{
					newLeafNode(otherlv_3, grammarAccess.getSRootTypeAccess().getRootKeyword_0_0_3());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSRootTypeAccess().getDeductionRuleSGrabComplexTypeRuleParserRuleCall_0_0_4_0());
						}
						lv_deductionRule_4_0=ruleSGrabComplexTypeRule
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSRootTypeRule());
							}
							set(
								$current,
								"deductionRule",
								lv_deductionRule_4_0,
								"com.mimacom.ddd.sm.sim.Sim.SGrabComplexTypeRule");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						$current = forceCreateModelElement(
							grammarAccess.getSRootTypeAccess().getSRootTypeAction_0_1_0(),
							$current);
					}
				)
				otherlv_6='ditch'
				{
					newLeafNode(otherlv_6, grammarAccess.getSRootTypeAccess().getDitchKeyword_0_1_1());
				}
				(
					(
						lv_abstract_7_0='abstract'
						{
							newLeafNode(lv_abstract_7_0, grammarAccess.getSRootTypeAccess().getAbstractAbstractKeyword_0_1_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSRootTypeRule());
							}
							setWithLastConsumed($current, "abstract", true, "abstract");
						}
					)
				)?
				otherlv_8='root'
				{
					newLeafNode(otherlv_8, grammarAccess.getSRootTypeAccess().getRootKeyword_0_1_3());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSRootTypeAccess().getDeductionRuleSDitchComplexTypeRuleParserRuleCall_0_1_4_0());
						}
						lv_deductionRule_9_0=ruleSDitchComplexTypeRule
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSRootTypeRule());
							}
							set(
								$current,
								"deductionRule",
								lv_deductionRule_9_0,
								"com.mimacom.ddd.sm.sim.Sim.SDitchComplexTypeRule");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						$current = forceCreateModelElement(
							grammarAccess.getSRootTypeAccess().getSRootTypeAction_0_2_0(),
							$current);
					}
				)
				otherlv_11='morph'
				{
					newLeafNode(otherlv_11, grammarAccess.getSRootTypeAccess().getMorphKeyword_0_2_1());
				}
				(
					(
						lv_abstract_12_0='abstract'
						{
							newLeafNode(lv_abstract_12_0, grammarAccess.getSRootTypeAccess().getAbstractAbstractKeyword_0_2_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSRootTypeRule());
							}
							setWithLastConsumed($current, "abstract", true, "abstract");
						}
					)
				)?
				otherlv_13='root'
				{
					newLeafNode(otherlv_13, grammarAccess.getSRootTypeAccess().getRootKeyword_0_2_3());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSRootTypeAccess().getDeductionRuleSMorphComplexTypeRuleParserRuleCall_0_2_4_0());
						}
						lv_deductionRule_14_0=ruleSMorphComplexTypeRule
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSRootTypeRule());
							}
							set(
								$current,
								"deductionRule",
								lv_deductionRule_14_0,
								"com.mimacom.ddd.sm.sim.Sim.SMorphComplexTypeRule");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						$current = forceCreateModelElement(
							grammarAccess.getSRootTypeAccess().getSRootTypeAction_0_3_0(),
							$current);
					}
				)
				otherlv_16='fuse'
				{
					newLeafNode(otherlv_16, grammarAccess.getSRootTypeAccess().getFuseKeyword_0_3_1());
				}
				(
					(
						lv_abstract_17_0='abstract'
						{
							newLeafNode(lv_abstract_17_0, grammarAccess.getSRootTypeAccess().getAbstractAbstractKeyword_0_3_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSRootTypeRule());
							}
							setWithLastConsumed($current, "abstract", true, "abstract");
						}
					)
				)?
				otherlv_18='root'
				{
					newLeafNode(otherlv_18, grammarAccess.getSRootTypeAccess().getRootKeyword_0_3_3());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSRootTypeAccess().getDeductionRuleSFuseComplexTypeRuleParserRuleCall_0_3_4_0());
						}
						lv_deductionRule_19_0=ruleSFuseComplexTypeRule
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSRootTypeRule());
							}
							set(
								$current,
								"deductionRule",
								lv_deductionRule_19_0,
								"com.mimacom.ddd.sm.sim.Sim.SFuseComplexTypeRule");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					(
						lv_abstract_20_0='abstract'
						{
							newLeafNode(lv_abstract_20_0, grammarAccess.getSRootTypeAccess().getAbstractAbstractKeyword_0_4_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSRootTypeRule());
							}
							setWithLastConsumed($current, "abstract", true, "abstract");
						}
					)
				)?
				otherlv_21='root'
				{
					newLeafNode(otherlv_21, grammarAccess.getSRootTypeAccess().getRootKeyword_0_4_1());
				}
				(
					(
						lv_name_22_0=RULE_ID
						{
							newLeafNode(lv_name_22_0, grammarAccess.getSRootTypeAccess().getNameIDTerminalRuleCall_0_4_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSRootTypeRule());
							}
							setWithLastConsumed(
								$current,
								"name",
								lv_name_22_0,
								"org.eclipse.xtext.common.Terminals.ID");
						}
					)
				)
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSRootTypeRule());
					}
					newCompositeNode(grammarAccess.getSRootTypeAccess().getSComplexTypeExtendsParserRuleCall_0_4_3());
				}
				this_SComplexTypeExtends_23=ruleSComplexTypeExtends[$current]
				{
					$current = $this_SComplexTypeExtends_23.current;
					afterParserOrEnumRuleCall();
				}
			)
		)
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getSRootTypeRule());
			}
			newCompositeNode(grammarAccess.getSRootTypeAccess().getSComplexTypeFeaturesParserRuleCall_1());
		}
		this_SComplexTypeFeatures_24=ruleSComplexTypeFeatures[$current]
		{
			$current = $this_SComplexTypeFeatures_24.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSDetailType
entryRuleSDetailType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSDetailTypeRule()); }
	iv_ruleSDetailType=ruleSDetailType
	{ $current=$iv_ruleSDetailType.current; }
	EOF;

// Rule SDetailType
ruleSDetailType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						$current = forceCreateModelElement(
							grammarAccess.getSDetailTypeAccess().getSDetailTypeAction_0_0_0(),
							$current);
					}
				)
				otherlv_1='grab'
				{
					newLeafNode(otherlv_1, grammarAccess.getSDetailTypeAccess().getGrabKeyword_0_0_1());
				}
				(
					(
						lv_abstract_2_0='abstract'
						{
							newLeafNode(lv_abstract_2_0, grammarAccess.getSDetailTypeAccess().getAbstractAbstractKeyword_0_0_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSDetailTypeRule());
							}
							setWithLastConsumed($current, "abstract", true, "abstract");
						}
					)
				)?
				otherlv_3='detail'
				{
					newLeafNode(otherlv_3, grammarAccess.getSDetailTypeAccess().getDetailKeyword_0_0_3());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSDetailTypeAccess().getDeductionRuleSGrabComplexTypeRuleParserRuleCall_0_0_4_0());
						}
						lv_deductionRule_4_0=ruleSGrabComplexTypeRule
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSDetailTypeRule());
							}
							set(
								$current,
								"deductionRule",
								lv_deductionRule_4_0,
								"com.mimacom.ddd.sm.sim.Sim.SGrabComplexTypeRule");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						$current = forceCreateModelElement(
							grammarAccess.getSDetailTypeAccess().getSDetailTypeAction_0_1_0(),
							$current);
					}
				)
				otherlv_6='ditch'
				{
					newLeafNode(otherlv_6, grammarAccess.getSDetailTypeAccess().getDitchKeyword_0_1_1());
				}
				(
					(
						lv_abstract_7_0='abstract'
						{
							newLeafNode(lv_abstract_7_0, grammarAccess.getSDetailTypeAccess().getAbstractAbstractKeyword_0_1_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSDetailTypeRule());
							}
							setWithLastConsumed($current, "abstract", true, "abstract");
						}
					)
				)?
				otherlv_8='detail'
				{
					newLeafNode(otherlv_8, grammarAccess.getSDetailTypeAccess().getDetailKeyword_0_1_3());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSDetailTypeAccess().getDeductionRuleSDitchComplexTypeRuleParserRuleCall_0_1_4_0());
						}
						lv_deductionRule_9_0=ruleSDitchComplexTypeRule
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSDetailTypeRule());
							}
							set(
								$current,
								"deductionRule",
								lv_deductionRule_9_0,
								"com.mimacom.ddd.sm.sim.Sim.SDitchComplexTypeRule");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						$current = forceCreateModelElement(
							grammarAccess.getSDetailTypeAccess().getSDetailTypeAction_0_2_0(),
							$current);
					}
				)
				otherlv_11='morph'
				{
					newLeafNode(otherlv_11, grammarAccess.getSDetailTypeAccess().getMorphKeyword_0_2_1());
				}
				(
					(
						lv_abstract_12_0='abstract'
						{
							newLeafNode(lv_abstract_12_0, grammarAccess.getSDetailTypeAccess().getAbstractAbstractKeyword_0_2_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSDetailTypeRule());
							}
							setWithLastConsumed($current, "abstract", true, "abstract");
						}
					)
				)?
				otherlv_13='detail'
				{
					newLeafNode(otherlv_13, grammarAccess.getSDetailTypeAccess().getDetailKeyword_0_2_3());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSDetailTypeAccess().getDeductionRuleSMorphComplexTypeRuleParserRuleCall_0_2_4_0());
						}
						lv_deductionRule_14_0=ruleSMorphComplexTypeRule
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSDetailTypeRule());
							}
							set(
								$current,
								"deductionRule",
								lv_deductionRule_14_0,
								"com.mimacom.ddd.sm.sim.Sim.SMorphComplexTypeRule");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						$current = forceCreateModelElement(
							grammarAccess.getSDetailTypeAccess().getSDetailTypeAction_0_3_0(),
							$current);
					}
				)
				otherlv_16='fuse'
				{
					newLeafNode(otherlv_16, grammarAccess.getSDetailTypeAccess().getFuseKeyword_0_3_1());
				}
				(
					(
						lv_abstract_17_0='abstract'
						{
							newLeafNode(lv_abstract_17_0, grammarAccess.getSDetailTypeAccess().getAbstractAbstractKeyword_0_3_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSDetailTypeRule());
							}
							setWithLastConsumed($current, "abstract", true, "abstract");
						}
					)
				)?
				otherlv_18='detail'
				{
					newLeafNode(otherlv_18, grammarAccess.getSDetailTypeAccess().getDetailKeyword_0_3_3());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSDetailTypeAccess().getDeductionRuleSFuseComplexTypeRuleParserRuleCall_0_3_4_0());
						}
						lv_deductionRule_19_0=ruleSFuseComplexTypeRule
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSDetailTypeRule());
							}
							set(
								$current,
								"deductionRule",
								lv_deductionRule_19_0,
								"com.mimacom.ddd.sm.sim.Sim.SFuseComplexTypeRule");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					(
						lv_abstract_20_0='abstract'
						{
							newLeafNode(lv_abstract_20_0, grammarAccess.getSDetailTypeAccess().getAbstractAbstractKeyword_0_4_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSDetailTypeRule());
							}
							setWithLastConsumed($current, "abstract", true, "abstract");
						}
					)
				)?
				otherlv_21='detail'
				{
					newLeafNode(otherlv_21, grammarAccess.getSDetailTypeAccess().getDetailKeyword_0_4_1());
				}
				(
					(
						lv_name_22_0=RULE_ID
						{
							newLeafNode(lv_name_22_0, grammarAccess.getSDetailTypeAccess().getNameIDTerminalRuleCall_0_4_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSDetailTypeRule());
							}
							setWithLastConsumed(
								$current,
								"name",
								lv_name_22_0,
								"org.eclipse.xtext.common.Terminals.ID");
						}
					)
				)
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSDetailTypeRule());
					}
					newCompositeNode(grammarAccess.getSDetailTypeAccess().getSComplexTypeExtendsParserRuleCall_0_4_3());
				}
				this_SComplexTypeExtends_23=ruleSComplexTypeExtends[$current]
				{
					$current = $this_SComplexTypeExtends_23.current;
					afterParserOrEnumRuleCall();
				}
			)
		)
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getSDetailTypeRule());
			}
			newCompositeNode(grammarAccess.getSDetailTypeAccess().getSComplexTypeFeaturesParserRuleCall_1());
		}
		this_SComplexTypeFeatures_24=ruleSComplexTypeFeatures[$current]
		{
			$current = $this_SComplexTypeFeatures_24.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule SComplexTypeExtends
ruleSComplexTypeExtends[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='extends'
		{
			newLeafNode(otherlv_0, grammarAccess.getSComplexTypeExtendsAccess().getExtendsKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSComplexTypeExtendsRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getSComplexTypeExtendsAccess().getSuperTypeSComplexTypeCrossReference_1_0());
				}
			)
		)
	)?
;


// Rule SComplexTypeFeatures
ruleSComplexTypeFeatures[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getSComplexTypeFeaturesAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSComplexTypeFeaturesAccess().getFeaturesSFeatureParserRuleCall_1_0_0());
					}
					lv_features_1_0=ruleSFeature
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSComplexTypeFeaturesRule());
						}
						add(
							$current,
							"features",
							lv_features_1_0,
							"com.mimacom.ddd.sm.sim.Sim.SFeature");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getSComplexTypeFeaturesAccess().getConstraintsSConstraintParserRuleCall_1_1_0());
					}
					lv_constraints_2_0=ruleSConstraint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSComplexTypeFeaturesRule());
						}
						add(
							$current,
							"constraints",
							lv_constraints_2_0,
							"com.mimacom.ddd.sm.sim.Sim.SConstraint");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getSComplexTypeFeaturesAccess().getRightCurlyBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleSFeature
entryRuleSFeature returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSFeatureRule()); }
	iv_ruleSFeature=ruleSFeature
	{ $current=$iv_ruleSFeature.current; }
	EOF;

// Rule SFeature
ruleSFeature returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSFeatureAccess().getSAssociationParserRuleCall_0());
		}
		this_SAssociation_0=ruleSAssociation
		{
			$current = $this_SAssociation_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSFeatureAccess().getSAttributeParserRuleCall_1());
		}
		this_SAttribute_1=ruleSAttribute
		{
			$current = $this_SAttribute_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSFeatureAccess().getSQueryParserRuleCall_2());
		}
		this_SQuery_2=ruleSQuery
		{
			$current = $this_SQuery_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSAssociation
entryRuleSAssociation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSAssociationRule()); }
	iv_ruleSAssociation=ruleSAssociation
	{ $current=$iv_ruleSAssociation.current; }
	EOF;

// Rule SAssociation
ruleSAssociation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getSAssociationAccess().getSAssociationAction_0_0(),
						$current);
				}
			)
			otherlv_1='grab'
			{
				newLeafNode(otherlv_1, grammarAccess.getSAssociationAccess().getGrabKeyword_0_1());
			}
			(
				otherlv_2='reference'
				{
					newLeafNode(otherlv_2, grammarAccess.getSAssociationAccess().getReferenceKeyword_0_2_0());
				}
				    |
				otherlv_3='composite'
				{
					newLeafNode(otherlv_3, grammarAccess.getSAssociationAccess().getCompositeKeyword_0_2_1());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getSAssociationAccess().getDeductionRuleSGrabFeatureRuleParserRuleCall_0_3_0());
					}
					lv_deductionRule_4_0=ruleSGrabFeatureRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSAssociationRule());
						}
						set(
							$current,
							"deductionRule",
							lv_deductionRule_4_0,
							"com.mimacom.ddd.sm.sim.Sim.SGrabFeatureRule");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getSAssociationAccess().getSAssociationAction_1_0(),
						$current);
				}
			)
			otherlv_6='morph'
			{
				newLeafNode(otherlv_6, grammarAccess.getSAssociationAccess().getMorphKeyword_1_1());
			}
			(
				otherlv_7='reference'
				{
					newLeafNode(otherlv_7, grammarAccess.getSAssociationAccess().getReferenceKeyword_1_2_0());
				}
				    |
				otherlv_8='composite'
				{
					newLeafNode(otherlv_8, grammarAccess.getSAssociationAccess().getCompositeKeyword_1_2_1());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getSAssociationAccess().getDeductionRuleSMorphFeatureRuleParserRuleCall_1_3_0());
					}
					lv_deductionRule_9_0=ruleSMorphFeatureRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSAssociationRule());
						}
						set(
							$current,
							"deductionRule",
							lv_deductionRule_9_0,
							"com.mimacom.ddd.sm.sim.Sim.SMorphFeatureRule");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getSAssociationAccess().getSAssociationAction_2_0(),
						$current);
				}
			)
			otherlv_11='ditch'
			{
				newLeafNode(otherlv_11, grammarAccess.getSAssociationAccess().getDitchKeyword_2_1());
			}
			(
				otherlv_12='reference'
				{
					newLeafNode(otherlv_12, grammarAccess.getSAssociationAccess().getReferenceKeyword_2_2_0());
				}
				    |
				otherlv_13='composite'
				{
					newLeafNode(otherlv_13, grammarAccess.getSAssociationAccess().getCompositeKeyword_2_2_1());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getSAssociationAccess().getDeductionRuleSDitchFeatureRuleParserRuleCall_2_3_0());
					}
					lv_deductionRule_14_0=ruleSDitchFeatureRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSAssociationRule());
						}
						set(
							$current,
							"deductionRule",
							lv_deductionRule_14_0,
							"com.mimacom.ddd.sm.sim.Sim.SDitchFeatureRule");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_derived_15_0='derived'
					{
						newLeafNode(lv_derived_15_0, grammarAccess.getSAssociationAccess().getDerivedDerivedKeyword_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSAssociationRule());
						}
						setWithLastConsumed($current, "derived", true, "derived");
					}
				)
			)?
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getSAssociationAccess().getKindSAssociationKindEnumRuleCall_3_1_0_0());
						}
						lv_kind_16_0=ruleSAssociationKind
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSAssociationRule());
							}
							set(
								$current,
								"kind",
								lv_kind_16_0,
								"com.mimacom.ddd.sm.sim.Sim.SAssociationKind");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getSAssociationAccess().getKindSAssociationKindInverseEnumRuleCall_3_1_1_0_0());
							}
							lv_kind_17_0=ruleSAssociationKindInverse
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSAssociationRule());
								}
								set(
									$current,
									"kind",
									lv_kind_17_0,
									"com.mimacom.ddd.sm.sim.Sim.SAssociationKindInverse");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_18='composite'
					{
						newLeafNode(otherlv_18, grammarAccess.getSAssociationAccess().getCompositeKeyword_3_1_1_1());
					}
				)
			)
			(
				(
					lv_name_19_0=RULE_ID
					{
						newLeafNode(lv_name_19_0, grammarAccess.getSAssociationAccess().getNameIDTerminalRuleCall_3_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSAssociationRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_19_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_20=':'
			{
				newLeafNode(otherlv_20, grammarAccess.getSAssociationAccess().getColonKeyword_3_3());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSAssociationRule());
						}
					}
					otherlv_21=RULE_ID
					{
						newLeafNode(otherlv_21, grammarAccess.getSAssociationAccess().getTypeSRootTypeCrossReference_3_4_0());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getSAssociationAccess().getMultiplicitySMultiplicityParserRuleCall_3_5_0());
					}
					lv_multiplicity_22_0=ruleSMultiplicity
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSAssociationRule());
						}
						set(
							$current,
							"multiplicity",
							lv_multiplicity_22_0,
							"com.mimacom.ddd.sm.sim.Sim.SMultiplicity");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)
	)
;

// Entry rule entryRuleSAttribute
entryRuleSAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSAttributeRule()); }
	iv_ruleSAttribute=ruleSAttribute
	{ $current=$iv_ruleSAttribute.current; }
	EOF;

// Rule SAttribute
ruleSAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getSAttributeAccess().getSAttributeAction_0_0(),
						$current);
				}
			)
			otherlv_1='grab'
			{
				newLeafNode(otherlv_1, grammarAccess.getSAttributeAccess().getGrabKeyword_0_1());
			}
			(
				otherlv_2='attribute'
				{
					newLeafNode(otherlv_2, grammarAccess.getSAttributeAccess().getAttributeKeyword_0_2_0());
				}
				    |
				(
					(
						lv_detail_3_0='detail'
						{
							newLeafNode(lv_detail_3_0, grammarAccess.getSAttributeAccess().getDetailDetailKeyword_0_2_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSAttributeRule());
							}
							setWithLastConsumed($current, "detail", true, "detail");
						}
					)
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getSAttributeAccess().getDeductionRuleSGrabFeatureRuleParserRuleCall_0_3_0());
					}
					lv_deductionRule_4_0=ruleSGrabFeatureRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSAttributeRule());
						}
						set(
							$current,
							"deductionRule",
							lv_deductionRule_4_0,
							"com.mimacom.ddd.sm.sim.Sim.SGrabFeatureRule");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getSAttributeAccess().getSAttributeAction_1_0(),
						$current);
				}
			)
			otherlv_6='morph'
			{
				newLeafNode(otherlv_6, grammarAccess.getSAttributeAccess().getMorphKeyword_1_1());
			}
			(
				otherlv_7='attribute'
				{
					newLeafNode(otherlv_7, grammarAccess.getSAttributeAccess().getAttributeKeyword_1_2_0());
				}
				    |
				(
					(
						lv_detail_8_0='detail'
						{
							newLeafNode(lv_detail_8_0, grammarAccess.getSAttributeAccess().getDetailDetailKeyword_1_2_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSAttributeRule());
							}
							setWithLastConsumed($current, "detail", true, "detail");
						}
					)
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getSAttributeAccess().getDeductionRuleSMorphFeatureRuleParserRuleCall_1_3_0());
					}
					lv_deductionRule_9_0=ruleSMorphFeatureRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSAttributeRule());
						}
						set(
							$current,
							"deductionRule",
							lv_deductionRule_9_0,
							"com.mimacom.ddd.sm.sim.Sim.SMorphFeatureRule");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getSAttributeAccess().getSAttributeAction_2_0(),
						$current);
				}
			)
			otherlv_11='ditch'
			{
				newLeafNode(otherlv_11, grammarAccess.getSAttributeAccess().getDitchKeyword_2_1());
			}
			(
				otherlv_12='attribute'
				{
					newLeafNode(otherlv_12, grammarAccess.getSAttributeAccess().getAttributeKeyword_2_2_0());
				}
				    |
				(
					(
						lv_detail_13_0='detail'
						{
							newLeafNode(lv_detail_13_0, grammarAccess.getSAttributeAccess().getDetailDetailKeyword_2_2_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSAttributeRule());
							}
							setWithLastConsumed($current, "detail", true, "detail");
						}
					)
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getSAttributeAccess().getDeductionRuleSDitchFeatureRuleParserRuleCall_2_3_0());
					}
					lv_deductionRule_14_0=ruleSDitchFeatureRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSAttributeRule());
						}
						set(
							$current,
							"deductionRule",
							lv_deductionRule_14_0,
							"com.mimacom.ddd.sm.sim.Sim.SDitchFeatureRule");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_detail_15_0='detail'
					{
						newLeafNode(lv_detail_15_0, grammarAccess.getSAttributeAccess().getDetailDetailKeyword_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSAttributeRule());
						}
						setWithLastConsumed($current, "detail", true, "detail");
					}
				)
			)?
			(
				(
					lv_name_16_0=RULE_ID
					{
						newLeafNode(lv_name_16_0, grammarAccess.getSAttributeAccess().getNameIDTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSAttributeRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_16_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_17=':'
			{
				newLeafNode(otherlv_17, grammarAccess.getSAttributeAccess().getColonKeyword_3_2());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSAttributeRule());
						}
					}
					otherlv_18=RULE_ID
					{
						newLeafNode(otherlv_18, grammarAccess.getSAttributeAccess().getTypeSSimpleTypeCrossReference_3_3_0());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getSAttributeAccess().getMultiplicitySMultiplicityParserRuleCall_3_4_0());
					}
					lv_multiplicity_19_0=ruleSMultiplicity
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSAttributeRule());
						}
						set(
							$current,
							"multiplicity",
							lv_multiplicity_19_0,
							"com.mimacom.ddd.sm.sim.Sim.SMultiplicity");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					lv_key_20_0='key'
					{
						newLeafNode(lv_key_20_0, grammarAccess.getSAttributeAccess().getKeyKeyKeyword_3_5_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSAttributeRule());
						}
						setWithLastConsumed($current, "key", true, "key");
					}
				)
			)?
		)
	)
;

// Entry rule entryRuleSQuery
entryRuleSQuery returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSQueryRule()); }
	iv_ruleSQuery=ruleSQuery
	{ $current=$iv_ruleSQuery.current; }
	EOF;

// Rule SQuery
ruleSQuery returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						{
							$current = forceCreateModelElement(
								grammarAccess.getSQueryAccess().getSQueryAction_0_0_0_0(),
								$current);
						}
					)
					otherlv_1='grab'
					{
						newLeafNode(otherlv_1, grammarAccess.getSQueryAccess().getGrabKeyword_0_0_0_1());
					}
					otherlv_2='query'
					{
						newLeafNode(otherlv_2, grammarAccess.getSQueryAccess().getQueryKeyword_0_0_0_2());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getSQueryAccess().getDeductionRuleSGrabFeatureRuleParserRuleCall_0_0_0_3_0());
							}
							lv_deductionRule_3_0=ruleSGrabFeatureRule
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSQueryRule());
								}
								set(
									$current,
									"deductionRule",
									lv_deductionRule_3_0,
									"com.mimacom.ddd.sm.sim.Sim.SGrabFeatureRule");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
				    |
				(
					(
						{
							$current = forceCreateModelElement(
								grammarAccess.getSQueryAccess().getSQueryAction_0_0_1_0(),
								$current);
						}
					)
					otherlv_5='morph'
					{
						newLeafNode(otherlv_5, grammarAccess.getSQueryAccess().getMorphKeyword_0_0_1_1());
					}
					otherlv_6='query'
					{
						newLeafNode(otherlv_6, grammarAccess.getSQueryAccess().getQueryKeyword_0_0_1_2());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getSQueryAccess().getDeductionRuleSMorphFeatureRuleParserRuleCall_0_0_1_3_0());
							}
							lv_deductionRule_7_0=ruleSMorphFeatureRule
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSQueryRule());
								}
								set(
									$current,
									"deductionRule",
									lv_deductionRule_7_0,
									"com.mimacom.ddd.sm.sim.Sim.SMorphFeatureRule");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
			otherlv_8='('
			{
				newLeafNode(otherlv_8, grammarAccess.getSQueryAccess().getLeftParenthesisKeyword_0_1());
			}
			(
				otherlv_9='*'
				{
					newLeafNode(otherlv_9, grammarAccess.getSQueryAccess().getAsteriskKeyword_0_2_0());
				}
				    |
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getSQueryAccess().getParametersSQueryParameterParserRuleCall_0_2_1_0_0());
							}
							lv_parameters_10_0=ruleSQueryParameter
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSQueryRule());
								}
								add(
									$current,
									"parameters",
									lv_parameters_10_0,
									"com.mimacom.ddd.sm.sim.Sim.SQueryParameter");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_11=','
						{
							newLeafNode(otherlv_11, grammarAccess.getSQueryAccess().getCommaKeyword_0_2_1_1_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getSQueryAccess().getParametersSQueryParameterParserRuleCall_0_2_1_1_1_0());
								}
								lv_parameters_12_0=ruleSQueryParameter
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getSQueryRule());
									}
									add(
										$current,
										"parameters",
										lv_parameters_12_0,
										"com.mimacom.ddd.sm.sim.Sim.SQueryParameter");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)*
				)?
			)
			otherlv_13=')'
			{
				newLeafNode(otherlv_13, grammarAccess.getSQueryAccess().getRightParenthesisKeyword_0_3());
			}
		)
		    |
		(
			otherlv_14='ditch'
			{
				newLeafNode(otherlv_14, grammarAccess.getSQueryAccess().getDitchKeyword_1_0());
			}
			otherlv_15='query'
			{
				newLeafNode(otherlv_15, grammarAccess.getSQueryAccess().getQueryKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSQueryAccess().getDeductionRuleSDitchFeatureRuleParserRuleCall_1_2_0());
					}
					lv_deductionRule_16_0=ruleSDitchFeatureRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSQueryRule());
						}
						set(
							$current,
							"deductionRule",
							lv_deductionRule_16_0,
							"com.mimacom.ddd.sm.sim.Sim.SDitchFeatureRule");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_name_17_0=RULE_ID
					{
						newLeafNode(lv_name_17_0, grammarAccess.getSQueryAccess().getNameIDTerminalRuleCall_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSQueryRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_17_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_18='('
			{
				newLeafNode(otherlv_18, grammarAccess.getSQueryAccess().getLeftParenthesisKeyword_2_1());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getSQueryAccess().getParametersSQueryParameterParserRuleCall_2_2_0_0());
						}
						lv_parameters_19_0=ruleSQueryParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSQueryRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_19_0,
								"com.mimacom.ddd.sm.sim.Sim.SQueryParameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_20=','
					{
						newLeafNode(otherlv_20, grammarAccess.getSQueryAccess().getCommaKeyword_2_2_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getSQueryAccess().getParametersSQueryParameterParserRuleCall_2_2_1_1_0());
							}
							lv_parameters_21_0=ruleSQueryParameter
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSQueryRule());
								}
								add(
									$current,
									"parameters",
									lv_parameters_21_0,
									"com.mimacom.ddd.sm.sim.Sim.SQueryParameter");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
			otherlv_22=')'
			{
				newLeafNode(otherlv_22, grammarAccess.getSQueryAccess().getRightParenthesisKeyword_2_3());
			}
			otherlv_23=':'
			{
				newLeafNode(otherlv_23, grammarAccess.getSQueryAccess().getColonKeyword_2_4());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSQueryRule());
						}
					}
					otherlv_24=RULE_ID
					{
						newLeafNode(otherlv_24, grammarAccess.getSQueryAccess().getTypeSTypeCrossReference_2_5_0());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getSQueryAccess().getMultiplicitySMultiplicityParserRuleCall_2_6_0());
					}
					lv_multiplicity_25_0=ruleSMultiplicity
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSQueryRule());
						}
						set(
							$current,
							"multiplicity",
							lv_multiplicity_25_0,
							"com.mimacom.ddd.sm.sim.Sim.SMultiplicity");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				otherlv_26='returns'
				{
					newLeafNode(otherlv_26, grammarAccess.getSQueryAccess().getReturnsKeyword_2_7_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSQueryAccess().getReturnsSExpressionParserRuleCall_2_7_1_0());
						}
						lv_returns_27_0=ruleSExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSQueryRule());
							}
							set(
								$current,
								"returns",
								lv_returns_27_0,
								"com.mimacom.ddd.sm.sim.Sim.SExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)
	)
;

// Entry rule entryRuleSQueryParameter
entryRuleSQueryParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSQueryParameterRule()); }
	iv_ruleSQueryParameter=ruleSQueryParameter
	{ $current=$iv_ruleSQueryParameter.current; }
	EOF;

// Rule SQueryParameter
ruleSQueryParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getSQueryParameterAccess().getSQueryParameterAction_0_0(),
						$current);
				}
			)
			otherlv_1='grab'
			{
				newLeafNode(otherlv_1, grammarAccess.getSQueryParameterAccess().getGrabKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSQueryParameterAccess().getDeductionRuleSGrabFeatureRuleParserRuleCall_0_2_0());
					}
					lv_deductionRule_2_0=ruleSGrabFeatureRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSQueryParameterRule());
						}
						set(
							$current,
							"deductionRule",
							lv_deductionRule_2_0,
							"com.mimacom.ddd.sm.sim.Sim.SGrabFeatureRule");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getSQueryParameterAccess().getSQueryParameterAction_1_0(),
						$current);
				}
			)
			otherlv_4='morph'
			{
				newLeafNode(otherlv_4, grammarAccess.getSQueryParameterAccess().getMorphKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSQueryParameterAccess().getDeductionRuleSMorphFeatureRuleParserRuleCall_1_2_0());
					}
					lv_deductionRule_5_0=ruleSMorphFeatureRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSQueryParameterRule());
						}
						set(
							$current,
							"deductionRule",
							lv_deductionRule_5_0,
							"com.mimacom.ddd.sm.sim.Sim.SMorphFeatureRule");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getSQueryParameterAccess().getSQueryParameterAction_2_0(),
						$current);
				}
			)
			otherlv_7='ditch'
			{
				newLeafNode(otherlv_7, grammarAccess.getSQueryParameterAccess().getDitchKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSQueryParameterAccess().getDeductionRuleSDitchFeatureRuleParserRuleCall_2_2_0());
					}
					lv_deductionRule_8_0=ruleSDitchFeatureRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSQueryParameterRule());
						}
						set(
							$current,
							"deductionRule",
							lv_deductionRule_8_0,
							"com.mimacom.ddd.sm.sim.Sim.SDitchFeatureRule");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_name_9_0=RULE_ID
					{
						newLeafNode(lv_name_9_0, grammarAccess.getSQueryParameterAccess().getNameIDTerminalRuleCall_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSQueryParameterRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_9_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_10=':'
			{
				newLeafNode(otherlv_10, grammarAccess.getSQueryParameterAccess().getColonKeyword_3_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSQueryParameterRule());
						}
					}
					otherlv_11=RULE_ID
					{
						newLeafNode(otherlv_11, grammarAccess.getSQueryParameterAccess().getTypeSTypeCrossReference_3_2_0());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getSQueryParameterAccess().getMultiplicitySMultiplicityParserRuleCall_3_3_0());
					}
					lv_multiplicity_12_0=ruleSMultiplicity
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSQueryParameterRule());
						}
						set(
							$current,
							"multiplicity",
							lv_multiplicity_12_0,
							"com.mimacom.ddd.sm.sim.Sim.SMultiplicity");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)
	)
;

// Entry rule entryRuleSExpression
entryRuleSExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSExpressionRule()); }
	iv_ruleSExpression=ruleSExpression
	{ $current=$iv_ruleSExpression.current; }
	EOF;

// Rule SExpression
ruleSExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_expr_0_0=RULE_STRING
			{
				newLeafNode(lv_expr_0_0, grammarAccess.getSExpressionAccess().getExprSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getSExpressionRule());
				}
				setWithLastConsumed(
					$current,
					"expr",
					lv_expr_0_0,
					"org.eclipse.xtext.common.Terminals.STRING");
			}
		)
	)
;

// Entry rule entryRuleSQualifiedNameWithWildcard
entryRuleSQualifiedNameWithWildcard returns [String current=null]:
	{ newCompositeNode(grammarAccess.getSQualifiedNameWithWildcardRule()); }
	iv_ruleSQualifiedNameWithWildcard=ruleSQualifiedNameWithWildcard
	{ $current=$iv_ruleSQualifiedNameWithWildcard.current.getText(); }
	EOF;

// Rule SQualifiedNameWithWildcard
ruleSQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSQualifiedNameWithWildcardAccess().getSQualifiedNameParserRuleCall_0());
		}
		this_SQualifiedName_0=ruleSQualifiedName
		{
			$current.merge(this_SQualifiedName_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			kw='.*'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getSQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1());
			}
		)?
	)
;

// Entry rule entryRuleSQualifiedName
entryRuleSQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getSQualifiedNameRule()); }
	iv_ruleSQualifiedName=ruleSQualifiedName
	{ $current=$iv_ruleSQualifiedName.current.getText(); }
	EOF;

// Rule SQualifiedName
ruleSQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getSQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getSQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getSQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRuleSMultiplicity
entryRuleSMultiplicity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSMultiplicityRule()); }
	iv_ruleSMultiplicity=ruleSMultiplicity
	{ $current=$iv_ruleSMultiplicity.current; }
	EOF;

// Rule SMultiplicity
ruleSMultiplicity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getSMultiplicityAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				lv_minOccurs_1_0=RULE_INT
				{
					newLeafNode(lv_minOccurs_1_0, grammarAccess.getSMultiplicityAccess().getMinOccursINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSMultiplicityRule());
					}
					setWithLastConsumed(
						$current,
						"minOccurs",
						lv_minOccurs_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_2='..'
		{
			newLeafNode(otherlv_2, grammarAccess.getSMultiplicityAccess().getFullStopFullStopKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSMultiplicityAccess().getMaxOccursMULTIPLICITYParserRuleCall_3_0());
				}
				lv_maxOccurs_3_0=ruleMULTIPLICITY
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSMultiplicityRule());
					}
					set(
						$current,
						"maxOccurs",
						lv_maxOccurs_3_0,
						"com.mimacom.ddd.sm.sim.Sim.MULTIPLICITY");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getSMultiplicityAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleMULTIPLICITY
entryRuleMULTIPLICITY returns [String current=null]:
	{ newCompositeNode(grammarAccess.getMULTIPLICITYRule()); }
	iv_ruleMULTIPLICITY=ruleMULTIPLICITY
	{ $current=$iv_ruleMULTIPLICITY.current.getText(); }
	EOF;

// Rule MULTIPLICITY
ruleMULTIPLICITY returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_INT_0=RULE_INT
		{
			$current.merge(this_INT_0);
		}
		{
			newLeafNode(this_INT_0, grammarAccess.getMULTIPLICITYAccess().getINTTerminalRuleCall_0());
		}
		    |
		kw='*'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getMULTIPLICITYAccess().getAsteriskKeyword_1());
		}
	)
;

// Rule SAssociationKind
ruleSAssociationKind returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='reference'
			{
				$current = grammarAccess.getSAssociationKindAccess().getREFERENCEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getSAssociationKindAccess().getREFERENCEEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='composite'
			{
				$current = grammarAccess.getSAssociationKindAccess().getCOMPOSITEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getSAssociationKindAccess().getCOMPOSITEEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule SAssociationKindInverse
ruleSAssociationKindInverse returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='inverse'
		{
			$current = grammarAccess.getSAssociationKindInverseAccess().getINVERSE_COMPOSITEEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getSAssociationKindInverseAccess().getINVERSE_COMPOSITEEnumLiteralDeclaration());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
