/*
 * generated by Xtext 2.19.0
 */
grammar InternalSim;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package com.mimacom.ddd.sm.sim.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package com.mimacom.ddd.sm.sim.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.mimacom.ddd.sm.sim.services.SimGrammarAccess;

}

@parser::members {

 	private SimGrammarAccess grammarAccess;

    public InternalSimParser(TokenStream input, SimGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "DNamespace";
   	}

   	@Override
   	protected SimGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleDNamespace
entryRuleDNamespace returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDNamespaceRule()); }
	iv_ruleDNamespace=ruleDNamespace
	{ $current=$iv_ruleDNamespace.current; }
	EOF;

// Rule DNamespace
ruleDNamespace returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='system'
		{
			newLeafNode(otherlv_0, grammarAccess.getDNamespaceAccess().getSystemKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDNamespaceAccess().getNameDQualifiedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleDQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDNamespaceRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"com.mimacom.ddd.dm.dmx.Dmx.DQualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDNamespaceAccess().getImportsDImportParserRuleCall_2_0());
				}
				lv_imports_2_0=ruleDImport
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDNamespaceRule());
					}
					add(
						$current,
						"imports",
						lv_imports_2_0,
						"com.mimacom.ddd.dm.dmx.Dmx.DImport");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getDNamespaceAccess().getModelSystemInformationModelParserRuleCall_3_0());
				}
				lv_model_3_0=ruleSystemInformationModel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDNamespaceRule());
					}
					set(
						$current,
						"model",
						lv_model_3_0,
						"com.mimacom.ddd.sm.sim.Sim.SystemInformationModel");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSystemInformationModel
entryRuleSystemInformationModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSystemInformationModelRule()); }
	iv_ruleSystemInformationModel=ruleSystemInformationModel
	{ $current=$iv_ruleSystemInformationModel.current; }
	EOF;

// Rule SystemInformationModel
ruleSystemInformationModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getSystemInformationModelAccess().getKindSTypeModelKindEnumRuleCall_0_0_0_0());
						}
						lv_kind_0_0=ruleSTypeModelKind
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSystemInformationModelRule());
							}
							set(
								$current,
								"kind",
								lv_kind_0_0,
								"com.mimacom.ddd.sm.sim.Sim.STypeModelKind");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_1='type'
				{
					newLeafNode(otherlv_1, grammarAccess.getSystemInformationModelAccess().getTypeKeyword_0_0_1());
				}
				otherlv_2='model'
				{
					newLeafNode(otherlv_2, grammarAccess.getSystemInformationModelAccess().getModelKeyword_0_0_2());
				}
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getSystemInformationModelAccess().getKindSystemInformationModelKindEnumRuleCall_0_1_0_0());
						}
						lv_kind_3_0=ruleSystemInformationModelKind
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSystemInformationModelRule());
							}
							set(
								$current,
								"kind",
								lv_kind_3_0,
								"com.mimacom.ddd.sm.sim.Sim.SystemInformationModelKind");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_4='information'
				{
					newLeafNode(otherlv_4, grammarAccess.getSystemInformationModelAccess().getInformationKeyword_0_1_1());
				}
				otherlv_5='model'
				{
					newLeafNode(otherlv_5, grammarAccess.getSystemInformationModelAccess().getModelKeyword_0_1_2());
				}
			)
		)
		(
			(
				lv_name_6_0=RULE_ID
				{
					newLeafNode(lv_name_6_0, grammarAccess.getSystemInformationModelAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSystemInformationModelRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_6_0,
						"com.mimacom.ddd.dm.dmx.Dmx.ID");
				}
			)
		)
		(
			(
				lv_generate_7_0='generate'
				{
					newLeafNode(lv_generate_7_0, grammarAccess.getSystemInformationModelAccess().getGenerateGenerateKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSystemInformationModelRule());
					}
					setWithLastConsumed($current, "generate", true, "generate");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getSystemInformationModelAccess().getDescriptionDRichTextParserRuleCall_3_0());
				}
				lv_description_8_0=ruleDRichText
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSystemInformationModelRule());
					}
					set(
						$current,
						"description",
						lv_description_8_0,
						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_9='{'
		{
			newLeafNode(otherlv_9, grammarAccess.getSystemInformationModelAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSystemInformationModelAccess().getTypesSimTypeParserRuleCall_5_0_0());
					}
					lv_types_10_0=ruleSimType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSystemInformationModelRule());
						}
						add(
							$current,
							"types",
							lv_types_10_0,
							"com.mimacom.ddd.sm.sim.Sim.SimType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getSystemInformationModelAccess().getAggregatesSimAggregateParserRuleCall_5_1_0());
					}
					lv_aggregates_11_0=ruleSimAggregate
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSystemInformationModelRule());
						}
						add(
							$current,
							"aggregates",
							lv_aggregates_11_0,
							"com.mimacom.ddd.sm.sim.Sim.SimAggregate");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getSystemInformationModelAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleSimGrabAggregateRule
entryRuleSimGrabAggregateRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimGrabAggregateRuleRule()); }
	iv_ruleSimGrabAggregateRule=ruleSimGrabAggregateRule
	{ $current=$iv_ruleSimGrabAggregateRule.current; }
	EOF;

// Rule SimGrabAggregateRule
ruleSimGrabAggregateRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSimGrabAggregateRuleRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getSimGrabAggregateRuleAccess().getSourceDimAggregateCrossReference_0_0());
				}
				ruleDQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='as'
			{
				newLeafNode(otherlv_1, grammarAccess.getSimGrabAggregateRuleAccess().getAsKeyword_1_0());
			}
			(
				(
					lv_renameTo_2_0=RULE_ID
					{
						newLeafNode(lv_renameTo_2_0, grammarAccess.getSimGrabAggregateRuleAccess().getRenameToIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSimGrabAggregateRuleRule());
						}
						setWithLastConsumed(
							$current,
							"renameTo",
							lv_renameTo_2_0,
							"com.mimacom.ddd.dm.dmx.Dmx.ID");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleSimGrabPrimitiveRule
entryRuleSimGrabPrimitiveRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimGrabPrimitiveRuleRule()); }
	iv_ruleSimGrabPrimitiveRule=ruleSimGrabPrimitiveRule
	{ $current=$iv_ruleSimGrabPrimitiveRule.current; }
	EOF;

// Rule SimGrabPrimitiveRule
ruleSimGrabPrimitiveRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSimGrabPrimitiveRuleRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getSimGrabPrimitiveRuleAccess().getSourceDimPrimitiveCrossReference_0_0());
				}
				ruleDQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='as'
			{
				newLeafNode(otherlv_1, grammarAccess.getSimGrabPrimitiveRuleAccess().getAsKeyword_1_0());
			}
			(
				(
					lv_renameTo_2_0=RULE_ID
					{
						newLeafNode(lv_renameTo_2_0, grammarAccess.getSimGrabPrimitiveRuleAccess().getRenameToIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSimGrabPrimitiveRuleRule());
						}
						setWithLastConsumed(
							$current,
							"renameTo",
							lv_renameTo_2_0,
							"com.mimacom.ddd.dm.dmx.Dmx.ID");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleSimDitchPrimitiveRule
entryRuleSimDitchPrimitiveRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimDitchPrimitiveRuleRule()); }
	iv_ruleSimDitchPrimitiveRule=ruleSimDitchPrimitiveRule
	{ $current=$iv_ruleSimDitchPrimitiveRule.current; }
	EOF;

// Rule SimDitchPrimitiveRule
ruleSimDitchPrimitiveRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getSimDitchPrimitiveRuleRule());
				}
			}
			{
				newCompositeNode(grammarAccess.getSimDitchPrimitiveRuleAccess().getSourceDimPrimitiveCrossReference_0());
			}
			ruleDQualifiedName
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleSimGrabEnumerationRule
entryRuleSimGrabEnumerationRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimGrabEnumerationRuleRule()); }
	iv_ruleSimGrabEnumerationRule=ruleSimGrabEnumerationRule
	{ $current=$iv_ruleSimGrabEnumerationRule.current; }
	EOF;

// Rule SimGrabEnumerationRule
ruleSimGrabEnumerationRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSimGrabEnumerationRuleRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getSimGrabEnumerationRuleAccess().getSourceDimEnumerationCrossReference_0_0());
				}
				ruleDQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='as'
			{
				newLeafNode(otherlv_1, grammarAccess.getSimGrabEnumerationRuleAccess().getAsKeyword_1_0());
			}
			(
				(
					lv_renameTo_2_0=RULE_ID
					{
						newLeafNode(lv_renameTo_2_0, grammarAccess.getSimGrabEnumerationRuleAccess().getRenameToIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSimGrabEnumerationRuleRule());
						}
						setWithLastConsumed(
							$current,
							"renameTo",
							lv_renameTo_2_0,
							"com.mimacom.ddd.dm.dmx.Dmx.ID");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleSimDitchEnumerationRule
entryRuleSimDitchEnumerationRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimDitchEnumerationRuleRule()); }
	iv_ruleSimDitchEnumerationRule=ruleSimDitchEnumerationRule
	{ $current=$iv_ruleSimDitchEnumerationRule.current; }
	EOF;

// Rule SimDitchEnumerationRule
ruleSimDitchEnumerationRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getSimDitchEnumerationRuleRule());
				}
			}
			{
				newCompositeNode(grammarAccess.getSimDitchEnumerationRuleAccess().getSourceDimEnumerationCrossReference_0());
			}
			ruleDQualifiedName
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleSimGrabEnumerationLiteralRule
entryRuleSimGrabEnumerationLiteralRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimGrabEnumerationLiteralRuleRule()); }
	iv_ruleSimGrabEnumerationLiteralRule=ruleSimGrabEnumerationLiteralRule
	{ $current=$iv_ruleSimGrabEnumerationLiteralRule.current; }
	EOF;

// Rule SimGrabEnumerationLiteralRule
ruleSimGrabEnumerationLiteralRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSimGrabEnumerationLiteralRuleRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getSimGrabEnumerationLiteralRuleAccess().getSourceDimLiteralCrossReference_0_0());
				}
			)
		)
		(
			otherlv_1='as'
			{
				newLeafNode(otherlv_1, grammarAccess.getSimGrabEnumerationLiteralRuleAccess().getAsKeyword_1_0());
			}
			(
				(
					lv_renameTo_2_0=RULE_ID
					{
						newLeafNode(lv_renameTo_2_0, grammarAccess.getSimGrabEnumerationLiteralRuleAccess().getRenameToIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSimGrabEnumerationLiteralRuleRule());
						}
						setWithLastConsumed(
							$current,
							"renameTo",
							lv_renameTo_2_0,
							"com.mimacom.ddd.dm.dmx.Dmx.ID");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleSimDitchEnumerationLiteralRule
entryRuleSimDitchEnumerationLiteralRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimDitchEnumerationLiteralRuleRule()); }
	iv_ruleSimDitchEnumerationLiteralRule=ruleSimDitchEnumerationLiteralRule
	{ $current=$iv_ruleSimDitchEnumerationLiteralRule.current; }
	EOF;

// Rule SimDitchEnumerationLiteralRule
ruleSimDitchEnumerationLiteralRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getSimDitchEnumerationLiteralRuleRule());
				}
			}
			otherlv_0=RULE_ID
			{
				newLeafNode(otherlv_0, grammarAccess.getSimDitchEnumerationLiteralRuleAccess().getSourceDimLiteralCrossReference_0());
			}
		)
	)
;

// Entry rule entryRuleSimGrabComplexTypeRule
entryRuleSimGrabComplexTypeRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimGrabComplexTypeRuleRule()); }
	iv_ruleSimGrabComplexTypeRule=ruleSimGrabComplexTypeRule
	{ $current=$iv_ruleSimGrabComplexTypeRule.current; }
	EOF;

// Rule SimGrabComplexTypeRule
ruleSimGrabComplexTypeRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSimGrabComplexTypeRuleRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getSimGrabComplexTypeRuleAccess().getSourceDimComplexTypeCrossReference_0_0());
				}
				ruleDQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='as'
			{
				newLeafNode(otherlv_1, grammarAccess.getSimGrabComplexTypeRuleAccess().getAsKeyword_1_0());
			}
			(
				(
					lv_renameTo_2_0=RULE_ID
					{
						newLeafNode(lv_renameTo_2_0, grammarAccess.getSimGrabComplexTypeRuleAccess().getRenameToIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSimGrabComplexTypeRuleRule());
						}
						setWithLastConsumed(
							$current,
							"renameTo",
							lv_renameTo_2_0,
							"com.mimacom.ddd.dm.dmx.Dmx.ID");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleSimDitchComplexTypeRule
entryRuleSimDitchComplexTypeRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimDitchComplexTypeRuleRule()); }
	iv_ruleSimDitchComplexTypeRule=ruleSimDitchComplexTypeRule
	{ $current=$iv_ruleSimDitchComplexTypeRule.current; }
	EOF;

// Rule SimDitchComplexTypeRule
ruleSimDitchComplexTypeRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getSimDitchComplexTypeRuleRule());
				}
			}
			{
				newCompositeNode(grammarAccess.getSimDitchComplexTypeRuleAccess().getSourceDimComplexTypeCrossReference_0());
			}
			ruleDQualifiedName
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleSimMorphComplexTypeRule
entryRuleSimMorphComplexTypeRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimMorphComplexTypeRuleRule()); }
	iv_ruleSimMorphComplexTypeRule=ruleSimMorphComplexTypeRule
	{ $current=$iv_ruleSimMorphComplexTypeRule.current; }
	EOF;

// Rule SimMorphComplexTypeRule
ruleSimMorphComplexTypeRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSimMorphComplexTypeRuleRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getSimMorphComplexTypeRuleAccess().getSourceDimComplexTypeCrossReference_0_0());
				}
				ruleDQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getSimMorphComplexTypeRuleRule());
			}
			newCompositeNode(grammarAccess.getSimMorphComplexTypeRuleAccess().getChangeComplexTypeParserRuleCall_1());
		}
		this_ChangeComplexType_1=ruleChangeComplexType[$current]
		{
			$current = $this_ChangeComplexType_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSimFuseComplexTypeRule
entryRuleSimFuseComplexTypeRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimFuseComplexTypeRuleRule()); }
	iv_ruleSimFuseComplexTypeRule=ruleSimFuseComplexTypeRule
	{ $current=$iv_ruleSimFuseComplexTypeRule.current; }
	EOF;

// Rule SimFuseComplexTypeRule
ruleSimFuseComplexTypeRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSimFuseComplexTypeRuleRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getSimFuseComplexTypeRuleAccess().getSourceDimComplexTypeCrossReference_0_0());
				}
				ruleDQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='and'
			{
				newLeafNode(otherlv_1, grammarAccess.getSimFuseComplexTypeRuleAccess().getAndKeyword_1_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSimFuseComplexTypeRuleRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getSimFuseComplexTypeRuleAccess().getOtherSourcesDComplexTypeCrossReference_1_1_0());
					}
					ruleDQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)+
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getSimFuseComplexTypeRuleRule());
			}
			newCompositeNode(grammarAccess.getSimFuseComplexTypeRuleAccess().getChangeComplexTypeParserRuleCall_2());
		}
		this_ChangeComplexType_3=ruleChangeComplexType[$current]
		{
			$current = $this_ChangeComplexType_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule ChangeComplexType
ruleChangeComplexType[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='to'
		{
			newLeafNode(otherlv_0, grammarAccess.getChangeComplexTypeAccess().getToKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getChangeComplexTypeAccess().getAbstractSimAbstractTypeEnumRuleCall_1_0());
				}
				lv_abstract_1_0=ruleSimAbstractType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getChangeComplexTypeRule());
					}
					set(
						$current,
						"abstract",
						lv_abstract_1_0,
						"com.mimacom.ddd.sm.sim.Sim.SimAbstractType");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getChangeComplexTypeAccess().getDetailSimDetailTypeEnumRuleCall_2_0_0());
					}
					lv_detail_2_0=ruleSimDetailType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getChangeComplexTypeRule());
						}
						set(
							$current,
							"detail",
							lv_detail_2_0,
							"com.mimacom.ddd.sm.sim.Sim.SimDetailType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getChangeComplexTypeAccess().getRootEntitySimRootEntityEnumRuleCall_2_1_0_0());
						}
						lv_rootEntity_3_0=ruleSimRootEntity
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getChangeComplexTypeRule());
							}
							set(
								$current,
								"rootEntity",
								lv_rootEntity_3_0,
								"com.mimacom.ddd.sm.sim.Sim.SimRootEntity");
							afterParserOrEnumRuleCall();
						}
					)
				)?
				(
					(
						{
							newCompositeNode(grammarAccess.getChangeComplexTypeAccess().getDetailSimEntityTypeEnumRuleCall_2_1_1_0());
						}
						lv_detail_4_0=ruleSimEntityType
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getChangeComplexTypeRule());
							}
							set(
								$current,
								"detail",
								lv_detail_4_0,
								"com.mimacom.ddd.sm.sim.Sim.SimEntityType");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
		(
			(
				lv_renameTo_5_0=RULE_ID
				{
					newLeafNode(lv_renameTo_5_0, grammarAccess.getChangeComplexTypeAccess().getRenameToIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getChangeComplexTypeRule());
					}
					setWithLastConsumed(
						$current,
						"renameTo",
						lv_renameTo_5_0,
						"com.mimacom.ddd.dm.dmx.Dmx.ID");
				}
			)
		)?
		(
			otherlv_6='extends'
			{
				newLeafNode(otherlv_6, grammarAccess.getChangeComplexTypeAccess().getExtendsKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getChangeComplexTypeRule());
						}
					}
					otherlv_7=RULE_ID
					{
						newLeafNode(otherlv_7, grammarAccess.getChangeComplexTypeAccess().getExtendFromDComplexTypeCrossReference_4_1_0());
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleSimGrabFeatureRule
entryRuleSimGrabFeatureRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimGrabFeatureRuleRule()); }
	iv_ruleSimGrabFeatureRule=ruleSimGrabFeatureRule
	{ $current=$iv_ruleSimGrabFeatureRule.current; }
	EOF;

// Rule SimGrabFeatureRule
ruleSimGrabFeatureRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSimGrabFeatureRuleRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getSimGrabFeatureRuleAccess().getSourceDimFeatureCrossReference_0_0());
				}
			)
		)
		(
			otherlv_1='as'
			{
				newLeafNode(otherlv_1, grammarAccess.getSimGrabFeatureRuleAccess().getAsKeyword_1_0());
			}
			(
				(
					lv_renameTo_2_0=RULE_ID
					{
						newLeafNode(lv_renameTo_2_0, grammarAccess.getSimGrabFeatureRuleAccess().getRenameToIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSimGrabFeatureRuleRule());
						}
						setWithLastConsumed(
							$current,
							"renameTo",
							lv_renameTo_2_0,
							"com.mimacom.ddd.dm.dmx.Dmx.ID");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleSimMorphFeatureRule
entryRuleSimMorphFeatureRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimMorphFeatureRuleRule()); }
	iv_ruleSimMorphFeatureRule=ruleSimMorphFeatureRule
	{ $current=$iv_ruleSimMorphFeatureRule.current; }
	EOF;

// Rule SimMorphFeatureRule
ruleSimMorphFeatureRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSimMorphFeatureRuleRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getSimMorphFeatureRuleAccess().getSourceDimFeatureCrossReference_0_0());
				}
			)
		)
		otherlv_1='to'
		{
			newLeafNode(otherlv_1, grammarAccess.getSimMorphFeatureRuleAccess().getToKeyword_1());
		}
		(
			(
				(
					lv_renameTo_2_0=RULE_ID
					{
						newLeafNode(lv_renameTo_2_0, grammarAccess.getSimMorphFeatureRuleAccess().getRenameToIDTerminalRuleCall_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSimMorphFeatureRuleRule());
						}
						setWithLastConsumed(
							$current,
							"renameTo",
							lv_renameTo_2_0,
							"com.mimacom.ddd.dm.dmx.Dmx.ID");
					}
				)
			)
			otherlv_3=':'
			{
				newLeafNode(otherlv_3, grammarAccess.getSimMorphFeatureRuleAccess().getColonKeyword_2_1());
			}
		)?
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSimMorphFeatureRuleRule());
					}
				}
				otherlv_4=RULE_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getSimMorphFeatureRuleAccess().getRetypeToDTypeCrossReference_3_0());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSimMorphFeatureRuleAccess().getRemultiplyToDMultiplicityParserRuleCall_4_0());
				}
				lv_remultiplyTo_5_0=ruleDMultiplicity
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimMorphFeatureRuleRule());
					}
					set(
						$current,
						"remultiplyTo",
						lv_remultiplyTo_5_0,
						"com.mimacom.ddd.dm.dmx.Dmx.DMultiplicity");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleSimDitchFeatureRule
entryRuleSimDitchFeatureRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimDitchFeatureRuleRule()); }
	iv_ruleSimDitchFeatureRule=ruleSimDitchFeatureRule
	{ $current=$iv_ruleSimDitchFeatureRule.current; }
	EOF;

// Rule SimDitchFeatureRule
ruleSimDitchFeatureRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getSimDitchFeatureRuleRule());
				}
			}
			otherlv_0=RULE_ID
			{
				newLeafNode(otherlv_0, grammarAccess.getSimDitchFeatureRuleAccess().getSourceDimFeatureCrossReference_0());
			}
		)
	)
;

// Entry rule entryRuleSimGrabQueryParameterRule
entryRuleSimGrabQueryParameterRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimGrabQueryParameterRuleRule()); }
	iv_ruleSimGrabQueryParameterRule=ruleSimGrabQueryParameterRule
	{ $current=$iv_ruleSimGrabQueryParameterRule.current; }
	EOF;

// Rule SimGrabQueryParameterRule
ruleSimGrabQueryParameterRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSimGrabQueryParameterRuleRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getSimGrabQueryParameterRuleAccess().getSourceDimQueryParameterCrossReference_0_0());
				}
			)
		)
		(
			otherlv_1='as'
			{
				newLeafNode(otherlv_1, grammarAccess.getSimGrabQueryParameterRuleAccess().getAsKeyword_1_0());
			}
			(
				(
					lv_renameTo_2_0=RULE_ID
					{
						newLeafNode(lv_renameTo_2_0, grammarAccess.getSimGrabQueryParameterRuleAccess().getRenameToIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSimGrabQueryParameterRuleRule());
						}
						setWithLastConsumed(
							$current,
							"renameTo",
							lv_renameTo_2_0,
							"com.mimacom.ddd.dm.dmx.Dmx.ID");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleSimMorphQueryParameterRule
entryRuleSimMorphQueryParameterRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimMorphQueryParameterRuleRule()); }
	iv_ruleSimMorphQueryParameterRule=ruleSimMorphQueryParameterRule
	{ $current=$iv_ruleSimMorphQueryParameterRule.current; }
	EOF;

// Rule SimMorphQueryParameterRule
ruleSimMorphQueryParameterRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSimMorphQueryParameterRuleRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getSimMorphQueryParameterRuleAccess().getSourceDimQueryParameterCrossReference_0_0());
				}
			)
		)
		otherlv_1='to'
		{
			newLeafNode(otherlv_1, grammarAccess.getSimMorphQueryParameterRuleAccess().getToKeyword_1());
		}
		(
			(
				(
					lv_renameTo_2_0=RULE_ID
					{
						newLeafNode(lv_renameTo_2_0, grammarAccess.getSimMorphQueryParameterRuleAccess().getRenameToIDTerminalRuleCall_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSimMorphQueryParameterRuleRule());
						}
						setWithLastConsumed(
							$current,
							"renameTo",
							lv_renameTo_2_0,
							"com.mimacom.ddd.dm.dmx.Dmx.ID");
					}
				)
			)
			otherlv_3=':'
			{
				newLeafNode(otherlv_3, grammarAccess.getSimMorphQueryParameterRuleAccess().getColonKeyword_2_1());
			}
		)?
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSimMorphQueryParameterRuleRule());
					}
				}
				otherlv_4=RULE_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getSimMorphQueryParameterRuleAccess().getRetypeToDTypeCrossReference_3_0());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSimMorphQueryParameterRuleAccess().getRemultiplyToDMultiplicityParserRuleCall_4_0());
				}
				lv_remultiplyTo_5_0=ruleDMultiplicity
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimMorphQueryParameterRuleRule());
					}
					set(
						$current,
						"remultiplyTo",
						lv_remultiplyTo_5_0,
						"com.mimacom.ddd.dm.dmx.Dmx.DMultiplicity");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleSimDitchQueryParameterRule
entryRuleSimDitchQueryParameterRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimDitchQueryParameterRuleRule()); }
	iv_ruleSimDitchQueryParameterRule=ruleSimDitchQueryParameterRule
	{ $current=$iv_ruleSimDitchQueryParameterRule.current; }
	EOF;

// Rule SimDitchQueryParameterRule
ruleSimDitchQueryParameterRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getSimDitchQueryParameterRuleRule());
				}
			}
			otherlv_0=RULE_ID
			{
				newLeafNode(otherlv_0, grammarAccess.getSimDitchQueryParameterRuleAccess().getSourceDimQueryParameterCrossReference_0());
			}
		)
	)
;

// Entry rule entryRuleSimAggregate
entryRuleSimAggregate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimAggregateRule()); }
	iv_ruleSimAggregate=ruleSimAggregate
	{ $current=$iv_ruleSimAggregate.current; }
	EOF;

// Rule SimAggregate
ruleSimAggregate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSimAggregateAccess().getSimAggregateTranspositionParserRuleCall_0());
		}
		this_SimAggregateTransposition_0=ruleSimAggregateTransposition
		{
			$current = $this_SimAggregateTransposition_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSimAggregateAccess().getDimAggregateParserRuleCall_1());
		}
		this_DimAggregate_1=ruleDimAggregate
		{
			$current = $this_DimAggregate_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSimAggregateTransposition
entryRuleSimAggregateTransposition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimAggregateTranspositionRule()); }
	iv_ruleSimAggregateTransposition=ruleSimAggregateTransposition
	{ $current=$iv_ruleSimAggregateTransposition.current; }
	EOF;

// Rule SimAggregateTransposition
ruleSimAggregateTransposition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSimAggregateTranspositionAccess().getTAggregateTranspositionAction_0(),
					$current);
			}
		)
		otherlv_1='grab'
		{
			newLeafNode(otherlv_1, grammarAccess.getSimAggregateTranspositionAccess().getGrabKeyword_1());
		}
		otherlv_2='aggregate'
		{
			newLeafNode(otherlv_2, grammarAccess.getSimAggregateTranspositionAccess().getAggregateKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSimAggregateTranspositionAccess().getRuleSimGrabAggregateRuleParserRuleCall_3_0());
				}
				lv_rule_3_0=ruleSimGrabAggregateRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimAggregateTranspositionRule());
					}
					set(
						$current,
						"rule",
						lv_rule_3_0,
						"com.mimacom.ddd.sm.sim.Sim.SimGrabAggregateRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSimAggregateTranspositionAccess().getDescriptionDRichTextParserRuleCall_4_0());
				}
				lv_description_4_0=ruleDRichText
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimAggregateTranspositionRule());
					}
					set(
						$current,
						"description",
						lv_description_4_0,
						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_5='{'
			{
				newLeafNode(otherlv_5, grammarAccess.getSimAggregateTranspositionAccess().getLeftCurlyBracketKeyword_5_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getSimAggregateTranspositionAccess().getFeaturesSimQueryTranspositionParserRuleCall_5_1_0_0());
						}
						lv_features_6_0=ruleSimQueryTransposition
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSimAggregateTranspositionRule());
							}
							add(
								$current,
								"features",
								lv_features_6_0,
								"com.mimacom.ddd.sm.sim.Sim.SimQueryTransposition");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					otherlv_7='add'
					{
						newLeafNode(otherlv_7, grammarAccess.getSimAggregateTranspositionAccess().getAddKeyword_5_1_1_0());
					}
					otherlv_8='query'
					{
						newLeafNode(otherlv_8, grammarAccess.getSimAggregateTranspositionAccess().getQueryKeyword_5_1_1_1());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getSimAggregateTranspositionAccess().getFeaturesDimQueryParserRuleCall_5_1_1_2_0());
							}
							lv_features_9_0=ruleDimQuery
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSimAggregateTranspositionRule());
								}
								add(
									$current,
									"features",
									lv_features_9_0,
									"com.mimacom.ddd.dm.dim.Dim.DimQuery");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)*
			(
				(
					{
						newCompositeNode(grammarAccess.getSimAggregateTranspositionAccess().getTypesSimTypeParserRuleCall_5_2_0());
					}
					lv_types_10_0=ruleSimType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSimAggregateTranspositionRule());
						}
						add(
							$current,
							"types",
							lv_types_10_0,
							"com.mimacom.ddd.sm.sim.Sim.SimType");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_11='}'
			{
				newLeafNode(otherlv_11, grammarAccess.getSimAggregateTranspositionAccess().getRightCurlyBracketKeyword_5_3());
			}
		)?
	)
;

// Entry rule entryRuleDAggregateKeyword
entryRuleDAggregateKeyword returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDAggregateKeywordRule()); }
	iv_ruleDAggregateKeyword=ruleDAggregateKeyword
	{ $current=$iv_ruleDAggregateKeyword.current.getText(); }
	EOF;

// Rule DAggregateKeyword
ruleDAggregateKeyword returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='aggregate'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getDAggregateKeywordAccess().getAggregateKeyword());
	}
;

// Entry rule entryRuleDimType
entryRuleDimType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDimTypeRule()); }
	iv_ruleDimType=ruleDimType
	{ $current=$iv_ruleDimType.current; }
	EOF;

// Rule DimType
ruleDimType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDimTypeAccess().getSimPrimitiveTranspositionParserRuleCall_0());
		}
		this_SimPrimitiveTransposition_0=ruleSimPrimitiveTransposition
		{
			$current = $this_SimPrimitiveTransposition_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDimTypeAccess().getDimPrimitiveParserRuleCall_1());
		}
		this_DimPrimitive_1=ruleDimPrimitive
		{
			$current = $this_DimPrimitive_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDimTypeAccess().getSimEnumerationTranspositionParserRuleCall_2());
		}
		this_SimEnumerationTransposition_2=ruleSimEnumerationTransposition
		{
			$current = $this_SimEnumerationTransposition_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDimTypeAccess().getDimEnumerationParserRuleCall_3());
		}
		this_DimEnumeration_3=ruleDimEnumeration
		{
			$current = $this_DimEnumeration_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDimTypeAccess().getSimEntityTypeTranspositionParserRuleCall_4());
		}
		this_SimEntityTypeTransposition_4=ruleSimEntityTypeTransposition
		{
			$current = $this_SimEntityTypeTransposition_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDimTypeAccess().getDimEntityTypeParserRuleCall_5());
		}
		this_DimEntityType_5=ruleDimEntityType
		{
			$current = $this_DimEntityType_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDimTypeAccess().getSimDetailTypeTranspositionParserRuleCall_6());
		}
		this_SimDetailTypeTransposition_6=ruleSimDetailTypeTransposition
		{
			$current = $this_SimDetailTypeTransposition_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDimTypeAccess().getDimDetailTypeParserRuleCall_7());
		}
		this_DimDetailType_7=ruleDimDetailType
		{
			$current = $this_DimDetailType_7.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSimType
entryRuleSimType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimTypeRule()); }
	iv_ruleSimType=ruleSimType
	{ $current=$iv_ruleSimType.current; }
	EOF;

// Rule SimType
ruleSimType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSimTypeAccess().getSimPrimitiveTranspositionParserRuleCall_0());
		}
		this_SimPrimitiveTransposition_0=ruleSimPrimitiveTransposition
		{
			$current = $this_SimPrimitiveTransposition_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			otherlv_1='add'
			{
				newLeafNode(otherlv_1, grammarAccess.getSimTypeAccess().getAddKeyword_1_0());
			}
			{
				newCompositeNode(grammarAccess.getSimTypeAccess().getDimPrimitiveParserRuleCall_1_1());
			}
			this_DimPrimitive_2=ruleDimPrimitive
			{
				$current = $this_DimPrimitive_2.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getSimTypeAccess().getSimEnumerationTranspositionParserRuleCall_2());
		}
		this_SimEnumerationTransposition_3=ruleSimEnumerationTransposition
		{
			$current = $this_SimEnumerationTransposition_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			otherlv_4='add'
			{
				newLeafNode(otherlv_4, grammarAccess.getSimTypeAccess().getAddKeyword_3_0());
			}
			{
				newCompositeNode(grammarAccess.getSimTypeAccess().getDimEnumerationParserRuleCall_3_1());
			}
			this_DimEnumeration_5=ruleDimEnumeration
			{
				$current = $this_DimEnumeration_5.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getSimTypeAccess().getSimEntityTypeTranspositionParserRuleCall_4());
		}
		this_SimEntityTypeTransposition_6=ruleSimEntityTypeTransposition
		{
			$current = $this_SimEntityTypeTransposition_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			otherlv_7='add'
			{
				newLeafNode(otherlv_7, grammarAccess.getSimTypeAccess().getAddKeyword_5_0());
			}
			{
				newCompositeNode(grammarAccess.getSimTypeAccess().getDimEntityTypeParserRuleCall_5_1());
			}
			this_DimEntityType_8=ruleDimEntityType
			{
				$current = $this_DimEntityType_8.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getSimTypeAccess().getSimDetailTypeTranspositionParserRuleCall_6());
		}
		this_SimDetailTypeTransposition_9=ruleSimDetailTypeTransposition
		{
			$current = $this_SimDetailTypeTransposition_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			otherlv_10='add'
			{
				newLeafNode(otherlv_10, grammarAccess.getSimTypeAccess().getAddKeyword_7_0());
			}
			{
				newCompositeNode(grammarAccess.getSimTypeAccess().getDimDetailTypeParserRuleCall_7_1());
			}
			this_DimDetailType_11=ruleDimDetailType
			{
				$current = $this_DimDetailType_11.current;
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleSimPrimitiveTransposition
entryRuleSimPrimitiveTransposition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimPrimitiveTranspositionRule()); }
	iv_ruleSimPrimitiveTransposition=ruleSimPrimitiveTransposition
	{ $current=$iv_ruleSimPrimitiveTransposition.current; }
	EOF;

// Rule SimPrimitiveTransposition
ruleSimPrimitiveTransposition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSimPrimitiveTranspositionAccess().getTPrimitiveTranspositionAction_0(),
					$current);
			}
		)
		(
			(
				otherlv_1='grab'
				{
					newLeafNode(otherlv_1, grammarAccess.getSimPrimitiveTranspositionAccess().getGrabKeyword_1_0_0());
				}
				otherlv_2='primitive'
				{
					newLeafNode(otherlv_2, grammarAccess.getSimPrimitiveTranspositionAccess().getPrimitiveKeyword_1_0_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSimPrimitiveTranspositionAccess().getRuleSimGrabPrimitiveRuleParserRuleCall_1_0_2_0());
						}
						lv_rule_3_0=ruleSimGrabPrimitiveRule
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSimPrimitiveTranspositionRule());
							}
							set(
								$current,
								"rule",
								lv_rule_3_0,
								"com.mimacom.ddd.sm.sim.Sim.SimGrabPrimitiveRule");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_4='ditch'
				{
					newLeafNode(otherlv_4, grammarAccess.getSimPrimitiveTranspositionAccess().getDitchKeyword_1_1_0());
				}
				otherlv_5='primitive'
				{
					newLeafNode(otherlv_5, grammarAccess.getSimPrimitiveTranspositionAccess().getPrimitiveKeyword_1_1_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSimPrimitiveTranspositionAccess().getRuleSimDitchPrimitiveRuleParserRuleCall_1_1_2_0());
						}
						lv_rule_6_0=ruleSimDitchPrimitiveRule
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSimPrimitiveTranspositionRule());
							}
							set(
								$current,
								"rule",
								lv_rule_6_0,
								"com.mimacom.ddd.sm.sim.Sim.SimDitchPrimitiveRule");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSimPrimitiveTranspositionAccess().getDescriptionDRichTextParserRuleCall_2_0());
				}
				lv_description_7_0=ruleDRichText
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimPrimitiveTranspositionRule());
					}
					set(
						$current,
						"description",
						lv_description_7_0,
						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_8='{'
			{
				newLeafNode(otherlv_8, grammarAccess.getSimPrimitiveTranspositionAccess().getLeftCurlyBracketKeyword_3_0());
			}
			(
				otherlv_9='add'
				{
					newLeafNode(otherlv_9, grammarAccess.getSimPrimitiveTranspositionAccess().getAddKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSimPrimitiveTranspositionAccess().getConstraintsDConstraintParserRuleCall_3_1_1_0());
						}
						lv_constraints_10_0=ruleDConstraint
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSimPrimitiveTranspositionRule());
							}
							add(
								$current,
								"constraints",
								lv_constraints_10_0,
								"com.mimacom.ddd.dm.dim.Dim.DConstraint");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_11='}'
			{
				newLeafNode(otherlv_11, grammarAccess.getSimPrimitiveTranspositionAccess().getRightCurlyBracketKeyword_3_2());
			}
		)?
	)
;

// Entry rule entryRuleSimEnumerationTransposition
entryRuleSimEnumerationTransposition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimEnumerationTranspositionRule()); }
	iv_ruleSimEnumerationTransposition=ruleSimEnumerationTransposition
	{ $current=$iv_ruleSimEnumerationTransposition.current; }
	EOF;

// Rule SimEnumerationTransposition
ruleSimEnumerationTransposition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSimEnumerationTranspositionAccess().getTEnumerationTranspositionAction_0(),
					$current);
			}
		)
		(
			(
				otherlv_1='grab'
				{
					newLeafNode(otherlv_1, grammarAccess.getSimEnumerationTranspositionAccess().getGrabKeyword_1_0_0());
				}
				otherlv_2='enumeration'
				{
					newLeafNode(otherlv_2, grammarAccess.getSimEnumerationTranspositionAccess().getEnumerationKeyword_1_0_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSimEnumerationTranspositionAccess().getRuleSimGrabEnumerationRuleParserRuleCall_1_0_2_0());
						}
						lv_rule_3_0=ruleSimGrabEnumerationRule
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSimEnumerationTranspositionRule());
							}
							set(
								$current,
								"rule",
								lv_rule_3_0,
								"com.mimacom.ddd.sm.sim.Sim.SimGrabEnumerationRule");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_4='ditch'
				{
					newLeafNode(otherlv_4, grammarAccess.getSimEnumerationTranspositionAccess().getDitchKeyword_1_1_0());
				}
				otherlv_5='enumeration'
				{
					newLeafNode(otherlv_5, grammarAccess.getSimEnumerationTranspositionAccess().getEnumerationKeyword_1_1_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSimEnumerationTranspositionAccess().getRuleSimDitchEnumerationRuleParserRuleCall_1_1_2_0());
						}
						lv_rule_6_0=ruleSimDitchEnumerationRule
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSimEnumerationTranspositionRule());
							}
							set(
								$current,
								"rule",
								lv_rule_6_0,
								"com.mimacom.ddd.sm.sim.Sim.SimDitchEnumerationRule");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSimEnumerationTranspositionAccess().getDescriptionDRichTextParserRuleCall_2_0());
				}
				lv_description_7_0=ruleDRichText
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimEnumerationTranspositionRule());
					}
					set(
						$current,
						"description",
						lv_description_7_0,
						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_8='{'
			{
				newLeafNode(otherlv_8, grammarAccess.getSimEnumerationTranspositionAccess().getLeftCurlyBracketKeyword_3_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getSimEnumerationTranspositionAccess().getLiteralsSimLiteralParserRuleCall_3_1_0_0());
						}
						lv_literals_9_0=ruleSimLiteral
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSimEnumerationTranspositionRule());
							}
							add(
								$current,
								"literals",
								lv_literals_9_0,
								"com.mimacom.ddd.sm.sim.Sim.SimLiteral");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_10=','
					{
						newLeafNode(otherlv_10, grammarAccess.getSimEnumerationTranspositionAccess().getCommaKeyword_3_1_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getSimEnumerationTranspositionAccess().getLiteralsSimLiteralParserRuleCall_3_1_1_1_0());
							}
							lv_literals_11_0=ruleSimLiteral
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSimEnumerationTranspositionRule());
								}
								add(
									$current,
									"literals",
									lv_literals_11_0,
									"com.mimacom.ddd.sm.sim.Sim.SimLiteral");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
			(
				otherlv_12='add'
				{
					newLeafNode(otherlv_12, grammarAccess.getSimEnumerationTranspositionAccess().getAddKeyword_3_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSimEnumerationTranspositionAccess().getConstraintsDConstraintParserRuleCall_3_2_1_0());
						}
						lv_constraints_13_0=ruleDConstraint
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSimEnumerationTranspositionRule());
							}
							add(
								$current,
								"constraints",
								lv_constraints_13_0,
								"com.mimacom.ddd.dm.dim.Dim.DConstraint");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_14='}'
			{
				newLeafNode(otherlv_14, grammarAccess.getSimEnumerationTranspositionAccess().getRightCurlyBracketKeyword_3_3());
			}
		)?
	)
;

// Entry rule entryRuleSimLiteral
entryRuleSimLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimLiteralRule()); }
	iv_ruleSimLiteral=ruleSimLiteral
	{ $current=$iv_ruleSimLiteral.current; }
	EOF;

// Rule SimLiteral
ruleSimLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSimLiteralAccess().getSimLiteralTranspositionParserRuleCall_0());
		}
		this_SimLiteralTransposition_0=ruleSimLiteralTransposition
		{
			$current = $this_SimLiteralTransposition_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			otherlv_1='add'
			{
				newLeafNode(otherlv_1, grammarAccess.getSimLiteralAccess().getAddKeyword_1_0());
			}
			{
				newCompositeNode(grammarAccess.getSimLiteralAccess().getDimLiteralParserRuleCall_1_1());
			}
			this_DimLiteral_2=ruleDimLiteral
			{
				$current = $this_DimLiteral_2.current;
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleSimLiteralTransposition
entryRuleSimLiteralTransposition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimLiteralTranspositionRule()); }
	iv_ruleSimLiteralTransposition=ruleSimLiteralTransposition
	{ $current=$iv_ruleSimLiteralTransposition.current; }
	EOF;

// Rule SimLiteralTransposition
ruleSimLiteralTransposition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSimLiteralTranspositionAccess().getTLiteralTranspositionAction_0(),
					$current);
			}
		)
		(
			(
				otherlv_1='grab'
				{
					newLeafNode(otherlv_1, grammarAccess.getSimLiteralTranspositionAccess().getGrabKeyword_1_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSimLiteralTranspositionAccess().getRuleSimGrabEnumerationLiteralRuleParserRuleCall_1_0_1_0());
						}
						lv_rule_2_0=ruleSimGrabEnumerationLiteralRule
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSimLiteralTranspositionRule());
							}
							set(
								$current,
								"rule",
								lv_rule_2_0,
								"com.mimacom.ddd.sm.sim.Sim.SimGrabEnumerationLiteralRule");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_3='ditch'
				{
					newLeafNode(otherlv_3, grammarAccess.getSimLiteralTranspositionAccess().getDitchKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSimLiteralTranspositionAccess().getRuleSimDitchEnumerationLiteralRuleParserRuleCall_1_1_1_0());
						}
						lv_rule_4_0=ruleSimDitchEnumerationLiteralRule
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSimLiteralTranspositionRule());
							}
							set(
								$current,
								"rule",
								lv_rule_4_0,
								"com.mimacom.ddd.sm.sim.Sim.SimDitchEnumerationLiteralRule");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSimLiteralTranspositionAccess().getDescriptionDRichTextParserRuleCall_2_0());
				}
				lv_description_5_0=ruleDRichText
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimLiteralTranspositionRule());
					}
					set(
						$current,
						"description",
						lv_description_5_0,
						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleSimEntityTypeTransposition
entryRuleSimEntityTypeTransposition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimEntityTypeTranspositionRule()); }
	iv_ruleSimEntityTypeTransposition=ruleSimEntityTypeTransposition
	{ $current=$iv_ruleSimEntityTypeTransposition.current; }
	EOF;

// Rule SimEntityTypeTransposition
ruleSimEntityTypeTransposition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSimEntityTypeTranspositionAccess().getTEntityTypeTranspositionAction_0(),
					$current);
			}
		)
		(
			(
				otherlv_1='grab'
				{
					newLeafNode(otherlv_1, grammarAccess.getSimEntityTypeTranspositionAccess().getGrabKeyword_1_0_0());
				}
				(
					(
						lv_root_2_0='root'
						{
							newLeafNode(lv_root_2_0, grammarAccess.getSimEntityTypeTranspositionAccess().getRootRootKeyword_1_0_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSimEntityTypeTranspositionRule());
							}
							setWithLastConsumed($current, "root", true, "root");
						}
					)
				)?
				otherlv_3='entity'
				{
					newLeafNode(otherlv_3, grammarAccess.getSimEntityTypeTranspositionAccess().getEntityKeyword_1_0_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSimEntityTypeTranspositionAccess().getRuleSimGrabComplexTypeRuleParserRuleCall_1_0_3_0());
						}
						lv_rule_4_0=ruleSimGrabComplexTypeRule
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSimEntityTypeTranspositionRule());
							}
							set(
								$current,
								"rule",
								lv_rule_4_0,
								"com.mimacom.ddd.sm.sim.Sim.SimGrabComplexTypeRule");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_5='ditch'
				{
					newLeafNode(otherlv_5, grammarAccess.getSimEntityTypeTranspositionAccess().getDitchKeyword_1_1_0());
				}
				(
					(
						lv_root_6_0='root'
						{
							newLeafNode(lv_root_6_0, grammarAccess.getSimEntityTypeTranspositionAccess().getRootRootKeyword_1_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSimEntityTypeTranspositionRule());
							}
							setWithLastConsumed($current, "root", true, "root");
						}
					)
				)?
				otherlv_7='entity'
				{
					newLeafNode(otherlv_7, grammarAccess.getSimEntityTypeTranspositionAccess().getEntityKeyword_1_1_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSimEntityTypeTranspositionAccess().getRuleSimDitchComplexTypeRuleParserRuleCall_1_1_3_0());
						}
						lv_rule_8_0=ruleSimDitchComplexTypeRule
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSimEntityTypeTranspositionRule());
							}
							set(
								$current,
								"rule",
								lv_rule_8_0,
								"com.mimacom.ddd.sm.sim.Sim.SimDitchComplexTypeRule");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_9='morph'
				{
					newLeafNode(otherlv_9, grammarAccess.getSimEntityTypeTranspositionAccess().getMorphKeyword_1_2_0());
				}
				(
					(
						lv_root_10_0='root'
						{
							newLeafNode(lv_root_10_0, grammarAccess.getSimEntityTypeTranspositionAccess().getRootRootKeyword_1_2_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSimEntityTypeTranspositionRule());
							}
							setWithLastConsumed($current, "root", true, "root");
						}
					)
				)?
				otherlv_11='entity'
				{
					newLeafNode(otherlv_11, grammarAccess.getSimEntityTypeTranspositionAccess().getEntityKeyword_1_2_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSimEntityTypeTranspositionAccess().getRuleSimMorphComplexTypeRuleParserRuleCall_1_2_3_0());
						}
						lv_rule_12_0=ruleSimMorphComplexTypeRule
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSimEntityTypeTranspositionRule());
							}
							set(
								$current,
								"rule",
								lv_rule_12_0,
								"com.mimacom.ddd.sm.sim.Sim.SimMorphComplexTypeRule");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_13='fuse'
				{
					newLeafNode(otherlv_13, grammarAccess.getSimEntityTypeTranspositionAccess().getFuseKeyword_1_3_0());
				}
				(
					(
						lv_root_14_0='root'
						{
							newLeafNode(lv_root_14_0, grammarAccess.getSimEntityTypeTranspositionAccess().getRootRootKeyword_1_3_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSimEntityTypeTranspositionRule());
							}
							setWithLastConsumed($current, "root", true, "root");
						}
					)
				)?
				otherlv_15='entity'
				{
					newLeafNode(otherlv_15, grammarAccess.getSimEntityTypeTranspositionAccess().getEntityKeyword_1_3_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSimEntityTypeTranspositionAccess().getRuleSimFuseComplexTypeRuleParserRuleCall_1_3_3_0());
						}
						lv_rule_16_0=ruleSimFuseComplexTypeRule
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSimEntityTypeTranspositionRule());
							}
							set(
								$current,
								"rule",
								lv_rule_16_0,
								"com.mimacom.ddd.sm.sim.Sim.SimFuseComplexTypeRule");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSimEntityTypeTranspositionAccess().getDescriptionDRichTextParserRuleCall_2_0());
				}
				lv_description_17_0=ruleDRichText
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimEntityTypeTranspositionRule());
					}
					set(
						$current,
						"description",
						lv_description_17_0,
						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getSimEntityTypeTranspositionRule());
				}
				newCompositeNode(grammarAccess.getSimEntityTypeTranspositionAccess().getTComplexTypeFeaturesParserRuleCall_3());
			}
			this_TComplexTypeFeatures_18=ruleTComplexTypeFeatures[$current]
			{
				$current = $this_TComplexTypeFeatures_18.current;
				afterParserOrEnumRuleCall();
			}
		)?
	)
;

// Entry rule entryRuleSimDetailTypeTransposition
entryRuleSimDetailTypeTransposition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimDetailTypeTranspositionRule()); }
	iv_ruleSimDetailTypeTransposition=ruleSimDetailTypeTransposition
	{ $current=$iv_ruleSimDetailTypeTransposition.current; }
	EOF;

// Rule SimDetailTypeTransposition
ruleSimDetailTypeTransposition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSimDetailTypeTranspositionAccess().getTDetailTypeTranspositionAction_0(),
					$current);
			}
		)
		(
			(
				otherlv_1='grab'
				{
					newLeafNode(otherlv_1, grammarAccess.getSimDetailTypeTranspositionAccess().getGrabKeyword_1_0_0());
				}
				otherlv_2='detail'
				{
					newLeafNode(otherlv_2, grammarAccess.getSimDetailTypeTranspositionAccess().getDetailKeyword_1_0_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSimDetailTypeTranspositionAccess().getRuleSimGrabComplexTypeRuleParserRuleCall_1_0_2_0());
						}
						lv_rule_3_0=ruleSimGrabComplexTypeRule
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSimDetailTypeTranspositionRule());
							}
							set(
								$current,
								"rule",
								lv_rule_3_0,
								"com.mimacom.ddd.sm.sim.Sim.SimGrabComplexTypeRule");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_4='ditch'
				{
					newLeafNode(otherlv_4, grammarAccess.getSimDetailTypeTranspositionAccess().getDitchKeyword_1_1_0());
				}
				otherlv_5='detail'
				{
					newLeafNode(otherlv_5, grammarAccess.getSimDetailTypeTranspositionAccess().getDetailKeyword_1_1_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSimDetailTypeTranspositionAccess().getRuleSimDitchComplexTypeRuleParserRuleCall_1_1_2_0());
						}
						lv_rule_6_0=ruleSimDitchComplexTypeRule
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSimDetailTypeTranspositionRule());
							}
							set(
								$current,
								"rule",
								lv_rule_6_0,
								"com.mimacom.ddd.sm.sim.Sim.SimDitchComplexTypeRule");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_7='morph'
				{
					newLeafNode(otherlv_7, grammarAccess.getSimDetailTypeTranspositionAccess().getMorphKeyword_1_2_0());
				}
				otherlv_8='detail'
				{
					newLeafNode(otherlv_8, grammarAccess.getSimDetailTypeTranspositionAccess().getDetailKeyword_1_2_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSimDetailTypeTranspositionAccess().getRuleSimMorphComplexTypeRuleParserRuleCall_1_2_2_0());
						}
						lv_rule_9_0=ruleSimMorphComplexTypeRule
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSimDetailTypeTranspositionRule());
							}
							set(
								$current,
								"rule",
								lv_rule_9_0,
								"com.mimacom.ddd.sm.sim.Sim.SimMorphComplexTypeRule");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_10='fuse'
				{
					newLeafNode(otherlv_10, grammarAccess.getSimDetailTypeTranspositionAccess().getFuseKeyword_1_3_0());
				}
				otherlv_11='detail'
				{
					newLeafNode(otherlv_11, grammarAccess.getSimDetailTypeTranspositionAccess().getDetailKeyword_1_3_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSimDetailTypeTranspositionAccess().getRuleSimFuseComplexTypeRuleParserRuleCall_1_3_2_0());
						}
						lv_rule_12_0=ruleSimFuseComplexTypeRule
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSimDetailTypeTranspositionRule());
							}
							set(
								$current,
								"rule",
								lv_rule_12_0,
								"com.mimacom.ddd.sm.sim.Sim.SimFuseComplexTypeRule");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSimDetailTypeTranspositionAccess().getDescriptionDRichTextParserRuleCall_2_0());
				}
				lv_description_13_0=ruleDRichText
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimDetailTypeTranspositionRule());
					}
					set(
						$current,
						"description",
						lv_description_13_0,
						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getSimDetailTypeTranspositionRule());
				}
				newCompositeNode(grammarAccess.getSimDetailTypeTranspositionAccess().getTComplexTypeFeaturesParserRuleCall_3());
			}
			this_TComplexTypeFeatures_14=ruleTComplexTypeFeatures[$current]
			{
				$current = $this_TComplexTypeFeatures_14.current;
				afterParserOrEnumRuleCall();
			}
		)?
	)
;


// Rule TComplexTypeFeatures
ruleTComplexTypeFeatures[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getTComplexTypeFeaturesAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTComplexTypeFeaturesAccess().getFeaturesSimFeatureParserRuleCall_1_0_0());
					}
					lv_features_1_0=ruleSimFeature
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTComplexTypeFeaturesRule());
						}
						add(
							$current,
							"features",
							lv_features_1_0,
							"com.mimacom.ddd.sm.sim.Sim.SimFeature");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				otherlv_2='add'
				{
					newLeafNode(otherlv_2, grammarAccess.getTComplexTypeFeaturesAccess().getAddKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTComplexTypeFeaturesAccess().getConstraintsDConstraintParserRuleCall_1_1_1_0());
						}
						lv_constraints_3_0=ruleDConstraint
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTComplexTypeFeaturesRule());
							}
							add(
								$current,
								"constraints",
								lv_constraints_3_0,
								"com.mimacom.ddd.dm.dim.Dim.DConstraint");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getTComplexTypeFeaturesAccess().getRightCurlyBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleSimFeature
entryRuleSimFeature returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimFeatureRule()); }
	iv_ruleSimFeature=ruleSimFeature
	{ $current=$iv_ruleSimFeature.current; }
	EOF;

// Rule SimFeature
ruleSimFeature returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSimFeatureAccess().getSimAssociationTranspositionParserRuleCall_0());
		}
		this_SimAssociationTransposition_0=ruleSimAssociationTransposition
		{
			$current = $this_SimAssociationTransposition_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			otherlv_1='add'
			{
				newLeafNode(otherlv_1, grammarAccess.getSimFeatureAccess().getAddKeyword_1_0());
			}
			{
				newCompositeNode(grammarAccess.getSimFeatureAccess().getDimAssociationParserRuleCall_1_1());
			}
			this_DimAssociation_2=ruleDimAssociation
			{
				$current = $this_DimAssociation_2.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getSimFeatureAccess().getSimAttributeTranspositionParserRuleCall_2());
		}
		this_SimAttributeTransposition_3=ruleSimAttributeTransposition
		{
			$current = $this_SimAttributeTransposition_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			otherlv_4='add'
			{
				newLeafNode(otherlv_4, grammarAccess.getSimFeatureAccess().getAddKeyword_3_0());
			}
			{
				newCompositeNode(grammarAccess.getSimFeatureAccess().getDimAttributeParserRuleCall_3_1());
			}
			this_DimAttribute_5=ruleDimAttribute
			{
				$current = $this_DimAttribute_5.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getSimFeatureAccess().getSimQueryTranspositionParserRuleCall_4());
		}
		this_SimQueryTransposition_6=ruleSimQueryTransposition
		{
			$current = $this_SimQueryTransposition_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			otherlv_7='add'
			{
				newLeafNode(otherlv_7, grammarAccess.getSimFeatureAccess().getAddKeyword_5_0());
			}
			{
				newCompositeNode(grammarAccess.getSimFeatureAccess().getDimQueryParserRuleCall_5_1());
			}
			this_DimQuery_8=ruleDimQuery
			{
				$current = $this_DimQuery_8.current;
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleSimAssociationTransposition
entryRuleSimAssociationTransposition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimAssociationTranspositionRule()); }
	iv_ruleSimAssociationTransposition=ruleSimAssociationTransposition
	{ $current=$iv_ruleSimAssociationTransposition.current; }
	EOF;

// Rule SimAssociationTransposition
ruleSimAssociationTransposition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSimAssociationTranspositionAccess().getTAssociationTranspositionAction_0(),
					$current);
			}
		)
		(
			(
				otherlv_1='grab'
				{
					newLeafNode(otherlv_1, grammarAccess.getSimAssociationTranspositionAccess().getGrabKeyword_1_0_0());
				}
				(
					otherlv_2='reference'
					{
						newLeafNode(otherlv_2, grammarAccess.getSimAssociationTranspositionAccess().getReferenceKeyword_1_0_1_0());
					}
					    |
					otherlv_3='composite'
					{
						newLeafNode(otherlv_3, grammarAccess.getSimAssociationTranspositionAccess().getCompositeKeyword_1_0_1_1());
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getSimAssociationTranspositionAccess().getRuleSimGrabFeatureRuleParserRuleCall_1_0_2_0());
						}
						lv_rule_4_0=ruleSimGrabFeatureRule
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSimAssociationTranspositionRule());
							}
							set(
								$current,
								"rule",
								lv_rule_4_0,
								"com.mimacom.ddd.sm.sim.Sim.SimGrabFeatureRule");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_5='morph'
				{
					newLeafNode(otherlv_5, grammarAccess.getSimAssociationTranspositionAccess().getMorphKeyword_1_1_0());
				}
				(
					otherlv_6='reference'
					{
						newLeafNode(otherlv_6, grammarAccess.getSimAssociationTranspositionAccess().getReferenceKeyword_1_1_1_0());
					}
					    |
					otherlv_7='composite'
					{
						newLeafNode(otherlv_7, grammarAccess.getSimAssociationTranspositionAccess().getCompositeKeyword_1_1_1_1());
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getSimAssociationTranspositionAccess().getRuleSimMorphFeatureRuleParserRuleCall_1_1_2_0());
						}
						lv_rule_8_0=ruleSimMorphFeatureRule
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSimAssociationTranspositionRule());
							}
							set(
								$current,
								"rule",
								lv_rule_8_0,
								"com.mimacom.ddd.sm.sim.Sim.SimMorphFeatureRule");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_9='ditch'
				{
					newLeafNode(otherlv_9, grammarAccess.getSimAssociationTranspositionAccess().getDitchKeyword_1_2_0());
				}
				(
					otherlv_10='reference'
					{
						newLeafNode(otherlv_10, grammarAccess.getSimAssociationTranspositionAccess().getReferenceKeyword_1_2_1_0());
					}
					    |
					otherlv_11='composite'
					{
						newLeafNode(otherlv_11, grammarAccess.getSimAssociationTranspositionAccess().getCompositeKeyword_1_2_1_1());
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getSimAssociationTranspositionAccess().getRuleSimDitchFeatureRuleParserRuleCall_1_2_2_0());
						}
						lv_rule_12_0=ruleSimDitchFeatureRule
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSimAssociationTranspositionRule());
							}
							set(
								$current,
								"rule",
								lv_rule_12_0,
								"com.mimacom.ddd.sm.sim.Sim.SimDitchFeatureRule");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSimAssociationTranspositionAccess().getDescriptionDRichTextParserRuleCall_2_0());
				}
				lv_description_13_0=ruleDRichText
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimAssociationTranspositionRule());
					}
					set(
						$current,
						"description",
						lv_description_13_0,
						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleSimAttributeTransposition
entryRuleSimAttributeTransposition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimAttributeTranspositionRule()); }
	iv_ruleSimAttributeTransposition=ruleSimAttributeTransposition
	{ $current=$iv_ruleSimAttributeTransposition.current; }
	EOF;

// Rule SimAttributeTransposition
ruleSimAttributeTransposition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSimAttributeTranspositionAccess().getTAttributeTranspositionAction_0(),
					$current);
			}
		)
		(
			(
				otherlv_1='grab'
				{
					newLeafNode(otherlv_1, grammarAccess.getSimAttributeTranspositionAccess().getGrabKeyword_1_0_0());
				}
				(
					otherlv_2='attribute'
					{
						newLeafNode(otherlv_2, grammarAccess.getSimAttributeTranspositionAccess().getAttributeKeyword_1_0_1_0());
					}
					    |
					(
						(
							lv_detail_3_0='detail'
							{
								newLeafNode(lv_detail_3_0, grammarAccess.getSimAttributeTranspositionAccess().getDetailDetailKeyword_1_0_1_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getSimAttributeTranspositionRule());
								}
								setWithLastConsumed($current, "detail", true, "detail");
							}
						)
					)
				)?
				(
					(
						{
							newCompositeNode(grammarAccess.getSimAttributeTranspositionAccess().getRuleSimGrabFeatureRuleParserRuleCall_1_0_2_0());
						}
						lv_rule_4_0=ruleSimGrabFeatureRule
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSimAttributeTranspositionRule());
							}
							set(
								$current,
								"rule",
								lv_rule_4_0,
								"com.mimacom.ddd.sm.sim.Sim.SimGrabFeatureRule");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_5='morph'
				{
					newLeafNode(otherlv_5, grammarAccess.getSimAttributeTranspositionAccess().getMorphKeyword_1_1_0());
				}
				(
					otherlv_6='attribute'
					{
						newLeafNode(otherlv_6, grammarAccess.getSimAttributeTranspositionAccess().getAttributeKeyword_1_1_1_0());
					}
					    |
					(
						(
							lv_detail_7_0='detail'
							{
								newLeafNode(lv_detail_7_0, grammarAccess.getSimAttributeTranspositionAccess().getDetailDetailKeyword_1_1_1_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getSimAttributeTranspositionRule());
								}
								setWithLastConsumed($current, "detail", true, "detail");
							}
						)
					)
				)?
				(
					(
						{
							newCompositeNode(grammarAccess.getSimAttributeTranspositionAccess().getRuleSimMorphFeatureRuleParserRuleCall_1_1_2_0());
						}
						lv_rule_8_0=ruleSimMorphFeatureRule
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSimAttributeTranspositionRule());
							}
							set(
								$current,
								"rule",
								lv_rule_8_0,
								"com.mimacom.ddd.sm.sim.Sim.SimMorphFeatureRule");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_9='ditch'
				{
					newLeafNode(otherlv_9, grammarAccess.getSimAttributeTranspositionAccess().getDitchKeyword_1_2_0());
				}
				(
					otherlv_10='attribute'
					{
						newLeafNode(otherlv_10, grammarAccess.getSimAttributeTranspositionAccess().getAttributeKeyword_1_2_1_0());
					}
					    |
					(
						(
							lv_detail_11_0='detail'
							{
								newLeafNode(lv_detail_11_0, grammarAccess.getSimAttributeTranspositionAccess().getDetailDetailKeyword_1_2_1_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getSimAttributeTranspositionRule());
								}
								setWithLastConsumed($current, "detail", true, "detail");
							}
						)
					)
				)?
				(
					(
						{
							newCompositeNode(grammarAccess.getSimAttributeTranspositionAccess().getRuleSimDitchFeatureRuleParserRuleCall_1_2_2_0());
						}
						lv_rule_12_0=ruleSimDitchFeatureRule
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSimAttributeTranspositionRule());
							}
							set(
								$current,
								"rule",
								lv_rule_12_0,
								"com.mimacom.ddd.sm.sim.Sim.SimDitchFeatureRule");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSimAttributeTranspositionAccess().getDescriptionDRichTextParserRuleCall_2_0());
				}
				lv_description_13_0=ruleDRichText
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimAttributeTranspositionRule());
					}
					set(
						$current,
						"description",
						lv_description_13_0,
						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleSimQueryTransposition
entryRuleSimQueryTransposition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimQueryTranspositionRule()); }
	iv_ruleSimQueryTransposition=ruleSimQueryTransposition
	{ $current=$iv_ruleSimQueryTransposition.current; }
	EOF;

// Rule SimQueryTransposition
ruleSimQueryTransposition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSimQueryTranspositionAccess().getTQueryTranspositionAction_0(),
					$current);
			}
		)
		(
			(
				(
					(
						otherlv_1='grab'
						{
							newLeafNode(otherlv_1, grammarAccess.getSimQueryTranspositionAccess().getGrabKeyword_1_0_0_0_0());
						}
						otherlv_2='query'
						{
							newLeafNode(otherlv_2, grammarAccess.getSimQueryTranspositionAccess().getQueryKeyword_1_0_0_0_1());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getSimQueryTranspositionAccess().getRuleSimGrabFeatureRuleParserRuleCall_1_0_0_0_2_0());
								}
								lv_rule_3_0=ruleSimGrabFeatureRule
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getSimQueryTranspositionRule());
									}
									set(
										$current,
										"rule",
										lv_rule_3_0,
										"com.mimacom.ddd.sm.sim.Sim.SimGrabFeatureRule");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)
					    |
					(
						otherlv_4='morph'
						{
							newLeafNode(otherlv_4, grammarAccess.getSimQueryTranspositionAccess().getMorphKeyword_1_0_0_1_0());
						}
						otherlv_5='query'
						{
							newLeafNode(otherlv_5, grammarAccess.getSimQueryTranspositionAccess().getQueryKeyword_1_0_0_1_1());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getSimQueryTranspositionAccess().getRuleSimMorphFeatureRuleParserRuleCall_1_0_0_1_2_0());
								}
								lv_rule_6_0=ruleSimMorphFeatureRule
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getSimQueryTranspositionRule());
									}
									set(
										$current,
										"rule",
										lv_rule_6_0,
										"com.mimacom.ddd.sm.sim.Sim.SimMorphFeatureRule");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)
				)
				otherlv_7='('
				{
					newLeafNode(otherlv_7, grammarAccess.getSimQueryTranspositionAccess().getLeftParenthesisKeyword_1_0_1());
				}
				(
					otherlv_8='*'
					{
						newLeafNode(otherlv_8, grammarAccess.getSimQueryTranspositionAccess().getAsteriskKeyword_1_0_2_0());
					}
					    |
					(
						(
							(
								{
									newCompositeNode(grammarAccess.getSimQueryTranspositionAccess().getParametersSimQueryParameterParserRuleCall_1_0_2_1_0_0());
								}
								lv_parameters_9_0=ruleSimQueryParameter
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getSimQueryTranspositionRule());
									}
									add(
										$current,
										"parameters",
										lv_parameters_9_0,
										"com.mimacom.ddd.sm.sim.Sim.SimQueryParameter");
									afterParserOrEnumRuleCall();
								}
							)
						)
						(
							otherlv_10=','
							{
								newLeafNode(otherlv_10, grammarAccess.getSimQueryTranspositionAccess().getCommaKeyword_1_0_2_1_1_0());
							}
							(
								(
									{
										newCompositeNode(grammarAccess.getSimQueryTranspositionAccess().getParametersSimQueryParameterParserRuleCall_1_0_2_1_1_1_0());
									}
									lv_parameters_11_0=ruleSimQueryParameter
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getSimQueryTranspositionRule());
										}
										add(
											$current,
											"parameters",
											lv_parameters_11_0,
											"com.mimacom.ddd.sm.sim.Sim.SimQueryParameter");
										afterParserOrEnumRuleCall();
									}
								)
							)
						)*
					)
				)
				otherlv_12=')'
				{
					newLeafNode(otherlv_12, grammarAccess.getSimQueryTranspositionAccess().getRightParenthesisKeyword_1_0_3());
				}
			)
			    |
			(
				otherlv_13='ditch'
				{
					newLeafNode(otherlv_13, grammarAccess.getSimQueryTranspositionAccess().getDitchKeyword_1_1_0());
				}
				otherlv_14='query'
				{
					newLeafNode(otherlv_14, grammarAccess.getSimQueryTranspositionAccess().getQueryKeyword_1_1_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSimQueryTranspositionAccess().getRuleSimDitchFeatureRuleParserRuleCall_1_1_2_0());
						}
						lv_rule_15_0=ruleSimDitchFeatureRule
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSimQueryTranspositionRule());
							}
							set(
								$current,
								"rule",
								lv_rule_15_0,
								"com.mimacom.ddd.sm.sim.Sim.SimDitchFeatureRule");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSimQueryTranspositionAccess().getDescriptionDRichTextParserRuleCall_2_0());
				}
				lv_description_16_0=ruleDRichText
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimQueryTranspositionRule());
					}
					set(
						$current,
						"description",
						lv_description_16_0,
						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleSimQueryParameter
entryRuleSimQueryParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimQueryParameterRule()); }
	iv_ruleSimQueryParameter=ruleSimQueryParameter
	{ $current=$iv_ruleSimQueryParameter.current; }
	EOF;

// Rule SimQueryParameter
ruleSimQueryParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSimQueryParameterAccess().getSimQueryParameterTranspositionParserRuleCall_0());
		}
		this_SimQueryParameterTransposition_0=ruleSimQueryParameterTransposition
		{
			$current = $this_SimQueryParameterTransposition_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			otherlv_1='add'
			{
				newLeafNode(otherlv_1, grammarAccess.getSimQueryParameterAccess().getAddKeyword_1_0());
			}
			{
				newCompositeNode(grammarAccess.getSimQueryParameterAccess().getDimQueryParameterParserRuleCall_1_1());
			}
			this_DimQueryParameter_2=ruleDimQueryParameter
			{
				$current = $this_DimQueryParameter_2.current;
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleSimQueryParameterTransposition
entryRuleSimQueryParameterTransposition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimQueryParameterTranspositionRule()); }
	iv_ruleSimQueryParameterTransposition=ruleSimQueryParameterTransposition
	{ $current=$iv_ruleSimQueryParameterTransposition.current; }
	EOF;

// Rule SimQueryParameterTransposition
ruleSimQueryParameterTransposition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSimQueryParameterTranspositionAccess().getTQueryParameterTranspositionAction_0(),
					$current);
			}
		)
		(
			(
				otherlv_1='grab'
				{
					newLeafNode(otherlv_1, grammarAccess.getSimQueryParameterTranspositionAccess().getGrabKeyword_1_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSimQueryParameterTranspositionAccess().getRuleSimGrabQueryParameterRuleParserRuleCall_1_0_1_0());
						}
						lv_rule_2_0=ruleSimGrabQueryParameterRule
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSimQueryParameterTranspositionRule());
							}
							set(
								$current,
								"rule",
								lv_rule_2_0,
								"com.mimacom.ddd.sm.sim.Sim.SimGrabQueryParameterRule");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_3='morph'
				{
					newLeafNode(otherlv_3, grammarAccess.getSimQueryParameterTranspositionAccess().getMorphKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSimQueryParameterTranspositionAccess().getRuleSimMorphQueryParameterRuleParserRuleCall_1_1_1_0());
						}
						lv_rule_4_0=ruleSimMorphQueryParameterRule
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSimQueryParameterTranspositionRule());
							}
							set(
								$current,
								"rule",
								lv_rule_4_0,
								"com.mimacom.ddd.sm.sim.Sim.SimMorphQueryParameterRule");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_5='ditch'
				{
					newLeafNode(otherlv_5, grammarAccess.getSimQueryParameterTranspositionAccess().getDitchKeyword_1_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSimQueryParameterTranspositionAccess().getRuleSimDitchQueryParameterRuleParserRuleCall_1_2_1_0());
						}
						lv_rule_6_0=ruleSimDitchQueryParameterRule
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSimQueryParameterTranspositionRule());
							}
							set(
								$current,
								"rule",
								lv_rule_6_0,
								"com.mimacom.ddd.sm.sim.Sim.SimDitchQueryParameterRule");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSimQueryParameterTranspositionAccess().getDescriptionDRichTextParserRuleCall_2_0());
				}
				lv_description_7_0=ruleDRichText
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimQueryParameterTranspositionRule());
					}
					set(
						$current,
						"description",
						lv_description_7_0,
						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleDimAggregate
entryRuleDimAggregate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDimAggregateRule()); }
	iv_ruleDimAggregate=ruleDimAggregate
	{ $current=$iv_ruleDimAggregate.current; }
	EOF;

// Rule DimAggregate
ruleDimAggregate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDimAggregateAccess().getDAggregateKeywordParserRuleCall_0());
		}
		ruleDAggregateKeyword
		{
			afterParserOrEnumRuleCall();
		}
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDimAggregateAccess().getDimAggregateAction_1(),
					$current);
			}
		)
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getDimAggregateAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDimAggregateRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"com.mimacom.ddd.dm.dmx.Dmx.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDimAggregateAccess().getDescriptionDRichTextParserRuleCall_3_0());
				}
				lv_description_3_0=ruleDRichText
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDimAggregateRule());
					}
					set(
						$current,
						"description",
						lv_description_3_0,
						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getDimAggregateAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			otherlv_5='query'
			{
				newLeafNode(otherlv_5, grammarAccess.getDimAggregateAccess().getQueryKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDimAggregateAccess().getFeaturesDimQueryParserRuleCall_5_1_0());
					}
					lv_features_6_0=ruleDimQuery
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDimAggregateRule());
						}
						add(
							$current,
							"features",
							lv_features_6_0,
							"com.mimacom.ddd.dm.dim.Dim.DimQuery");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getDimAggregateAccess().getTypesDimTypeParserRuleCall_6_0());
				}
				lv_types_7_0=ruleDimType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDimAggregateRule());
					}
					add(
						$current,
						"types",
						lv_types_7_0,
						"com.mimacom.ddd.sm.sim.Sim.DimType");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getDimAggregateAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleDConstraint
entryRuleDConstraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDConstraintRule()); }
	iv_ruleDConstraint=ruleDConstraint
	{ $current=$iv_ruleDConstraint.current; }
	EOF;

// Rule DConstraint
ruleDConstraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='constraint'
		{
			newLeafNode(otherlv_0, grammarAccess.getDConstraintAccess().getConstraintKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDConstraintAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDConstraintRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"com.mimacom.ddd.dm.dmx.Dmx.ID");
				}
			)
		)
		(
			otherlv_2='alias'
			{
				newLeafNode(otherlv_2, grammarAccess.getDConstraintAccess().getAliasKeyword_2_0());
			}
			(
				(
					lv_aliases_3_0=RULE_ID
					{
						newLeafNode(lv_aliases_3_0, grammarAccess.getDConstraintAccess().getAliasesIDTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDConstraintRule());
						}
						addWithLastConsumed(
							$current,
							"aliases",
							lv_aliases_3_0,
							"com.mimacom.ddd.dm.dmx.Dmx.ID");
					}
				)
			)
		)*
		otherlv_4=':'
		{
			newLeafNode(otherlv_4, grammarAccess.getDConstraintAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDConstraintAccess().getPredicateDExpressionParserRuleCall_4_0());
				}
				lv_predicate_5_0=ruleDExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDConstraintRule());
					}
					set(
						$current,
						"predicate",
						lv_predicate_5_0,
						"com.mimacom.ddd.dm.dmx.Dmx.DExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDConstraintAccess().getDescriptionDRichTextParserRuleCall_5_0());
				}
				lv_description_6_0=ruleDRichText
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDConstraintRule());
					}
					set(
						$current,
						"description",
						lv_description_6_0,
						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleDimPrimitive
entryRuleDimPrimitive returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDimPrimitiveRule()); }
	iv_ruleDimPrimitive=ruleDimPrimitive
	{ $current=$iv_ruleDimPrimitive.current; }
	EOF;

// Rule DimPrimitive
ruleDimPrimitive returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDimPrimitiveAccess().getDimPrimitiveAction_0(),
					$current);
			}
		)
		otherlv_1='primitive'
		{
			newLeafNode(otherlv_1, grammarAccess.getDimPrimitiveAccess().getPrimitiveKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getDimPrimitiveAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDimPrimitiveRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"com.mimacom.ddd.dm.dmx.Dmx.ID");
				}
			)
		)
		(
			otherlv_3='alias'
			{
				newLeafNode(otherlv_3, grammarAccess.getDimPrimitiveAccess().getAliasKeyword_3_0());
			}
			(
				(
					lv_aliases_4_0=RULE_ID
					{
						newLeafNode(lv_aliases_4_0, grammarAccess.getDimPrimitiveAccess().getAliasesIDTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDimPrimitiveRule());
						}
						addWithLastConsumed(
							$current,
							"aliases",
							lv_aliases_4_0,
							"com.mimacom.ddd.dm.dmx.Dmx.ID");
					}
				)
			)
		)*
		otherlv_5='redefines'
		{
			newLeafNode(otherlv_5, grammarAccess.getDimPrimitiveAccess().getRedefinesKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDimPrimitiveRule());
					}
				}
				otherlv_6=RULE_ID
				{
					newLeafNode(otherlv_6, grammarAccess.getDimPrimitiveAccess().getRedefinesDmxArchetypeCrossReference_5_0());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDimPrimitiveAccess().getDescriptionDRichTextParserRuleCall_6_0());
				}
				lv_description_7_0=ruleDRichText
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDimPrimitiveRule());
					}
					set(
						$current,
						"description",
						lv_description_7_0,
						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_8='{'
			{
				newLeafNode(otherlv_8, grammarAccess.getDimPrimitiveAccess().getLeftCurlyBracketKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDimPrimitiveAccess().getConstraintsDConstraintParserRuleCall_7_1_0());
					}
					lv_constraints_9_0=ruleDConstraint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDimPrimitiveRule());
						}
						add(
							$current,
							"constraints",
							lv_constraints_9_0,
							"com.mimacom.ddd.dm.dim.Dim.DConstraint");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			otherlv_10='}'
			{
				newLeafNode(otherlv_10, grammarAccess.getDimPrimitiveAccess().getRightCurlyBracketKeyword_7_2());
			}
		)?
	)
;

// Entry rule entryRuleDimEnumeration
entryRuleDimEnumeration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDimEnumerationRule()); }
	iv_ruleDimEnumeration=ruleDimEnumeration
	{ $current=$iv_ruleDimEnumeration.current; }
	EOF;

// Rule DimEnumeration
ruleDimEnumeration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDimEnumerationAccess().getDimEnumerationAction_0(),
					$current);
			}
		)
		otherlv_1='enumeration'
		{
			newLeafNode(otherlv_1, grammarAccess.getDimEnumerationAccess().getEnumerationKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getDimEnumerationAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDimEnumerationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"com.mimacom.ddd.dm.dmx.Dmx.ID");
				}
			)
		)
		(
			otherlv_3='alias'
			{
				newLeafNode(otherlv_3, grammarAccess.getDimEnumerationAccess().getAliasKeyword_3_0());
			}
			(
				(
					lv_aliases_4_0=RULE_ID
					{
						newLeafNode(lv_aliases_4_0, grammarAccess.getDimEnumerationAccess().getAliasesIDTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDimEnumerationRule());
						}
						addWithLastConsumed(
							$current,
							"aliases",
							lv_aliases_4_0,
							"com.mimacom.ddd.dm.dmx.Dmx.ID");
					}
				)
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getDimEnumerationAccess().getDescriptionDRichTextParserRuleCall_4_0());
				}
				lv_description_5_0=ruleDRichText
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDimEnumerationRule());
					}
					set(
						$current,
						"description",
						lv_description_5_0,
						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_6='{'
		{
			newLeafNode(otherlv_6, grammarAccess.getDimEnumerationAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDimEnumerationAccess().getLiteralsDimLiteralParserRuleCall_6_0_0());
					}
					lv_literals_7_0=ruleDimLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDimEnumerationRule());
						}
						add(
							$current,
							"literals",
							lv_literals_7_0,
							"com.mimacom.ddd.dm.dim.Dim.DimLiteral");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getDimEnumerationAccess().getCommaKeyword_6_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDimEnumerationAccess().getLiteralsDimLiteralParserRuleCall_6_1_1_0());
						}
						lv_literals_9_0=ruleDimLiteral
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDimEnumerationRule());
							}
							add(
								$current,
								"literals",
								lv_literals_9_0,
								"com.mimacom.ddd.dm.dim.Dim.DimLiteral");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getDimEnumerationAccess().getConstraintsDConstraintParserRuleCall_7_0());
				}
				lv_constraints_10_0=ruleDConstraint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDimEnumerationRule());
					}
					add(
						$current,
						"constraints",
						lv_constraints_10_0,
						"com.mimacom.ddd.dm.dim.Dim.DConstraint");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getDimEnumerationAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleDimLiteral
entryRuleDimLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDimLiteralRule()); }
	iv_ruleDimLiteral=ruleDimLiteral
	{ $current=$iv_ruleDimLiteral.current; }
	EOF;

// Rule DimLiteral
ruleDimLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDimLiteralAccess().getDimLiteralAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDimLiteralAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDimLiteralRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"com.mimacom.ddd.dm.dmx.Dmx.ID");
				}
			)
		)
		(
			otherlv_2='alias'
			{
				newLeafNode(otherlv_2, grammarAccess.getDimLiteralAccess().getAliasKeyword_2_0());
			}
			(
				(
					lv_aliases_3_0=RULE_ID
					{
						newLeafNode(lv_aliases_3_0, grammarAccess.getDimLiteralAccess().getAliasesIDTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDimLiteralRule());
						}
						addWithLastConsumed(
							$current,
							"aliases",
							lv_aliases_3_0,
							"com.mimacom.ddd.dm.dmx.Dmx.ID");
					}
				)
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getDimLiteralAccess().getDescriptionDRichTextParserRuleCall_3_0());
				}
				lv_description_4_0=ruleDRichText
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDimLiteralRule());
					}
					set(
						$current,
						"description",
						lv_description_4_0,
						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleDimEntityType
entryRuleDimEntityType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDimEntityTypeRule()); }
	iv_ruleDimEntityType=ruleDimEntityType
	{ $current=$iv_ruleDimEntityType.current; }
	EOF;

// Rule DimEntityType
ruleDimEntityType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDimEntityTypeAccess().getDimEntityTypeAction_0(),
					$current);
			}
		)
		(
			(
				lv_abstract_1_0='abstract'
				{
					newLeafNode(lv_abstract_1_0, grammarAccess.getDimEntityTypeAccess().getAbstractAbstractKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDimEntityTypeRule());
					}
					setWithLastConsumed($current, "abstract", true, "abstract");
				}
			)
		)?
		(
			(
				lv_root_2_0='main'
				{
					newLeafNode(lv_root_2_0, grammarAccess.getDimEntityTypeAccess().getRootMainKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDimEntityTypeRule());
					}
					setWithLastConsumed($current, "root", true, "main");
				}
			)
		)?
		(
			otherlv_3='entity'
			{
				newLeafNode(otherlv_3, grammarAccess.getDimEntityTypeAccess().getEntityKeyword_3_0());
			}
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getDimEntityTypeAccess().getNatureDEntityNatureAutonomousEnumRuleCall_3_1_0_0());
						}
						lv_nature_4_0=ruleDEntityNatureAutonomous
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDimEntityTypeRule());
							}
							set(
								$current,
								"nature",
								lv_nature_4_0,
								"com.mimacom.ddd.dm.dim.Dim.DEntityNatureAutonomous");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_5='entity'
				{
					newLeafNode(otherlv_5, grammarAccess.getDimEntityTypeAccess().getEntityKeyword_3_1_1());
				}
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getDimEntityTypeAccess().getNatureDEntityNatureRelationshipEnumRuleCall_3_2_0());
					}
					lv_nature_6_0=ruleDEntityNatureRelationship
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDimEntityTypeRule());
						}
						set(
							$current,
							"nature",
							lv_nature_6_0,
							"com.mimacom.ddd.dm.dim.Dim.DEntityNatureRelationship");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getDimEntityTypeRule());
			}
			newCompositeNode(grammarAccess.getDimEntityTypeAccess().getDimComplexTypeParserRuleCall_4());
		}
		this_DimComplexType_7=ruleDimComplexType[$current]
		{
			$current = $this_DimComplexType_7.current;
			afterParserOrEnumRuleCall();
		}
		otherlv_8='{'
		{
			newLeafNode(otherlv_8, grammarAccess.getDimEntityTypeAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			otherlv_9='states'
			{
				newLeafNode(otherlv_9, grammarAccess.getDimEntityTypeAccess().getStatesKeyword_6_0());
			}
			otherlv_10='{'
			{
				newLeafNode(otherlv_10, grammarAccess.getDimEntityTypeAccess().getLeftCurlyBracketKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDimEntityTypeAccess().getStatesDStateParserRuleCall_6_2_0());
					}
					lv_states_11_0=ruleDState
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDimEntityTypeRule());
						}
						add(
							$current,
							"states",
							lv_states_11_0,
							"com.mimacom.ddd.dm.dim.Dim.DState");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_12=','
				{
					newLeafNode(otherlv_12, grammarAccess.getDimEntityTypeAccess().getCommaKeyword_6_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDimEntityTypeAccess().getStatesDStateParserRuleCall_6_3_1_0());
						}
						lv_states_13_0=ruleDState
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDimEntityTypeRule());
							}
							add(
								$current,
								"states",
								lv_states_13_0,
								"com.mimacom.ddd.dm.dim.Dim.DState");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_14='}'
			{
				newLeafNode(otherlv_14, grammarAccess.getDimEntityTypeAccess().getRightCurlyBracketKeyword_6_4());
			}
			(
				otherlv_15='events'
				{
					newLeafNode(otherlv_15, grammarAccess.getDimEntityTypeAccess().getEventsKeyword_6_5_0());
				}
				otherlv_16='{'
				{
					newLeafNode(otherlv_16, grammarAccess.getDimEntityTypeAccess().getLeftCurlyBracketKeyword_6_5_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDimEntityTypeAccess().getEventsDStateEventParserRuleCall_6_5_2_0());
						}
						lv_events_17_0=ruleDStateEvent
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDimEntityTypeRule());
							}
							add(
								$current,
								"events",
								lv_events_17_0,
								"com.mimacom.ddd.dm.dim.Dim.DStateEvent");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_18=','
					{
						newLeafNode(otherlv_18, grammarAccess.getDimEntityTypeAccess().getCommaKeyword_6_5_3_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getDimEntityTypeAccess().getEventsDStateEventParserRuleCall_6_5_3_1_0());
							}
							lv_events_19_0=ruleDStateEvent
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getDimEntityTypeRule());
								}
								add(
									$current,
									"events",
									lv_events_19_0,
									"com.mimacom.ddd.dm.dim.Dim.DStateEvent");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
				otherlv_20='}'
				{
					newLeafNode(otherlv_20, grammarAccess.getDimEntityTypeAccess().getRightCurlyBracketKeyword_6_5_4());
				}
			)?
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDimEntityTypeAccess().getFeaturesDimFeatureParserRuleCall_7_0_0());
					}
					lv_features_21_0=ruleDimFeature
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDimEntityTypeRule());
						}
						add(
							$current,
							"features",
							lv_features_21_0,
							"com.mimacom.ddd.dm.dim.Dim.DimFeature");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getDimEntityTypeAccess().getConstraintsDConstraintParserRuleCall_7_1_0());
					}
					lv_constraints_22_0=ruleDConstraint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDimEntityTypeRule());
						}
						add(
							$current,
							"constraints",
							lv_constraints_22_0,
							"com.mimacom.ddd.dm.dim.Dim.DConstraint");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_23='}'
		{
			newLeafNode(otherlv_23, grammarAccess.getDimEntityTypeAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleDState
entryRuleDState returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDStateRule()); }
	iv_ruleDState=ruleDState
	{ $current=$iv_ruleDState.current; }
	EOF;

// Rule DState
ruleDState returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getDStateAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getDStateRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"com.mimacom.ddd.dm.dmx.Dmx.ID");
			}
		)
	)
;

// Entry rule entryRuleDStateEvent
entryRuleDStateEvent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDStateEventRule()); }
	iv_ruleDStateEvent=ruleDStateEvent
	{ $current=$iv_ruleDStateEvent.current; }
	EOF;

// Rule DStateEvent
ruleDStateEvent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getDStateEventAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getDStateEventRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"com.mimacom.ddd.dm.dmx.Dmx.ID");
			}
		)
	)
;

// Entry rule entryRuleDimDetailType
entryRuleDimDetailType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDimDetailTypeRule()); }
	iv_ruleDimDetailType=ruleDimDetailType
	{ $current=$iv_ruleDimDetailType.current; }
	EOF;

// Rule DimDetailType
ruleDimDetailType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDimDetailTypeAccess().getDimDetailTypeAction_0(),
					$current);
			}
		)
		(
			(
				lv_abstract_1_0='abstract'
				{
					newLeafNode(lv_abstract_1_0, grammarAccess.getDimDetailTypeAccess().getAbstractAbstractKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDimDetailTypeRule());
					}
					setWithLastConsumed($current, "abstract", true, "abstract");
				}
			)
		)?
		otherlv_2='detail'
		{
			newLeafNode(otherlv_2, grammarAccess.getDimDetailTypeAccess().getDetailKeyword_2());
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getDimDetailTypeRule());
			}
			newCompositeNode(grammarAccess.getDimDetailTypeAccess().getDimComplexTypeParserRuleCall_3());
		}
		this_DimComplexType_3=ruleDimComplexType[$current]
		{
			$current = $this_DimComplexType_3.current;
			afterParserOrEnumRuleCall();
		}
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getDimDetailTypeAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDimDetailTypeAccess().getFeaturesDimFeatureParserRuleCall_5_0_0());
					}
					lv_features_5_0=ruleDimFeature
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDimDetailTypeRule());
						}
						add(
							$current,
							"features",
							lv_features_5_0,
							"com.mimacom.ddd.dm.dim.Dim.DimFeature");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getDimDetailTypeAccess().getConstraintsDConstraintParserRuleCall_5_1_0());
					}
					lv_constraints_6_0=ruleDConstraint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDimDetailTypeRule());
						}
						add(
							$current,
							"constraints",
							lv_constraints_6_0,
							"com.mimacom.ddd.dm.dim.Dim.DConstraint");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getDimDetailTypeAccess().getRightCurlyBracketKeyword_6());
		}
	)
;


// Rule DimComplexType
ruleDimComplexType[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getDimComplexTypeAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDimComplexTypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"com.mimacom.ddd.dm.dmx.Dmx.ID");
				}
			)
		)
		(
			otherlv_1='alias'
			{
				newLeafNode(otherlv_1, grammarAccess.getDimComplexTypeAccess().getAliasKeyword_1_0());
			}
			(
				(
					lv_aliases_2_0=RULE_ID
					{
						newLeafNode(lv_aliases_2_0, grammarAccess.getDimComplexTypeAccess().getAliasesIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDimComplexTypeRule());
						}
						addWithLastConsumed(
							$current,
							"aliases",
							lv_aliases_2_0,
							"com.mimacom.ddd.dm.dmx.Dmx.ID");
					}
				)
			)
		)*
		(
			otherlv_3='extends'
			{
				newLeafNode(otherlv_3, grammarAccess.getDimComplexTypeAccess().getExtendsKeyword_2_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDimComplexTypeRule());
						}
					}
					otherlv_4=RULE_ID
					{
						newLeafNode(otherlv_4, grammarAccess.getDimComplexTypeAccess().getSuperTypeDComplexTypeCrossReference_2_1_0());
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getDimComplexTypeAccess().getDescriptionDRichTextParserRuleCall_3_0());
				}
				lv_description_5_0=ruleDRichText
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDimComplexTypeRule());
					}
					set(
						$current,
						"description",
						lv_description_5_0,
						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleDimFeature
entryRuleDimFeature returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDimFeatureRule()); }
	iv_ruleDimFeature=ruleDimFeature
	{ $current=$iv_ruleDimFeature.current; }
	EOF;

// Rule DimFeature
ruleDimFeature returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDimFeatureAccess().getDimAssociationParserRuleCall_0());
		}
		this_DimAssociation_0=ruleDimAssociation
		{
			$current = $this_DimAssociation_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDimFeatureAccess().getDimAttributeParserRuleCall_1());
		}
		this_DimAttribute_1=ruleDimAttribute
		{
			$current = $this_DimAttribute_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDimFeatureAccess().getDimQueryParserRuleCall_2());
		}
		this_DimQuery_2=ruleDimQuery
		{
			$current = $this_DimQuery_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDimAssociation
entryRuleDimAssociation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDimAssociationRule()); }
	iv_ruleDimAssociation=ruleDimAssociation
	{ $current=$iv_ruleDimAssociation.current; }
	EOF;

// Rule DimAssociation
ruleDimAssociation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDimAssociationAccess().getDimAssociationAction_0(),
					$current);
			}
		)
		(
			(
				lv_derived_1_0='derived'
				{
					newLeafNode(lv_derived_1_0, grammarAccess.getDimAssociationAccess().getDerivedDerivedKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDimAssociationRule());
					}
					setWithLastConsumed($current, "derived", true, "derived");
				}
			)
		)?
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getDimAssociationAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDimAssociationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"com.mimacom.ddd.dm.dmx.Dmx.ID");
				}
			)
		)
		(
			otherlv_3='alias'
			{
				newLeafNode(otherlv_3, grammarAccess.getDimAssociationAccess().getAliasKeyword_3_0());
			}
			(
				(
					lv_aliases_4_0=RULE_ID
					{
						newLeafNode(lv_aliases_4_0, grammarAccess.getDimAssociationAccess().getAliasesIDTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDimAssociationRule());
						}
						addWithLastConsumed(
							$current,
							"aliases",
							lv_aliases_4_0,
							"com.mimacom.ddd.dm.dmx.Dmx.ID");
					}
				)
			)
		)*
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDimAssociationAccess().getKindDAssociationKindEnumRuleCall_4_0_0());
					}
					lv_kind_5_0=ruleDAssociationKind
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDimAssociationRule());
						}
						set(
							$current,
							"kind",
							lv_kind_5_0,
							"com.mimacom.ddd.dm.dim.Dim.DAssociationKind");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getDimAssociationAccess().getKindDAssociationKindInverseEnumRuleCall_4_1_0_0());
						}
						lv_kind_6_0=ruleDAssociationKindInverse
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDimAssociationRule());
							}
							set(
								$current,
								"kind",
								lv_kind_6_0,
								"com.mimacom.ddd.dm.dim.Dim.DAssociationKindInverse");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_7='contains'
				{
					newLeafNode(otherlv_7, grammarAccess.getDimAssociationAccess().getContainsKeyword_4_1_1());
				}
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDimAssociationRule());
					}
				}
				otherlv_8=RULE_ID
				{
					newLeafNode(otherlv_8, grammarAccess.getDimAssociationAccess().getTypeDEntityTypeCrossReference_5_0());
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getDimAssociationAccess().getMultiplicityDMultiplicityParserRuleCall_6_0());
				}
				lv_multiplicity_9_0=ruleDMultiplicity
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDimAssociationRule());
					}
					set(
						$current,
						"multiplicity",
						lv_multiplicity_9_0,
						"com.mimacom.ddd.dm.dmx.Dmx.DMultiplicity");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getDimAssociationAccess().getDescriptionDRichTextParserRuleCall_7_0());
				}
				lv_description_10_0=ruleDRichText
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDimAssociationRule());
					}
					set(
						$current,
						"description",
						lv_description_10_0,
						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleDimAttribute
entryRuleDimAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDimAttributeRule()); }
	iv_ruleDimAttribute=ruleDimAttribute
	{ $current=$iv_ruleDimAttribute.current; }
	EOF;

// Rule DimAttribute
ruleDimAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDimAttributeAccess().getDimAttributeAction_0(),
					$current);
			}
		)
		(
			(
				lv_detail_1_0='detail'
				{
					newLeafNode(lv_detail_1_0, grammarAccess.getDimAttributeAccess().getDetailDetailKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDimAttributeRule());
					}
					setWithLastConsumed($current, "detail", true, "detail");
				}
			)
		)?
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getDimAttributeAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDimAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"com.mimacom.ddd.dm.dmx.Dmx.ID");
				}
			)
		)
		(
			otherlv_3='alias'
			{
				newLeafNode(otherlv_3, grammarAccess.getDimAttributeAccess().getAliasKeyword_3_0());
			}
			(
				(
					lv_aliases_4_0=RULE_ID
					{
						newLeafNode(lv_aliases_4_0, grammarAccess.getDimAttributeAccess().getAliasesIDTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDimAttributeRule());
						}
						addWithLastConsumed(
							$current,
							"aliases",
							lv_aliases_4_0,
							"com.mimacom.ddd.dm.dmx.Dmx.ID");
					}
				)
			)
		)*
		otherlv_5=':'
		{
			newLeafNode(otherlv_5, grammarAccess.getDimAttributeAccess().getColonKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDimAttributeRule());
					}
				}
				otherlv_6=RULE_ID
				{
					newLeafNode(otherlv_6, grammarAccess.getDimAttributeAccess().getTypeDTypeCrossReference_5_0());
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getDimAttributeAccess().getMultiplicityDMultiplicityParserRuleCall_6_0());
				}
				lv_multiplicity_7_0=ruleDMultiplicity
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDimAttributeRule());
					}
					set(
						$current,
						"multiplicity",
						lv_multiplicity_7_0,
						"com.mimacom.ddd.dm.dmx.Dmx.DMultiplicity");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				lv_key_8_0='key'
				{
					newLeafNode(lv_key_8_0, grammarAccess.getDimAttributeAccess().getKeyKeyKeyword_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDimAttributeRule());
					}
					setWithLastConsumed($current, "key", true, "key");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getDimAttributeAccess().getDescriptionDRichTextParserRuleCall_8_0());
				}
				lv_description_9_0=ruleDRichText
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDimAttributeRule());
					}
					set(
						$current,
						"description",
						lv_description_9_0,
						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleDimQuery
entryRuleDimQuery returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDimQueryRule()); }
	iv_ruleDimQuery=ruleDimQuery
	{ $current=$iv_ruleDimQuery.current; }
	EOF;

// Rule DimQuery
ruleDimQuery returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDimQueryAccess().getDimQueryAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDimQueryAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDimQueryRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"com.mimacom.ddd.dm.dmx.Dmx.ID");
				}
			)
		)
		(
			otherlv_2='alias'
			{
				newLeafNode(otherlv_2, grammarAccess.getDimQueryAccess().getAliasKeyword_2_0());
			}
			(
				(
					lv_aliases_3_0=RULE_ID
					{
						newLeafNode(lv_aliases_3_0, grammarAccess.getDimQueryAccess().getAliasesIDTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDimQueryRule());
						}
						addWithLastConsumed(
							$current,
							"aliases",
							lv_aliases_3_0,
							"com.mimacom.ddd.dm.dmx.Dmx.ID");
					}
				)
			)
		)*
		otherlv_4='('
		{
			newLeafNode(otherlv_4, grammarAccess.getDimQueryAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDimQueryAccess().getParametersDimQueryParameterParserRuleCall_4_0_0());
					}
					lv_parameters_5_0=ruleDimQueryParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDimQueryRule());
						}
						add(
							$current,
							"parameters",
							lv_parameters_5_0,
							"com.mimacom.ddd.dm.dim.Dim.DimQueryParameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getDimQueryAccess().getCommaKeyword_4_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDimQueryAccess().getParametersDimQueryParameterParserRuleCall_4_1_1_0());
						}
						lv_parameters_7_0=ruleDimQueryParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDimQueryRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_7_0,
								"com.mimacom.ddd.dm.dim.Dim.DimQueryParameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_8=')'
		{
			newLeafNode(otherlv_8, grammarAccess.getDimQueryAccess().getRightParenthesisKeyword_5());
		}
		otherlv_9=':'
		{
			newLeafNode(otherlv_9, grammarAccess.getDimQueryAccess().getColonKeyword_6());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDimQueryRule());
					}
				}
				otherlv_10=RULE_ID
				{
					newLeafNode(otherlv_10, grammarAccess.getDimQueryAccess().getTypeDTypeCrossReference_7_0());
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getDimQueryAccess().getMultiplicityDMultiplicityParserRuleCall_8_0());
				}
				lv_multiplicity_11_0=ruleDMultiplicity
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDimQueryRule());
					}
					set(
						$current,
						"multiplicity",
						lv_multiplicity_11_0,
						"com.mimacom.ddd.dm.dmx.Dmx.DMultiplicity");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_12='returns'
			{
				newLeafNode(otherlv_12, grammarAccess.getDimQueryAccess().getReturnsKeyword_9_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDimQueryAccess().getReturnsDExpressionParserRuleCall_9_1_0());
					}
					lv_returns_13_0=ruleDExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDimQueryRule());
						}
						set(
							$current,
							"returns",
							lv_returns_13_0,
							"com.mimacom.ddd.dm.dmx.Dmx.DExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getDimQueryAccess().getDescriptionDRichTextParserRuleCall_10_0());
				}
				lv_description_14_0=ruleDRichText
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDimQueryRule());
					}
					set(
						$current,
						"description",
						lv_description_14_0,
						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleDimQueryParameter
entryRuleDimQueryParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDimQueryParameterRule()); }
	iv_ruleDimQueryParameter=ruleDimQueryParameter
	{ $current=$iv_ruleDimQueryParameter.current; }
	EOF;

// Rule DimQueryParameter
ruleDimQueryParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDimQueryParameterAccess().getDimQueryParameterAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDimQueryParameterAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDimQueryParameterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"com.mimacom.ddd.dm.dmx.Dmx.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getDimQueryParameterAccess().getColonKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDimQueryParameterRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getDimQueryParameterAccess().getTypeDTypeCrossReference_3_0());
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getDimQueryParameterAccess().getMultiplicityDMultiplicityParserRuleCall_4_0());
				}
				lv_multiplicity_4_0=ruleDMultiplicity
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDimQueryParameterRule());
					}
					set(
						$current,
						"multiplicity",
						lv_multiplicity_4_0,
						"com.mimacom.ddd.dm.dmx.Dmx.DMultiplicity");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getDimQueryParameterAccess().getDescriptionDRichTextParserRuleCall_5_0());
				}
				lv_description_5_0=ruleDRichText
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDimQueryParameterRule());
					}
					set(
						$current,
						"description",
						lv_description_5_0,
						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleDImport
entryRuleDImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDImportRule()); }
	iv_ruleDImport=ruleDImport
	{ $current=$iv_ruleDImport.current; }
	EOF;

// Rule DImport
ruleDImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getDImportAccess().getImportKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDImportAccess().getImportedNamespaceDQualifiedNameWithWildcardParserRuleCall_1_0());
				}
				lv_importedNamespace_1_0=ruleDQualifiedNameWithWildcard
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDImportRule());
					}
					set(
						$current,
						"importedNamespace",
						lv_importedNamespace_1_0,
						"com.mimacom.ddd.dm.dmx.Dmx.DQualifiedNameWithWildcard");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDmxTest
entryRuleDmxTest returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDmxTestRule()); }
	iv_ruleDmxTest=ruleDmxTest
	{ $current=$iv_ruleDmxTest.current; }
	EOF;

// Rule DmxTest
ruleDmxTest returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='test'
		{
			newLeafNode(otherlv_0, grammarAccess.getDmxTestAccess().getTestKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDmxTestAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDmxTestRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"com.mimacom.ddd.dm.dmx.Dmx.ID");
				}
			)
		)
		(
			otherlv_2='context'
			{
				newLeafNode(otherlv_2, grammarAccess.getDmxTestAccess().getContextKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDmxTestAccess().getContextDmxTestContextParserRuleCall_2_1_0());
					}
					lv_context_3_0=ruleDmxTestContext
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDmxTestRule());
						}
						add(
							$current,
							"context",
							lv_context_3_0,
							"com.mimacom.ddd.dm.dmx.Dmx.DmxTestContext");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getDmxTestAccess().getCommaKeyword_2_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDmxTestAccess().getContextDmxTestContextParserRuleCall_2_2_1_0());
						}
						lv_context_5_0=ruleDmxTestContext
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDmxTestRule());
							}
							add(
								$current,
								"context",
								lv_context_5_0,
								"com.mimacom.ddd.dm.dmx.Dmx.DmxTestContext");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_6='{'
		{
			newLeafNode(otherlv_6, grammarAccess.getDmxTestAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDmxTestAccess().getExprDExpressionParserRuleCall_4_0());
				}
				lv_expr_7_0=ruleDExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDmxTestRule());
					}
					set(
						$current,
						"expr",
						lv_expr_7_0,
						"com.mimacom.ddd.dm.dmx.Dmx.DExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getDmxTestAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleDmxTestContext
entryRuleDmxTestContext returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDmxTestContextRule()); }
	iv_ruleDmxTestContext=ruleDmxTestContext
	{ $current=$iv_ruleDmxTestContext.current; }
	EOF;

// Rule DmxTestContext
ruleDmxTestContext returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getDmxTestContextAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDmxTestContextRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"com.mimacom.ddd.dm.dmx.Dmx.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getDmxTestContextAccess().getColonKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDmxTestContextRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getDmxTestContextAccess().getTypeDTypeCrossReference_2_0());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDmxTestContextAccess().getMultiplicityDMultiplicityParserRuleCall_3_0());
				}
				lv_multiplicity_3_0=ruleDMultiplicity
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDmxTestContextRule());
					}
					set(
						$current,
						"multiplicity",
						lv_multiplicity_3_0,
						"com.mimacom.ddd.dm.dmx.Dmx.DMultiplicity");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_4=':='
			{
				newLeafNode(otherlv_4, grammarAccess.getDmxTestContextAccess().getColonEqualsSignKeyword_4_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getDmxTestContextAccess().getValueDmxLiteralExpressionParserRuleCall_4_1_0_0());
						}
						lv_value_5_0=ruleDmxLiteralExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDmxTestContextRule());
							}
							set(
								$current,
								"value",
								lv_value_5_0,
								"com.mimacom.ddd.dm.dmx.Dmx.DmxLiteralExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getDmxTestContextAccess().getValueDmxLiteralListExpressionParserRuleCall_4_1_1_0());
						}
						lv_value_6_0=ruleDmxLiteralListExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDmxTestContextRule());
							}
							set(
								$current,
								"value",
								lv_value_6_0,
								"com.mimacom.ddd.dm.dmx.Dmx.DmxLiteralListExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)?
	)
;

// Entry rule entryRuleDmxBaseTypeSet
entryRuleDmxBaseTypeSet returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDmxBaseTypeSetRule()); }
	iv_ruleDmxBaseTypeSet=ruleDmxBaseTypeSet
	{ $current=$iv_ruleDmxBaseTypeSet.current; }
	EOF;

// Rule DmxBaseTypeSet
ruleDmxBaseTypeSet returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getDmxBaseTypeSetAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDmxBaseTypeSetRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"com.mimacom.ddd.dm.dmx.Dmx.ID");
				}
			)
		)
		otherlv_1='in'
		{
			newLeafNode(otherlv_1, grammarAccess.getDmxBaseTypeSetAccess().getInKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getDmxBaseTypeSetAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDmxBaseTypeSetAccess().getMembersDmxBaseTypeEnumRuleCall_3_0());
				}
				lv_members_3_0=ruleDmxBaseType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDmxBaseTypeSetRule());
					}
					add(
						$current,
						"members",
						lv_members_3_0,
						"com.mimacom.ddd.dm.dmx.Dmx.DmxBaseType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getDmxBaseTypeSetAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDmxBaseTypeSetAccess().getMembersDmxBaseTypeEnumRuleCall_4_1_0());
					}
					lv_members_5_0=ruleDmxBaseType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDmxBaseTypeSetRule());
						}
						add(
							$current,
							"members",
							lv_members_5_0,
							"com.mimacom.ddd.dm.dmx.Dmx.DmxBaseType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)+
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getDmxBaseTypeSetAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleDmxArchetype
entryRuleDmxArchetype returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDmxArchetypeRule()); }
	iv_ruleDmxArchetype=ruleDmxArchetype
	{ $current=$iv_ruleDmxArchetype.current; }
	EOF;

// Rule DmxArchetype
ruleDmxArchetype returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='archetype'
		{
			newLeafNode(otherlv_0, grammarAccess.getDmxArchetypeAccess().getArchetypeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDmxArchetypeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDmxArchetypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"com.mimacom.ddd.dm.dmx.Dmx.ID");
				}
			)
		)
		otherlv_2='is'
		{
			newLeafNode(otherlv_2, grammarAccess.getDmxArchetypeAccess().getIsKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDmxArchetypeAccess().getBaseTypeDmxBaseTypeEnumRuleCall_3_0());
				}
				lv_baseType_3_0=ruleDmxBaseType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDmxArchetypeRule());
					}
					set(
						$current,
						"baseType",
						lv_baseType_3_0,
						"com.mimacom.ddd.dm.dmx.Dmx.DmxBaseType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDmxArchetypeAccess().getDescriptionDRichTextParserRuleCall_4_0());
				}
				lv_description_4_0=ruleDRichText
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDmxArchetypeRule());
					}
					set(
						$current,
						"description",
						lv_description_4_0,
						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleDmxFilter
entryRuleDmxFilter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDmxFilterRule()); }
	iv_ruleDmxFilter=ruleDmxFilter
	{ $current=$iv_ruleDmxFilter.current; }
	EOF;

// Rule DmxFilter
ruleDmxFilter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='filter'
		{
			newLeafNode(otherlv_0, grammarAccess.getDmxFilterAccess().getFilterKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDmxFilterAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDmxFilterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"com.mimacom.ddd.dm.dmx.Dmx.ID");
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getDmxFilterAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDmxFilterAccess().getParametersDmxFilterParameterParserRuleCall_3_0_0());
					}
					lv_parameters_3_0=ruleDmxFilterParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDmxFilterRule());
						}
						add(
							$current,
							"parameters",
							lv_parameters_3_0,
							"com.mimacom.ddd.dm.dmx.Dmx.DmxFilterParameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getDmxFilterAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDmxFilterAccess().getParametersDmxFilterParameterParserRuleCall_3_1_1_0());
						}
						lv_parameters_5_0=ruleDmxFilterParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDmxFilterRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_5_0,
								"com.mimacom.ddd.dm.dmx.Dmx.DmxFilterParameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getDmxFilterAccess().getRightParenthesisKeyword_4());
		}
		otherlv_7=':'
		{
			newLeafNode(otherlv_7, grammarAccess.getDmxFilterAccess().getColonKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDmxFilterAccess().getTypeDescDmxFilterTypeDescriptorParserRuleCall_6_0());
				}
				lv_typeDesc_8_0=ruleDmxFilterTypeDescriptor
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDmxFilterRule());
					}
					set(
						$current,
						"typeDesc",
						lv_typeDesc_8_0,
						"com.mimacom.ddd.dm.dmx.Dmx.DmxFilterTypeDescriptor");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_9='with'
			{
				newLeafNode(otherlv_9, grammarAccess.getDmxFilterAccess().getWithKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDmxFilterAccess().getWithTypeSetDmxBaseTypeSetParserRuleCall_7_1_0());
					}
					lv_withTypeSet_10_0=ruleDmxBaseTypeSet
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDmxFilterRule());
						}
						set(
							$current,
							"withTypeSet",
							lv_withTypeSet_10_0,
							"com.mimacom.ddd.dm.dmx.Dmx.DmxBaseTypeSet");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleDmxFilterTypeDescriptor
entryRuleDmxFilterTypeDescriptor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDmxFilterTypeDescriptorRule()); }
	iv_ruleDmxFilterTypeDescriptor=ruleDmxFilterTypeDescriptor
	{ $current=$iv_ruleDmxFilterTypeDescriptor.current; }
	EOF;

// Rule DmxFilterTypeDescriptor
ruleDmxFilterTypeDescriptor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDmxFilterTypeDescriptorAccess().getSingleDmxBaseTypeEnumRuleCall_0_0_0());
					}
					lv_single_0_0=ruleDmxBaseType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDmxFilterTypeDescriptorRule());
						}
						set(
							$current,
							"single",
							lv_single_0_0,
							"com.mimacom.ddd.dm.dmx.Dmx.DmxBaseType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDmxFilterTypeDescriptorRule());
						}
					}
					otherlv_1=RULE_ID
					{
						newLeafNode(otherlv_1, grammarAccess.getDmxFilterTypeDescriptorAccess().getMultipleDmxBaseTypeSetCrossReference_0_1_0());
					}
				)
			)
		)
		(
			(
				lv_collection_2_0='*'
				{
					newLeafNode(lv_collection_2_0, grammarAccess.getDmxFilterTypeDescriptorAccess().getCollectionAsteriskKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDmxFilterTypeDescriptorRule());
					}
					setWithLastConsumed($current, "collection", true, "*");
				}
			)
		)?
	)
;

// Entry rule entryRuleDmxFilterParameter
entryRuleDmxFilterParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDmxFilterParameterRule()); }
	iv_ruleDmxFilterParameter=ruleDmxFilterParameter
	{ $current=$iv_ruleDmxFilterParameter.current; }
	EOF;

// Rule DmxFilterParameter
ruleDmxFilterParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getDmxFilterParameterAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDmxFilterParameterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"com.mimacom.ddd.dm.dmx.Dmx.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getDmxFilterParameterAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDmxFilterParameterAccess().getTypeDescDmxFilterTypeDescriptorParserRuleCall_2_0());
				}
				lv_typeDesc_2_0=ruleDmxFilterTypeDescriptor
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDmxFilterParameterRule());
					}
					set(
						$current,
						"typeDesc",
						lv_typeDesc_2_0,
						"com.mimacom.ddd.dm.dmx.Dmx.DmxFilterTypeDescriptor");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDExpression
entryRuleDExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDExpressionRule()); }
	iv_ruleDExpression=ruleDExpression
	{ $current=$iv_ruleDExpression.current; }
	EOF;

// Rule DExpression
ruleDExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDExpressionAccess().getDmxAssignmentParserRuleCall_0());
		}
		this_DmxAssignment_0=ruleDmxAssignment
		{
			$current = $this_DmxAssignment_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDExpressionAccess().getDmxPredicateWithCorrelationVariableParserRuleCall_1());
		}
		this_DmxPredicateWithCorrelationVariable_1=ruleDmxPredicateWithCorrelationVariable
		{
			$current = $this_DmxPredicateWithCorrelationVariable_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDExpressionAccess().getDRichTextParserRuleCall_2());
		}
		this_DRichText_2=ruleDRichText
		{
			$current = $this_DRichText_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDRichText
entryRuleDRichText returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDRichTextRule()); }
	iv_ruleDRichText=ruleDRichText
	{ $current=$iv_ruleDRichText.current; }
	EOF;

// Rule DRichText
ruleDRichText returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDRichTextAccess().getSegmentsDmxTextOnlyParserRuleCall_0_0());
				}
				lv_segments_0_0=ruleDmxTextOnly
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDRichTextRule());
					}
					add(
						$current,
						"segments",
						lv_segments_0_0,
						"com.mimacom.ddd.dm.dmx.Dmx.DmxTextOnly");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDRichTextAccess().getSegmentsDmxTextStartParserRuleCall_1_0_0());
					}
					lv_segments_1_0=ruleDmxTextStart
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDRichTextRule());
						}
						add(
							$current,
							"segments",
							lv_segments_1_0,
							"com.mimacom.ddd.dm.dmx.Dmx.DmxTextStart");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getDRichTextAccess().getSegmentsDExpressionParserRuleCall_1_1_0());
					}
					lv_segments_2_0=ruleDExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDRichTextRule());
						}
						add(
							$current,
							"segments",
							lv_segments_2_0,
							"com.mimacom.ddd.dm.dmx.Dmx.DExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getDRichTextAccess().getSegmentsDmxTextMiddleParserRuleCall_1_2_0_0());
						}
						lv_segments_3_0=ruleDmxTextMiddle
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDRichTextRule());
							}
							add(
								$current,
								"segments",
								lv_segments_3_0,
								"com.mimacom.ddd.dm.dmx.Dmx.DmxTextMiddle");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getDRichTextAccess().getSegmentsDExpressionParserRuleCall_1_2_1_0());
						}
						lv_segments_4_0=ruleDExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDRichTextRule());
							}
							add(
								$current,
								"segments",
								lv_segments_4_0,
								"com.mimacom.ddd.dm.dmx.Dmx.DExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			(
				(
					{
						newCompositeNode(grammarAccess.getDRichTextAccess().getSegmentsDmxTextEndParserRuleCall_1_3_0());
					}
					lv_segments_5_0=ruleDmxTextEnd
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDRichTextRule());
						}
						add(
							$current,
							"segments",
							lv_segments_5_0,
							"com.mimacom.ddd.dm.dmx.Dmx.DmxTextEnd");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleDmxTextOnly
entryRuleDmxTextOnly returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDmxTextOnlyRule()); }
	iv_ruleDmxTextOnly=ruleDmxTextOnly
	{ $current=$iv_ruleDmxTextOnly.current; }
	EOF;

// Rule DmxTextOnly
ruleDmxTextOnly returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_PLAIN_TEXT_ONLY
			{
				newLeafNode(lv_value_0_0, grammarAccess.getDmxTextOnlyAccess().getValuePLAIN_TEXT_ONLYTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getDmxTextOnlyRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"com.mimacom.ddd.dm.dmx.Dmx.PLAIN_TEXT_ONLY");
			}
		)
	)
;

// Entry rule entryRuleDmxTextStart
entryRuleDmxTextStart returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDmxTextStartRule()); }
	iv_ruleDmxTextStart=ruleDmxTextStart
	{ $current=$iv_ruleDmxTextStart.current; }
	EOF;

// Rule DmxTextStart
ruleDmxTextStart returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_RICH_TEXT_START
			{
				newLeafNode(lv_value_0_0, grammarAccess.getDmxTextStartAccess().getValueRICH_TEXT_STARTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getDmxTextStartRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"com.mimacom.ddd.dm.dmx.Dmx.RICH_TEXT_START");
			}
		)
	)
;

// Entry rule entryRuleDmxTextMiddle
entryRuleDmxTextMiddle returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDmxTextMiddleRule()); }
	iv_ruleDmxTextMiddle=ruleDmxTextMiddle
	{ $current=$iv_ruleDmxTextMiddle.current; }
	EOF;

// Rule DmxTextMiddle
ruleDmxTextMiddle returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_RICH_TEXT_MIDDLE
			{
				newLeafNode(lv_value_0_0, grammarAccess.getDmxTextMiddleAccess().getValueRICH_TEXT_MIDDLETerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getDmxTextMiddleRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"com.mimacom.ddd.dm.dmx.Dmx.RICH_TEXT_MIDDLE");
			}
		)
	)
;

// Entry rule entryRuleDmxTextEnd
entryRuleDmxTextEnd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDmxTextEndRule()); }
	iv_ruleDmxTextEnd=ruleDmxTextEnd
	{ $current=$iv_ruleDmxTextEnd.current; }
	EOF;

// Rule DmxTextEnd
ruleDmxTextEnd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_RICH_TEXT_END
			{
				newLeafNode(lv_value_0_0, grammarAccess.getDmxTextEndAccess().getValueRICH_TEXT_ENDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getDmxTextEndRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"com.mimacom.ddd.dm.dmx.Dmx.RICH_TEXT_END");
			}
		)
	)
;

// Entry rule entryRuleDmxNavigableMemberReference
entryRuleDmxNavigableMemberReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDmxNavigableMemberReferenceRule()); }
	iv_ruleDmxNavigableMemberReference=ruleDmxNavigableMemberReference
	{ $current=$iv_ruleDmxNavigableMemberReference.current; }
	EOF;

// Rule DmxNavigableMemberReference
ruleDmxNavigableMemberReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDmxNavigableMemberReferenceAccess().getDmxPrimaryExpressionParserRuleCall_0());
		}
		this_DmxPrimaryExpression_0=ruleDmxPrimaryExpression
		{
			$current = $this_DmxPrimaryExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					((
						(
						)
						'.'
						(
							(
								RULE_ID
							)
						)
						ruleDmxOpSingleAssign
					)
					)=>
					(
						(
							{
								$current = forceCreateModelElementAndSet(
									grammarAccess.getDmxNavigableMemberReferenceAccess().getDmxAssignmentPrecedingNavigationSegmentAction_1_0_0_0_0(),
									$current);
							}
						)
						otherlv_2='.'
						{
							newLeafNode(otherlv_2, grammarAccess.getDmxNavigableMemberReferenceAccess().getFullStopKeyword_1_0_0_0_1());
						}
						(
							(
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getDmxNavigableMemberReferenceRule());
									}
								}
								otherlv_3=RULE_ID
								{
									newLeafNode(otherlv_3, grammarAccess.getDmxNavigableMemberReferenceAccess().getAssignToMemberDNavigableMemberCrossReference_1_0_0_0_2_0());
								}
							)
						)
						{
							newCompositeNode(grammarAccess.getDmxNavigableMemberReferenceAccess().getDmxOpSingleAssignParserRuleCall_1_0_0_0_3());
						}
						ruleDmxOpSingleAssign
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getDmxNavigableMemberReferenceAccess().getValueDmxOrExpressionParserRuleCall_1_0_1_0());
						}
						lv_value_5_0=ruleDmxOrExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDmxNavigableMemberReferenceRule());
							}
							set(
								$current,
								"value",
								lv_value_5_0,
								"com.mimacom.ddd.dm.dmx.Dmx.DmxOrExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					((
						(
						)
						'.'
					)
					)=>
					(
						(
							{
								$current = forceCreateModelElementAndSet(
									grammarAccess.getDmxNavigableMemberReferenceAccess().getDmxMemberNavigationPrecedingNavigationSegmentAction_1_1_0_0_0(),
									$current);
							}
						)
						otherlv_7='.'
						{
							newLeafNode(otherlv_7, grammarAccess.getDmxNavigableMemberReferenceAccess().getFullStopKeyword_1_1_0_0_1());
						}
					)
				)
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getDmxNavigableMemberReferenceRule());
							}
						}
						otherlv_8=RULE_ID
						{
							newLeafNode(otherlv_8, grammarAccess.getDmxNavigableMemberReferenceAccess().getMemberDNavigableMemberCrossReference_1_1_1_0());
						}
					)
				)
				(
					(
						(
							((
								'('
							)
							)=>
							(
								lv_explicitOperationCall_9_0='('
								{
									newLeafNode(lv_explicitOperationCall_9_0, grammarAccess.getDmxNavigableMemberReferenceAccess().getExplicitOperationCallLeftParenthesisKeyword_1_1_2_0_0_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getDmxNavigableMemberReferenceRule());
									}
									setWithLastConsumed($current, "explicitOperationCall", true, "(");
								}
							)
						)
						(
							(
								{
									newCompositeNode(grammarAccess.getDmxNavigableMemberReferenceAccess().getCallArgumentsDmxCallArgumentsParserRuleCall_1_1_2_0_1_0());
								}
								lv_callArguments_10_0=ruleDmxCallArguments
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getDmxNavigableMemberReferenceRule());
									}
									set(
										$current,
										"callArguments",
										lv_callArguments_10_0,
										"com.mimacom.ddd.dm.dmx.Dmx.DmxCallArguments");
									afterParserOrEnumRuleCall();
								}
							)
						)
						otherlv_11=')'
						{
							newLeafNode(otherlv_11, grammarAccess.getDmxNavigableMemberReferenceAccess().getRightParenthesisKeyword_1_1_2_0_2());
						}
					)
					    |
					(
						(
							lv_before_12_0='@before'
							{
								newLeafNode(lv_before_12_0, grammarAccess.getDmxNavigableMemberReferenceAccess().getBeforeBeforeKeyword_1_1_2_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getDmxNavigableMemberReferenceRule());
								}
								setWithLastConsumed($current, "before", true, "@before");
							}
						)
					)
				)?
			)
		)*
	)
;

// Entry rule entryRuleDmxCallArguments
entryRuleDmxCallArguments returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDmxCallArgumentsRule()); }
	iv_ruleDmxCallArguments=ruleDmxCallArguments
	{ $current=$iv_ruleDmxCallArguments.current; }
	EOF;

// Rule DmxCallArguments
ruleDmxCallArguments returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDmxCallArgumentsAccess().getDmxCallArgumentsAction_0(),
					$current);
			}
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDmxCallArgumentsAccess().getArgumentsDmxPredicateWithCorrelationVariableParserRuleCall_1_0_0());
					}
					lv_arguments_1_0=ruleDmxPredicateWithCorrelationVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDmxCallArgumentsRule());
						}
						add(
							$current,
							"arguments",
							lv_arguments_1_0,
							"com.mimacom.ddd.dm.dmx.Dmx.DmxPredicateWithCorrelationVariable");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_2=','
				{
					newLeafNode(otherlv_2, grammarAccess.getDmxCallArgumentsAccess().getCommaKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDmxCallArgumentsAccess().getArgumentsDmxPredicateWithCorrelationVariableParserRuleCall_1_1_1_0());
						}
						lv_arguments_3_0=ruleDmxPredicateWithCorrelationVariable
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDmxCallArgumentsRule());
							}
							add(
								$current,
								"arguments",
								lv_arguments_3_0,
								"com.mimacom.ddd.dm.dmx.Dmx.DmxPredicateWithCorrelationVariable");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
	)
;

// Entry rule entryRuleDmxAssignment
entryRuleDmxAssignment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDmxAssignmentRule()); }
	iv_ruleDmxAssignment=ruleDmxAssignment
	{ $current=$iv_ruleDmxAssignment.current; }
	EOF;

// Rule DmxAssignment
ruleDmxAssignment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDmxAssignmentAccess().getDmxAssignmentAction_0(),
					$current);
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDmxAssignmentRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getDmxAssignmentAccess().getAssignToMemberDNavigableMemberCrossReference_1_0());
				}
			)
		)
		{
			newCompositeNode(grammarAccess.getDmxAssignmentAccess().getDmxOpSingleAssignParserRuleCall_2());
		}
		ruleDmxOpSingleAssign
		{
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDmxAssignmentAccess().getValueDmxOrExpressionParserRuleCall_3_0());
				}
				lv_value_3_0=ruleDmxOrExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDmxAssignmentRule());
					}
					set(
						$current,
						"value",
						lv_value_3_0,
						"com.mimacom.ddd.dm.dmx.Dmx.DmxOrExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDmxOpSingleAssign
entryRuleDmxOpSingleAssign returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDmxOpSingleAssignRule()); }
	iv_ruleDmxOpSingleAssign=ruleDmxOpSingleAssign
	{ $current=$iv_ruleDmxOpSingleAssign.current.getText(); }
	EOF;

// Rule DmxOpSingleAssign
ruleDmxOpSingleAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw=':='
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getDmxOpSingleAssignAccess().getColonEqualsSignKeyword());
	}
;

// Entry rule entryRuleDmxPredicateWithCorrelationVariable
entryRuleDmxPredicateWithCorrelationVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDmxPredicateWithCorrelationVariableRule()); }
	iv_ruleDmxPredicateWithCorrelationVariable=ruleDmxPredicateWithCorrelationVariable
	{ $current=$iv_ruleDmxPredicateWithCorrelationVariable.current; }
	EOF;

// Rule DmxPredicateWithCorrelationVariable
ruleDmxPredicateWithCorrelationVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getDmxPredicateWithCorrelationVariableAccess().getDmxPredicateWithCorrelationVariableAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getDmxPredicateWithCorrelationVariableAccess().getCorrelationVariableDmxCorrelationVariableParserRuleCall_0_1_0());
					}
					lv_correlationVariable_1_0=ruleDmxCorrelationVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDmxPredicateWithCorrelationVariableRule());
						}
						set(
							$current,
							"correlationVariable",
							lv_correlationVariable_1_0,
							"com.mimacom.ddd.dm.dmx.Dmx.DmxCorrelationVariable");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2='|'
			{
				newLeafNode(otherlv_2, grammarAccess.getDmxPredicateWithCorrelationVariableAccess().getVerticalLineKeyword_0_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDmxPredicateWithCorrelationVariableAccess().getPredicateDmxOrExpressionParserRuleCall_0_3_0());
					}
					lv_predicate_3_0=ruleDmxOrExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDmxPredicateWithCorrelationVariableRule());
						}
						set(
							$current,
							"predicate",
							lv_predicate_3_0,
							"com.mimacom.ddd.dm.dmx.Dmx.DmxOrExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getDmxPredicateWithCorrelationVariableAccess().getDmxOrExpressionParserRuleCall_1());
		}
		this_DmxOrExpression_4=ruleDmxOrExpression
		{
			$current = $this_DmxOrExpression_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDmxCorrelationVariable
entryRuleDmxCorrelationVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDmxCorrelationVariableRule()); }
	iv_ruleDmxCorrelationVariable=ruleDmxCorrelationVariable
	{ $current=$iv_ruleDmxCorrelationVariable.current; }
	EOF;

// Rule DmxCorrelationVariable
ruleDmxCorrelationVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getDmxCorrelationVariableAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getDmxCorrelationVariableRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"com.mimacom.ddd.dm.dmx.Dmx.ID");
			}
		)
	)
;

// Entry rule entryRuleDmxOrExpression
entryRuleDmxOrExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDmxOrExpressionRule()); }
	iv_ruleDmxOrExpression=ruleDmxOrExpression
	{ $current=$iv_ruleDmxOrExpression.current; }
	EOF;

// Rule DmxOrExpression
ruleDmxOrExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDmxOrExpressionAccess().getDmxAndExpressionParserRuleCall_0());
		}
		this_DmxAndExpression_0=ruleDmxAndExpression
		{
			$current = $this_DmxAndExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				((
					(
					)
					(
						(
							ruleDmxOpOr
						)
					)
				)
				)=>
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getDmxOrExpressionAccess().getDmxBinaryOperationLeftOperandAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getDmxOrExpressionAccess().getOperatorDmxOpOrEnumRuleCall_1_0_0_1_0());
							}
							lv_operator_2_0=ruleDmxOpOr
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getDmxOrExpressionRule());
								}
								set(
									$current,
									"operator",
									lv_operator_2_0,
									"com.mimacom.ddd.dm.dmx.Dmx.DmxOpOr");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getDmxOrExpressionAccess().getRightOperandDmxAndExpressionParserRuleCall_1_1_0());
					}
					lv_rightOperand_3_0=ruleDmxAndExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDmxOrExpressionRule());
						}
						set(
							$current,
							"rightOperand",
							lv_rightOperand_3_0,
							"com.mimacom.ddd.dm.dmx.Dmx.DmxAndExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleDmxAndExpression
entryRuleDmxAndExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDmxAndExpressionRule()); }
	iv_ruleDmxAndExpression=ruleDmxAndExpression
	{ $current=$iv_ruleDmxAndExpression.current; }
	EOF;

// Rule DmxAndExpression
ruleDmxAndExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDmxAndExpressionAccess().getDmxEqualityExpressionParserRuleCall_0());
		}
		this_DmxEqualityExpression_0=ruleDmxEqualityExpression
		{
			$current = $this_DmxEqualityExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				((
					(
					)
					(
						(
							ruleDmxOpAnd
						)
					)
				)
				)=>
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getDmxAndExpressionAccess().getDmxBinaryOperationLeftOperandAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getDmxAndExpressionAccess().getOperatorDmxOpAndEnumRuleCall_1_0_0_1_0());
							}
							lv_operator_2_0=ruleDmxOpAnd
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getDmxAndExpressionRule());
								}
								set(
									$current,
									"operator",
									lv_operator_2_0,
									"com.mimacom.ddd.dm.dmx.Dmx.DmxOpAnd");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getDmxAndExpressionAccess().getRightOperandDmxEqualityExpressionParserRuleCall_1_1_0());
					}
					lv_rightOperand_3_0=ruleDmxEqualityExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDmxAndExpressionRule());
						}
						set(
							$current,
							"rightOperand",
							lv_rightOperand_3_0,
							"com.mimacom.ddd.dm.dmx.Dmx.DmxEqualityExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleDmxEqualityExpression
entryRuleDmxEqualityExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDmxEqualityExpressionRule()); }
	iv_ruleDmxEqualityExpression=ruleDmxEqualityExpression
	{ $current=$iv_ruleDmxEqualityExpression.current; }
	EOF;

// Rule DmxEqualityExpression
ruleDmxEqualityExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDmxEqualityExpressionAccess().getDmxRelationalExpressionParserRuleCall_0());
		}
		this_DmxRelationalExpression_0=ruleDmxRelationalExpression
		{
			$current = $this_DmxRelationalExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				((
					(
					)
					(
						(
							ruleDmxOpEquality
						)
					)
				)
				)=>
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getDmxEqualityExpressionAccess().getDmxBinaryOperationLeftOperandAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getDmxEqualityExpressionAccess().getOperatorDmxOpEqualityEnumRuleCall_1_0_0_1_0());
							}
							lv_operator_2_0=ruleDmxOpEquality
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getDmxEqualityExpressionRule());
								}
								set(
									$current,
									"operator",
									lv_operator_2_0,
									"com.mimacom.ddd.dm.dmx.Dmx.DmxOpEquality");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getDmxEqualityExpressionAccess().getRightOperandDmxRelationalExpressionParserRuleCall_1_1_0());
					}
					lv_rightOperand_3_0=ruleDmxRelationalExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDmxEqualityExpressionRule());
						}
						set(
							$current,
							"rightOperand",
							lv_rightOperand_3_0,
							"com.mimacom.ddd.dm.dmx.Dmx.DmxRelationalExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleDmxRelationalExpression
entryRuleDmxRelationalExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDmxRelationalExpressionRule()); }
	iv_ruleDmxRelationalExpression=ruleDmxRelationalExpression
	{ $current=$iv_ruleDmxRelationalExpression.current; }
	EOF;

// Rule DmxRelationalExpression
ruleDmxRelationalExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDmxRelationalExpressionAccess().getDmxOtherOperatorExpressionParserRuleCall_0());
		}
		this_DmxOtherOperatorExpression_0=ruleDmxOtherOperatorExpression
		{
			$current = $this_DmxOtherOperatorExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					((
						(
						)
						ruleDmxOpInstanceOf
					)
					)=>
					(
						(
							{
								$current = forceCreateModelElementAndSet(
									grammarAccess.getDmxRelationalExpressionAccess().getDmxInstanceOfExpressionExpressionAction_1_0_0_0_0(),
									$current);
							}
						)
						{
							newCompositeNode(grammarAccess.getDmxRelationalExpressionAccess().getDmxOpInstanceOfParserRuleCall_1_0_0_0_1());
						}
						ruleDmxOpInstanceOf
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getDmxRelationalExpressionRule());
							}
						}
						otherlv_3=RULE_ID
						{
							newLeafNode(otherlv_3, grammarAccess.getDmxRelationalExpressionAccess().getTypeDTypeCrossReference_1_0_1_0());
						}
					)
				)
			)
			    |
			(
				(
					((
						(
						)
						(
							(
								ruleOpCompare
							)
						)
					)
					)=>
					(
						(
							{
								$current = forceCreateModelElementAndSet(
									grammarAccess.getDmxRelationalExpressionAccess().getDmxBinaryOperationLeftOperandAction_1_1_0_0_0(),
									$current);
							}
						)
						(
							(
								{
									newCompositeNode(grammarAccess.getDmxRelationalExpressionAccess().getOperatorOpCompareEnumRuleCall_1_1_0_0_1_0());
								}
								lv_operator_5_0=ruleOpCompare
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getDmxRelationalExpressionRule());
									}
									set(
										$current,
										"operator",
										lv_operator_5_0,
										"com.mimacom.ddd.dm.dmx.Dmx.OpCompare");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getDmxRelationalExpressionAccess().getRightOperandDmxOtherOperatorExpressionParserRuleCall_1_1_1_0());
						}
						lv_rightOperand_6_0=ruleDmxOtherOperatorExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDmxRelationalExpressionRule());
							}
							set(
								$current,
								"rightOperand",
								lv_rightOperand_6_0,
								"com.mimacom.ddd.dm.dmx.Dmx.DmxOtherOperatorExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
	)
;

// Entry rule entryRuleDmxOpInstanceOf
entryRuleDmxOpInstanceOf returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDmxOpInstanceOfRule()); }
	iv_ruleDmxOpInstanceOf=ruleDmxOpInstanceOf
	{ $current=$iv_ruleDmxOpInstanceOf.current.getText(); }
	EOF;

// Rule DmxOpInstanceOf
ruleDmxOpInstanceOf returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='ISA'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDmxOpInstanceOfAccess().getISAKeyword_0());
		}
		    |
		kw='isa'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDmxOpInstanceOfAccess().getIsaKeyword_1());
		}
	)
;

// Entry rule entryRuleDmxOtherOperatorExpression
entryRuleDmxOtherOperatorExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDmxOtherOperatorExpressionRule()); }
	iv_ruleDmxOtherOperatorExpression=ruleDmxOtherOperatorExpression
	{ $current=$iv_ruleDmxOtherOperatorExpression.current; }
	EOF;

// Rule DmxOtherOperatorExpression
ruleDmxOtherOperatorExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDmxOtherOperatorExpressionAccess().getDmxAdditiveExpressionParserRuleCall_0());
		}
		this_DmxAdditiveExpression_0=ruleDmxAdditiveExpression
		{
			$current = $this_DmxAdditiveExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				((
					(
					)
					(
						(
							ruleOpOther
						)
					)
				)
				)=>
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getDmxOtherOperatorExpressionAccess().getDmxBinaryOperationLeftOperandAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getDmxOtherOperatorExpressionAccess().getOperatorOpOtherEnumRuleCall_1_0_0_1_0());
							}
							lv_operator_2_0=ruleOpOther
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getDmxOtherOperatorExpressionRule());
								}
								set(
									$current,
									"operator",
									lv_operator_2_0,
									"com.mimacom.ddd.dm.dmx.Dmx.OpOther");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getDmxOtherOperatorExpressionAccess().getRightOperandDmxAdditiveExpressionParserRuleCall_1_1_0());
					}
					lv_rightOperand_3_0=ruleDmxAdditiveExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDmxOtherOperatorExpressionRule());
						}
						set(
							$current,
							"rightOperand",
							lv_rightOperand_3_0,
							"com.mimacom.ddd.dm.dmx.Dmx.DmxAdditiveExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleDmxAdditiveExpression
entryRuleDmxAdditiveExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDmxAdditiveExpressionRule()); }
	iv_ruleDmxAdditiveExpression=ruleDmxAdditiveExpression
	{ $current=$iv_ruleDmxAdditiveExpression.current; }
	EOF;

// Rule DmxAdditiveExpression
ruleDmxAdditiveExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDmxAdditiveExpressionAccess().getDmxMultiplicativeExpressionParserRuleCall_0());
		}
		this_DmxMultiplicativeExpression_0=ruleDmxMultiplicativeExpression
		{
			$current = $this_DmxMultiplicativeExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				((
					(
					)
					(
						(
							ruleOpAdd
						)
					)
				)
				)=>
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getDmxAdditiveExpressionAccess().getDmxBinaryOperationLeftOperandAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getDmxAdditiveExpressionAccess().getOperatorOpAddEnumRuleCall_1_0_0_1_0());
							}
							lv_operator_2_0=ruleOpAdd
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getDmxAdditiveExpressionRule());
								}
								set(
									$current,
									"operator",
									lv_operator_2_0,
									"com.mimacom.ddd.dm.dmx.Dmx.OpAdd");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getDmxAdditiveExpressionAccess().getRightOperandDmxMultiplicativeExpressionParserRuleCall_1_1_0());
					}
					lv_rightOperand_3_0=ruleDmxMultiplicativeExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDmxAdditiveExpressionRule());
						}
						set(
							$current,
							"rightOperand",
							lv_rightOperand_3_0,
							"com.mimacom.ddd.dm.dmx.Dmx.DmxMultiplicativeExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleDmxMultiplicativeExpression
entryRuleDmxMultiplicativeExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDmxMultiplicativeExpressionRule()); }
	iv_ruleDmxMultiplicativeExpression=ruleDmxMultiplicativeExpression
	{ $current=$iv_ruleDmxMultiplicativeExpression.current; }
	EOF;

// Rule DmxMultiplicativeExpression
ruleDmxMultiplicativeExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDmxMultiplicativeExpressionAccess().getDmxUnaryOperationParserRuleCall_0());
		}
		this_DmxUnaryOperation_0=ruleDmxUnaryOperation
		{
			$current = $this_DmxUnaryOperation_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				((
					(
					)
					(
						(
							ruleOpMulti
						)
					)
				)
				)=>
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getDmxMultiplicativeExpressionAccess().getDmxBinaryOperationLeftOperandAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getDmxMultiplicativeExpressionAccess().getOperatorOpMultiEnumRuleCall_1_0_0_1_0());
							}
							lv_operator_2_0=ruleOpMulti
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getDmxMultiplicativeExpressionRule());
								}
								set(
									$current,
									"operator",
									lv_operator_2_0,
									"com.mimacom.ddd.dm.dmx.Dmx.OpMulti");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getDmxMultiplicativeExpressionAccess().getRightOperandDmxUnaryOperationParserRuleCall_1_1_0());
					}
					lv_rightOperand_3_0=ruleDmxUnaryOperation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDmxMultiplicativeExpressionRule());
						}
						set(
							$current,
							"rightOperand",
							lv_rightOperand_3_0,
							"com.mimacom.ddd.dm.dmx.Dmx.DmxUnaryOperation");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleDmxUnaryOperation
entryRuleDmxUnaryOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDmxUnaryOperationRule()); }
	iv_ruleDmxUnaryOperation=ruleDmxUnaryOperation
	{ $current=$iv_ruleDmxUnaryOperation.current; }
	EOF;

// Rule DmxUnaryOperation
ruleDmxUnaryOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getDmxUnaryOperationAccess().getDmxUnaryOperationAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getDmxUnaryOperationAccess().getOperatorOpUnaryEnumRuleCall_0_1_0());
					}
					lv_operator_1_0=ruleOpUnary
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDmxUnaryOperationRule());
						}
						set(
							$current,
							"operator",
							lv_operator_1_0,
							"com.mimacom.ddd.dm.dmx.Dmx.OpUnary");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getDmxUnaryOperationAccess().getOperandDmxUnaryOperationParserRuleCall_0_2_0());
					}
					lv_operand_2_0=ruleDmxUnaryOperation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDmxUnaryOperationRule());
						}
						set(
							$current,
							"operand",
							lv_operand_2_0,
							"com.mimacom.ddd.dm.dmx.Dmx.DmxUnaryOperation");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getDmxUnaryOperationAccess().getDmxCastExpressionParserRuleCall_1());
		}
		this_DmxCastExpression_3=ruleDmxCastExpression
		{
			$current = $this_DmxCastExpression_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDmxCastExpression
entryRuleDmxCastExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDmxCastExpressionRule()); }
	iv_ruleDmxCastExpression=ruleDmxCastExpression
	{ $current=$iv_ruleDmxCastExpression.current; }
	EOF;

// Rule DmxCastExpression
ruleDmxCastExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDmxCastExpressionAccess().getDmxNavigableMemberReferenceParserRuleCall_0());
		}
		this_DmxNavigableMemberReference_0=ruleDmxNavigableMemberReference
		{
			$current = $this_DmxNavigableMemberReference_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				((
					(
					)
					ruleDmxOpCast
				)
				)=>
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getDmxCastExpressionAccess().getDmxCastExpressionTargetAction_1_0_0_0(),
								$current);
						}
					)
					{
						newCompositeNode(grammarAccess.getDmxCastExpressionAccess().getDmxOpCastParserRuleCall_1_0_0_1());
					}
					ruleDmxOpCast
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDmxCastExpressionRule());
						}
					}
					otherlv_3=RULE_ID
					{
						newLeafNode(otherlv_3, grammarAccess.getDmxCastExpressionAccess().getTypeDTypeCrossReference_1_1_0());
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleDmxOpCast
entryRuleDmxOpCast returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDmxOpCastRule()); }
	iv_ruleDmxOpCast=ruleDmxOpCast
	{ $current=$iv_ruleDmxOpCast.current.getText(); }
	EOF;

// Rule DmxOpCast
ruleDmxOpCast returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='AS'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDmxOpCastAccess().getASKeyword_0());
		}
		    |
		kw='as'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDmxOpCastAccess().getAsKeyword_1());
		}
	)
;

// Entry rule entryRuleDmxPrimaryExpression
entryRuleDmxPrimaryExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDmxPrimaryExpressionRule()); }
	iv_ruleDmxPrimaryExpression=ruleDmxPrimaryExpression
	{ $current=$iv_ruleDmxPrimaryExpression.current; }
	EOF;

// Rule DmxPrimaryExpression
ruleDmxPrimaryExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDmxPrimaryExpressionAccess().getDmxLiteralExpressionParserRuleCall_0());
		}
		this_DmxLiteralExpression_0=ruleDmxLiteralExpression
		{
			$current = $this_DmxLiteralExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDmxPrimaryExpressionAccess().getDmxParenthesizedExpressionParserRuleCall_1());
		}
		this_DmxParenthesizedExpression_1=ruleDmxParenthesizedExpression
		{
			$current = $this_DmxParenthesizedExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDmxPrimaryExpressionAccess().getDmxListExpressionParserRuleCall_2());
		}
		this_DmxListExpression_2=ruleDmxListExpression
		{
			$current = $this_DmxListExpression_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDmxPrimaryExpressionAccess().getDmxFunctionCallParserRuleCall_3());
		}
		this_DmxFunctionCall_3=ruleDmxFunctionCall
		{
			$current = $this_DmxFunctionCall_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDmxPrimaryExpressionAccess().getDmxStaticReferenceParserRuleCall_4());
		}
		this_DmxStaticReference_4=ruleDmxStaticReference
		{
			$current = $this_DmxStaticReference_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDmxPrimaryExpressionAccess().getDmxContextReferenceParserRuleCall_5());
		}
		this_DmxContextReference_5=ruleDmxContextReference
		{
			$current = $this_DmxContextReference_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDmxPrimaryExpressionAccess().getDmxIfExpressionParserRuleCall_6());
		}
		this_DmxIfExpression_6=ruleDmxIfExpression
		{
			$current = $this_DmxIfExpression_6.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDmxLiteralExpression
entryRuleDmxLiteralExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDmxLiteralExpressionRule()); }
	iv_ruleDmxLiteralExpression=ruleDmxLiteralExpression
	{ $current=$iv_ruleDmxLiteralExpression.current; }
	EOF;

// Rule DmxLiteralExpression
ruleDmxLiteralExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDmxLiteralExpressionAccess().getDmxBooleanLiteralParserRuleCall_0());
		}
		this_DmxBooleanLiteral_0=ruleDmxBooleanLiteral
		{
			$current = $this_DmxBooleanLiteral_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDmxLiteralExpressionAccess().getDmxStringLiteralParserRuleCall_1());
		}
		this_DmxStringLiteral_1=ruleDmxStringLiteral
		{
			$current = $this_DmxStringLiteral_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDmxLiteralExpressionAccess().getDmxNaturalLiteralParserRuleCall_2());
		}
		this_DmxNaturalLiteral_2=ruleDmxNaturalLiteral
		{
			$current = $this_DmxNaturalLiteral_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDmxLiteralExpressionAccess().getDmxDecimalLiteralParserRuleCall_3());
		}
		this_DmxDecimalLiteral_3=ruleDmxDecimalLiteral
		{
			$current = $this_DmxDecimalLiteral_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDmxLiteralExpressionAccess().getDmxUndefinedLiteralParserRuleCall_4());
		}
		this_DmxUndefinedLiteral_4=ruleDmxUndefinedLiteral
		{
			$current = $this_DmxUndefinedLiteral_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDmxLiteralExpressionAccess().getDmxEntityParserRuleCall_5());
		}
		this_DmxEntity_5=ruleDmxEntity
		{
			$current = $this_DmxEntity_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDmxLiteralExpressionAccess().getDmxDetailParserRuleCall_6());
		}
		this_DmxDetail_6=ruleDmxDetail
		{
			$current = $this_DmxDetail_6.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDmxParenthesizedExpression
entryRuleDmxParenthesizedExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDmxParenthesizedExpressionRule()); }
	iv_ruleDmxParenthesizedExpression=ruleDmxParenthesizedExpression
	{ $current=$iv_ruleDmxParenthesizedExpression.current; }
	EOF;

// Rule DmxParenthesizedExpression
ruleDmxParenthesizedExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getDmxParenthesizedExpressionAccess().getLeftParenthesisKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getDmxParenthesizedExpressionAccess().getDExpressionParserRuleCall_1());
		}
		this_DExpression_1=ruleDExpression
		{
			$current = $this_DExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getDmxParenthesizedExpressionAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleDmxListExpression
entryRuleDmxListExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDmxListExpressionRule()); }
	iv_ruleDmxListExpression=ruleDmxListExpression
	{ $current=$iv_ruleDmxListExpression.current; }
	EOF;

// Rule DmxListExpression
ruleDmxListExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDmxListExpressionAccess().getDmxListExpressionAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getDmxListExpressionAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDmxListExpressionAccess().getElementsDExpressionParserRuleCall_2_0_0());
					}
					lv_elements_2_0=ruleDExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDmxListExpressionRule());
						}
						add(
							$current,
							"elements",
							lv_elements_2_0,
							"com.mimacom.ddd.dm.dmx.Dmx.DExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getDmxListExpressionAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDmxListExpressionAccess().getElementsDExpressionParserRuleCall_2_1_1_0());
						}
						lv_elements_4_0=ruleDExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDmxListExpressionRule());
							}
							add(
								$current,
								"elements",
								lv_elements_4_0,
								"com.mimacom.ddd.dm.dmx.Dmx.DExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getDmxListExpressionAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleDmxLiteralListExpression
entryRuleDmxLiteralListExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDmxLiteralListExpressionRule()); }
	iv_ruleDmxLiteralListExpression=ruleDmxLiteralListExpression
	{ $current=$iv_ruleDmxLiteralListExpression.current; }
	EOF;

// Rule DmxLiteralListExpression
ruleDmxLiteralListExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDmxLiteralListExpressionAccess().getDmxListExpressionAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getDmxLiteralListExpressionAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDmxLiteralListExpressionAccess().getElementsDmxLiteralExpressionParserRuleCall_2_0_0());
					}
					lv_elements_2_0=ruleDmxLiteralExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDmxLiteralListExpressionRule());
						}
						add(
							$current,
							"elements",
							lv_elements_2_0,
							"com.mimacom.ddd.dm.dmx.Dmx.DmxLiteralExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getDmxLiteralListExpressionAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDmxLiteralListExpressionAccess().getElementsDmxLiteralExpressionParserRuleCall_2_1_1_0());
						}
						lv_elements_4_0=ruleDmxLiteralExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDmxLiteralListExpressionRule());
							}
							add(
								$current,
								"elements",
								lv_elements_4_0,
								"com.mimacom.ddd.dm.dmx.Dmx.DmxLiteralExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getDmxLiteralListExpressionAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleDmxFunctionCall
entryRuleDmxFunctionCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDmxFunctionCallRule()); }
	iv_ruleDmxFunctionCall=ruleDmxFunctionCall
	{ $current=$iv_ruleDmxFunctionCall.current; }
	EOF;

// Rule DmxFunctionCall
ruleDmxFunctionCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDmxFunctionCallAccess().getDmxFunctionCallAction_0(),
					$current);
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDmxFunctionCallRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getDmxFunctionCallAccess().getFunctionDmxFilterCrossReference_1_0());
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getDmxFunctionCallAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDmxFunctionCallAccess().getCallArgumentsDmxFunctionCallArgumentsParserRuleCall_3_0());
				}
				lv_callArguments_3_0=ruleDmxFunctionCallArguments
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDmxFunctionCallRule());
					}
					set(
						$current,
						"callArguments",
						lv_callArguments_3_0,
						"com.mimacom.ddd.dm.dmx.Dmx.DmxFunctionCallArguments");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getDmxFunctionCallAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleDmxFunctionCallArguments
entryRuleDmxFunctionCallArguments returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDmxFunctionCallArgumentsRule()); }
	iv_ruleDmxFunctionCallArguments=ruleDmxFunctionCallArguments
	{ $current=$iv_ruleDmxFunctionCallArguments.current; }
	EOF;

// Rule DmxFunctionCallArguments
ruleDmxFunctionCallArguments returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDmxFunctionCallArgumentsAccess().getDmxCallArgumentsAction_0(),
					$current);
			}
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDmxFunctionCallArgumentsAccess().getArgumentsDExpressionParserRuleCall_1_0_0());
					}
					lv_arguments_1_0=ruleDExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDmxFunctionCallArgumentsRule());
						}
						add(
							$current,
							"arguments",
							lv_arguments_1_0,
							"com.mimacom.ddd.dm.dmx.Dmx.DExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_2=','
				{
					newLeafNode(otherlv_2, grammarAccess.getDmxFunctionCallArgumentsAccess().getCommaKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDmxFunctionCallArgumentsAccess().getArgumentsDExpressionParserRuleCall_1_1_1_0());
						}
						lv_arguments_3_0=ruleDExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDmxFunctionCallArgumentsRule());
							}
							add(
								$current,
								"arguments",
								lv_arguments_3_0,
								"com.mimacom.ddd.dm.dmx.Dmx.DExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
	)
;

// Entry rule entryRuleDmxEntity
entryRuleDmxEntity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDmxEntityRule()); }
	iv_ruleDmxEntity=ruleDmxEntity
	{ $current=$iv_ruleDmxEntity.current; }
	EOF;

// Rule DmxEntity
ruleDmxEntity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='entity'
		{
			newLeafNode(otherlv_0, grammarAccess.getDmxEntityAccess().getEntityKeyword_0());
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getDmxEntityRule());
			}
			newCompositeNode(grammarAccess.getDmxEntityAccess().getDmxComplexObjectParserRuleCall_1());
		}
		this_DmxComplexObject_1=ruleDmxComplexObject[$current]
		{
			$current = $this_DmxComplexObject_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDmxDetail
entryRuleDmxDetail returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDmxDetailRule()); }
	iv_ruleDmxDetail=ruleDmxDetail
	{ $current=$iv_ruleDmxDetail.current; }
	EOF;

// Rule DmxDetail
ruleDmxDetail returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='detail'
		{
			newLeafNode(otherlv_0, grammarAccess.getDmxDetailAccess().getDetailKeyword_0());
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getDmxDetailRule());
			}
			newCompositeNode(grammarAccess.getDmxDetailAccess().getDmxComplexObjectParserRuleCall_1());
		}
		this_DmxComplexObject_1=ruleDmxComplexObject[$current]
		{
			$current = $this_DmxComplexObject_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule DmxComplexObject
ruleDmxComplexObject[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDmxComplexObjectRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getDmxComplexObjectAccess().getTypeDComplexTypeCrossReference_0_0());
				}
			)
		)
		{
			newCompositeNode(grammarAccess.getDmxComplexObjectAccess().getDomFieldListStartSymbolParserRuleCall_1());
		}
		ruleDomFieldListStartSymbol
		{
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDmxComplexObjectAccess().getFieldsDmxFieldParserRuleCall_2_0());
				}
				lv_fields_2_0=ruleDmxField
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDmxComplexObjectRule());
					}
					add(
						$current,
						"fields",
						lv_fields_2_0,
						"com.mimacom.ddd.dm.dmx.Dmx.DmxField");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getDmxComplexObjectAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleDmxField
entryRuleDmxField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDmxFieldRule()); }
	iv_ruleDmxField=ruleDmxField
	{ $current=$iv_ruleDmxField.current; }
	EOF;

// Rule DmxField
ruleDmxField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDmxFieldRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getDmxFieldAccess().getFeatureDFeatureCrossReference_0_0());
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getDmxFieldAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDmxFieldAccess().getValueDExpressionParserRuleCall_2_0());
				}
				lv_value_2_0=ruleDExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDmxFieldRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"com.mimacom.ddd.dm.dmx.Dmx.DExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDmxStaticReference
entryRuleDmxStaticReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDmxStaticReferenceRule()); }
	iv_ruleDmxStaticReference=ruleDmxStaticReference
	{ $current=$iv_ruleDmxStaticReference.current; }
	EOF;

// Rule DmxStaticReference
ruleDmxStaticReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDmxStaticReferenceAccess().getDmxStaticReferenceAction_0(),
					$current);
			}
		)
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getDmxStaticReferenceAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDmxStaticReferenceRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getDmxStaticReferenceAccess().getTargetIStaticReferenceTargetCrossReference_2_0());
				}
				ruleDQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='#'
			{
				newLeafNode(otherlv_3, grammarAccess.getDmxStaticReferenceAccess().getNumberSignKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDmxStaticReferenceRule());
						}
					}
					otherlv_4=RULE_ID
					{
						newLeafNode(otherlv_4, grammarAccess.getDmxStaticReferenceAccess().getMemberDNavigableMemberCrossReference_3_1_0());
					}
				)
			)
		)?
		(
			otherlv_5='|'
			{
				newLeafNode(otherlv_5, grammarAccess.getDmxStaticReferenceAccess().getVerticalLineKeyword_4_0());
			}
			(
				(
					(
						lv_displayName_6_0=RULE_ID
						{
							newLeafNode(lv_displayName_6_0, grammarAccess.getDmxStaticReferenceAccess().getDisplayNameIDTerminalRuleCall_4_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getDmxStaticReferenceRule());
							}
							setWithLastConsumed(
								$current,
								"displayName",
								lv_displayName_6_0,
								"com.mimacom.ddd.dm.dmx.Dmx.ID");
						}
					)
				)
				    |
				(
					(
						lv_plural_7_0='*'
						{
							newLeafNode(lv_plural_7_0, grammarAccess.getDmxStaticReferenceAccess().getPluralAsteriskKeyword_4_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getDmxStaticReferenceRule());
							}
							setWithLastConsumed($current, "plural", true, "*");
						}
					)
				)
			)
		)?
		(
			(']')=>
			otherlv_8=']'
			{
				newLeafNode(otherlv_8, grammarAccess.getDmxStaticReferenceAccess().getRightSquareBracketKeyword_5());
			}
		)
	)
;

// Entry rule entryRuleDmxContextReference
entryRuleDmxContextReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDmxContextReferenceRule()); }
	iv_ruleDmxContextReference=ruleDmxContextReference
	{ $current=$iv_ruleDmxContextReference.current; }
	EOF;

// Rule DmxContextReference
ruleDmxContextReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDmxContextReferenceAccess().getDmxContextReferenceAction_0(),
					$current);
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDmxContextReferenceRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getDmxContextReferenceAccess().getTargetDNamedElementCrossReference_1_0());
				}
			)
		)
		(
			(
				(
					lv_before_2_0='@before'
					{
						newLeafNode(lv_before_2_0, grammarAccess.getDmxContextReferenceAccess().getBeforeBeforeKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDmxContextReferenceRule());
						}
						setWithLastConsumed($current, "before", true, "@before");
					}
				)
			)
			    |
			(
				otherlv_3='.'
				{
					newLeafNode(otherlv_3, grammarAccess.getDmxContextReferenceAccess().getFullStopKeyword_2_1_0());
				}
				(
					(
						lv_all_4_0='all'
						{
							newLeafNode(lv_all_4_0, grammarAccess.getDmxContextReferenceAccess().getAllAllKeyword_2_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getDmxContextReferenceRule());
							}
							setWithLastConsumed($current, "all", true, "all");
						}
					)
				)
			)
		)?
	)
;

// Entry rule entryRuleDmxIfExpression
entryRuleDmxIfExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDmxIfExpressionRule()); }
	iv_ruleDmxIfExpression=ruleDmxIfExpression
	{ $current=$iv_ruleDmxIfExpression.current; }
	EOF;

// Rule DmxIfExpression
ruleDmxIfExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDmxIfExpressionAccess().getDmxIfExpressionAction_0(),
					$current);
			}
		)
		otherlv_1='if'
		{
			newLeafNode(otherlv_1, grammarAccess.getDmxIfExpressionAccess().getIfKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDmxIfExpressionAccess().getIfDExpressionParserRuleCall_2_0());
				}
				lv_if_2_0=ruleDExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDmxIfExpressionRule());
					}
					set(
						$current,
						"if",
						lv_if_2_0,
						"com.mimacom.ddd.dm.dmx.Dmx.DExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='then'
		{
			newLeafNode(otherlv_3, grammarAccess.getDmxIfExpressionAccess().getThenKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDmxIfExpressionAccess().getThenDExpressionParserRuleCall_4_0());
				}
				lv_then_4_0=ruleDExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDmxIfExpressionRule());
					}
					set(
						$current,
						"then",
						lv_then_4_0,
						"com.mimacom.ddd.dm.dmx.Dmx.DExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				('else')=>
				otherlv_5='else'
				{
					newLeafNode(otherlv_5, grammarAccess.getDmxIfExpressionAccess().getElseKeyword_5_0());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getDmxIfExpressionAccess().getElseDExpressionParserRuleCall_5_1_0());
					}
					lv_else_6_0=ruleDExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDmxIfExpressionRule());
						}
						set(
							$current,
							"else",
							lv_else_6_0,
							"com.mimacom.ddd.dm.dmx.Dmx.DExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_7='end'
		{
			newLeafNode(otherlv_7, grammarAccess.getDmxIfExpressionAccess().getEndKeyword_6());
		}
	)
;

// Entry rule entryRuleDMultiplicity
entryRuleDMultiplicity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDMultiplicityRule()); }
	iv_ruleDMultiplicity=ruleDMultiplicity
	{ $current=$iv_ruleDMultiplicity.current; }
	EOF;

// Rule DMultiplicity
ruleDMultiplicity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDMultiplicityAccess().getShorthandDMultiplicityShorthandEnumRuleCall_0_0());
				}
				lv_shorthand_0_0=ruleDMultiplicityShorthand
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDMultiplicityRule());
					}
					set(
						$current,
						"shorthand",
						lv_shorthand_0_0,
						"com.mimacom.ddd.dm.dmx.Dmx.DMultiplicityShorthand");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getDMultiplicityAccess().getLeftParenthesisKeyword_1_0());
			}
			(
				(
					lv_minOccurs_2_0=RULE_NATURAL
					{
						newLeafNode(lv_minOccurs_2_0, grammarAccess.getDMultiplicityAccess().getMinOccursNATURALTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDMultiplicityRule());
						}
						setWithLastConsumed(
							$current,
							"minOccurs",
							lv_minOccurs_2_0,
							"com.mimacom.ddd.dm.dmx.Dmx.NATURAL");
					}
				)
			)
			otherlv_3='..'
			{
				newLeafNode(otherlv_3, grammarAccess.getDMultiplicityAccess().getFullStopFullStopKeyword_1_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDMultiplicityAccess().getMaxOccursMULTIPLICITYParserRuleCall_1_3_0());
					}
					lv_maxOccurs_4_0=ruleMULTIPLICITY
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDMultiplicityRule());
						}
						set(
							$current,
							"maxOccurs",
							lv_maxOccurs_4_0,
							"com.mimacom.ddd.dm.dmx.Dmx.MULTIPLICITY");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=')'
			{
				newLeafNode(otherlv_5, grammarAccess.getDMultiplicityAccess().getRightParenthesisKeyword_1_4());
			}
		)
	)
;

// Entry rule entryRuleMULTIPLICITY
entryRuleMULTIPLICITY returns [String current=null]:
	{ newCompositeNode(grammarAccess.getMULTIPLICITYRule()); }
	iv_ruleMULTIPLICITY=ruleMULTIPLICITY
	{ $current=$iv_ruleMULTIPLICITY.current.getText(); }
	EOF;

// Rule MULTIPLICITY
ruleMULTIPLICITY returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_NATURAL_0=RULE_NATURAL
		{
			$current.merge(this_NATURAL_0);
		}
		{
			newLeafNode(this_NATURAL_0, grammarAccess.getMULTIPLICITYAccess().getNATURALTerminalRuleCall_0());
		}
		    |
		kw='*'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getMULTIPLICITYAccess().getAsteriskKeyword_1());
		}
	)
;

// Entry rule entryRuleDmxBooleanLiteral
entryRuleDmxBooleanLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDmxBooleanLiteralRule()); }
	iv_ruleDmxBooleanLiteral=ruleDmxBooleanLiteral
	{ $current=$iv_ruleDmxBooleanLiteral.current; }
	EOF;

// Rule DmxBooleanLiteral
ruleDmxBooleanLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDmxBooleanLiteralAccess().getDmxBooleanLiteralAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_value_1_0='TRUE'
					{
						newLeafNode(lv_value_1_0, grammarAccess.getDmxBooleanLiteralAccess().getValueTRUEKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDmxBooleanLiteralRule());
						}
						setWithLastConsumed($current, "value", true, "TRUE");
					}
				)
			)
			    |
			(
				(
					lv_value_2_0='true'
					{
						newLeafNode(lv_value_2_0, grammarAccess.getDmxBooleanLiteralAccess().getValueTrueKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDmxBooleanLiteralRule());
						}
						setWithLastConsumed($current, "value", true, "true");
					}
				)
			)
			    |
			otherlv_3='FALSE'
			{
				newLeafNode(otherlv_3, grammarAccess.getDmxBooleanLiteralAccess().getFALSEKeyword_1_2());
			}
			    |
			otherlv_4='false'
			{
				newLeafNode(otherlv_4, grammarAccess.getDmxBooleanLiteralAccess().getFalseKeyword_1_3());
			}
		)
	)
;

// Entry rule entryRuleDmxNaturalLiteral
entryRuleDmxNaturalLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDmxNaturalLiteralRule()); }
	iv_ruleDmxNaturalLiteral=ruleDmxNaturalLiteral
	{ $current=$iv_ruleDmxNaturalLiteral.current; }
	EOF;

// Rule DmxNaturalLiteral
ruleDmxNaturalLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDmxNaturalLiteralAccess().getDmxNaturalLiteralAction_0(),
					$current);
			}
		)
		(
			(
				lv_value_1_0=RULE_NATURAL
				{
					newLeafNode(lv_value_1_0, grammarAccess.getDmxNaturalLiteralAccess().getValueNATURALTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDmxNaturalLiteralRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_1_0,
						"com.mimacom.ddd.dm.dmx.Dmx.NATURAL");
				}
			)
		)
	)
;

// Entry rule entryRuleDmxDecimalLiteral
entryRuleDmxDecimalLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDmxDecimalLiteralRule()); }
	iv_ruleDmxDecimalLiteral=ruleDmxDecimalLiteral
	{ $current=$iv_ruleDmxDecimalLiteral.current; }
	EOF;

// Rule DmxDecimalLiteral
ruleDmxDecimalLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDmxDecimalLiteralAccess().getDmxDecimalLiteralAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDmxDecimalLiteralAccess().getValueDECIMALParserRuleCall_1_0());
				}
				lv_value_1_0=ruleDECIMAL
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDmxDecimalLiteralRule());
					}
					set(
						$current,
						"value",
						lv_value_1_0,
						"com.mimacom.ddd.dm.dmx.Dmx.DECIMAL");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDmxStringLiteral
entryRuleDmxStringLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDmxStringLiteralRule()); }
	iv_ruleDmxStringLiteral=ruleDmxStringLiteral
	{ $current=$iv_ruleDmxStringLiteral.current; }
	EOF;

// Rule DmxStringLiteral
ruleDmxStringLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDmxStringLiteralAccess().getDmxStringLiteralAction_0(),
					$current);
			}
		)
		(
			(
				lv_value_1_0=RULE_STRING
				{
					newLeafNode(lv_value_1_0, grammarAccess.getDmxStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDmxStringLiteralRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_1_0,
						"com.mimacom.ddd.dm.dmx.Dmx.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleDmxUndefinedLiteral
entryRuleDmxUndefinedLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDmxUndefinedLiteralRule()); }
	iv_ruleDmxUndefinedLiteral=ruleDmxUndefinedLiteral
	{ $current=$iv_ruleDmxUndefinedLiteral.current; }
	EOF;

// Rule DmxUndefinedLiteral
ruleDmxUndefinedLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDmxUndefinedLiteralAccess().getDmxUndefinedLiteralAction_0(),
					$current);
			}
		)
		(
			otherlv_1='UNDEFINED'
			{
				newLeafNode(otherlv_1, grammarAccess.getDmxUndefinedLiteralAccess().getUNDEFINEDKeyword_1_0());
			}
			    |
			otherlv_2='undefined'
			{
				newLeafNode(otherlv_2, grammarAccess.getDmxUndefinedLiteralAccess().getUndefinedKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuleDECIMAL
entryRuleDECIMAL returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDECIMALRule()); }
	iv_ruleDECIMAL=ruleDECIMAL
	{ $current=$iv_ruleDECIMAL.current.getText(); }
	EOF;

// Rule DECIMAL
ruleDECIMAL returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_NATURAL_0=RULE_NATURAL
		{
			$current.merge(this_NATURAL_0);
		}
		{
			newLeafNode(this_NATURAL_0, grammarAccess.getDECIMALAccess().getNATURALTerminalRuleCall_0());
		}
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDECIMALAccess().getFullStopKeyword_1());
		}
		this_NATURAL_2=RULE_NATURAL
		{
			$current.merge(this_NATURAL_2);
		}
		{
			newLeafNode(this_NATURAL_2, grammarAccess.getDECIMALAccess().getNATURALTerminalRuleCall_2());
		}
		(
			(
				kw='E'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getDECIMALAccess().getEKeyword_3_0_0());
				}
				    |
				kw='e'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getDECIMALAccess().getEKeyword_3_0_1());
				}
			)
			(
				kw='+'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getDECIMALAccess().getPlusSignKeyword_3_1_0());
				}
				    |
				kw='-'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getDECIMALAccess().getHyphenMinusKeyword_3_1_1());
				}
			)?
			this_NATURAL_7=RULE_NATURAL
			{
				$current.merge(this_NATURAL_7);
			}
			{
				newLeafNode(this_NATURAL_7, grammarAccess.getDECIMALAccess().getNATURALTerminalRuleCall_3_2());
			}
		)?
	)
;

// Entry rule entryRuleDomFieldListStartSymbol
entryRuleDomFieldListStartSymbol returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDomFieldListStartSymbolRule()); }
	iv_ruleDomFieldListStartSymbol=ruleDomFieldListStartSymbol
	{ $current=$iv_ruleDomFieldListStartSymbol.current.getText(); }
	EOF;

// Rule DomFieldListStartSymbol
ruleDomFieldListStartSymbol returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='{'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getDomFieldListStartSymbolAccess().getLeftCurlyBracketKeyword());
	}
;

// Entry rule entryRuleDQualifiedNameWithWildcard
entryRuleDQualifiedNameWithWildcard returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDQualifiedNameWithWildcardRule()); }
	iv_ruleDQualifiedNameWithWildcard=ruleDQualifiedNameWithWildcard
	{ $current=$iv_ruleDQualifiedNameWithWildcard.current.getText(); }
	EOF;

// Rule DQualifiedNameWithWildcard
ruleDQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDQualifiedNameWithWildcardAccess().getDQualifiedNameParserRuleCall_0());
		}
		this_DQualifiedName_0=ruleDQualifiedName
		{
			$current.merge(this_DQualifiedName_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			kw='.*'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getDQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1());
			}
		)?
	)
;

// Entry rule entryRuleDQualifiedName
entryRuleDQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDQualifiedNameRule()); }
	iv_ruleDQualifiedName=ruleDQualifiedName
	{ $current=$iv_ruleDQualifiedName.current.getText(); }
	EOF;

// Rule DQualifiedName
ruleDQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getDQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getDQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getDQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Rule STypeModelKind
ruleSTypeModelKind returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='base'
		{
			$current = grammarAccess.getSTypeModelKindAccess().getBASEEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getSTypeModelKindAccess().getBASEEnumLiteralDeclaration());
		}
	)
;

// Rule SystemInformationModelKind
ruleSystemInformationModelKind returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='interface'
			{
				$current = grammarAccess.getSystemInformationModelKindAccess().getINTERFACEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getSystemInformationModelKindAccess().getINTERFACEEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='core'
			{
				$current = grammarAccess.getSystemInformationModelKindAccess().getCOREEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getSystemInformationModelKindAccess().getCOREEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule SimAbstractType
ruleSimAbstractType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='nonabstract'
			{
				$current = grammarAccess.getSimAbstractTypeAccess().getFALSEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getSimAbstractTypeAccess().getFALSEEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='abstract'
			{
				$current = grammarAccess.getSimAbstractTypeAccess().getTRUEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getSimAbstractTypeAccess().getTRUEEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule SimRootEntity
ruleSimRootEntity returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='nonroot'
			{
				$current = grammarAccess.getSimRootEntityAccess().getFALSEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getSimRootEntityAccess().getFALSEEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='root'
			{
				$current = grammarAccess.getSimRootEntityAccess().getTRUEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getSimRootEntityAccess().getTRUEEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule SimDetailType
ruleSimDetailType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='detail'
		{
			$current = grammarAccess.getSimDetailTypeAccess().getTRUEEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getSimDetailTypeAccess().getTRUEEnumLiteralDeclaration());
		}
	)
;

// Rule SimEntityType
ruleSimEntityType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='entity'
		{
			$current = grammarAccess.getSimEntityTypeAccess().getFALSEEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getSimEntityTypeAccess().getFALSEEnumLiteralDeclaration());
		}
	)
;

// Rule DEntityNatureAutonomous
ruleDEntityNatureAutonomous returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='autonomous'
		{
			$current = grammarAccess.getDEntityNatureAutonomousAccess().getAUTONOMOUS_ENTITYEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getDEntityNatureAutonomousAccess().getAUTONOMOUS_ENTITYEnumLiteralDeclaration());
		}
	)
;

// Rule DEntityNatureRelationship
ruleDEntityNatureRelationship returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='relationship'
		{
			$current = grammarAccess.getDEntityNatureRelationshipAccess().getRELATIONSHIPEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getDEntityNatureRelationshipAccess().getRELATIONSHIPEnumLiteralDeclaration());
		}
	)
;

// Rule DAssociationKind
ruleDAssociationKind returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='references'
			{
				$current = grammarAccess.getDAssociationKindAccess().getREFERENCEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDAssociationKindAccess().getREFERENCEEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='contains'
			{
				$current = grammarAccess.getDAssociationKindAccess().getCOMPOSITEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDAssociationKindAccess().getCOMPOSITEEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule DAssociationKindInverse
ruleDAssociationKindInverse returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='inverse'
		{
			$current = grammarAccess.getDAssociationKindInverseAccess().getINVERSE_COMPOSITEEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getDAssociationKindInverseAccess().getINVERSE_COMPOSITEEnumLiteralDeclaration());
		}
	)
;

// Rule DmxBaseType
ruleDmxBaseType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='VOID'
			{
				$current = grammarAccess.getDmxBaseTypeAccess().getVOIDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDmxBaseTypeAccess().getVOIDEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='BOOLEAN'
			{
				$current = grammarAccess.getDmxBaseTypeAccess().getBOOLEANEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDmxBaseTypeAccess().getBOOLEANEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='NUMBER'
			{
				$current = grammarAccess.getDmxBaseTypeAccess().getNUMBEREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getDmxBaseTypeAccess().getNUMBEREnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='TEXT'
			{
				$current = grammarAccess.getDmxBaseTypeAccess().getTEXTEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getDmxBaseTypeAccess().getTEXTEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='IDENTIFIER'
			{
				$current = grammarAccess.getDmxBaseTypeAccess().getIDENTIFIEREnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getDmxBaseTypeAccess().getIDENTIFIEREnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='TIMEPOINT'
			{
				$current = grammarAccess.getDmxBaseTypeAccess().getTIMEPOINTEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getDmxBaseTypeAccess().getTIMEPOINTEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='STATE'
			{
				$current = grammarAccess.getDmxBaseTypeAccess().getSTATEEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getDmxBaseTypeAccess().getSTATEEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='STATE_EVENT'
			{
				$current = grammarAccess.getDmxBaseTypeAccess().getSTATE_EVENTEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getDmxBaseTypeAccess().getSTATE_EVENTEnumLiteralDeclaration_7());
			}
		)
		    |
		(
			enumLiteral_8='COMPLEX'
			{
				$current = grammarAccess.getDmxBaseTypeAccess().getCOMPLEXEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_8, grammarAccess.getDmxBaseTypeAccess().getCOMPLEXEnumLiteralDeclaration_8());
			}
		)
		    |
		(
			enumLiteral_9='NOTIFICATION'
			{
				$current = grammarAccess.getDmxBaseTypeAccess().getNOTIFICATIONEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_9, grammarAccess.getDmxBaseTypeAccess().getNOTIFICATIONEnumLiteralDeclaration_9());
			}
		)
		    |
		(
			enumLiteral_10='SERVICE'
			{
				$current = grammarAccess.getDmxBaseTypeAccess().getSERVICEEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_10, grammarAccess.getDmxBaseTypeAccess().getSERVICEEnumLiteralDeclaration_10());
			}
		)
	)
;

// Rule DmxOpOr
ruleDmxOpOr returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='OR'
			{
				$current = grammarAccess.getDmxOpOrAccess().getOREnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDmxOpOrAccess().getOREnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='or'
			{
				$current = grammarAccess.getDmxOpOrAccess().getOREnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDmxOpOrAccess().getOREnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='XOR'
			{
				$current = grammarAccess.getDmxOpOrAccess().getXOREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getDmxOpOrAccess().getXOREnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='xor'
			{
				$current = grammarAccess.getDmxOpOrAccess().getXOREnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getDmxOpOrAccess().getXOREnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule DmxOpAnd
ruleDmxOpAnd returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='AND'
			{
				$current = grammarAccess.getDmxOpAndAccess().getANDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDmxOpAndAccess().getANDEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='and'
			{
				$current = grammarAccess.getDmxOpAndAccess().getANDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDmxOpAndAccess().getANDEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule DmxOpEquality
ruleDmxOpEquality returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='='
			{
				$current = grammarAccess.getDmxOpEqualityAccess().getEQUALEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDmxOpEqualityAccess().getEQUALEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='!='
			{
				$current = grammarAccess.getDmxOpEqualityAccess().getNOT_EQUALEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDmxOpEqualityAccess().getNOT_EQUALEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='<>'
			{
				$current = grammarAccess.getDmxOpEqualityAccess().getNOT_EQUALEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getDmxOpEqualityAccess().getNOT_EQUALEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule OpCompare
ruleOpCompare returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='<'
			{
				$current = grammarAccess.getOpCompareAccess().getLESSEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getOpCompareAccess().getLESSEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='<='
			{
				$current = grammarAccess.getOpCompareAccess().getLESS_OR_EQUALEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getOpCompareAccess().getLESS_OR_EQUALEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='\u2264'
			{
				$current = grammarAccess.getOpCompareAccess().getLESS_OR_EQUALEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getOpCompareAccess().getLESS_OR_EQUALEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='>='
			{
				$current = grammarAccess.getOpCompareAccess().getGREATER_OR_EQUALEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getOpCompareAccess().getGREATER_OR_EQUALEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='\u2265'
			{
				$current = grammarAccess.getOpCompareAccess().getGREATER_OR_EQUALEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getOpCompareAccess().getGREATER_OR_EQUALEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='>'
			{
				$current = grammarAccess.getOpCompareAccess().getGREATEREnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getOpCompareAccess().getGREATEREnumLiteralDeclaration_5());
			}
		)
	)
;

// Rule OpOther
ruleOpOther returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='IN'
			{
				$current = grammarAccess.getOpOtherAccess().getINEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getOpOtherAccess().getINEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='in'
			{
				$current = grammarAccess.getOpOtherAccess().getINEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getOpOtherAccess().getINEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='..'
			{
				$current = grammarAccess.getOpOtherAccess().getUNTILEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getOpOtherAccess().getUNTILEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='->'
			{
				$current = grammarAccess.getOpOtherAccess().getSINGLE_ARROWEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getOpOtherAccess().getSINGLE_ARROWEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='=>'
			{
				$current = grammarAccess.getOpOtherAccess().getDOUBLE_ARROWEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getOpOtherAccess().getDOUBLE_ARROWEnumLiteralDeclaration_4());
			}
		)
	)
;

// Rule OpAdd
ruleOpAdd returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='+'
			{
				$current = grammarAccess.getOpAddAccess().getADDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getOpAddAccess().getADDEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='-'
			{
				$current = grammarAccess.getOpAddAccess().getSUBTRACTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getOpAddAccess().getSUBTRACTEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule OpMulti
ruleOpMulti returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='*'
			{
				$current = grammarAccess.getOpMultiAccess().getMULTIPLYEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getOpMultiAccess().getMULTIPLYEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='/'
			{
				$current = grammarAccess.getOpMultiAccess().getDIVIDEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getOpMultiAccess().getDIVIDEEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='**'
			{
				$current = grammarAccess.getOpMultiAccess().getPOWEREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getOpMultiAccess().getPOWEREnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='%'
			{
				$current = grammarAccess.getOpMultiAccess().getMODULOEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getOpMultiAccess().getMODULOEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule OpUnary
ruleOpUnary returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='+'
			{
				$current = grammarAccess.getOpUnaryAccess().getPLUSEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getOpUnaryAccess().getPLUSEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='-'
			{
				$current = grammarAccess.getOpUnaryAccess().getMINUSEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getOpUnaryAccess().getMINUSEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='!'
			{
				$current = grammarAccess.getOpUnaryAccess().getNOTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getOpUnaryAccess().getNOTEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='NOT'
			{
				$current = grammarAccess.getOpUnaryAccess().getNOTEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getOpUnaryAccess().getNOTEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='not'
			{
				$current = grammarAccess.getOpUnaryAccess().getNOTEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getOpUnaryAccess().getNOTEnumLiteralDeclaration_4());
			}
		)
	)
;

// Rule DMultiplicityShorthand
ruleDMultiplicityShorthand returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='?'
			{
				$current = grammarAccess.getDMultiplicityShorthandAccess().getZERO_OR_ONEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDMultiplicityShorthandAccess().getZERO_OR_ONEEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='+'
			{
				$current = grammarAccess.getDMultiplicityShorthandAccess().getONE_OR_MOREEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDMultiplicityShorthandAccess().getONE_OR_MOREEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='*'
			{
				$current = grammarAccess.getDMultiplicityShorthandAccess().getZERO_OR_MOREEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getDMultiplicityShorthandAccess().getZERO_OR_MOREEnumLiteralDeclaration_2());
			}
		)
	)
;

RULE_ID : '^'? (RULE_LETTER|'_') (RULE_LETTER|'_'|'0'..'9')*;

RULE_STRING : '"' ('\\' .|~(('\\'|'"')))* '"';

RULE_NATURAL : (('0'..'9')+|'\u221E');

fragment RULE_LETTER : ('a'..'z'|'A'..'Z'|'\u00C0'..'\u00D6'|'\u00D8'..'\u00F6'|'\u00F8'..'\u00FF');

fragment RULE_PLAIN_TEXT : ~(('\u00BB'|']'|'['));

RULE_PLAIN_TEXT_ONLY : '\u00AB' RULE_PLAIN_TEXT* '\u00BB';

RULE_RICH_TEXT_START : '\u00AB' RULE_PLAIN_TEXT* '[';

RULE_RICH_TEXT_MIDDLE : ']' RULE_PLAIN_TEXT* '[';

RULE_RICH_TEXT_END : ']' RULE_PLAIN_TEXT* '\u00BB';

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
