package com.mimacom.ddd.sm.sim.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.mimacom.ddd.sm.sim.services.SimGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalSimParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_ID", "RULE_PLAIN_TEXT_ONLY", "RULE_RICH_TEXT_START", "RULE_RICH_TEXT_MIDDLE", "RULE_RICH_TEXT_END", "RULE_NATURAL", "RULE_STRING", "RULE_LETTER", "RULE_PLAIN_TEXT", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'system'", "'type'", "'model'", "'information'", "'generate'", "'{'", "'}'", "'as'", "'and'", "'to'", "'extends'", "':'", "'grab'", "'aggregate'", "'add'", "'query'", "'primitive'", "'ditch'", "'enumeration'", "','", "'root'", "'entity'", "'morph'", "'fuse'", "'detail'", "'reference'", "'composite'", "'attribute'", "'('", "'*'", "')'", "'constraint'", "'alias'", "'redefines'", "'abstract'", "'main'", "'states'", "'events'", "'derived'", "'contains'", "'key'", "'returns'", "'import'", "'test'", "'context'", "':='", "'in'", "'archetype'", "'is'", "'filter'", "'with'", "'.'", "'@before'", "'|'", "'ISA'", "'isa'", "'AS'", "'='", "'['", "'#'", "']'", "'all'", "'if'", "'then'", "'else'", "'end'", "'..'", "'TRUE'", "'true'", "'FALSE'", "'false'", "'UNDEFINED'", "'undefined'", "'E'", "'e'", "'+'", "'-'", "'.*'", "'base'", "'interface'", "'core'", "'nonabstract'", "'nonroot'", "'autonomous'", "'relationship'", "'references'", "'inverse'", "'VOID'", "'BOOLEAN'", "'NUMBER'", "'TEXT'", "'IDENTIFIER'", "'TIMEPOINT'", "'STATE'", "'STATE_EVENT'", "'COMPLEX'", "'NOTIFICATION'", "'SERVICE'", "'OR'", "'or'", "'XOR'", "'xor'", "'AND'", "'!='", "'<>'", "'<'", "'<='", "'\\u2264'", "'>='", "'\\u2265'", "'>'", "'IN'", "'->'", "'=>'", "'/'", "'**'", "'%'", "'!'", "'NOT'", "'not'", "'?'"
    };
    public static final int T__50=50;
    public static final int RULE_PLAIN_TEXT_ONLY=5;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__137=137;
    public static final int T__52=52;
    public static final int T__136=136;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__133=133;
    public static final int T__132=132;
    public static final int T__60=60;
    public static final int T__135=135;
    public static final int T__61=61;
    public static final int T__134=134;
    public static final int RULE_ID=4;
    public static final int T__131=131;
    public static final int T__130=130;
    public static final int RULE_RICH_TEXT_START=6;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=13;
    public static final int T__67=67;
    public static final int T__129=129;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__126=126;
    public static final int T__63=63;
    public static final int T__125=125;
    public static final int T__64=64;
    public static final int T__128=128;
    public static final int T__65=65;
    public static final int T__127=127;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int RULE_LETTER=11;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__91=91;
    public static final int T__100=100;
    public static final int T__92=92;
    public static final int T__93=93;
    public static final int T__102=102;
    public static final int T__94=94;
    public static final int T__101=101;
    public static final int T__90=90;
    public static final int T__19=19;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__99=99;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int RULE_NATURAL=9;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int T__122=122;
    public static final int T__70=70;
    public static final int T__121=121;
    public static final int T__71=71;
    public static final int T__124=124;
    public static final int T__72=72;
    public static final int T__123=123;
    public static final int T__120=120;
    public static final int RULE_STRING=10;
    public static final int RULE_SL_COMMENT=14;
    public static final int T__77=77;
    public static final int T__119=119;
    public static final int T__78=78;
    public static final int T__118=118;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int T__115=115;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int T__114=114;
    public static final int T__75=75;
    public static final int T__117=117;
    public static final int T__76=76;
    public static final int T__116=116;
    public static final int T__80=80;
    public static final int T__111=111;
    public static final int RULE_PLAIN_TEXT=12;
    public static final int T__81=81;
    public static final int T__110=110;
    public static final int T__82=82;
    public static final int T__113=113;
    public static final int T__83=83;
    public static final int T__112=112;
    public static final int RULE_WS=15;
    public static final int RULE_RICH_TEXT_END=8;
    public static final int RULE_RICH_TEXT_MIDDLE=7;
    public static final int RULE_ANY_OTHER=16;
    public static final int T__88=88;
    public static final int T__108=108;
    public static final int T__89=89;
    public static final int T__107=107;
    public static final int T__109=109;
    public static final int T__84=84;
    public static final int T__104=104;
    public static final int T__85=85;
    public static final int T__103=103;
    public static final int T__86=86;
    public static final int T__106=106;
    public static final int T__87=87;
    public static final int T__105=105;

    // delegates
    // delegators


        public InternalSimParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalSimParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalSimParser.tokenNames; }
    public String getGrammarFileName() { return "InternalSim.g"; }



     	private SimGrammarAccess grammarAccess;

        public InternalSimParser(TokenStream input, SimGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "DNamespace";
       	}

       	@Override
       	protected SimGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleDNamespace"
    // InternalSim.g:65:1: entryRuleDNamespace returns [EObject current=null] : iv_ruleDNamespace= ruleDNamespace EOF ;
    public final EObject entryRuleDNamespace() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDNamespace = null;


        try {
            // InternalSim.g:65:51: (iv_ruleDNamespace= ruleDNamespace EOF )
            // InternalSim.g:66:2: iv_ruleDNamespace= ruleDNamespace EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDNamespaceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDNamespace=ruleDNamespace();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDNamespace; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDNamespace"


    // $ANTLR start "ruleDNamespace"
    // InternalSim.g:72:1: ruleDNamespace returns [EObject current=null] : (otherlv_0= 'system' ( (lv_name_1_0= ruleDQualifiedName ) ) ( (lv_imports_2_0= ruleDImport ) )* ( (lv_model_3_0= ruleSInformationModel ) ) ) ;
    public final EObject ruleDNamespace() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_imports_2_0 = null;

        EObject lv_model_3_0 = null;



        	enterRule();

        try {
            // InternalSim.g:78:2: ( (otherlv_0= 'system' ( (lv_name_1_0= ruleDQualifiedName ) ) ( (lv_imports_2_0= ruleDImport ) )* ( (lv_model_3_0= ruleSInformationModel ) ) ) )
            // InternalSim.g:79:2: (otherlv_0= 'system' ( (lv_name_1_0= ruleDQualifiedName ) ) ( (lv_imports_2_0= ruleDImport ) )* ( (lv_model_3_0= ruleSInformationModel ) ) )
            {
            // InternalSim.g:79:2: (otherlv_0= 'system' ( (lv_name_1_0= ruleDQualifiedName ) ) ( (lv_imports_2_0= ruleDImport ) )* ( (lv_model_3_0= ruleSInformationModel ) ) )
            // InternalSim.g:80:3: otherlv_0= 'system' ( (lv_name_1_0= ruleDQualifiedName ) ) ( (lv_imports_2_0= ruleDImport ) )* ( (lv_model_3_0= ruleSInformationModel ) )
            {
            otherlv_0=(Token)match(input,17,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDNamespaceAccess().getSystemKeyword_0());
              		
            }
            // InternalSim.g:84:3: ( (lv_name_1_0= ruleDQualifiedName ) )
            // InternalSim.g:85:4: (lv_name_1_0= ruleDQualifiedName )
            {
            // InternalSim.g:85:4: (lv_name_1_0= ruleDQualifiedName )
            // InternalSim.g:86:5: lv_name_1_0= ruleDQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDNamespaceAccess().getNameDQualifiedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_4);
            lv_name_1_0=ruleDQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDNamespaceRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.DQualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSim.g:103:3: ( (lv_imports_2_0= ruleDImport ) )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==59) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // InternalSim.g:104:4: (lv_imports_2_0= ruleDImport )
            	    {
            	    // InternalSim.g:104:4: (lv_imports_2_0= ruleDImport )
            	    // InternalSim.g:105:5: lv_imports_2_0= ruleDImport
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getDNamespaceAccess().getImportsDImportParserRuleCall_2_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_4);
            	    lv_imports_2_0=ruleDImport();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getDNamespaceRule());
            	      					}
            	      					add(
            	      						current,
            	      						"imports",
            	      						lv_imports_2_0,
            	      						"com.mimacom.ddd.dm.dmx.Dmx.DImport");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            // InternalSim.g:122:3: ( (lv_model_3_0= ruleSInformationModel ) )
            // InternalSim.g:123:4: (lv_model_3_0= ruleSInformationModel )
            {
            // InternalSim.g:123:4: (lv_model_3_0= ruleSInformationModel )
            // InternalSim.g:124:5: lv_model_3_0= ruleSInformationModel
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDNamespaceAccess().getModelSInformationModelParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_model_3_0=ruleSInformationModel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDNamespaceRule());
              					}
              					set(
              						current,
              						"model",
              						lv_model_3_0,
              						"com.mimacom.ddd.sm.sim.Sim.SInformationModel");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDNamespace"


    // $ANTLR start "entryRuleSInformationModel"
    // InternalSim.g:145:1: entryRuleSInformationModel returns [EObject current=null] : iv_ruleSInformationModel= ruleSInformationModel EOF ;
    public final EObject entryRuleSInformationModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSInformationModel = null;


        try {
            // InternalSim.g:145:58: (iv_ruleSInformationModel= ruleSInformationModel EOF )
            // InternalSim.g:146:2: iv_ruleSInformationModel= ruleSInformationModel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSInformationModelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSInformationModel=ruleSInformationModel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSInformationModel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSInformationModel"


    // $ANTLR start "ruleSInformationModel"
    // InternalSim.g:152:1: ruleSInformationModel returns [EObject current=null] : ( ( ( ( (lv_kind_0_0= ruleSTypeModelKind ) ) otherlv_1= 'type' otherlv_2= 'model' ) | ( ( (lv_kind_3_0= ruleSInformationModelKind ) ) otherlv_4= 'information' otherlv_5= 'model' ) ) ( (lv_name_6_0= RULE_ID ) ) ( (lv_generate_7_0= 'generate' ) )? ( (lv_description_8_0= ruleDRichText ) )? otherlv_9= '{' ( ( (lv_types_10_0= ruleSimType ) ) | ( (lv_aggregates_11_0= ruleSimAggregate ) ) )* otherlv_12= '}' ) ;
    public final EObject ruleSInformationModel() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_name_6_0=null;
        Token lv_generate_7_0=null;
        Token otherlv_9=null;
        Token otherlv_12=null;
        Enumerator lv_kind_0_0 = null;

        Enumerator lv_kind_3_0 = null;

        EObject lv_description_8_0 = null;

        EObject lv_types_10_0 = null;

        EObject lv_aggregates_11_0 = null;



        	enterRule();

        try {
            // InternalSim.g:158:2: ( ( ( ( ( (lv_kind_0_0= ruleSTypeModelKind ) ) otherlv_1= 'type' otherlv_2= 'model' ) | ( ( (lv_kind_3_0= ruleSInformationModelKind ) ) otherlv_4= 'information' otherlv_5= 'model' ) ) ( (lv_name_6_0= RULE_ID ) ) ( (lv_generate_7_0= 'generate' ) )? ( (lv_description_8_0= ruleDRichText ) )? otherlv_9= '{' ( ( (lv_types_10_0= ruleSimType ) ) | ( (lv_aggregates_11_0= ruleSimAggregate ) ) )* otherlv_12= '}' ) )
            // InternalSim.g:159:2: ( ( ( ( (lv_kind_0_0= ruleSTypeModelKind ) ) otherlv_1= 'type' otherlv_2= 'model' ) | ( ( (lv_kind_3_0= ruleSInformationModelKind ) ) otherlv_4= 'information' otherlv_5= 'model' ) ) ( (lv_name_6_0= RULE_ID ) ) ( (lv_generate_7_0= 'generate' ) )? ( (lv_description_8_0= ruleDRichText ) )? otherlv_9= '{' ( ( (lv_types_10_0= ruleSimType ) ) | ( (lv_aggregates_11_0= ruleSimAggregate ) ) )* otherlv_12= '}' )
            {
            // InternalSim.g:159:2: ( ( ( ( (lv_kind_0_0= ruleSTypeModelKind ) ) otherlv_1= 'type' otherlv_2= 'model' ) | ( ( (lv_kind_3_0= ruleSInformationModelKind ) ) otherlv_4= 'information' otherlv_5= 'model' ) ) ( (lv_name_6_0= RULE_ID ) ) ( (lv_generate_7_0= 'generate' ) )? ( (lv_description_8_0= ruleDRichText ) )? otherlv_9= '{' ( ( (lv_types_10_0= ruleSimType ) ) | ( (lv_aggregates_11_0= ruleSimAggregate ) ) )* otherlv_12= '}' )
            // InternalSim.g:160:3: ( ( ( (lv_kind_0_0= ruleSTypeModelKind ) ) otherlv_1= 'type' otherlv_2= 'model' ) | ( ( (lv_kind_3_0= ruleSInformationModelKind ) ) otherlv_4= 'information' otherlv_5= 'model' ) ) ( (lv_name_6_0= RULE_ID ) ) ( (lv_generate_7_0= 'generate' ) )? ( (lv_description_8_0= ruleDRichText ) )? otherlv_9= '{' ( ( (lv_types_10_0= ruleSimType ) ) | ( (lv_aggregates_11_0= ruleSimAggregate ) ) )* otherlv_12= '}'
            {
            // InternalSim.g:160:3: ( ( ( (lv_kind_0_0= ruleSTypeModelKind ) ) otherlv_1= 'type' otherlv_2= 'model' ) | ( ( (lv_kind_3_0= ruleSInformationModelKind ) ) otherlv_4= 'information' otherlv_5= 'model' ) )
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==95) ) {
                alt2=1;
            }
            else if ( ((LA2_0>=96 && LA2_0<=97)) ) {
                alt2=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 2, 0, input);

                throw nvae;
            }
            switch (alt2) {
                case 1 :
                    // InternalSim.g:161:4: ( ( (lv_kind_0_0= ruleSTypeModelKind ) ) otherlv_1= 'type' otherlv_2= 'model' )
                    {
                    // InternalSim.g:161:4: ( ( (lv_kind_0_0= ruleSTypeModelKind ) ) otherlv_1= 'type' otherlv_2= 'model' )
                    // InternalSim.g:162:5: ( (lv_kind_0_0= ruleSTypeModelKind ) ) otherlv_1= 'type' otherlv_2= 'model'
                    {
                    // InternalSim.g:162:5: ( (lv_kind_0_0= ruleSTypeModelKind ) )
                    // InternalSim.g:163:6: (lv_kind_0_0= ruleSTypeModelKind )
                    {
                    // InternalSim.g:163:6: (lv_kind_0_0= ruleSTypeModelKind )
                    // InternalSim.g:164:7: lv_kind_0_0= ruleSTypeModelKind
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSInformationModelAccess().getKindSTypeModelKindEnumRuleCall_0_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_5);
                    lv_kind_0_0=ruleSTypeModelKind();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSInformationModelRule());
                      							}
                      							set(
                      								current,
                      								"kind",
                      								lv_kind_0_0,
                      								"com.mimacom.ddd.sm.sim.Sim.STypeModelKind");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,18,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getSInformationModelAccess().getTypeKeyword_0_0_1());
                      				
                    }
                    otherlv_2=(Token)match(input,19,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getSInformationModelAccess().getModelKeyword_0_0_2());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:191:4: ( ( (lv_kind_3_0= ruleSInformationModelKind ) ) otherlv_4= 'information' otherlv_5= 'model' )
                    {
                    // InternalSim.g:191:4: ( ( (lv_kind_3_0= ruleSInformationModelKind ) ) otherlv_4= 'information' otherlv_5= 'model' )
                    // InternalSim.g:192:5: ( (lv_kind_3_0= ruleSInformationModelKind ) ) otherlv_4= 'information' otherlv_5= 'model'
                    {
                    // InternalSim.g:192:5: ( (lv_kind_3_0= ruleSInformationModelKind ) )
                    // InternalSim.g:193:6: (lv_kind_3_0= ruleSInformationModelKind )
                    {
                    // InternalSim.g:193:6: (lv_kind_3_0= ruleSInformationModelKind )
                    // InternalSim.g:194:7: lv_kind_3_0= ruleSInformationModelKind
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSInformationModelAccess().getKindSInformationModelKindEnumRuleCall_0_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_7);
                    lv_kind_3_0=ruleSInformationModelKind();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSInformationModelRule());
                      							}
                      							set(
                      								current,
                      								"kind",
                      								lv_kind_3_0,
                      								"com.mimacom.ddd.sm.sim.Sim.SInformationModelKind");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,20,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getSInformationModelAccess().getInformationKeyword_0_1_1());
                      				
                    }
                    otherlv_5=(Token)match(input,19,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getSInformationModelAccess().getModelKeyword_0_1_2());
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:221:3: ( (lv_name_6_0= RULE_ID ) )
            // InternalSim.g:222:4: (lv_name_6_0= RULE_ID )
            {
            // InternalSim.g:222:4: (lv_name_6_0= RULE_ID )
            // InternalSim.g:223:5: lv_name_6_0= RULE_ID
            {
            lv_name_6_0=(Token)match(input,RULE_ID,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_6_0, grammarAccess.getSInformationModelAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSInformationModelRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_6_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.ID");
              				
            }

            }


            }

            // InternalSim.g:239:3: ( (lv_generate_7_0= 'generate' ) )?
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==21) ) {
                alt3=1;
            }
            switch (alt3) {
                case 1 :
                    // InternalSim.g:240:4: (lv_generate_7_0= 'generate' )
                    {
                    // InternalSim.g:240:4: (lv_generate_7_0= 'generate' )
                    // InternalSim.g:241:5: lv_generate_7_0= 'generate'
                    {
                    lv_generate_7_0=(Token)match(input,21,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_generate_7_0, grammarAccess.getSInformationModelAccess().getGenerateGenerateKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSInformationModelRule());
                      					}
                      					setWithLastConsumed(current, "generate", true, "generate");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:253:3: ( (lv_description_8_0= ruleDRichText ) )?
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( ((LA4_0>=RULE_PLAIN_TEXT_ONLY && LA4_0<=RULE_RICH_TEXT_START)) ) {
                alt4=1;
            }
            switch (alt4) {
                case 1 :
                    // InternalSim.g:254:4: (lv_description_8_0= ruleDRichText )
                    {
                    // InternalSim.g:254:4: (lv_description_8_0= ruleDRichText )
                    // InternalSim.g:255:5: lv_description_8_0= ruleDRichText
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSInformationModelAccess().getDescriptionDRichTextParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_10);
                    lv_description_8_0=ruleDRichText();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSInformationModelRule());
                      					}
                      					set(
                      						current,
                      						"description",
                      						lv_description_8_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_9=(Token)match(input,22,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getSInformationModelAccess().getLeftCurlyBracketKeyword_4());
              		
            }
            // InternalSim.g:276:3: ( ( (lv_types_10_0= ruleSimType ) ) | ( (lv_aggregates_11_0= ruleSimAggregate ) ) )*
            loop5:
            do {
                int alt5=3;
                switch ( input.LA(1) ) {
                case 29:
                    {
                    int LA5_2 = input.LA(2);

                    if ( (LA5_2==30) ) {
                        alt5=2;
                    }
                    else if ( (LA5_2==33||LA5_2==35||(LA5_2>=37 && LA5_2<=38)||LA5_2==41) ) {
                        alt5=1;
                    }


                    }
                    break;
                case 31:
                case 34:
                case 39:
                case 40:
                    {
                    alt5=1;
                    }
                    break;
                case 30:
                    {
                    alt5=2;
                    }
                    break;

                }

                switch (alt5) {
            	case 1 :
            	    // InternalSim.g:277:4: ( (lv_types_10_0= ruleSimType ) )
            	    {
            	    // InternalSim.g:277:4: ( (lv_types_10_0= ruleSimType ) )
            	    // InternalSim.g:278:5: (lv_types_10_0= ruleSimType )
            	    {
            	    // InternalSim.g:278:5: (lv_types_10_0= ruleSimType )
            	    // InternalSim.g:279:6: lv_types_10_0= ruleSimType
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getSInformationModelAccess().getTypesSimTypeParserRuleCall_5_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_types_10_0=ruleSimType();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getSInformationModelRule());
            	      						}
            	      						add(
            	      							current,
            	      							"types",
            	      							lv_types_10_0,
            	      							"com.mimacom.ddd.sm.sim.Sim.SimType");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalSim.g:297:4: ( (lv_aggregates_11_0= ruleSimAggregate ) )
            	    {
            	    // InternalSim.g:297:4: ( (lv_aggregates_11_0= ruleSimAggregate ) )
            	    // InternalSim.g:298:5: (lv_aggregates_11_0= ruleSimAggregate )
            	    {
            	    // InternalSim.g:298:5: (lv_aggregates_11_0= ruleSimAggregate )
            	    // InternalSim.g:299:6: lv_aggregates_11_0= ruleSimAggregate
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getSInformationModelAccess().getAggregatesSimAggregateParserRuleCall_5_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_aggregates_11_0=ruleSimAggregate();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getSInformationModelRule());
            	      						}
            	      						add(
            	      							current,
            	      							"aggregates",
            	      							lv_aggregates_11_0,
            	      							"com.mimacom.ddd.sm.sim.Sim.SimAggregate");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop5;
                }
            } while (true);

            otherlv_12=(Token)match(input,23,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getSInformationModelAccess().getRightCurlyBracketKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSInformationModel"


    // $ANTLR start "entryRuleSimGrabAggregateRule"
    // InternalSim.g:325:1: entryRuleSimGrabAggregateRule returns [EObject current=null] : iv_ruleSimGrabAggregateRule= ruleSimGrabAggregateRule EOF ;
    public final EObject entryRuleSimGrabAggregateRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimGrabAggregateRule = null;


        try {
            // InternalSim.g:325:61: (iv_ruleSimGrabAggregateRule= ruleSimGrabAggregateRule EOF )
            // InternalSim.g:326:2: iv_ruleSimGrabAggregateRule= ruleSimGrabAggregateRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimGrabAggregateRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimGrabAggregateRule=ruleSimGrabAggregateRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimGrabAggregateRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimGrabAggregateRule"


    // $ANTLR start "ruleSimGrabAggregateRule"
    // InternalSim.g:332:1: ruleSimGrabAggregateRule returns [EObject current=null] : ( ( ( ruleDQualifiedName ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? ) ;
    public final EObject ruleSimGrabAggregateRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_renameTo_2_0=null;


        	enterRule();

        try {
            // InternalSim.g:338:2: ( ( ( ( ruleDQualifiedName ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? ) )
            // InternalSim.g:339:2: ( ( ( ruleDQualifiedName ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? )
            {
            // InternalSim.g:339:2: ( ( ( ruleDQualifiedName ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? )
            // InternalSim.g:340:3: ( ( ruleDQualifiedName ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )?
            {
            // InternalSim.g:340:3: ( ( ruleDQualifiedName ) )
            // InternalSim.g:341:4: ( ruleDQualifiedName )
            {
            // InternalSim.g:341:4: ( ruleDQualifiedName )
            // InternalSim.g:342:5: ruleDQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSimGrabAggregateRuleRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSimGrabAggregateRuleAccess().getSourceDAggregateCrossReference_0_0());
              				
            }
            pushFollow(FOLLOW_12);
            ruleDQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSim.g:356:3: (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )?
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==24) ) {
                alt6=1;
            }
            switch (alt6) {
                case 1 :
                    // InternalSim.g:357:4: otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) )
                    {
                    otherlv_1=(Token)match(input,24,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSimGrabAggregateRuleAccess().getAsKeyword_1_0());
                      			
                    }
                    // InternalSim.g:361:4: ( (lv_renameTo_2_0= RULE_ID ) )
                    // InternalSim.g:362:5: (lv_renameTo_2_0= RULE_ID )
                    {
                    // InternalSim.g:362:5: (lv_renameTo_2_0= RULE_ID )
                    // InternalSim.g:363:6: lv_renameTo_2_0= RULE_ID
                    {
                    lv_renameTo_2_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_renameTo_2_0, grammarAccess.getSimGrabAggregateRuleAccess().getRenameToIDTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSimGrabAggregateRuleRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"renameTo",
                      							lv_renameTo_2_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.ID");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimGrabAggregateRule"


    // $ANTLR start "entryRuleSimGrabPrimitiveRule"
    // InternalSim.g:384:1: entryRuleSimGrabPrimitiveRule returns [EObject current=null] : iv_ruleSimGrabPrimitiveRule= ruleSimGrabPrimitiveRule EOF ;
    public final EObject entryRuleSimGrabPrimitiveRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimGrabPrimitiveRule = null;


        try {
            // InternalSim.g:384:61: (iv_ruleSimGrabPrimitiveRule= ruleSimGrabPrimitiveRule EOF )
            // InternalSim.g:385:2: iv_ruleSimGrabPrimitiveRule= ruleSimGrabPrimitiveRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimGrabPrimitiveRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimGrabPrimitiveRule=ruleSimGrabPrimitiveRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimGrabPrimitiveRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimGrabPrimitiveRule"


    // $ANTLR start "ruleSimGrabPrimitiveRule"
    // InternalSim.g:391:1: ruleSimGrabPrimitiveRule returns [EObject current=null] : ( ( ( ruleDQualifiedName ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? ) ;
    public final EObject ruleSimGrabPrimitiveRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_renameTo_2_0=null;


        	enterRule();

        try {
            // InternalSim.g:397:2: ( ( ( ( ruleDQualifiedName ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? ) )
            // InternalSim.g:398:2: ( ( ( ruleDQualifiedName ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? )
            {
            // InternalSim.g:398:2: ( ( ( ruleDQualifiedName ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? )
            // InternalSim.g:399:3: ( ( ruleDQualifiedName ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )?
            {
            // InternalSim.g:399:3: ( ( ruleDQualifiedName ) )
            // InternalSim.g:400:4: ( ruleDQualifiedName )
            {
            // InternalSim.g:400:4: ( ruleDQualifiedName )
            // InternalSim.g:401:5: ruleDQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSimGrabPrimitiveRuleRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSimGrabPrimitiveRuleAccess().getSourceDPrimitiveCrossReference_0_0());
              				
            }
            pushFollow(FOLLOW_12);
            ruleDQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSim.g:415:3: (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )?
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==24) ) {
                alt7=1;
            }
            switch (alt7) {
                case 1 :
                    // InternalSim.g:416:4: otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) )
                    {
                    otherlv_1=(Token)match(input,24,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSimGrabPrimitiveRuleAccess().getAsKeyword_1_0());
                      			
                    }
                    // InternalSim.g:420:4: ( (lv_renameTo_2_0= RULE_ID ) )
                    // InternalSim.g:421:5: (lv_renameTo_2_0= RULE_ID )
                    {
                    // InternalSim.g:421:5: (lv_renameTo_2_0= RULE_ID )
                    // InternalSim.g:422:6: lv_renameTo_2_0= RULE_ID
                    {
                    lv_renameTo_2_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_renameTo_2_0, grammarAccess.getSimGrabPrimitiveRuleAccess().getRenameToIDTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSimGrabPrimitiveRuleRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"renameTo",
                      							lv_renameTo_2_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.ID");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimGrabPrimitiveRule"


    // $ANTLR start "entryRuleSimDitchPrimitiveRule"
    // InternalSim.g:443:1: entryRuleSimDitchPrimitiveRule returns [EObject current=null] : iv_ruleSimDitchPrimitiveRule= ruleSimDitchPrimitiveRule EOF ;
    public final EObject entryRuleSimDitchPrimitiveRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimDitchPrimitiveRule = null;


        try {
            // InternalSim.g:443:62: (iv_ruleSimDitchPrimitiveRule= ruleSimDitchPrimitiveRule EOF )
            // InternalSim.g:444:2: iv_ruleSimDitchPrimitiveRule= ruleSimDitchPrimitiveRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimDitchPrimitiveRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimDitchPrimitiveRule=ruleSimDitchPrimitiveRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimDitchPrimitiveRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimDitchPrimitiveRule"


    // $ANTLR start "ruleSimDitchPrimitiveRule"
    // InternalSim.g:450:1: ruleSimDitchPrimitiveRule returns [EObject current=null] : ( ( ruleDQualifiedName ) ) ;
    public final EObject ruleSimDitchPrimitiveRule() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
            // InternalSim.g:456:2: ( ( ( ruleDQualifiedName ) ) )
            // InternalSim.g:457:2: ( ( ruleDQualifiedName ) )
            {
            // InternalSim.g:457:2: ( ( ruleDQualifiedName ) )
            // InternalSim.g:458:3: ( ruleDQualifiedName )
            {
            // InternalSim.g:458:3: ( ruleDQualifiedName )
            // InternalSim.g:459:4: ruleDQualifiedName
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getSimDitchPrimitiveRuleRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getSimDitchPrimitiveRuleAccess().getSourceDPrimitiveCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleDQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimDitchPrimitiveRule"


    // $ANTLR start "entryRuleSimGrabEnumerationRule"
    // InternalSim.g:476:1: entryRuleSimGrabEnumerationRule returns [EObject current=null] : iv_ruleSimGrabEnumerationRule= ruleSimGrabEnumerationRule EOF ;
    public final EObject entryRuleSimGrabEnumerationRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimGrabEnumerationRule = null;


        try {
            // InternalSim.g:476:63: (iv_ruleSimGrabEnumerationRule= ruleSimGrabEnumerationRule EOF )
            // InternalSim.g:477:2: iv_ruleSimGrabEnumerationRule= ruleSimGrabEnumerationRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimGrabEnumerationRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimGrabEnumerationRule=ruleSimGrabEnumerationRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimGrabEnumerationRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimGrabEnumerationRule"


    // $ANTLR start "ruleSimGrabEnumerationRule"
    // InternalSim.g:483:1: ruleSimGrabEnumerationRule returns [EObject current=null] : ( ( ( ruleDQualifiedName ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? ) ;
    public final EObject ruleSimGrabEnumerationRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_renameTo_2_0=null;


        	enterRule();

        try {
            // InternalSim.g:489:2: ( ( ( ( ruleDQualifiedName ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? ) )
            // InternalSim.g:490:2: ( ( ( ruleDQualifiedName ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? )
            {
            // InternalSim.g:490:2: ( ( ( ruleDQualifiedName ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? )
            // InternalSim.g:491:3: ( ( ruleDQualifiedName ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )?
            {
            // InternalSim.g:491:3: ( ( ruleDQualifiedName ) )
            // InternalSim.g:492:4: ( ruleDQualifiedName )
            {
            // InternalSim.g:492:4: ( ruleDQualifiedName )
            // InternalSim.g:493:5: ruleDQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSimGrabEnumerationRuleRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSimGrabEnumerationRuleAccess().getSourceDEnumerationCrossReference_0_0());
              				
            }
            pushFollow(FOLLOW_12);
            ruleDQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSim.g:507:3: (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )?
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==24) ) {
                alt8=1;
            }
            switch (alt8) {
                case 1 :
                    // InternalSim.g:508:4: otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) )
                    {
                    otherlv_1=(Token)match(input,24,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSimGrabEnumerationRuleAccess().getAsKeyword_1_0());
                      			
                    }
                    // InternalSim.g:512:4: ( (lv_renameTo_2_0= RULE_ID ) )
                    // InternalSim.g:513:5: (lv_renameTo_2_0= RULE_ID )
                    {
                    // InternalSim.g:513:5: (lv_renameTo_2_0= RULE_ID )
                    // InternalSim.g:514:6: lv_renameTo_2_0= RULE_ID
                    {
                    lv_renameTo_2_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_renameTo_2_0, grammarAccess.getSimGrabEnumerationRuleAccess().getRenameToIDTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSimGrabEnumerationRuleRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"renameTo",
                      							lv_renameTo_2_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.ID");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimGrabEnumerationRule"


    // $ANTLR start "entryRuleSimDitchEnumerationRule"
    // InternalSim.g:535:1: entryRuleSimDitchEnumerationRule returns [EObject current=null] : iv_ruleSimDitchEnumerationRule= ruleSimDitchEnumerationRule EOF ;
    public final EObject entryRuleSimDitchEnumerationRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimDitchEnumerationRule = null;


        try {
            // InternalSim.g:535:64: (iv_ruleSimDitchEnumerationRule= ruleSimDitchEnumerationRule EOF )
            // InternalSim.g:536:2: iv_ruleSimDitchEnumerationRule= ruleSimDitchEnumerationRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimDitchEnumerationRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimDitchEnumerationRule=ruleSimDitchEnumerationRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimDitchEnumerationRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimDitchEnumerationRule"


    // $ANTLR start "ruleSimDitchEnumerationRule"
    // InternalSim.g:542:1: ruleSimDitchEnumerationRule returns [EObject current=null] : ( ( ruleDQualifiedName ) ) ;
    public final EObject ruleSimDitchEnumerationRule() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
            // InternalSim.g:548:2: ( ( ( ruleDQualifiedName ) ) )
            // InternalSim.g:549:2: ( ( ruleDQualifiedName ) )
            {
            // InternalSim.g:549:2: ( ( ruleDQualifiedName ) )
            // InternalSim.g:550:3: ( ruleDQualifiedName )
            {
            // InternalSim.g:550:3: ( ruleDQualifiedName )
            // InternalSim.g:551:4: ruleDQualifiedName
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getSimDitchEnumerationRuleRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getSimDitchEnumerationRuleAccess().getSourceDEnumerationCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleDQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimDitchEnumerationRule"


    // $ANTLR start "entryRuleSimGrabEnumerationLiteralRule"
    // InternalSim.g:568:1: entryRuleSimGrabEnumerationLiteralRule returns [EObject current=null] : iv_ruleSimGrabEnumerationLiteralRule= ruleSimGrabEnumerationLiteralRule EOF ;
    public final EObject entryRuleSimGrabEnumerationLiteralRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimGrabEnumerationLiteralRule = null;


        try {
            // InternalSim.g:568:70: (iv_ruleSimGrabEnumerationLiteralRule= ruleSimGrabEnumerationLiteralRule EOF )
            // InternalSim.g:569:2: iv_ruleSimGrabEnumerationLiteralRule= ruleSimGrabEnumerationLiteralRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimGrabEnumerationLiteralRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimGrabEnumerationLiteralRule=ruleSimGrabEnumerationLiteralRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimGrabEnumerationLiteralRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimGrabEnumerationLiteralRule"


    // $ANTLR start "ruleSimGrabEnumerationLiteralRule"
    // InternalSim.g:575:1: ruleSimGrabEnumerationLiteralRule returns [EObject current=null] : ( ( (otherlv_0= RULE_ID ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? ) ;
    public final EObject ruleSimGrabEnumerationLiteralRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_renameTo_2_0=null;


        	enterRule();

        try {
            // InternalSim.g:581:2: ( ( ( (otherlv_0= RULE_ID ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? ) )
            // InternalSim.g:582:2: ( ( (otherlv_0= RULE_ID ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? )
            {
            // InternalSim.g:582:2: ( ( (otherlv_0= RULE_ID ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? )
            // InternalSim.g:583:3: ( (otherlv_0= RULE_ID ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )?
            {
            // InternalSim.g:583:3: ( (otherlv_0= RULE_ID ) )
            // InternalSim.g:584:4: (otherlv_0= RULE_ID )
            {
            // InternalSim.g:584:4: (otherlv_0= RULE_ID )
            // InternalSim.g:585:5: otherlv_0= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSimGrabEnumerationLiteralRuleRule());
              					}
              				
            }
            otherlv_0=(Token)match(input,RULE_ID,FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_0, grammarAccess.getSimGrabEnumerationLiteralRuleAccess().getSourceDLiteralCrossReference_0_0());
              				
            }

            }


            }

            // InternalSim.g:596:3: (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )?
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==24) ) {
                alt9=1;
            }
            switch (alt9) {
                case 1 :
                    // InternalSim.g:597:4: otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) )
                    {
                    otherlv_1=(Token)match(input,24,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSimGrabEnumerationLiteralRuleAccess().getAsKeyword_1_0());
                      			
                    }
                    // InternalSim.g:601:4: ( (lv_renameTo_2_0= RULE_ID ) )
                    // InternalSim.g:602:5: (lv_renameTo_2_0= RULE_ID )
                    {
                    // InternalSim.g:602:5: (lv_renameTo_2_0= RULE_ID )
                    // InternalSim.g:603:6: lv_renameTo_2_0= RULE_ID
                    {
                    lv_renameTo_2_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_renameTo_2_0, grammarAccess.getSimGrabEnumerationLiteralRuleAccess().getRenameToIDTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSimGrabEnumerationLiteralRuleRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"renameTo",
                      							lv_renameTo_2_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.ID");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimGrabEnumerationLiteralRule"


    // $ANTLR start "entryRuleSimDitchEnumerationLiteralRule"
    // InternalSim.g:624:1: entryRuleSimDitchEnumerationLiteralRule returns [EObject current=null] : iv_ruleSimDitchEnumerationLiteralRule= ruleSimDitchEnumerationLiteralRule EOF ;
    public final EObject entryRuleSimDitchEnumerationLiteralRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimDitchEnumerationLiteralRule = null;


        try {
            // InternalSim.g:624:71: (iv_ruleSimDitchEnumerationLiteralRule= ruleSimDitchEnumerationLiteralRule EOF )
            // InternalSim.g:625:2: iv_ruleSimDitchEnumerationLiteralRule= ruleSimDitchEnumerationLiteralRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimDitchEnumerationLiteralRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimDitchEnumerationLiteralRule=ruleSimDitchEnumerationLiteralRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimDitchEnumerationLiteralRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimDitchEnumerationLiteralRule"


    // $ANTLR start "ruleSimDitchEnumerationLiteralRule"
    // InternalSim.g:631:1: ruleSimDitchEnumerationLiteralRule returns [EObject current=null] : ( (otherlv_0= RULE_ID ) ) ;
    public final EObject ruleSimDitchEnumerationLiteralRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;


        	enterRule();

        try {
            // InternalSim.g:637:2: ( ( (otherlv_0= RULE_ID ) ) )
            // InternalSim.g:638:2: ( (otherlv_0= RULE_ID ) )
            {
            // InternalSim.g:638:2: ( (otherlv_0= RULE_ID ) )
            // InternalSim.g:639:3: (otherlv_0= RULE_ID )
            {
            // InternalSim.g:639:3: (otherlv_0= RULE_ID )
            // InternalSim.g:640:4: otherlv_0= RULE_ID
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getSimDitchEnumerationLiteralRuleRule());
              				}
              			
            }
            otherlv_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_0, grammarAccess.getSimDitchEnumerationLiteralRuleAccess().getSourceDLiteralCrossReference_0());
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimDitchEnumerationLiteralRule"


    // $ANTLR start "entryRuleSimGrabComplexTypeRule"
    // InternalSim.g:654:1: entryRuleSimGrabComplexTypeRule returns [EObject current=null] : iv_ruleSimGrabComplexTypeRule= ruleSimGrabComplexTypeRule EOF ;
    public final EObject entryRuleSimGrabComplexTypeRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimGrabComplexTypeRule = null;


        try {
            // InternalSim.g:654:63: (iv_ruleSimGrabComplexTypeRule= ruleSimGrabComplexTypeRule EOF )
            // InternalSim.g:655:2: iv_ruleSimGrabComplexTypeRule= ruleSimGrabComplexTypeRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimGrabComplexTypeRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimGrabComplexTypeRule=ruleSimGrabComplexTypeRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimGrabComplexTypeRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimGrabComplexTypeRule"


    // $ANTLR start "ruleSimGrabComplexTypeRule"
    // InternalSim.g:661:1: ruleSimGrabComplexTypeRule returns [EObject current=null] : ( ( ( ruleDQualifiedName ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? ) ;
    public final EObject ruleSimGrabComplexTypeRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_renameTo_2_0=null;


        	enterRule();

        try {
            // InternalSim.g:667:2: ( ( ( ( ruleDQualifiedName ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? ) )
            // InternalSim.g:668:2: ( ( ( ruleDQualifiedName ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? )
            {
            // InternalSim.g:668:2: ( ( ( ruleDQualifiedName ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? )
            // InternalSim.g:669:3: ( ( ruleDQualifiedName ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )?
            {
            // InternalSim.g:669:3: ( ( ruleDQualifiedName ) )
            // InternalSim.g:670:4: ( ruleDQualifiedName )
            {
            // InternalSim.g:670:4: ( ruleDQualifiedName )
            // InternalSim.g:671:5: ruleDQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSimGrabComplexTypeRuleRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSimGrabComplexTypeRuleAccess().getSourceDComplexTypeCrossReference_0_0());
              				
            }
            pushFollow(FOLLOW_12);
            ruleDQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSim.g:685:3: (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )?
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==24) ) {
                alt10=1;
            }
            switch (alt10) {
                case 1 :
                    // InternalSim.g:686:4: otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) )
                    {
                    otherlv_1=(Token)match(input,24,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSimGrabComplexTypeRuleAccess().getAsKeyword_1_0());
                      			
                    }
                    // InternalSim.g:690:4: ( (lv_renameTo_2_0= RULE_ID ) )
                    // InternalSim.g:691:5: (lv_renameTo_2_0= RULE_ID )
                    {
                    // InternalSim.g:691:5: (lv_renameTo_2_0= RULE_ID )
                    // InternalSim.g:692:6: lv_renameTo_2_0= RULE_ID
                    {
                    lv_renameTo_2_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_renameTo_2_0, grammarAccess.getSimGrabComplexTypeRuleAccess().getRenameToIDTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSimGrabComplexTypeRuleRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"renameTo",
                      							lv_renameTo_2_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.ID");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimGrabComplexTypeRule"


    // $ANTLR start "entryRuleSimDitchComplexTypeRule"
    // InternalSim.g:713:1: entryRuleSimDitchComplexTypeRule returns [EObject current=null] : iv_ruleSimDitchComplexTypeRule= ruleSimDitchComplexTypeRule EOF ;
    public final EObject entryRuleSimDitchComplexTypeRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimDitchComplexTypeRule = null;


        try {
            // InternalSim.g:713:64: (iv_ruleSimDitchComplexTypeRule= ruleSimDitchComplexTypeRule EOF )
            // InternalSim.g:714:2: iv_ruleSimDitchComplexTypeRule= ruleSimDitchComplexTypeRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimDitchComplexTypeRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimDitchComplexTypeRule=ruleSimDitchComplexTypeRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimDitchComplexTypeRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimDitchComplexTypeRule"


    // $ANTLR start "ruleSimDitchComplexTypeRule"
    // InternalSim.g:720:1: ruleSimDitchComplexTypeRule returns [EObject current=null] : ( ( ruleDQualifiedName ) ) ;
    public final EObject ruleSimDitchComplexTypeRule() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
            // InternalSim.g:726:2: ( ( ( ruleDQualifiedName ) ) )
            // InternalSim.g:727:2: ( ( ruleDQualifiedName ) )
            {
            // InternalSim.g:727:2: ( ( ruleDQualifiedName ) )
            // InternalSim.g:728:3: ( ruleDQualifiedName )
            {
            // InternalSim.g:728:3: ( ruleDQualifiedName )
            // InternalSim.g:729:4: ruleDQualifiedName
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getSimDitchComplexTypeRuleRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getSimDitchComplexTypeRuleAccess().getSourceDComplexTypeCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleDQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimDitchComplexTypeRule"


    // $ANTLR start "entryRuleSimMorphComplexTypeRule"
    // InternalSim.g:746:1: entryRuleSimMorphComplexTypeRule returns [EObject current=null] : iv_ruleSimMorphComplexTypeRule= ruleSimMorphComplexTypeRule EOF ;
    public final EObject entryRuleSimMorphComplexTypeRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimMorphComplexTypeRule = null;


        try {
            // InternalSim.g:746:64: (iv_ruleSimMorphComplexTypeRule= ruleSimMorphComplexTypeRule EOF )
            // InternalSim.g:747:2: iv_ruleSimMorphComplexTypeRule= ruleSimMorphComplexTypeRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimMorphComplexTypeRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimMorphComplexTypeRule=ruleSimMorphComplexTypeRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimMorphComplexTypeRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimMorphComplexTypeRule"


    // $ANTLR start "ruleSimMorphComplexTypeRule"
    // InternalSim.g:753:1: ruleSimMorphComplexTypeRule returns [EObject current=null] : ( ( ( ruleDQualifiedName ) ) this_ChangeComplexType_1= ruleChangeComplexType[$current] ) ;
    public final EObject ruleSimMorphComplexTypeRule() throws RecognitionException {
        EObject current = null;

        EObject this_ChangeComplexType_1 = null;



        	enterRule();

        try {
            // InternalSim.g:759:2: ( ( ( ( ruleDQualifiedName ) ) this_ChangeComplexType_1= ruleChangeComplexType[$current] ) )
            // InternalSim.g:760:2: ( ( ( ruleDQualifiedName ) ) this_ChangeComplexType_1= ruleChangeComplexType[$current] )
            {
            // InternalSim.g:760:2: ( ( ( ruleDQualifiedName ) ) this_ChangeComplexType_1= ruleChangeComplexType[$current] )
            // InternalSim.g:761:3: ( ( ruleDQualifiedName ) ) this_ChangeComplexType_1= ruleChangeComplexType[$current]
            {
            // InternalSim.g:761:3: ( ( ruleDQualifiedName ) )
            // InternalSim.g:762:4: ( ruleDQualifiedName )
            {
            // InternalSim.g:762:4: ( ruleDQualifiedName )
            // InternalSim.g:763:5: ruleDQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSimMorphComplexTypeRuleRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSimMorphComplexTypeRuleAccess().getSourceDComplexTypeCrossReference_0_0());
              				
            }
            pushFollow(FOLLOW_13);
            ruleDQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getSimMorphComplexTypeRuleRule());
              			}
              			newCompositeNode(grammarAccess.getSimMorphComplexTypeRuleAccess().getChangeComplexTypeParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_ChangeComplexType_1=ruleChangeComplexType(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ChangeComplexType_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimMorphComplexTypeRule"


    // $ANTLR start "entryRuleSimFuseComplexTypeRule"
    // InternalSim.g:792:1: entryRuleSimFuseComplexTypeRule returns [EObject current=null] : iv_ruleSimFuseComplexTypeRule= ruleSimFuseComplexTypeRule EOF ;
    public final EObject entryRuleSimFuseComplexTypeRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimFuseComplexTypeRule = null;


        try {
            // InternalSim.g:792:63: (iv_ruleSimFuseComplexTypeRule= ruleSimFuseComplexTypeRule EOF )
            // InternalSim.g:793:2: iv_ruleSimFuseComplexTypeRule= ruleSimFuseComplexTypeRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimFuseComplexTypeRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimFuseComplexTypeRule=ruleSimFuseComplexTypeRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimFuseComplexTypeRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimFuseComplexTypeRule"


    // $ANTLR start "ruleSimFuseComplexTypeRule"
    // InternalSim.g:799:1: ruleSimFuseComplexTypeRule returns [EObject current=null] : ( ( ( ruleDQualifiedName ) ) (otherlv_1= 'and' ( ( ruleDQualifiedName ) ) )+ this_ChangeComplexType_3= ruleChangeComplexType[$current] ) ;
    public final EObject ruleSimFuseComplexTypeRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_ChangeComplexType_3 = null;



        	enterRule();

        try {
            // InternalSim.g:805:2: ( ( ( ( ruleDQualifiedName ) ) (otherlv_1= 'and' ( ( ruleDQualifiedName ) ) )+ this_ChangeComplexType_3= ruleChangeComplexType[$current] ) )
            // InternalSim.g:806:2: ( ( ( ruleDQualifiedName ) ) (otherlv_1= 'and' ( ( ruleDQualifiedName ) ) )+ this_ChangeComplexType_3= ruleChangeComplexType[$current] )
            {
            // InternalSim.g:806:2: ( ( ( ruleDQualifiedName ) ) (otherlv_1= 'and' ( ( ruleDQualifiedName ) ) )+ this_ChangeComplexType_3= ruleChangeComplexType[$current] )
            // InternalSim.g:807:3: ( ( ruleDQualifiedName ) ) (otherlv_1= 'and' ( ( ruleDQualifiedName ) ) )+ this_ChangeComplexType_3= ruleChangeComplexType[$current]
            {
            // InternalSim.g:807:3: ( ( ruleDQualifiedName ) )
            // InternalSim.g:808:4: ( ruleDQualifiedName )
            {
            // InternalSim.g:808:4: ( ruleDQualifiedName )
            // InternalSim.g:809:5: ruleDQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSimFuseComplexTypeRuleRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSimFuseComplexTypeRuleAccess().getSourceDComplexTypeCrossReference_0_0());
              				
            }
            pushFollow(FOLLOW_14);
            ruleDQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSim.g:823:3: (otherlv_1= 'and' ( ( ruleDQualifiedName ) ) )+
            int cnt11=0;
            loop11:
            do {
                int alt11=2;
                int LA11_0 = input.LA(1);

                if ( (LA11_0==25) ) {
                    alt11=1;
                }


                switch (alt11) {
            	case 1 :
            	    // InternalSim.g:824:4: otherlv_1= 'and' ( ( ruleDQualifiedName ) )
            	    {
            	    otherlv_1=(Token)match(input,25,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getSimFuseComplexTypeRuleAccess().getAndKeyword_1_0());
            	      			
            	    }
            	    // InternalSim.g:828:4: ( ( ruleDQualifiedName ) )
            	    // InternalSim.g:829:5: ( ruleDQualifiedName )
            	    {
            	    // InternalSim.g:829:5: ( ruleDQualifiedName )
            	    // InternalSim.g:830:6: ruleDQualifiedName
            	    {
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getSimFuseComplexTypeRuleRule());
            	      						}
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getSimFuseComplexTypeRuleAccess().getOtherSourcesDComplexTypeCrossReference_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_15);
            	    ruleDQualifiedName();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt11 >= 1 ) break loop11;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(11, input);
                        throw eee;
                }
                cnt11++;
            } while (true);

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getSimFuseComplexTypeRuleRule());
              			}
              			newCompositeNode(grammarAccess.getSimFuseComplexTypeRuleAccess().getChangeComplexTypeParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_2);
            this_ChangeComplexType_3=ruleChangeComplexType(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ChangeComplexType_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimFuseComplexTypeRule"


    // $ANTLR start "ruleChangeComplexType"
    // InternalSim.g:861:1: ruleChangeComplexType[EObject in_current] returns [EObject current=in_current] : (otherlv_0= 'to' ( (lv_abstract_1_0= ruleSimAbstractType ) )? ( ( (lv_detail_2_0= ruleSimDetailType ) ) | ( ( (lv_rootEntity_3_0= ruleSimRootEntity ) )? ( (lv_detail_4_0= ruleSimEntityType ) ) ) ) ( (lv_renameTo_5_0= RULE_ID ) )? (otherlv_6= 'extends' ( (otherlv_7= RULE_ID ) ) )? ) ;
    public final EObject ruleChangeComplexType(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token lv_renameTo_5_0=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Enumerator lv_abstract_1_0 = null;

        Enumerator lv_detail_2_0 = null;

        Enumerator lv_rootEntity_3_0 = null;

        Enumerator lv_detail_4_0 = null;



        	enterRule();

        try {
            // InternalSim.g:867:2: ( (otherlv_0= 'to' ( (lv_abstract_1_0= ruleSimAbstractType ) )? ( ( (lv_detail_2_0= ruleSimDetailType ) ) | ( ( (lv_rootEntity_3_0= ruleSimRootEntity ) )? ( (lv_detail_4_0= ruleSimEntityType ) ) ) ) ( (lv_renameTo_5_0= RULE_ID ) )? (otherlv_6= 'extends' ( (otherlv_7= RULE_ID ) ) )? ) )
            // InternalSim.g:868:2: (otherlv_0= 'to' ( (lv_abstract_1_0= ruleSimAbstractType ) )? ( ( (lv_detail_2_0= ruleSimDetailType ) ) | ( ( (lv_rootEntity_3_0= ruleSimRootEntity ) )? ( (lv_detail_4_0= ruleSimEntityType ) ) ) ) ( (lv_renameTo_5_0= RULE_ID ) )? (otherlv_6= 'extends' ( (otherlv_7= RULE_ID ) ) )? )
            {
            // InternalSim.g:868:2: (otherlv_0= 'to' ( (lv_abstract_1_0= ruleSimAbstractType ) )? ( ( (lv_detail_2_0= ruleSimDetailType ) ) | ( ( (lv_rootEntity_3_0= ruleSimRootEntity ) )? ( (lv_detail_4_0= ruleSimEntityType ) ) ) ) ( (lv_renameTo_5_0= RULE_ID ) )? (otherlv_6= 'extends' ( (otherlv_7= RULE_ID ) ) )? )
            // InternalSim.g:869:3: otherlv_0= 'to' ( (lv_abstract_1_0= ruleSimAbstractType ) )? ( ( (lv_detail_2_0= ruleSimDetailType ) ) | ( ( (lv_rootEntity_3_0= ruleSimRootEntity ) )? ( (lv_detail_4_0= ruleSimEntityType ) ) ) ) ( (lv_renameTo_5_0= RULE_ID ) )? (otherlv_6= 'extends' ( (otherlv_7= RULE_ID ) ) )?
            {
            otherlv_0=(Token)match(input,26,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getChangeComplexTypeAccess().getToKeyword_0());
              		
            }
            // InternalSim.g:873:3: ( (lv_abstract_1_0= ruleSimAbstractType ) )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==51||LA12_0==98) ) {
                alt12=1;
            }
            switch (alt12) {
                case 1 :
                    // InternalSim.g:874:4: (lv_abstract_1_0= ruleSimAbstractType )
                    {
                    // InternalSim.g:874:4: (lv_abstract_1_0= ruleSimAbstractType )
                    // InternalSim.g:875:5: lv_abstract_1_0= ruleSimAbstractType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getChangeComplexTypeAccess().getAbstractSimAbstractTypeEnumRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_16);
                    lv_abstract_1_0=ruleSimAbstractType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getChangeComplexTypeRule());
                      					}
                      					set(
                      						current,
                      						"abstract",
                      						lv_abstract_1_0,
                      						"com.mimacom.ddd.sm.sim.Sim.SimAbstractType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:892:3: ( ( (lv_detail_2_0= ruleSimDetailType ) ) | ( ( (lv_rootEntity_3_0= ruleSimRootEntity ) )? ( (lv_detail_4_0= ruleSimEntityType ) ) ) )
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==41) ) {
                alt14=1;
            }
            else if ( ((LA14_0>=37 && LA14_0<=38)||LA14_0==99) ) {
                alt14=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }
            switch (alt14) {
                case 1 :
                    // InternalSim.g:893:4: ( (lv_detail_2_0= ruleSimDetailType ) )
                    {
                    // InternalSim.g:893:4: ( (lv_detail_2_0= ruleSimDetailType ) )
                    // InternalSim.g:894:5: (lv_detail_2_0= ruleSimDetailType )
                    {
                    // InternalSim.g:894:5: (lv_detail_2_0= ruleSimDetailType )
                    // InternalSim.g:895:6: lv_detail_2_0= ruleSimDetailType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getChangeComplexTypeAccess().getDetailSimDetailTypeEnumRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_17);
                    lv_detail_2_0=ruleSimDetailType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getChangeComplexTypeRule());
                      						}
                      						set(
                      							current,
                      							"detail",
                      							lv_detail_2_0,
                      							"com.mimacom.ddd.sm.sim.Sim.SimDetailType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:913:4: ( ( (lv_rootEntity_3_0= ruleSimRootEntity ) )? ( (lv_detail_4_0= ruleSimEntityType ) ) )
                    {
                    // InternalSim.g:913:4: ( ( (lv_rootEntity_3_0= ruleSimRootEntity ) )? ( (lv_detail_4_0= ruleSimEntityType ) ) )
                    // InternalSim.g:914:5: ( (lv_rootEntity_3_0= ruleSimRootEntity ) )? ( (lv_detail_4_0= ruleSimEntityType ) )
                    {
                    // InternalSim.g:914:5: ( (lv_rootEntity_3_0= ruleSimRootEntity ) )?
                    int alt13=2;
                    int LA13_0 = input.LA(1);

                    if ( (LA13_0==37||LA13_0==99) ) {
                        alt13=1;
                    }
                    switch (alt13) {
                        case 1 :
                            // InternalSim.g:915:6: (lv_rootEntity_3_0= ruleSimRootEntity )
                            {
                            // InternalSim.g:915:6: (lv_rootEntity_3_0= ruleSimRootEntity )
                            // InternalSim.g:916:7: lv_rootEntity_3_0= ruleSimRootEntity
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getChangeComplexTypeAccess().getRootEntitySimRootEntityEnumRuleCall_2_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_16);
                            lv_rootEntity_3_0=ruleSimRootEntity();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getChangeComplexTypeRule());
                              							}
                              							set(
                              								current,
                              								"rootEntity",
                              								lv_rootEntity_3_0,
                              								"com.mimacom.ddd.sm.sim.Sim.SimRootEntity");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalSim.g:933:5: ( (lv_detail_4_0= ruleSimEntityType ) )
                    // InternalSim.g:934:6: (lv_detail_4_0= ruleSimEntityType )
                    {
                    // InternalSim.g:934:6: (lv_detail_4_0= ruleSimEntityType )
                    // InternalSim.g:935:7: lv_detail_4_0= ruleSimEntityType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getChangeComplexTypeAccess().getDetailSimEntityTypeEnumRuleCall_2_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_17);
                    lv_detail_4_0=ruleSimEntityType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getChangeComplexTypeRule());
                      							}
                      							set(
                      								current,
                      								"detail",
                      								lv_detail_4_0,
                      								"com.mimacom.ddd.sm.sim.Sim.SimEntityType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalSim.g:954:3: ( (lv_renameTo_5_0= RULE_ID ) )?
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==RULE_ID) ) {
                alt15=1;
            }
            switch (alt15) {
                case 1 :
                    // InternalSim.g:955:4: (lv_renameTo_5_0= RULE_ID )
                    {
                    // InternalSim.g:955:4: (lv_renameTo_5_0= RULE_ID )
                    // InternalSim.g:956:5: lv_renameTo_5_0= RULE_ID
                    {
                    lv_renameTo_5_0=(Token)match(input,RULE_ID,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_renameTo_5_0, grammarAccess.getChangeComplexTypeAccess().getRenameToIDTerminalRuleCall_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getChangeComplexTypeRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"renameTo",
                      						lv_renameTo_5_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.ID");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:972:3: (otherlv_6= 'extends' ( (otherlv_7= RULE_ID ) ) )?
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==27) ) {
                alt16=1;
            }
            switch (alt16) {
                case 1 :
                    // InternalSim.g:973:4: otherlv_6= 'extends' ( (otherlv_7= RULE_ID ) )
                    {
                    otherlv_6=(Token)match(input,27,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getChangeComplexTypeAccess().getExtendsKeyword_4_0());
                      			
                    }
                    // InternalSim.g:977:4: ( (otherlv_7= RULE_ID ) )
                    // InternalSim.g:978:5: (otherlv_7= RULE_ID )
                    {
                    // InternalSim.g:978:5: (otherlv_7= RULE_ID )
                    // InternalSim.g:979:6: otherlv_7= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getChangeComplexTypeRule());
                      						}
                      					
                    }
                    otherlv_7=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_7, grammarAccess.getChangeComplexTypeAccess().getExtendFromDComplexTypeCrossReference_4_1_0());
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChangeComplexType"


    // $ANTLR start "entryRuleSimGrabFeatureRule"
    // InternalSim.g:995:1: entryRuleSimGrabFeatureRule returns [EObject current=null] : iv_ruleSimGrabFeatureRule= ruleSimGrabFeatureRule EOF ;
    public final EObject entryRuleSimGrabFeatureRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimGrabFeatureRule = null;


        try {
            // InternalSim.g:995:59: (iv_ruleSimGrabFeatureRule= ruleSimGrabFeatureRule EOF )
            // InternalSim.g:996:2: iv_ruleSimGrabFeatureRule= ruleSimGrabFeatureRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimGrabFeatureRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimGrabFeatureRule=ruleSimGrabFeatureRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimGrabFeatureRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimGrabFeatureRule"


    // $ANTLR start "ruleSimGrabFeatureRule"
    // InternalSim.g:1002:1: ruleSimGrabFeatureRule returns [EObject current=null] : ( ( (otherlv_0= RULE_ID ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? ) ;
    public final EObject ruleSimGrabFeatureRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_renameTo_2_0=null;


        	enterRule();

        try {
            // InternalSim.g:1008:2: ( ( ( (otherlv_0= RULE_ID ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? ) )
            // InternalSim.g:1009:2: ( ( (otherlv_0= RULE_ID ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? )
            {
            // InternalSim.g:1009:2: ( ( (otherlv_0= RULE_ID ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? )
            // InternalSim.g:1010:3: ( (otherlv_0= RULE_ID ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )?
            {
            // InternalSim.g:1010:3: ( (otherlv_0= RULE_ID ) )
            // InternalSim.g:1011:4: (otherlv_0= RULE_ID )
            {
            // InternalSim.g:1011:4: (otherlv_0= RULE_ID )
            // InternalSim.g:1012:5: otherlv_0= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSimGrabFeatureRuleRule());
              					}
              				
            }
            otherlv_0=(Token)match(input,RULE_ID,FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_0, grammarAccess.getSimGrabFeatureRuleAccess().getSourceDFeatureCrossReference_0_0());
              				
            }

            }


            }

            // InternalSim.g:1023:3: (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )?
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==24) ) {
                alt17=1;
            }
            switch (alt17) {
                case 1 :
                    // InternalSim.g:1024:4: otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) )
                    {
                    otherlv_1=(Token)match(input,24,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSimGrabFeatureRuleAccess().getAsKeyword_1_0());
                      			
                    }
                    // InternalSim.g:1028:4: ( (lv_renameTo_2_0= RULE_ID ) )
                    // InternalSim.g:1029:5: (lv_renameTo_2_0= RULE_ID )
                    {
                    // InternalSim.g:1029:5: (lv_renameTo_2_0= RULE_ID )
                    // InternalSim.g:1030:6: lv_renameTo_2_0= RULE_ID
                    {
                    lv_renameTo_2_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_renameTo_2_0, grammarAccess.getSimGrabFeatureRuleAccess().getRenameToIDTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSimGrabFeatureRuleRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"renameTo",
                      							lv_renameTo_2_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.ID");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimGrabFeatureRule"


    // $ANTLR start "entryRuleSimMorphFeatureRule"
    // InternalSim.g:1051:1: entryRuleSimMorphFeatureRule returns [EObject current=null] : iv_ruleSimMorphFeatureRule= ruleSimMorphFeatureRule EOF ;
    public final EObject entryRuleSimMorphFeatureRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimMorphFeatureRule = null;


        try {
            // InternalSim.g:1051:60: (iv_ruleSimMorphFeatureRule= ruleSimMorphFeatureRule EOF )
            // InternalSim.g:1052:2: iv_ruleSimMorphFeatureRule= ruleSimMorphFeatureRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimMorphFeatureRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimMorphFeatureRule=ruleSimMorphFeatureRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimMorphFeatureRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimMorphFeatureRule"


    // $ANTLR start "ruleSimMorphFeatureRule"
    // InternalSim.g:1058:1: ruleSimMorphFeatureRule returns [EObject current=null] : ( ( (otherlv_0= RULE_ID ) ) otherlv_1= 'to' ( ( (lv_renameTo_2_0= RULE_ID ) ) otherlv_3= ':' )? ( (otherlv_4= RULE_ID ) ) ( (lv_remultiplyTo_5_0= ruleDMultiplicity ) )? ) ;
    public final EObject ruleSimMorphFeatureRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_renameTo_2_0=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_remultiplyTo_5_0 = null;



        	enterRule();

        try {
            // InternalSim.g:1064:2: ( ( ( (otherlv_0= RULE_ID ) ) otherlv_1= 'to' ( ( (lv_renameTo_2_0= RULE_ID ) ) otherlv_3= ':' )? ( (otherlv_4= RULE_ID ) ) ( (lv_remultiplyTo_5_0= ruleDMultiplicity ) )? ) )
            // InternalSim.g:1065:2: ( ( (otherlv_0= RULE_ID ) ) otherlv_1= 'to' ( ( (lv_renameTo_2_0= RULE_ID ) ) otherlv_3= ':' )? ( (otherlv_4= RULE_ID ) ) ( (lv_remultiplyTo_5_0= ruleDMultiplicity ) )? )
            {
            // InternalSim.g:1065:2: ( ( (otherlv_0= RULE_ID ) ) otherlv_1= 'to' ( ( (lv_renameTo_2_0= RULE_ID ) ) otherlv_3= ':' )? ( (otherlv_4= RULE_ID ) ) ( (lv_remultiplyTo_5_0= ruleDMultiplicity ) )? )
            // InternalSim.g:1066:3: ( (otherlv_0= RULE_ID ) ) otherlv_1= 'to' ( ( (lv_renameTo_2_0= RULE_ID ) ) otherlv_3= ':' )? ( (otherlv_4= RULE_ID ) ) ( (lv_remultiplyTo_5_0= ruleDMultiplicity ) )?
            {
            // InternalSim.g:1066:3: ( (otherlv_0= RULE_ID ) )
            // InternalSim.g:1067:4: (otherlv_0= RULE_ID )
            {
            // InternalSim.g:1067:4: (otherlv_0= RULE_ID )
            // InternalSim.g:1068:5: otherlv_0= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSimMorphFeatureRuleRule());
              					}
              				
            }
            otherlv_0=(Token)match(input,RULE_ID,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_0, grammarAccess.getSimMorphFeatureRuleAccess().getSourceDFeatureCrossReference_0_0());
              				
            }

            }


            }

            otherlv_1=(Token)match(input,26,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSimMorphFeatureRuleAccess().getToKeyword_1());
              		
            }
            // InternalSim.g:1083:3: ( ( (lv_renameTo_2_0= RULE_ID ) ) otherlv_3= ':' )?
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==RULE_ID) ) {
                int LA18_1 = input.LA(2);

                if ( (LA18_1==28) ) {
                    alt18=1;
                }
            }
            switch (alt18) {
                case 1 :
                    // InternalSim.g:1084:4: ( (lv_renameTo_2_0= RULE_ID ) ) otherlv_3= ':'
                    {
                    // InternalSim.g:1084:4: ( (lv_renameTo_2_0= RULE_ID ) )
                    // InternalSim.g:1085:5: (lv_renameTo_2_0= RULE_ID )
                    {
                    // InternalSim.g:1085:5: (lv_renameTo_2_0= RULE_ID )
                    // InternalSim.g:1086:6: lv_renameTo_2_0= RULE_ID
                    {
                    lv_renameTo_2_0=(Token)match(input,RULE_ID,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_renameTo_2_0, grammarAccess.getSimMorphFeatureRuleAccess().getRenameToIDTerminalRuleCall_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSimMorphFeatureRuleRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"renameTo",
                      							lv_renameTo_2_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.ID");
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,28,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getSimMorphFeatureRuleAccess().getColonKeyword_2_1());
                      			
                    }

                    }
                    break;

            }

            // InternalSim.g:1107:3: ( (otherlv_4= RULE_ID ) )
            // InternalSim.g:1108:4: (otherlv_4= RULE_ID )
            {
            // InternalSim.g:1108:4: (otherlv_4= RULE_ID )
            // InternalSim.g:1109:5: otherlv_4= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSimMorphFeatureRuleRule());
              					}
              				
            }
            otherlv_4=(Token)match(input,RULE_ID,FOLLOW_20); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_4, grammarAccess.getSimMorphFeatureRuleAccess().getRetypeToDTypeCrossReference_3_0());
              				
            }

            }


            }

            // InternalSim.g:1120:3: ( (lv_remultiplyTo_5_0= ruleDMultiplicity ) )?
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==46||LA19_0==92||LA19_0==137) ) {
                alt19=1;
            }
            else if ( (LA19_0==45) ) {
                int LA19_2 = input.LA(2);

                if ( (LA19_2==RULE_NATURAL) ) {
                    alt19=1;
                }
            }
            switch (alt19) {
                case 1 :
                    // InternalSim.g:1121:4: (lv_remultiplyTo_5_0= ruleDMultiplicity )
                    {
                    // InternalSim.g:1121:4: (lv_remultiplyTo_5_0= ruleDMultiplicity )
                    // InternalSim.g:1122:5: lv_remultiplyTo_5_0= ruleDMultiplicity
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimMorphFeatureRuleAccess().getRemultiplyToDMultiplicityParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_remultiplyTo_5_0=ruleDMultiplicity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimMorphFeatureRuleRule());
                      					}
                      					set(
                      						current,
                      						"remultiplyTo",
                      						lv_remultiplyTo_5_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DMultiplicity");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimMorphFeatureRule"


    // $ANTLR start "entryRuleSimDitchFeatureRule"
    // InternalSim.g:1143:1: entryRuleSimDitchFeatureRule returns [EObject current=null] : iv_ruleSimDitchFeatureRule= ruleSimDitchFeatureRule EOF ;
    public final EObject entryRuleSimDitchFeatureRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimDitchFeatureRule = null;


        try {
            // InternalSim.g:1143:60: (iv_ruleSimDitchFeatureRule= ruleSimDitchFeatureRule EOF )
            // InternalSim.g:1144:2: iv_ruleSimDitchFeatureRule= ruleSimDitchFeatureRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimDitchFeatureRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimDitchFeatureRule=ruleSimDitchFeatureRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimDitchFeatureRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimDitchFeatureRule"


    // $ANTLR start "ruleSimDitchFeatureRule"
    // InternalSim.g:1150:1: ruleSimDitchFeatureRule returns [EObject current=null] : ( (otherlv_0= RULE_ID ) ) ;
    public final EObject ruleSimDitchFeatureRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;


        	enterRule();

        try {
            // InternalSim.g:1156:2: ( ( (otherlv_0= RULE_ID ) ) )
            // InternalSim.g:1157:2: ( (otherlv_0= RULE_ID ) )
            {
            // InternalSim.g:1157:2: ( (otherlv_0= RULE_ID ) )
            // InternalSim.g:1158:3: (otherlv_0= RULE_ID )
            {
            // InternalSim.g:1158:3: (otherlv_0= RULE_ID )
            // InternalSim.g:1159:4: otherlv_0= RULE_ID
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getSimDitchFeatureRuleRule());
              				}
              			
            }
            otherlv_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_0, grammarAccess.getSimDitchFeatureRuleAccess().getSourceDFeatureCrossReference_0());
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimDitchFeatureRule"


    // $ANTLR start "entryRuleSimGrabQueryParameterRule"
    // InternalSim.g:1173:1: entryRuleSimGrabQueryParameterRule returns [EObject current=null] : iv_ruleSimGrabQueryParameterRule= ruleSimGrabQueryParameterRule EOF ;
    public final EObject entryRuleSimGrabQueryParameterRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimGrabQueryParameterRule = null;


        try {
            // InternalSim.g:1173:66: (iv_ruleSimGrabQueryParameterRule= ruleSimGrabQueryParameterRule EOF )
            // InternalSim.g:1174:2: iv_ruleSimGrabQueryParameterRule= ruleSimGrabQueryParameterRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimGrabQueryParameterRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimGrabQueryParameterRule=ruleSimGrabQueryParameterRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimGrabQueryParameterRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimGrabQueryParameterRule"


    // $ANTLR start "ruleSimGrabQueryParameterRule"
    // InternalSim.g:1180:1: ruleSimGrabQueryParameterRule returns [EObject current=null] : ( ( (otherlv_0= RULE_ID ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? ) ;
    public final EObject ruleSimGrabQueryParameterRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_renameTo_2_0=null;


        	enterRule();

        try {
            // InternalSim.g:1186:2: ( ( ( (otherlv_0= RULE_ID ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? ) )
            // InternalSim.g:1187:2: ( ( (otherlv_0= RULE_ID ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? )
            {
            // InternalSim.g:1187:2: ( ( (otherlv_0= RULE_ID ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? )
            // InternalSim.g:1188:3: ( (otherlv_0= RULE_ID ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )?
            {
            // InternalSim.g:1188:3: ( (otherlv_0= RULE_ID ) )
            // InternalSim.g:1189:4: (otherlv_0= RULE_ID )
            {
            // InternalSim.g:1189:4: (otherlv_0= RULE_ID )
            // InternalSim.g:1190:5: otherlv_0= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSimGrabQueryParameterRuleRule());
              					}
              				
            }
            otherlv_0=(Token)match(input,RULE_ID,FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_0, grammarAccess.getSimGrabQueryParameterRuleAccess().getSourceDQueryParameterCrossReference_0_0());
              				
            }

            }


            }

            // InternalSim.g:1201:3: (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )?
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==24) ) {
                alt20=1;
            }
            switch (alt20) {
                case 1 :
                    // InternalSim.g:1202:4: otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) )
                    {
                    otherlv_1=(Token)match(input,24,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSimGrabQueryParameterRuleAccess().getAsKeyword_1_0());
                      			
                    }
                    // InternalSim.g:1206:4: ( (lv_renameTo_2_0= RULE_ID ) )
                    // InternalSim.g:1207:5: (lv_renameTo_2_0= RULE_ID )
                    {
                    // InternalSim.g:1207:5: (lv_renameTo_2_0= RULE_ID )
                    // InternalSim.g:1208:6: lv_renameTo_2_0= RULE_ID
                    {
                    lv_renameTo_2_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_renameTo_2_0, grammarAccess.getSimGrabQueryParameterRuleAccess().getRenameToIDTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSimGrabQueryParameterRuleRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"renameTo",
                      							lv_renameTo_2_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.ID");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimGrabQueryParameterRule"


    // $ANTLR start "entryRuleSimMorphQueryParameterRule"
    // InternalSim.g:1229:1: entryRuleSimMorphQueryParameterRule returns [EObject current=null] : iv_ruleSimMorphQueryParameterRule= ruleSimMorphQueryParameterRule EOF ;
    public final EObject entryRuleSimMorphQueryParameterRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimMorphQueryParameterRule = null;


        try {
            // InternalSim.g:1229:67: (iv_ruleSimMorphQueryParameterRule= ruleSimMorphQueryParameterRule EOF )
            // InternalSim.g:1230:2: iv_ruleSimMorphQueryParameterRule= ruleSimMorphQueryParameterRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimMorphQueryParameterRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimMorphQueryParameterRule=ruleSimMorphQueryParameterRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimMorphQueryParameterRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimMorphQueryParameterRule"


    // $ANTLR start "ruleSimMorphQueryParameterRule"
    // InternalSim.g:1236:1: ruleSimMorphQueryParameterRule returns [EObject current=null] : ( ( (otherlv_0= RULE_ID ) ) otherlv_1= 'to' ( ( (lv_renameTo_2_0= RULE_ID ) ) otherlv_3= ':' )? ( (otherlv_4= RULE_ID ) ) ( (lv_remultiplyTo_5_0= ruleDMultiplicity ) )? ) ;
    public final EObject ruleSimMorphQueryParameterRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_renameTo_2_0=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_remultiplyTo_5_0 = null;



        	enterRule();

        try {
            // InternalSim.g:1242:2: ( ( ( (otherlv_0= RULE_ID ) ) otherlv_1= 'to' ( ( (lv_renameTo_2_0= RULE_ID ) ) otherlv_3= ':' )? ( (otherlv_4= RULE_ID ) ) ( (lv_remultiplyTo_5_0= ruleDMultiplicity ) )? ) )
            // InternalSim.g:1243:2: ( ( (otherlv_0= RULE_ID ) ) otherlv_1= 'to' ( ( (lv_renameTo_2_0= RULE_ID ) ) otherlv_3= ':' )? ( (otherlv_4= RULE_ID ) ) ( (lv_remultiplyTo_5_0= ruleDMultiplicity ) )? )
            {
            // InternalSim.g:1243:2: ( ( (otherlv_0= RULE_ID ) ) otherlv_1= 'to' ( ( (lv_renameTo_2_0= RULE_ID ) ) otherlv_3= ':' )? ( (otherlv_4= RULE_ID ) ) ( (lv_remultiplyTo_5_0= ruleDMultiplicity ) )? )
            // InternalSim.g:1244:3: ( (otherlv_0= RULE_ID ) ) otherlv_1= 'to' ( ( (lv_renameTo_2_0= RULE_ID ) ) otherlv_3= ':' )? ( (otherlv_4= RULE_ID ) ) ( (lv_remultiplyTo_5_0= ruleDMultiplicity ) )?
            {
            // InternalSim.g:1244:3: ( (otherlv_0= RULE_ID ) )
            // InternalSim.g:1245:4: (otherlv_0= RULE_ID )
            {
            // InternalSim.g:1245:4: (otherlv_0= RULE_ID )
            // InternalSim.g:1246:5: otherlv_0= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSimMorphQueryParameterRuleRule());
              					}
              				
            }
            otherlv_0=(Token)match(input,RULE_ID,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_0, grammarAccess.getSimMorphQueryParameterRuleAccess().getSourceDQueryParameterCrossReference_0_0());
              				
            }

            }


            }

            otherlv_1=(Token)match(input,26,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSimMorphQueryParameterRuleAccess().getToKeyword_1());
              		
            }
            // InternalSim.g:1261:3: ( ( (lv_renameTo_2_0= RULE_ID ) ) otherlv_3= ':' )?
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==RULE_ID) ) {
                int LA21_1 = input.LA(2);

                if ( (LA21_1==28) ) {
                    alt21=1;
                }
            }
            switch (alt21) {
                case 1 :
                    // InternalSim.g:1262:4: ( (lv_renameTo_2_0= RULE_ID ) ) otherlv_3= ':'
                    {
                    // InternalSim.g:1262:4: ( (lv_renameTo_2_0= RULE_ID ) )
                    // InternalSim.g:1263:5: (lv_renameTo_2_0= RULE_ID )
                    {
                    // InternalSim.g:1263:5: (lv_renameTo_2_0= RULE_ID )
                    // InternalSim.g:1264:6: lv_renameTo_2_0= RULE_ID
                    {
                    lv_renameTo_2_0=(Token)match(input,RULE_ID,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_renameTo_2_0, grammarAccess.getSimMorphQueryParameterRuleAccess().getRenameToIDTerminalRuleCall_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSimMorphQueryParameterRuleRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"renameTo",
                      							lv_renameTo_2_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.ID");
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,28,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getSimMorphQueryParameterRuleAccess().getColonKeyword_2_1());
                      			
                    }

                    }
                    break;

            }

            // InternalSim.g:1285:3: ( (otherlv_4= RULE_ID ) )
            // InternalSim.g:1286:4: (otherlv_4= RULE_ID )
            {
            // InternalSim.g:1286:4: (otherlv_4= RULE_ID )
            // InternalSim.g:1287:5: otherlv_4= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSimMorphQueryParameterRuleRule());
              					}
              				
            }
            otherlv_4=(Token)match(input,RULE_ID,FOLLOW_20); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_4, grammarAccess.getSimMorphQueryParameterRuleAccess().getRetypeToDTypeCrossReference_3_0());
              				
            }

            }


            }

            // InternalSim.g:1298:3: ( (lv_remultiplyTo_5_0= ruleDMultiplicity ) )?
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( ((LA22_0>=45 && LA22_0<=46)||LA22_0==92||LA22_0==137) ) {
                alt22=1;
            }
            switch (alt22) {
                case 1 :
                    // InternalSim.g:1299:4: (lv_remultiplyTo_5_0= ruleDMultiplicity )
                    {
                    // InternalSim.g:1299:4: (lv_remultiplyTo_5_0= ruleDMultiplicity )
                    // InternalSim.g:1300:5: lv_remultiplyTo_5_0= ruleDMultiplicity
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimMorphQueryParameterRuleAccess().getRemultiplyToDMultiplicityParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_remultiplyTo_5_0=ruleDMultiplicity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimMorphQueryParameterRuleRule());
                      					}
                      					set(
                      						current,
                      						"remultiplyTo",
                      						lv_remultiplyTo_5_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DMultiplicity");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimMorphQueryParameterRule"


    // $ANTLR start "entryRuleSimDitchQueryParameterRule"
    // InternalSim.g:1321:1: entryRuleSimDitchQueryParameterRule returns [EObject current=null] : iv_ruleSimDitchQueryParameterRule= ruleSimDitchQueryParameterRule EOF ;
    public final EObject entryRuleSimDitchQueryParameterRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimDitchQueryParameterRule = null;


        try {
            // InternalSim.g:1321:67: (iv_ruleSimDitchQueryParameterRule= ruleSimDitchQueryParameterRule EOF )
            // InternalSim.g:1322:2: iv_ruleSimDitchQueryParameterRule= ruleSimDitchQueryParameterRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimDitchQueryParameterRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimDitchQueryParameterRule=ruleSimDitchQueryParameterRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimDitchQueryParameterRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimDitchQueryParameterRule"


    // $ANTLR start "ruleSimDitchQueryParameterRule"
    // InternalSim.g:1328:1: ruleSimDitchQueryParameterRule returns [EObject current=null] : ( (otherlv_0= RULE_ID ) ) ;
    public final EObject ruleSimDitchQueryParameterRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;


        	enterRule();

        try {
            // InternalSim.g:1334:2: ( ( (otherlv_0= RULE_ID ) ) )
            // InternalSim.g:1335:2: ( (otherlv_0= RULE_ID ) )
            {
            // InternalSim.g:1335:2: ( (otherlv_0= RULE_ID ) )
            // InternalSim.g:1336:3: (otherlv_0= RULE_ID )
            {
            // InternalSim.g:1336:3: (otherlv_0= RULE_ID )
            // InternalSim.g:1337:4: otherlv_0= RULE_ID
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getSimDitchQueryParameterRuleRule());
              				}
              			
            }
            otherlv_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_0, grammarAccess.getSimDitchQueryParameterRuleAccess().getSourceDQueryParameterCrossReference_0());
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimDitchQueryParameterRule"


    // $ANTLR start "entryRuleSimAggregate"
    // InternalSim.g:1351:1: entryRuleSimAggregate returns [EObject current=null] : iv_ruleSimAggregate= ruleSimAggregate EOF ;
    public final EObject entryRuleSimAggregate() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimAggregate = null;


        try {
            // InternalSim.g:1351:53: (iv_ruleSimAggregate= ruleSimAggregate EOF )
            // InternalSim.g:1352:2: iv_ruleSimAggregate= ruleSimAggregate EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimAggregateRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimAggregate=ruleSimAggregate();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimAggregate; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimAggregate"


    // $ANTLR start "ruleSimAggregate"
    // InternalSim.g:1358:1: ruleSimAggregate returns [EObject current=null] : (this_SimAggregateTransposition_0= ruleSimAggregateTransposition | this_DAggregate_1= ruleDAggregate ) ;
    public final EObject ruleSimAggregate() throws RecognitionException {
        EObject current = null;

        EObject this_SimAggregateTransposition_0 = null;

        EObject this_DAggregate_1 = null;



        	enterRule();

        try {
            // InternalSim.g:1364:2: ( (this_SimAggregateTransposition_0= ruleSimAggregateTransposition | this_DAggregate_1= ruleDAggregate ) )
            // InternalSim.g:1365:2: (this_SimAggregateTransposition_0= ruleSimAggregateTransposition | this_DAggregate_1= ruleDAggregate )
            {
            // InternalSim.g:1365:2: (this_SimAggregateTransposition_0= ruleSimAggregateTransposition | this_DAggregate_1= ruleDAggregate )
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==29) ) {
                alt23=1;
            }
            else if ( (LA23_0==30) ) {
                alt23=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }
            switch (alt23) {
                case 1 :
                    // InternalSim.g:1366:3: this_SimAggregateTransposition_0= ruleSimAggregateTransposition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSimAggregateAccess().getSimAggregateTranspositionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SimAggregateTransposition_0=ruleSimAggregateTransposition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SimAggregateTransposition_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSim.g:1375:3: this_DAggregate_1= ruleDAggregate
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSimAggregateAccess().getDAggregateParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DAggregate_1=ruleDAggregate();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DAggregate_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimAggregate"


    // $ANTLR start "entryRuleSimAggregateTransposition"
    // InternalSim.g:1387:1: entryRuleSimAggregateTransposition returns [EObject current=null] : iv_ruleSimAggregateTransposition= ruleSimAggregateTransposition EOF ;
    public final EObject entryRuleSimAggregateTransposition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimAggregateTransposition = null;


        try {
            // InternalSim.g:1387:66: (iv_ruleSimAggregateTransposition= ruleSimAggregateTransposition EOF )
            // InternalSim.g:1388:2: iv_ruleSimAggregateTransposition= ruleSimAggregateTransposition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimAggregateTranspositionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimAggregateTransposition=ruleSimAggregateTransposition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimAggregateTransposition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimAggregateTransposition"


    // $ANTLR start "ruleSimAggregateTransposition"
    // InternalSim.g:1394:1: ruleSimAggregateTransposition returns [EObject current=null] : ( () otherlv_1= 'grab' otherlv_2= 'aggregate' ( (lv_transpositionRule_3_0= ruleSimGrabAggregateRule ) ) ( (lv_description_4_0= ruleDRichText ) )? (otherlv_5= '{' ( ( (lv_features_6_0= ruleSimQueryTransposition ) ) | (otherlv_7= 'add' otherlv_8= 'query' ( (lv_features_9_0= ruleDQuery ) ) ) )* ( (lv_types_10_0= ruleSimType ) )* otherlv_11= '}' )? ) ;
    public final EObject ruleSimAggregateTransposition() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_11=null;
        EObject lv_transpositionRule_3_0 = null;

        EObject lv_description_4_0 = null;

        EObject lv_features_6_0 = null;

        EObject lv_features_9_0 = null;

        EObject lv_types_10_0 = null;



        	enterRule();

        try {
            // InternalSim.g:1400:2: ( ( () otherlv_1= 'grab' otherlv_2= 'aggregate' ( (lv_transpositionRule_3_0= ruleSimGrabAggregateRule ) ) ( (lv_description_4_0= ruleDRichText ) )? (otherlv_5= '{' ( ( (lv_features_6_0= ruleSimQueryTransposition ) ) | (otherlv_7= 'add' otherlv_8= 'query' ( (lv_features_9_0= ruleDQuery ) ) ) )* ( (lv_types_10_0= ruleSimType ) )* otherlv_11= '}' )? ) )
            // InternalSim.g:1401:2: ( () otherlv_1= 'grab' otherlv_2= 'aggregate' ( (lv_transpositionRule_3_0= ruleSimGrabAggregateRule ) ) ( (lv_description_4_0= ruleDRichText ) )? (otherlv_5= '{' ( ( (lv_features_6_0= ruleSimQueryTransposition ) ) | (otherlv_7= 'add' otherlv_8= 'query' ( (lv_features_9_0= ruleDQuery ) ) ) )* ( (lv_types_10_0= ruleSimType ) )* otherlv_11= '}' )? )
            {
            // InternalSim.g:1401:2: ( () otherlv_1= 'grab' otherlv_2= 'aggregate' ( (lv_transpositionRule_3_0= ruleSimGrabAggregateRule ) ) ( (lv_description_4_0= ruleDRichText ) )? (otherlv_5= '{' ( ( (lv_features_6_0= ruleSimQueryTransposition ) ) | (otherlv_7= 'add' otherlv_8= 'query' ( (lv_features_9_0= ruleDQuery ) ) ) )* ( (lv_types_10_0= ruleSimType ) )* otherlv_11= '}' )? )
            // InternalSim.g:1402:3: () otherlv_1= 'grab' otherlv_2= 'aggregate' ( (lv_transpositionRule_3_0= ruleSimGrabAggregateRule ) ) ( (lv_description_4_0= ruleDRichText ) )? (otherlv_5= '{' ( ( (lv_features_6_0= ruleSimQueryTransposition ) ) | (otherlv_7= 'add' otherlv_8= 'query' ( (lv_features_9_0= ruleDQuery ) ) ) )* ( (lv_types_10_0= ruleSimType ) )* otherlv_11= '}' )?
            {
            // InternalSim.g:1402:3: ()
            // InternalSim.g:1403:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSimAggregateTranspositionAccess().getTAggregateTranspositionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,29,FOLLOW_21); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSimAggregateTranspositionAccess().getGrabKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,30,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getSimAggregateTranspositionAccess().getAggregateKeyword_2());
              		
            }
            // InternalSim.g:1417:3: ( (lv_transpositionRule_3_0= ruleSimGrabAggregateRule ) )
            // InternalSim.g:1418:4: (lv_transpositionRule_3_0= ruleSimGrabAggregateRule )
            {
            // InternalSim.g:1418:4: (lv_transpositionRule_3_0= ruleSimGrabAggregateRule )
            // InternalSim.g:1419:5: lv_transpositionRule_3_0= ruleSimGrabAggregateRule
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSimAggregateTranspositionAccess().getTranspositionRuleSimGrabAggregateRuleParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_22);
            lv_transpositionRule_3_0=ruleSimGrabAggregateRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSimAggregateTranspositionRule());
              					}
              					set(
              						current,
              						"transpositionRule",
              						lv_transpositionRule_3_0,
              						"com.mimacom.ddd.sm.sim.Sim.SimGrabAggregateRule");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSim.g:1436:3: ( (lv_description_4_0= ruleDRichText ) )?
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( ((LA24_0>=RULE_PLAIN_TEXT_ONLY && LA24_0<=RULE_RICH_TEXT_START)) ) {
                alt24=1;
            }
            switch (alt24) {
                case 1 :
                    // InternalSim.g:1437:4: (lv_description_4_0= ruleDRichText )
                    {
                    // InternalSim.g:1437:4: (lv_description_4_0= ruleDRichText )
                    // InternalSim.g:1438:5: lv_description_4_0= ruleDRichText
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimAggregateTranspositionAccess().getDescriptionDRichTextParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_23);
                    lv_description_4_0=ruleDRichText();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimAggregateTranspositionRule());
                      					}
                      					set(
                      						current,
                      						"description",
                      						lv_description_4_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:1455:3: (otherlv_5= '{' ( ( (lv_features_6_0= ruleSimQueryTransposition ) ) | (otherlv_7= 'add' otherlv_8= 'query' ( (lv_features_9_0= ruleDQuery ) ) ) )* ( (lv_types_10_0= ruleSimType ) )* otherlv_11= '}' )?
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==22) ) {
                alt27=1;
            }
            switch (alt27) {
                case 1 :
                    // InternalSim.g:1456:4: otherlv_5= '{' ( ( (lv_features_6_0= ruleSimQueryTransposition ) ) | (otherlv_7= 'add' otherlv_8= 'query' ( (lv_features_9_0= ruleDQuery ) ) ) )* ( (lv_types_10_0= ruleSimType ) )* otherlv_11= '}'
                    {
                    otherlv_5=(Token)match(input,22,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getSimAggregateTranspositionAccess().getLeftCurlyBracketKeyword_5_0());
                      			
                    }
                    // InternalSim.g:1460:4: ( ( (lv_features_6_0= ruleSimQueryTransposition ) ) | (otherlv_7= 'add' otherlv_8= 'query' ( (lv_features_9_0= ruleDQuery ) ) ) )*
                    loop25:
                    do {
                        int alt25=3;
                        switch ( input.LA(1) ) {
                        case 29:
                            {
                            int LA25_1 = input.LA(2);

                            if ( (LA25_1==32) ) {
                                alt25=1;
                            }


                            }
                            break;
                        case 34:
                            {
                            int LA25_2 = input.LA(2);

                            if ( (LA25_2==32) ) {
                                alt25=1;
                            }


                            }
                            break;
                        case 31:
                            {
                            int LA25_3 = input.LA(2);

                            if ( (LA25_3==32) ) {
                                alt25=2;
                            }


                            }
                            break;
                        case 39:
                            {
                            int LA25_4 = input.LA(2);

                            if ( (LA25_4==32) ) {
                                alt25=1;
                            }


                            }
                            break;

                        }

                        switch (alt25) {
                    	case 1 :
                    	    // InternalSim.g:1461:5: ( (lv_features_6_0= ruleSimQueryTransposition ) )
                    	    {
                    	    // InternalSim.g:1461:5: ( (lv_features_6_0= ruleSimQueryTransposition ) )
                    	    // InternalSim.g:1462:6: (lv_features_6_0= ruleSimQueryTransposition )
                    	    {
                    	    // InternalSim.g:1462:6: (lv_features_6_0= ruleSimQueryTransposition )
                    	    // InternalSim.g:1463:7: lv_features_6_0= ruleSimQueryTransposition
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getSimAggregateTranspositionAccess().getFeaturesSimQueryTranspositionParserRuleCall_5_1_0_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_24);
                    	    lv_features_6_0=ruleSimQueryTransposition();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getSimAggregateTranspositionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"features",
                    	      								lv_features_6_0,
                    	      								"com.mimacom.ddd.sm.sim.Sim.SimQueryTransposition");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalSim.g:1481:5: (otherlv_7= 'add' otherlv_8= 'query' ( (lv_features_9_0= ruleDQuery ) ) )
                    	    {
                    	    // InternalSim.g:1481:5: (otherlv_7= 'add' otherlv_8= 'query' ( (lv_features_9_0= ruleDQuery ) ) )
                    	    // InternalSim.g:1482:6: otherlv_7= 'add' otherlv_8= 'query' ( (lv_features_9_0= ruleDQuery ) )
                    	    {
                    	    otherlv_7=(Token)match(input,31,FOLLOW_25); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_7, grammarAccess.getSimAggregateTranspositionAccess().getAddKeyword_5_1_1_0());
                    	      					
                    	    }
                    	    otherlv_8=(Token)match(input,32,FOLLOW_3); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_8, grammarAccess.getSimAggregateTranspositionAccess().getQueryKeyword_5_1_1_1());
                    	      					
                    	    }
                    	    // InternalSim.g:1490:6: ( (lv_features_9_0= ruleDQuery ) )
                    	    // InternalSim.g:1491:7: (lv_features_9_0= ruleDQuery )
                    	    {
                    	    // InternalSim.g:1491:7: (lv_features_9_0= ruleDQuery )
                    	    // InternalSim.g:1492:8: lv_features_9_0= ruleDQuery
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getSimAggregateTranspositionAccess().getFeaturesDQueryParserRuleCall_5_1_1_2_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_24);
                    	    lv_features_9_0=ruleDQuery();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getSimAggregateTranspositionRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"features",
                    	      									lv_features_9_0,
                    	      									"com.mimacom.ddd.dm.dim.Dim.DQuery");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop25;
                        }
                    } while (true);

                    // InternalSim.g:1511:4: ( (lv_types_10_0= ruleSimType ) )*
                    loop26:
                    do {
                        int alt26=2;
                        int LA26_0 = input.LA(1);

                        if ( (LA26_0==29||LA26_0==31||LA26_0==34||(LA26_0>=39 && LA26_0<=40)) ) {
                            alt26=1;
                        }


                        switch (alt26) {
                    	case 1 :
                    	    // InternalSim.g:1512:5: (lv_types_10_0= ruleSimType )
                    	    {
                    	    // InternalSim.g:1512:5: (lv_types_10_0= ruleSimType )
                    	    // InternalSim.g:1513:6: lv_types_10_0= ruleSimType
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getSimAggregateTranspositionAccess().getTypesSimTypeParserRuleCall_5_2_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_24);
                    	    lv_types_10_0=ruleSimType();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getSimAggregateTranspositionRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"types",
                    	      							lv_types_10_0,
                    	      							"com.mimacom.ddd.sm.sim.Sim.SimType");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop26;
                        }
                    } while (true);

                    otherlv_11=(Token)match(input,23,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getSimAggregateTranspositionAccess().getRightCurlyBracketKeyword_5_3());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimAggregateTransposition"


    // $ANTLR start "entryRuleDAggregateKeyword"
    // InternalSim.g:1539:1: entryRuleDAggregateKeyword returns [String current=null] : iv_ruleDAggregateKeyword= ruleDAggregateKeyword EOF ;
    public final String entryRuleDAggregateKeyword() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleDAggregateKeyword = null;


        try {
            // InternalSim.g:1539:57: (iv_ruleDAggregateKeyword= ruleDAggregateKeyword EOF )
            // InternalSim.g:1540:2: iv_ruleDAggregateKeyword= ruleDAggregateKeyword EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDAggregateKeywordRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDAggregateKeyword=ruleDAggregateKeyword();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDAggregateKeyword.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDAggregateKeyword"


    // $ANTLR start "ruleDAggregateKeyword"
    // InternalSim.g:1546:1: ruleDAggregateKeyword returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= 'aggregate' ;
    public final AntlrDatatypeRuleToken ruleDAggregateKeyword() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalSim.g:1552:2: (kw= 'aggregate' )
            // InternalSim.g:1553:2: kw= 'aggregate'
            {
            kw=(Token)match(input,30,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getDAggregateKeywordAccess().getAggregateKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDAggregateKeyword"


    // $ANTLR start "entryRuleDType"
    // InternalSim.g:1561:1: entryRuleDType returns [EObject current=null] : iv_ruleDType= ruleDType EOF ;
    public final EObject entryRuleDType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDType = null;


        try {
            // InternalSim.g:1561:46: (iv_ruleDType= ruleDType EOF )
            // InternalSim.g:1562:2: iv_ruleDType= ruleDType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDType=ruleDType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDType"


    // $ANTLR start "ruleDType"
    // InternalSim.g:1568:1: ruleDType returns [EObject current=null] : (this_SimPrimitiveTransposition_0= ruleSimPrimitiveTransposition | this_DPrimitive_1= ruleDPrimitive | this_SimEnumerationTransposition_2= ruleSimEnumerationTransposition | this_DEnumeration_3= ruleDEnumeration | this_SimEntityTypeTransposition_4= ruleSimEntityTypeTransposition | this_DEntityType_5= ruleDEntityType | this_SimDetailTypeTransposition_6= ruleSimDetailTypeTransposition | this_DDetailType_7= ruleDDetailType ) ;
    public final EObject ruleDType() throws RecognitionException {
        EObject current = null;

        EObject this_SimPrimitiveTransposition_0 = null;

        EObject this_DPrimitive_1 = null;

        EObject this_SimEnumerationTransposition_2 = null;

        EObject this_DEnumeration_3 = null;

        EObject this_SimEntityTypeTransposition_4 = null;

        EObject this_DEntityType_5 = null;

        EObject this_SimDetailTypeTransposition_6 = null;

        EObject this_DDetailType_7 = null;



        	enterRule();

        try {
            // InternalSim.g:1574:2: ( (this_SimPrimitiveTransposition_0= ruleSimPrimitiveTransposition | this_DPrimitive_1= ruleDPrimitive | this_SimEnumerationTransposition_2= ruleSimEnumerationTransposition | this_DEnumeration_3= ruleDEnumeration | this_SimEntityTypeTransposition_4= ruleSimEntityTypeTransposition | this_DEntityType_5= ruleDEntityType | this_SimDetailTypeTransposition_6= ruleSimDetailTypeTransposition | this_DDetailType_7= ruleDDetailType ) )
            // InternalSim.g:1575:2: (this_SimPrimitiveTransposition_0= ruleSimPrimitiveTransposition | this_DPrimitive_1= ruleDPrimitive | this_SimEnumerationTransposition_2= ruleSimEnumerationTransposition | this_DEnumeration_3= ruleDEnumeration | this_SimEntityTypeTransposition_4= ruleSimEntityTypeTransposition | this_DEntityType_5= ruleDEntityType | this_SimDetailTypeTransposition_6= ruleSimDetailTypeTransposition | this_DDetailType_7= ruleDDetailType )
            {
            // InternalSim.g:1575:2: (this_SimPrimitiveTransposition_0= ruleSimPrimitiveTransposition | this_DPrimitive_1= ruleDPrimitive | this_SimEnumerationTransposition_2= ruleSimEnumerationTransposition | this_DEnumeration_3= ruleDEnumeration | this_SimEntityTypeTransposition_4= ruleSimEntityTypeTransposition | this_DEntityType_5= ruleDEntityType | this_SimDetailTypeTransposition_6= ruleSimDetailTypeTransposition | this_DDetailType_7= ruleDDetailType )
            int alt28=8;
            alt28 = dfa28.predict(input);
            switch (alt28) {
                case 1 :
                    // InternalSim.g:1576:3: this_SimPrimitiveTransposition_0= ruleSimPrimitiveTransposition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDTypeAccess().getSimPrimitiveTranspositionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SimPrimitiveTransposition_0=ruleSimPrimitiveTransposition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SimPrimitiveTransposition_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSim.g:1585:3: this_DPrimitive_1= ruleDPrimitive
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDTypeAccess().getDPrimitiveParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DPrimitive_1=ruleDPrimitive();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DPrimitive_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSim.g:1594:3: this_SimEnumerationTransposition_2= ruleSimEnumerationTransposition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDTypeAccess().getSimEnumerationTranspositionParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SimEnumerationTransposition_2=ruleSimEnumerationTransposition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SimEnumerationTransposition_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSim.g:1603:3: this_DEnumeration_3= ruleDEnumeration
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDTypeAccess().getDEnumerationParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DEnumeration_3=ruleDEnumeration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DEnumeration_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalSim.g:1612:3: this_SimEntityTypeTransposition_4= ruleSimEntityTypeTransposition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDTypeAccess().getSimEntityTypeTranspositionParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SimEntityTypeTransposition_4=ruleSimEntityTypeTransposition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SimEntityTypeTransposition_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalSim.g:1621:3: this_DEntityType_5= ruleDEntityType
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDTypeAccess().getDEntityTypeParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DEntityType_5=ruleDEntityType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DEntityType_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalSim.g:1630:3: this_SimDetailTypeTransposition_6= ruleSimDetailTypeTransposition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDTypeAccess().getSimDetailTypeTranspositionParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SimDetailTypeTransposition_6=ruleSimDetailTypeTransposition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SimDetailTypeTransposition_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalSim.g:1639:3: this_DDetailType_7= ruleDDetailType
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDTypeAccess().getDDetailTypeParserRuleCall_7());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DDetailType_7=ruleDDetailType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DDetailType_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDType"


    // $ANTLR start "entryRuleSimType"
    // InternalSim.g:1651:1: entryRuleSimType returns [EObject current=null] : iv_ruleSimType= ruleSimType EOF ;
    public final EObject entryRuleSimType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimType = null;


        try {
            // InternalSim.g:1651:48: (iv_ruleSimType= ruleSimType EOF )
            // InternalSim.g:1652:2: iv_ruleSimType= ruleSimType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimType=ruleSimType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimType"


    // $ANTLR start "ruleSimType"
    // InternalSim.g:1658:1: ruleSimType returns [EObject current=null] : (this_SimPrimitiveTransposition_0= ruleSimPrimitiveTransposition | (otherlv_1= 'add' this_DPrimitive_2= ruleDPrimitive ) | this_SimEnumerationTransposition_3= ruleSimEnumerationTransposition | (otherlv_4= 'add' this_DEnumeration_5= ruleDEnumeration ) | this_SimEntityTypeTransposition_6= ruleSimEntityTypeTransposition | (otherlv_7= 'add' this_DEntityType_8= ruleDEntityType ) | this_SimDetailTypeTransposition_9= ruleSimDetailTypeTransposition | (otherlv_10= 'add' this_DDetailType_11= ruleDDetailType ) ) ;
    public final EObject ruleSimType() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_7=null;
        Token otherlv_10=null;
        EObject this_SimPrimitiveTransposition_0 = null;

        EObject this_DPrimitive_2 = null;

        EObject this_SimEnumerationTransposition_3 = null;

        EObject this_DEnumeration_5 = null;

        EObject this_SimEntityTypeTransposition_6 = null;

        EObject this_DEntityType_8 = null;

        EObject this_SimDetailTypeTransposition_9 = null;

        EObject this_DDetailType_11 = null;



        	enterRule();

        try {
            // InternalSim.g:1664:2: ( (this_SimPrimitiveTransposition_0= ruleSimPrimitiveTransposition | (otherlv_1= 'add' this_DPrimitive_2= ruleDPrimitive ) | this_SimEnumerationTransposition_3= ruleSimEnumerationTransposition | (otherlv_4= 'add' this_DEnumeration_5= ruleDEnumeration ) | this_SimEntityTypeTransposition_6= ruleSimEntityTypeTransposition | (otherlv_7= 'add' this_DEntityType_8= ruleDEntityType ) | this_SimDetailTypeTransposition_9= ruleSimDetailTypeTransposition | (otherlv_10= 'add' this_DDetailType_11= ruleDDetailType ) ) )
            // InternalSim.g:1665:2: (this_SimPrimitiveTransposition_0= ruleSimPrimitiveTransposition | (otherlv_1= 'add' this_DPrimitive_2= ruleDPrimitive ) | this_SimEnumerationTransposition_3= ruleSimEnumerationTransposition | (otherlv_4= 'add' this_DEnumeration_5= ruleDEnumeration ) | this_SimEntityTypeTransposition_6= ruleSimEntityTypeTransposition | (otherlv_7= 'add' this_DEntityType_8= ruleDEntityType ) | this_SimDetailTypeTransposition_9= ruleSimDetailTypeTransposition | (otherlv_10= 'add' this_DDetailType_11= ruleDDetailType ) )
            {
            // InternalSim.g:1665:2: (this_SimPrimitiveTransposition_0= ruleSimPrimitiveTransposition | (otherlv_1= 'add' this_DPrimitive_2= ruleDPrimitive ) | this_SimEnumerationTransposition_3= ruleSimEnumerationTransposition | (otherlv_4= 'add' this_DEnumeration_5= ruleDEnumeration ) | this_SimEntityTypeTransposition_6= ruleSimEntityTypeTransposition | (otherlv_7= 'add' this_DEntityType_8= ruleDEntityType ) | this_SimDetailTypeTransposition_9= ruleSimDetailTypeTransposition | (otherlv_10= 'add' this_DDetailType_11= ruleDDetailType ) )
            int alt29=8;
            alt29 = dfa29.predict(input);
            switch (alt29) {
                case 1 :
                    // InternalSim.g:1666:3: this_SimPrimitiveTransposition_0= ruleSimPrimitiveTransposition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSimTypeAccess().getSimPrimitiveTranspositionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SimPrimitiveTransposition_0=ruleSimPrimitiveTransposition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SimPrimitiveTransposition_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSim.g:1675:3: (otherlv_1= 'add' this_DPrimitive_2= ruleDPrimitive )
                    {
                    // InternalSim.g:1675:3: (otherlv_1= 'add' this_DPrimitive_2= ruleDPrimitive )
                    // InternalSim.g:1676:4: otherlv_1= 'add' this_DPrimitive_2= ruleDPrimitive
                    {
                    otherlv_1=(Token)match(input,31,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSimTypeAccess().getAddKeyword_1_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSimTypeAccess().getDPrimitiveParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_DPrimitive_2=ruleDPrimitive();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_DPrimitive_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSim.g:1690:3: this_SimEnumerationTransposition_3= ruleSimEnumerationTransposition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSimTypeAccess().getSimEnumerationTranspositionParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SimEnumerationTransposition_3=ruleSimEnumerationTransposition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SimEnumerationTransposition_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSim.g:1699:3: (otherlv_4= 'add' this_DEnumeration_5= ruleDEnumeration )
                    {
                    // InternalSim.g:1699:3: (otherlv_4= 'add' this_DEnumeration_5= ruleDEnumeration )
                    // InternalSim.g:1700:4: otherlv_4= 'add' this_DEnumeration_5= ruleDEnumeration
                    {
                    otherlv_4=(Token)match(input,31,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getSimTypeAccess().getAddKeyword_3_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSimTypeAccess().getDEnumerationParserRuleCall_3_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_DEnumeration_5=ruleDEnumeration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_DEnumeration_5;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSim.g:1714:3: this_SimEntityTypeTransposition_6= ruleSimEntityTypeTransposition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSimTypeAccess().getSimEntityTypeTranspositionParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SimEntityTypeTransposition_6=ruleSimEntityTypeTransposition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SimEntityTypeTransposition_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalSim.g:1723:3: (otherlv_7= 'add' this_DEntityType_8= ruleDEntityType )
                    {
                    // InternalSim.g:1723:3: (otherlv_7= 'add' this_DEntityType_8= ruleDEntityType )
                    // InternalSim.g:1724:4: otherlv_7= 'add' this_DEntityType_8= ruleDEntityType
                    {
                    otherlv_7=(Token)match(input,31,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getSimTypeAccess().getAddKeyword_5_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSimTypeAccess().getDEntityTypeParserRuleCall_5_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_DEntityType_8=ruleDEntityType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_DEntityType_8;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSim.g:1738:3: this_SimDetailTypeTransposition_9= ruleSimDetailTypeTransposition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSimTypeAccess().getSimDetailTypeTranspositionParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SimDetailTypeTransposition_9=ruleSimDetailTypeTransposition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SimDetailTypeTransposition_9;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalSim.g:1747:3: (otherlv_10= 'add' this_DDetailType_11= ruleDDetailType )
                    {
                    // InternalSim.g:1747:3: (otherlv_10= 'add' this_DDetailType_11= ruleDDetailType )
                    // InternalSim.g:1748:4: otherlv_10= 'add' this_DDetailType_11= ruleDDetailType
                    {
                    otherlv_10=(Token)match(input,31,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getSimTypeAccess().getAddKeyword_7_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSimTypeAccess().getDDetailTypeParserRuleCall_7_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_DDetailType_11=ruleDDetailType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_DDetailType_11;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimType"


    // $ANTLR start "entryRuleSimPrimitiveTransposition"
    // InternalSim.g:1765:1: entryRuleSimPrimitiveTransposition returns [EObject current=null] : iv_ruleSimPrimitiveTransposition= ruleSimPrimitiveTransposition EOF ;
    public final EObject entryRuleSimPrimitiveTransposition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimPrimitiveTransposition = null;


        try {
            // InternalSim.g:1765:66: (iv_ruleSimPrimitiveTransposition= ruleSimPrimitiveTransposition EOF )
            // InternalSim.g:1766:2: iv_ruleSimPrimitiveTransposition= ruleSimPrimitiveTransposition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimPrimitiveTranspositionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimPrimitiveTransposition=ruleSimPrimitiveTransposition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimPrimitiveTransposition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimPrimitiveTransposition"


    // $ANTLR start "ruleSimPrimitiveTransposition"
    // InternalSim.g:1772:1: ruleSimPrimitiveTransposition returns [EObject current=null] : ( () ( (otherlv_1= 'grab' otherlv_2= 'primitive' ( (lv_transpositionRule_3_0= ruleSimGrabPrimitiveRule ) ) ) | (otherlv_4= 'ditch' otherlv_5= 'primitive' ( (lv_transpositionRule_6_0= ruleSimDitchPrimitiveRule ) ) ) ) ( (lv_description_7_0= ruleDRichText ) )? (otherlv_8= '{' (otherlv_9= 'add' ( (lv_constraints_10_0= ruleDConstraint ) ) )* otherlv_11= '}' )? ) ;
    public final EObject ruleSimPrimitiveTransposition() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        EObject lv_transpositionRule_3_0 = null;

        EObject lv_transpositionRule_6_0 = null;

        EObject lv_description_7_0 = null;

        EObject lv_constraints_10_0 = null;



        	enterRule();

        try {
            // InternalSim.g:1778:2: ( ( () ( (otherlv_1= 'grab' otherlv_2= 'primitive' ( (lv_transpositionRule_3_0= ruleSimGrabPrimitiveRule ) ) ) | (otherlv_4= 'ditch' otherlv_5= 'primitive' ( (lv_transpositionRule_6_0= ruleSimDitchPrimitiveRule ) ) ) ) ( (lv_description_7_0= ruleDRichText ) )? (otherlv_8= '{' (otherlv_9= 'add' ( (lv_constraints_10_0= ruleDConstraint ) ) )* otherlv_11= '}' )? ) )
            // InternalSim.g:1779:2: ( () ( (otherlv_1= 'grab' otherlv_2= 'primitive' ( (lv_transpositionRule_3_0= ruleSimGrabPrimitiveRule ) ) ) | (otherlv_4= 'ditch' otherlv_5= 'primitive' ( (lv_transpositionRule_6_0= ruleSimDitchPrimitiveRule ) ) ) ) ( (lv_description_7_0= ruleDRichText ) )? (otherlv_8= '{' (otherlv_9= 'add' ( (lv_constraints_10_0= ruleDConstraint ) ) )* otherlv_11= '}' )? )
            {
            // InternalSim.g:1779:2: ( () ( (otherlv_1= 'grab' otherlv_2= 'primitive' ( (lv_transpositionRule_3_0= ruleSimGrabPrimitiveRule ) ) ) | (otherlv_4= 'ditch' otherlv_5= 'primitive' ( (lv_transpositionRule_6_0= ruleSimDitchPrimitiveRule ) ) ) ) ( (lv_description_7_0= ruleDRichText ) )? (otherlv_8= '{' (otherlv_9= 'add' ( (lv_constraints_10_0= ruleDConstraint ) ) )* otherlv_11= '}' )? )
            // InternalSim.g:1780:3: () ( (otherlv_1= 'grab' otherlv_2= 'primitive' ( (lv_transpositionRule_3_0= ruleSimGrabPrimitiveRule ) ) ) | (otherlv_4= 'ditch' otherlv_5= 'primitive' ( (lv_transpositionRule_6_0= ruleSimDitchPrimitiveRule ) ) ) ) ( (lv_description_7_0= ruleDRichText ) )? (otherlv_8= '{' (otherlv_9= 'add' ( (lv_constraints_10_0= ruleDConstraint ) ) )* otherlv_11= '}' )?
            {
            // InternalSim.g:1780:3: ()
            // InternalSim.g:1781:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSimPrimitiveTranspositionAccess().getTPrimitiveTranspositionAction_0(),
              					current);
              			
            }

            }

            // InternalSim.g:1787:3: ( (otherlv_1= 'grab' otherlv_2= 'primitive' ( (lv_transpositionRule_3_0= ruleSimGrabPrimitiveRule ) ) ) | (otherlv_4= 'ditch' otherlv_5= 'primitive' ( (lv_transpositionRule_6_0= ruleSimDitchPrimitiveRule ) ) ) )
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==29) ) {
                alt30=1;
            }
            else if ( (LA30_0==34) ) {
                alt30=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;
            }
            switch (alt30) {
                case 1 :
                    // InternalSim.g:1788:4: (otherlv_1= 'grab' otherlv_2= 'primitive' ( (lv_transpositionRule_3_0= ruleSimGrabPrimitiveRule ) ) )
                    {
                    // InternalSim.g:1788:4: (otherlv_1= 'grab' otherlv_2= 'primitive' ( (lv_transpositionRule_3_0= ruleSimGrabPrimitiveRule ) ) )
                    // InternalSim.g:1789:5: otherlv_1= 'grab' otherlv_2= 'primitive' ( (lv_transpositionRule_3_0= ruleSimGrabPrimitiveRule ) )
                    {
                    otherlv_1=(Token)match(input,29,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getSimPrimitiveTranspositionAccess().getGrabKeyword_1_0_0());
                      				
                    }
                    otherlv_2=(Token)match(input,33,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getSimPrimitiveTranspositionAccess().getPrimitiveKeyword_1_0_1());
                      				
                    }
                    // InternalSim.g:1797:5: ( (lv_transpositionRule_3_0= ruleSimGrabPrimitiveRule ) )
                    // InternalSim.g:1798:6: (lv_transpositionRule_3_0= ruleSimGrabPrimitiveRule )
                    {
                    // InternalSim.g:1798:6: (lv_transpositionRule_3_0= ruleSimGrabPrimitiveRule )
                    // InternalSim.g:1799:7: lv_transpositionRule_3_0= ruleSimGrabPrimitiveRule
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSimPrimitiveTranspositionAccess().getTranspositionRuleSimGrabPrimitiveRuleParserRuleCall_1_0_2_0());
                      						
                    }
                    pushFollow(FOLLOW_22);
                    lv_transpositionRule_3_0=ruleSimGrabPrimitiveRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSimPrimitiveTranspositionRule());
                      							}
                      							set(
                      								current,
                      								"transpositionRule",
                      								lv_transpositionRule_3_0,
                      								"com.mimacom.ddd.sm.sim.Sim.SimGrabPrimitiveRule");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:1818:4: (otherlv_4= 'ditch' otherlv_5= 'primitive' ( (lv_transpositionRule_6_0= ruleSimDitchPrimitiveRule ) ) )
                    {
                    // InternalSim.g:1818:4: (otherlv_4= 'ditch' otherlv_5= 'primitive' ( (lv_transpositionRule_6_0= ruleSimDitchPrimitiveRule ) ) )
                    // InternalSim.g:1819:5: otherlv_4= 'ditch' otherlv_5= 'primitive' ( (lv_transpositionRule_6_0= ruleSimDitchPrimitiveRule ) )
                    {
                    otherlv_4=(Token)match(input,34,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getSimPrimitiveTranspositionAccess().getDitchKeyword_1_1_0());
                      				
                    }
                    otherlv_5=(Token)match(input,33,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getSimPrimitiveTranspositionAccess().getPrimitiveKeyword_1_1_1());
                      				
                    }
                    // InternalSim.g:1827:5: ( (lv_transpositionRule_6_0= ruleSimDitchPrimitiveRule ) )
                    // InternalSim.g:1828:6: (lv_transpositionRule_6_0= ruleSimDitchPrimitiveRule )
                    {
                    // InternalSim.g:1828:6: (lv_transpositionRule_6_0= ruleSimDitchPrimitiveRule )
                    // InternalSim.g:1829:7: lv_transpositionRule_6_0= ruleSimDitchPrimitiveRule
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSimPrimitiveTranspositionAccess().getTranspositionRuleSimDitchPrimitiveRuleParserRuleCall_1_1_2_0());
                      						
                    }
                    pushFollow(FOLLOW_22);
                    lv_transpositionRule_6_0=ruleSimDitchPrimitiveRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSimPrimitiveTranspositionRule());
                      							}
                      							set(
                      								current,
                      								"transpositionRule",
                      								lv_transpositionRule_6_0,
                      								"com.mimacom.ddd.sm.sim.Sim.SimDitchPrimitiveRule");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalSim.g:1848:3: ( (lv_description_7_0= ruleDRichText ) )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( ((LA31_0>=RULE_PLAIN_TEXT_ONLY && LA31_0<=RULE_RICH_TEXT_START)) ) {
                alt31=1;
            }
            switch (alt31) {
                case 1 :
                    // InternalSim.g:1849:4: (lv_description_7_0= ruleDRichText )
                    {
                    // InternalSim.g:1849:4: (lv_description_7_0= ruleDRichText )
                    // InternalSim.g:1850:5: lv_description_7_0= ruleDRichText
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimPrimitiveTranspositionAccess().getDescriptionDRichTextParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_23);
                    lv_description_7_0=ruleDRichText();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimPrimitiveTranspositionRule());
                      					}
                      					set(
                      						current,
                      						"description",
                      						lv_description_7_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:1867:3: (otherlv_8= '{' (otherlv_9= 'add' ( (lv_constraints_10_0= ruleDConstraint ) ) )* otherlv_11= '}' )?
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==22) ) {
                alt33=1;
            }
            switch (alt33) {
                case 1 :
                    // InternalSim.g:1868:4: otherlv_8= '{' (otherlv_9= 'add' ( (lv_constraints_10_0= ruleDConstraint ) ) )* otherlv_11= '}'
                    {
                    otherlv_8=(Token)match(input,22,FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getSimPrimitiveTranspositionAccess().getLeftCurlyBracketKeyword_3_0());
                      			
                    }
                    // InternalSim.g:1872:4: (otherlv_9= 'add' ( (lv_constraints_10_0= ruleDConstraint ) ) )*
                    loop32:
                    do {
                        int alt32=2;
                        int LA32_0 = input.LA(1);

                        if ( (LA32_0==31) ) {
                            alt32=1;
                        }


                        switch (alt32) {
                    	case 1 :
                    	    // InternalSim.g:1873:5: otherlv_9= 'add' ( (lv_constraints_10_0= ruleDConstraint ) )
                    	    {
                    	    otherlv_9=(Token)match(input,31,FOLLOW_31); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_9, grammarAccess.getSimPrimitiveTranspositionAccess().getAddKeyword_3_1_0());
                    	      				
                    	    }
                    	    // InternalSim.g:1877:5: ( (lv_constraints_10_0= ruleDConstraint ) )
                    	    // InternalSim.g:1878:6: (lv_constraints_10_0= ruleDConstraint )
                    	    {
                    	    // InternalSim.g:1878:6: (lv_constraints_10_0= ruleDConstraint )
                    	    // InternalSim.g:1879:7: lv_constraints_10_0= ruleDConstraint
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getSimPrimitiveTranspositionAccess().getConstraintsDConstraintParserRuleCall_3_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_30);
                    	    lv_constraints_10_0=ruleDConstraint();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getSimPrimitiveTranspositionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"constraints",
                    	      								lv_constraints_10_0,
                    	      								"com.mimacom.ddd.dm.dim.Dim.DConstraint");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop32;
                        }
                    } while (true);

                    otherlv_11=(Token)match(input,23,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getSimPrimitiveTranspositionAccess().getRightCurlyBracketKeyword_3_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimPrimitiveTransposition"


    // $ANTLR start "entryRuleSimEnumerationTransposition"
    // InternalSim.g:1906:1: entryRuleSimEnumerationTransposition returns [EObject current=null] : iv_ruleSimEnumerationTransposition= ruleSimEnumerationTransposition EOF ;
    public final EObject entryRuleSimEnumerationTransposition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimEnumerationTransposition = null;


        try {
            // InternalSim.g:1906:68: (iv_ruleSimEnumerationTransposition= ruleSimEnumerationTransposition EOF )
            // InternalSim.g:1907:2: iv_ruleSimEnumerationTransposition= ruleSimEnumerationTransposition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimEnumerationTranspositionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimEnumerationTransposition=ruleSimEnumerationTransposition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimEnumerationTransposition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimEnumerationTransposition"


    // $ANTLR start "ruleSimEnumerationTransposition"
    // InternalSim.g:1913:1: ruleSimEnumerationTransposition returns [EObject current=null] : ( () ( (otherlv_1= 'grab' otherlv_2= 'enumeration' ( (lv_transpositionRule_3_0= ruleSimGrabEnumerationRule ) ) ) | (otherlv_4= 'ditch' otherlv_5= 'enumeration' ( (lv_transpositionRule_6_0= ruleSimDitchEnumerationRule ) ) ) ) ( (lv_description_7_0= ruleDRichText ) )? (otherlv_8= '{' ( ( (lv_literals_9_0= ruleSimLiteral ) ) (otherlv_10= ',' ( (lv_literals_11_0= ruleSimLiteral ) ) )* )? (otherlv_12= 'add' ( (lv_constraints_13_0= ruleDConstraint ) ) )* otherlv_14= '}' )? ) ;
    public final EObject ruleSimEnumerationTransposition() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        EObject lv_transpositionRule_3_0 = null;

        EObject lv_transpositionRule_6_0 = null;

        EObject lv_description_7_0 = null;

        EObject lv_literals_9_0 = null;

        EObject lv_literals_11_0 = null;

        EObject lv_constraints_13_0 = null;



        	enterRule();

        try {
            // InternalSim.g:1919:2: ( ( () ( (otherlv_1= 'grab' otherlv_2= 'enumeration' ( (lv_transpositionRule_3_0= ruleSimGrabEnumerationRule ) ) ) | (otherlv_4= 'ditch' otherlv_5= 'enumeration' ( (lv_transpositionRule_6_0= ruleSimDitchEnumerationRule ) ) ) ) ( (lv_description_7_0= ruleDRichText ) )? (otherlv_8= '{' ( ( (lv_literals_9_0= ruleSimLiteral ) ) (otherlv_10= ',' ( (lv_literals_11_0= ruleSimLiteral ) ) )* )? (otherlv_12= 'add' ( (lv_constraints_13_0= ruleDConstraint ) ) )* otherlv_14= '}' )? ) )
            // InternalSim.g:1920:2: ( () ( (otherlv_1= 'grab' otherlv_2= 'enumeration' ( (lv_transpositionRule_3_0= ruleSimGrabEnumerationRule ) ) ) | (otherlv_4= 'ditch' otherlv_5= 'enumeration' ( (lv_transpositionRule_6_0= ruleSimDitchEnumerationRule ) ) ) ) ( (lv_description_7_0= ruleDRichText ) )? (otherlv_8= '{' ( ( (lv_literals_9_0= ruleSimLiteral ) ) (otherlv_10= ',' ( (lv_literals_11_0= ruleSimLiteral ) ) )* )? (otherlv_12= 'add' ( (lv_constraints_13_0= ruleDConstraint ) ) )* otherlv_14= '}' )? )
            {
            // InternalSim.g:1920:2: ( () ( (otherlv_1= 'grab' otherlv_2= 'enumeration' ( (lv_transpositionRule_3_0= ruleSimGrabEnumerationRule ) ) ) | (otherlv_4= 'ditch' otherlv_5= 'enumeration' ( (lv_transpositionRule_6_0= ruleSimDitchEnumerationRule ) ) ) ) ( (lv_description_7_0= ruleDRichText ) )? (otherlv_8= '{' ( ( (lv_literals_9_0= ruleSimLiteral ) ) (otherlv_10= ',' ( (lv_literals_11_0= ruleSimLiteral ) ) )* )? (otherlv_12= 'add' ( (lv_constraints_13_0= ruleDConstraint ) ) )* otherlv_14= '}' )? )
            // InternalSim.g:1921:3: () ( (otherlv_1= 'grab' otherlv_2= 'enumeration' ( (lv_transpositionRule_3_0= ruleSimGrabEnumerationRule ) ) ) | (otherlv_4= 'ditch' otherlv_5= 'enumeration' ( (lv_transpositionRule_6_0= ruleSimDitchEnumerationRule ) ) ) ) ( (lv_description_7_0= ruleDRichText ) )? (otherlv_8= '{' ( ( (lv_literals_9_0= ruleSimLiteral ) ) (otherlv_10= ',' ( (lv_literals_11_0= ruleSimLiteral ) ) )* )? (otherlv_12= 'add' ( (lv_constraints_13_0= ruleDConstraint ) ) )* otherlv_14= '}' )?
            {
            // InternalSim.g:1921:3: ()
            // InternalSim.g:1922:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSimEnumerationTranspositionAccess().getTEnumerationTranspositionAction_0(),
              					current);
              			
            }

            }

            // InternalSim.g:1928:3: ( (otherlv_1= 'grab' otherlv_2= 'enumeration' ( (lv_transpositionRule_3_0= ruleSimGrabEnumerationRule ) ) ) | (otherlv_4= 'ditch' otherlv_5= 'enumeration' ( (lv_transpositionRule_6_0= ruleSimDitchEnumerationRule ) ) ) )
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==29) ) {
                alt34=1;
            }
            else if ( (LA34_0==34) ) {
                alt34=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 34, 0, input);

                throw nvae;
            }
            switch (alt34) {
                case 1 :
                    // InternalSim.g:1929:4: (otherlv_1= 'grab' otherlv_2= 'enumeration' ( (lv_transpositionRule_3_0= ruleSimGrabEnumerationRule ) ) )
                    {
                    // InternalSim.g:1929:4: (otherlv_1= 'grab' otherlv_2= 'enumeration' ( (lv_transpositionRule_3_0= ruleSimGrabEnumerationRule ) ) )
                    // InternalSim.g:1930:5: otherlv_1= 'grab' otherlv_2= 'enumeration' ( (lv_transpositionRule_3_0= ruleSimGrabEnumerationRule ) )
                    {
                    otherlv_1=(Token)match(input,29,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getSimEnumerationTranspositionAccess().getGrabKeyword_1_0_0());
                      				
                    }
                    otherlv_2=(Token)match(input,35,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getSimEnumerationTranspositionAccess().getEnumerationKeyword_1_0_1());
                      				
                    }
                    // InternalSim.g:1938:5: ( (lv_transpositionRule_3_0= ruleSimGrabEnumerationRule ) )
                    // InternalSim.g:1939:6: (lv_transpositionRule_3_0= ruleSimGrabEnumerationRule )
                    {
                    // InternalSim.g:1939:6: (lv_transpositionRule_3_0= ruleSimGrabEnumerationRule )
                    // InternalSim.g:1940:7: lv_transpositionRule_3_0= ruleSimGrabEnumerationRule
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSimEnumerationTranspositionAccess().getTranspositionRuleSimGrabEnumerationRuleParserRuleCall_1_0_2_0());
                      						
                    }
                    pushFollow(FOLLOW_22);
                    lv_transpositionRule_3_0=ruleSimGrabEnumerationRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSimEnumerationTranspositionRule());
                      							}
                      							set(
                      								current,
                      								"transpositionRule",
                      								lv_transpositionRule_3_0,
                      								"com.mimacom.ddd.sm.sim.Sim.SimGrabEnumerationRule");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:1959:4: (otherlv_4= 'ditch' otherlv_5= 'enumeration' ( (lv_transpositionRule_6_0= ruleSimDitchEnumerationRule ) ) )
                    {
                    // InternalSim.g:1959:4: (otherlv_4= 'ditch' otherlv_5= 'enumeration' ( (lv_transpositionRule_6_0= ruleSimDitchEnumerationRule ) ) )
                    // InternalSim.g:1960:5: otherlv_4= 'ditch' otherlv_5= 'enumeration' ( (lv_transpositionRule_6_0= ruleSimDitchEnumerationRule ) )
                    {
                    otherlv_4=(Token)match(input,34,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getSimEnumerationTranspositionAccess().getDitchKeyword_1_1_0());
                      				
                    }
                    otherlv_5=(Token)match(input,35,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getSimEnumerationTranspositionAccess().getEnumerationKeyword_1_1_1());
                      				
                    }
                    // InternalSim.g:1968:5: ( (lv_transpositionRule_6_0= ruleSimDitchEnumerationRule ) )
                    // InternalSim.g:1969:6: (lv_transpositionRule_6_0= ruleSimDitchEnumerationRule )
                    {
                    // InternalSim.g:1969:6: (lv_transpositionRule_6_0= ruleSimDitchEnumerationRule )
                    // InternalSim.g:1970:7: lv_transpositionRule_6_0= ruleSimDitchEnumerationRule
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSimEnumerationTranspositionAccess().getTranspositionRuleSimDitchEnumerationRuleParserRuleCall_1_1_2_0());
                      						
                    }
                    pushFollow(FOLLOW_22);
                    lv_transpositionRule_6_0=ruleSimDitchEnumerationRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSimEnumerationTranspositionRule());
                      							}
                      							set(
                      								current,
                      								"transpositionRule",
                      								lv_transpositionRule_6_0,
                      								"com.mimacom.ddd.sm.sim.Sim.SimDitchEnumerationRule");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalSim.g:1989:3: ( (lv_description_7_0= ruleDRichText ) )?
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( ((LA35_0>=RULE_PLAIN_TEXT_ONLY && LA35_0<=RULE_RICH_TEXT_START)) ) {
                alt35=1;
            }
            switch (alt35) {
                case 1 :
                    // InternalSim.g:1990:4: (lv_description_7_0= ruleDRichText )
                    {
                    // InternalSim.g:1990:4: (lv_description_7_0= ruleDRichText )
                    // InternalSim.g:1991:5: lv_description_7_0= ruleDRichText
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimEnumerationTranspositionAccess().getDescriptionDRichTextParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_23);
                    lv_description_7_0=ruleDRichText();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimEnumerationTranspositionRule());
                      					}
                      					set(
                      						current,
                      						"description",
                      						lv_description_7_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:2008:3: (otherlv_8= '{' ( ( (lv_literals_9_0= ruleSimLiteral ) ) (otherlv_10= ',' ( (lv_literals_11_0= ruleSimLiteral ) ) )* )? (otherlv_12= 'add' ( (lv_constraints_13_0= ruleDConstraint ) ) )* otherlv_14= '}' )?
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==22) ) {
                alt39=1;
            }
            switch (alt39) {
                case 1 :
                    // InternalSim.g:2009:4: otherlv_8= '{' ( ( (lv_literals_9_0= ruleSimLiteral ) ) (otherlv_10= ',' ( (lv_literals_11_0= ruleSimLiteral ) ) )* )? (otherlv_12= 'add' ( (lv_constraints_13_0= ruleDConstraint ) ) )* otherlv_14= '}'
                    {
                    otherlv_8=(Token)match(input,22,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getSimEnumerationTranspositionAccess().getLeftCurlyBracketKeyword_3_0());
                      			
                    }
                    // InternalSim.g:2013:4: ( ( (lv_literals_9_0= ruleSimLiteral ) ) (otherlv_10= ',' ( (lv_literals_11_0= ruleSimLiteral ) ) )* )?
                    int alt37=2;
                    int LA37_0 = input.LA(1);

                    if ( (LA37_0==29||LA37_0==34) ) {
                        alt37=1;
                    }
                    else if ( (LA37_0==31) ) {
                        int LA37_2 = input.LA(2);

                        if ( (LA37_2==RULE_ID) ) {
                            alt37=1;
                        }
                    }
                    switch (alt37) {
                        case 1 :
                            // InternalSim.g:2014:5: ( (lv_literals_9_0= ruleSimLiteral ) ) (otherlv_10= ',' ( (lv_literals_11_0= ruleSimLiteral ) ) )*
                            {
                            // InternalSim.g:2014:5: ( (lv_literals_9_0= ruleSimLiteral ) )
                            // InternalSim.g:2015:6: (lv_literals_9_0= ruleSimLiteral )
                            {
                            // InternalSim.g:2015:6: (lv_literals_9_0= ruleSimLiteral )
                            // InternalSim.g:2016:7: lv_literals_9_0= ruleSimLiteral
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getSimEnumerationTranspositionAccess().getLiteralsSimLiteralParserRuleCall_3_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_33);
                            lv_literals_9_0=ruleSimLiteral();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getSimEnumerationTranspositionRule());
                              							}
                              							add(
                              								current,
                              								"literals",
                              								lv_literals_9_0,
                              								"com.mimacom.ddd.sm.sim.Sim.SimLiteral");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalSim.g:2033:5: (otherlv_10= ',' ( (lv_literals_11_0= ruleSimLiteral ) ) )*
                            loop36:
                            do {
                                int alt36=2;
                                int LA36_0 = input.LA(1);

                                if ( (LA36_0==36) ) {
                                    alt36=1;
                                }


                                switch (alt36) {
                            	case 1 :
                            	    // InternalSim.g:2034:6: otherlv_10= ',' ( (lv_literals_11_0= ruleSimLiteral ) )
                            	    {
                            	    otherlv_10=(Token)match(input,36,FOLLOW_34); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_10, grammarAccess.getSimEnumerationTranspositionAccess().getCommaKeyword_3_1_1_0());
                            	      					
                            	    }
                            	    // InternalSim.g:2038:6: ( (lv_literals_11_0= ruleSimLiteral ) )
                            	    // InternalSim.g:2039:7: (lv_literals_11_0= ruleSimLiteral )
                            	    {
                            	    // InternalSim.g:2039:7: (lv_literals_11_0= ruleSimLiteral )
                            	    // InternalSim.g:2040:8: lv_literals_11_0= ruleSimLiteral
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getSimEnumerationTranspositionAccess().getLiteralsSimLiteralParserRuleCall_3_1_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_33);
                            	    lv_literals_11_0=ruleSimLiteral();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getSimEnumerationTranspositionRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"literals",
                            	      									lv_literals_11_0,
                            	      									"com.mimacom.ddd.sm.sim.Sim.SimLiteral");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop36;
                                }
                            } while (true);


                            }
                            break;

                    }

                    // InternalSim.g:2059:4: (otherlv_12= 'add' ( (lv_constraints_13_0= ruleDConstraint ) ) )*
                    loop38:
                    do {
                        int alt38=2;
                        int LA38_0 = input.LA(1);

                        if ( (LA38_0==31) ) {
                            alt38=1;
                        }


                        switch (alt38) {
                    	case 1 :
                    	    // InternalSim.g:2060:5: otherlv_12= 'add' ( (lv_constraints_13_0= ruleDConstraint ) )
                    	    {
                    	    otherlv_12=(Token)match(input,31,FOLLOW_31); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_12, grammarAccess.getSimEnumerationTranspositionAccess().getAddKeyword_3_2_0());
                    	      				
                    	    }
                    	    // InternalSim.g:2064:5: ( (lv_constraints_13_0= ruleDConstraint ) )
                    	    // InternalSim.g:2065:6: (lv_constraints_13_0= ruleDConstraint )
                    	    {
                    	    // InternalSim.g:2065:6: (lv_constraints_13_0= ruleDConstraint )
                    	    // InternalSim.g:2066:7: lv_constraints_13_0= ruleDConstraint
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getSimEnumerationTranspositionAccess().getConstraintsDConstraintParserRuleCall_3_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_30);
                    	    lv_constraints_13_0=ruleDConstraint();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getSimEnumerationTranspositionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"constraints",
                    	      								lv_constraints_13_0,
                    	      								"com.mimacom.ddd.dm.dim.Dim.DConstraint");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop38;
                        }
                    } while (true);

                    otherlv_14=(Token)match(input,23,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getSimEnumerationTranspositionAccess().getRightCurlyBracketKeyword_3_3());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimEnumerationTransposition"


    // $ANTLR start "entryRuleSimLiteral"
    // InternalSim.g:2093:1: entryRuleSimLiteral returns [EObject current=null] : iv_ruleSimLiteral= ruleSimLiteral EOF ;
    public final EObject entryRuleSimLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimLiteral = null;


        try {
            // InternalSim.g:2093:51: (iv_ruleSimLiteral= ruleSimLiteral EOF )
            // InternalSim.g:2094:2: iv_ruleSimLiteral= ruleSimLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimLiteral=ruleSimLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimLiteral"


    // $ANTLR start "ruleSimLiteral"
    // InternalSim.g:2100:1: ruleSimLiteral returns [EObject current=null] : (this_SimLiteralTransposition_0= ruleSimLiteralTransposition | (otherlv_1= 'add' this_DLiteral_2= ruleDLiteral ) ) ;
    public final EObject ruleSimLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_SimLiteralTransposition_0 = null;

        EObject this_DLiteral_2 = null;



        	enterRule();

        try {
            // InternalSim.g:2106:2: ( (this_SimLiteralTransposition_0= ruleSimLiteralTransposition | (otherlv_1= 'add' this_DLiteral_2= ruleDLiteral ) ) )
            // InternalSim.g:2107:2: (this_SimLiteralTransposition_0= ruleSimLiteralTransposition | (otherlv_1= 'add' this_DLiteral_2= ruleDLiteral ) )
            {
            // InternalSim.g:2107:2: (this_SimLiteralTransposition_0= ruleSimLiteralTransposition | (otherlv_1= 'add' this_DLiteral_2= ruleDLiteral ) )
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==29||LA40_0==34) ) {
                alt40=1;
            }
            else if ( (LA40_0==31) ) {
                alt40=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 40, 0, input);

                throw nvae;
            }
            switch (alt40) {
                case 1 :
                    // InternalSim.g:2108:3: this_SimLiteralTransposition_0= ruleSimLiteralTransposition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSimLiteralAccess().getSimLiteralTranspositionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SimLiteralTransposition_0=ruleSimLiteralTransposition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SimLiteralTransposition_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSim.g:2117:3: (otherlv_1= 'add' this_DLiteral_2= ruleDLiteral )
                    {
                    // InternalSim.g:2117:3: (otherlv_1= 'add' this_DLiteral_2= ruleDLiteral )
                    // InternalSim.g:2118:4: otherlv_1= 'add' this_DLiteral_2= ruleDLiteral
                    {
                    otherlv_1=(Token)match(input,31,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSimLiteralAccess().getAddKeyword_1_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSimLiteralAccess().getDLiteralParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_DLiteral_2=ruleDLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_DLiteral_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimLiteral"


    // $ANTLR start "entryRuleSimLiteralTransposition"
    // InternalSim.g:2135:1: entryRuleSimLiteralTransposition returns [EObject current=null] : iv_ruleSimLiteralTransposition= ruleSimLiteralTransposition EOF ;
    public final EObject entryRuleSimLiteralTransposition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimLiteralTransposition = null;


        try {
            // InternalSim.g:2135:64: (iv_ruleSimLiteralTransposition= ruleSimLiteralTransposition EOF )
            // InternalSim.g:2136:2: iv_ruleSimLiteralTransposition= ruleSimLiteralTransposition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimLiteralTranspositionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimLiteralTransposition=ruleSimLiteralTransposition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimLiteralTransposition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimLiteralTransposition"


    // $ANTLR start "ruleSimLiteralTransposition"
    // InternalSim.g:2142:1: ruleSimLiteralTransposition returns [EObject current=null] : ( () ( (otherlv_1= 'grab' ( (lv_transpositionRule_2_0= ruleSimGrabEnumerationLiteralRule ) ) ) | (otherlv_3= 'ditch' ( (lv_transpositionRule_4_0= ruleSimDitchEnumerationLiteralRule ) ) ) ) ( (lv_description_5_0= ruleDRichText ) )? ) ;
    public final EObject ruleSimLiteralTransposition() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_transpositionRule_2_0 = null;

        EObject lv_transpositionRule_4_0 = null;

        EObject lv_description_5_0 = null;



        	enterRule();

        try {
            // InternalSim.g:2148:2: ( ( () ( (otherlv_1= 'grab' ( (lv_transpositionRule_2_0= ruleSimGrabEnumerationLiteralRule ) ) ) | (otherlv_3= 'ditch' ( (lv_transpositionRule_4_0= ruleSimDitchEnumerationLiteralRule ) ) ) ) ( (lv_description_5_0= ruleDRichText ) )? ) )
            // InternalSim.g:2149:2: ( () ( (otherlv_1= 'grab' ( (lv_transpositionRule_2_0= ruleSimGrabEnumerationLiteralRule ) ) ) | (otherlv_3= 'ditch' ( (lv_transpositionRule_4_0= ruleSimDitchEnumerationLiteralRule ) ) ) ) ( (lv_description_5_0= ruleDRichText ) )? )
            {
            // InternalSim.g:2149:2: ( () ( (otherlv_1= 'grab' ( (lv_transpositionRule_2_0= ruleSimGrabEnumerationLiteralRule ) ) ) | (otherlv_3= 'ditch' ( (lv_transpositionRule_4_0= ruleSimDitchEnumerationLiteralRule ) ) ) ) ( (lv_description_5_0= ruleDRichText ) )? )
            // InternalSim.g:2150:3: () ( (otherlv_1= 'grab' ( (lv_transpositionRule_2_0= ruleSimGrabEnumerationLiteralRule ) ) ) | (otherlv_3= 'ditch' ( (lv_transpositionRule_4_0= ruleSimDitchEnumerationLiteralRule ) ) ) ) ( (lv_description_5_0= ruleDRichText ) )?
            {
            // InternalSim.g:2150:3: ()
            // InternalSim.g:2151:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSimLiteralTranspositionAccess().getTLiteralTranspositionAction_0(),
              					current);
              			
            }

            }

            // InternalSim.g:2157:3: ( (otherlv_1= 'grab' ( (lv_transpositionRule_2_0= ruleSimGrabEnumerationLiteralRule ) ) ) | (otherlv_3= 'ditch' ( (lv_transpositionRule_4_0= ruleSimDitchEnumerationLiteralRule ) ) ) )
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( (LA41_0==29) ) {
                alt41=1;
            }
            else if ( (LA41_0==34) ) {
                alt41=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 41, 0, input);

                throw nvae;
            }
            switch (alt41) {
                case 1 :
                    // InternalSim.g:2158:4: (otherlv_1= 'grab' ( (lv_transpositionRule_2_0= ruleSimGrabEnumerationLiteralRule ) ) )
                    {
                    // InternalSim.g:2158:4: (otherlv_1= 'grab' ( (lv_transpositionRule_2_0= ruleSimGrabEnumerationLiteralRule ) ) )
                    // InternalSim.g:2159:5: otherlv_1= 'grab' ( (lv_transpositionRule_2_0= ruleSimGrabEnumerationLiteralRule ) )
                    {
                    otherlv_1=(Token)match(input,29,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getSimLiteralTranspositionAccess().getGrabKeyword_1_0_0());
                      				
                    }
                    // InternalSim.g:2163:5: ( (lv_transpositionRule_2_0= ruleSimGrabEnumerationLiteralRule ) )
                    // InternalSim.g:2164:6: (lv_transpositionRule_2_0= ruleSimGrabEnumerationLiteralRule )
                    {
                    // InternalSim.g:2164:6: (lv_transpositionRule_2_0= ruleSimGrabEnumerationLiteralRule )
                    // InternalSim.g:2165:7: lv_transpositionRule_2_0= ruleSimGrabEnumerationLiteralRule
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSimLiteralTranspositionAccess().getTranspositionRuleSimGrabEnumerationLiteralRuleParserRuleCall_1_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_35);
                    lv_transpositionRule_2_0=ruleSimGrabEnumerationLiteralRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSimLiteralTranspositionRule());
                      							}
                      							set(
                      								current,
                      								"transpositionRule",
                      								lv_transpositionRule_2_0,
                      								"com.mimacom.ddd.sm.sim.Sim.SimGrabEnumerationLiteralRule");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:2184:4: (otherlv_3= 'ditch' ( (lv_transpositionRule_4_0= ruleSimDitchEnumerationLiteralRule ) ) )
                    {
                    // InternalSim.g:2184:4: (otherlv_3= 'ditch' ( (lv_transpositionRule_4_0= ruleSimDitchEnumerationLiteralRule ) ) )
                    // InternalSim.g:2185:5: otherlv_3= 'ditch' ( (lv_transpositionRule_4_0= ruleSimDitchEnumerationLiteralRule ) )
                    {
                    otherlv_3=(Token)match(input,34,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getSimLiteralTranspositionAccess().getDitchKeyword_1_1_0());
                      				
                    }
                    // InternalSim.g:2189:5: ( (lv_transpositionRule_4_0= ruleSimDitchEnumerationLiteralRule ) )
                    // InternalSim.g:2190:6: (lv_transpositionRule_4_0= ruleSimDitchEnumerationLiteralRule )
                    {
                    // InternalSim.g:2190:6: (lv_transpositionRule_4_0= ruleSimDitchEnumerationLiteralRule )
                    // InternalSim.g:2191:7: lv_transpositionRule_4_0= ruleSimDitchEnumerationLiteralRule
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSimLiteralTranspositionAccess().getTranspositionRuleSimDitchEnumerationLiteralRuleParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_35);
                    lv_transpositionRule_4_0=ruleSimDitchEnumerationLiteralRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSimLiteralTranspositionRule());
                      							}
                      							set(
                      								current,
                      								"transpositionRule",
                      								lv_transpositionRule_4_0,
                      								"com.mimacom.ddd.sm.sim.Sim.SimDitchEnumerationLiteralRule");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalSim.g:2210:3: ( (lv_description_5_0= ruleDRichText ) )?
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( ((LA42_0>=RULE_PLAIN_TEXT_ONLY && LA42_0<=RULE_RICH_TEXT_START)) ) {
                alt42=1;
            }
            switch (alt42) {
                case 1 :
                    // InternalSim.g:2211:4: (lv_description_5_0= ruleDRichText )
                    {
                    // InternalSim.g:2211:4: (lv_description_5_0= ruleDRichText )
                    // InternalSim.g:2212:5: lv_description_5_0= ruleDRichText
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimLiteralTranspositionAccess().getDescriptionDRichTextParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_description_5_0=ruleDRichText();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimLiteralTranspositionRule());
                      					}
                      					set(
                      						current,
                      						"description",
                      						lv_description_5_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimLiteralTransposition"


    // $ANTLR start "entryRuleSimEntityTypeTransposition"
    // InternalSim.g:2233:1: entryRuleSimEntityTypeTransposition returns [EObject current=null] : iv_ruleSimEntityTypeTransposition= ruleSimEntityTypeTransposition EOF ;
    public final EObject entryRuleSimEntityTypeTransposition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimEntityTypeTransposition = null;


        try {
            // InternalSim.g:2233:67: (iv_ruleSimEntityTypeTransposition= ruleSimEntityTypeTransposition EOF )
            // InternalSim.g:2234:2: iv_ruleSimEntityTypeTransposition= ruleSimEntityTypeTransposition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimEntityTypeTranspositionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimEntityTypeTransposition=ruleSimEntityTypeTransposition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimEntityTypeTransposition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimEntityTypeTransposition"


    // $ANTLR start "ruleSimEntityTypeTransposition"
    // InternalSim.g:2240:1: ruleSimEntityTypeTransposition returns [EObject current=null] : ( () ( (otherlv_1= 'grab' ( (lv_root_2_0= 'root' ) )? otherlv_3= 'entity' ( (lv_transpositionRule_4_0= ruleSimGrabComplexTypeRule ) ) ) | (otherlv_5= 'ditch' ( (lv_root_6_0= 'root' ) )? otherlv_7= 'entity' ( (lv_transpositionRule_8_0= ruleSimDitchComplexTypeRule ) ) ) | (otherlv_9= 'morph' ( (lv_root_10_0= 'root' ) )? otherlv_11= 'entity' ( (lv_transpositionRule_12_0= ruleSimMorphComplexTypeRule ) ) ) | (otherlv_13= 'fuse' ( (lv_root_14_0= 'root' ) )? otherlv_15= 'entity' ( (lv_transpositionRule_16_0= ruleSimFuseComplexTypeRule ) ) ) ) ( (lv_description_17_0= ruleDRichText ) )? (this_TComplexTypeFeatures_18= ruleTComplexTypeFeatures[$current] )? ) ;
    public final EObject ruleSimEntityTypeTransposition() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_root_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token lv_root_6_0=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token lv_root_10_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token lv_root_14_0=null;
        Token otherlv_15=null;
        EObject lv_transpositionRule_4_0 = null;

        EObject lv_transpositionRule_8_0 = null;

        EObject lv_transpositionRule_12_0 = null;

        EObject lv_transpositionRule_16_0 = null;

        EObject lv_description_17_0 = null;

        EObject this_TComplexTypeFeatures_18 = null;



        	enterRule();

        try {
            // InternalSim.g:2246:2: ( ( () ( (otherlv_1= 'grab' ( (lv_root_2_0= 'root' ) )? otherlv_3= 'entity' ( (lv_transpositionRule_4_0= ruleSimGrabComplexTypeRule ) ) ) | (otherlv_5= 'ditch' ( (lv_root_6_0= 'root' ) )? otherlv_7= 'entity' ( (lv_transpositionRule_8_0= ruleSimDitchComplexTypeRule ) ) ) | (otherlv_9= 'morph' ( (lv_root_10_0= 'root' ) )? otherlv_11= 'entity' ( (lv_transpositionRule_12_0= ruleSimMorphComplexTypeRule ) ) ) | (otherlv_13= 'fuse' ( (lv_root_14_0= 'root' ) )? otherlv_15= 'entity' ( (lv_transpositionRule_16_0= ruleSimFuseComplexTypeRule ) ) ) ) ( (lv_description_17_0= ruleDRichText ) )? (this_TComplexTypeFeatures_18= ruleTComplexTypeFeatures[$current] )? ) )
            // InternalSim.g:2247:2: ( () ( (otherlv_1= 'grab' ( (lv_root_2_0= 'root' ) )? otherlv_3= 'entity' ( (lv_transpositionRule_4_0= ruleSimGrabComplexTypeRule ) ) ) | (otherlv_5= 'ditch' ( (lv_root_6_0= 'root' ) )? otherlv_7= 'entity' ( (lv_transpositionRule_8_0= ruleSimDitchComplexTypeRule ) ) ) | (otherlv_9= 'morph' ( (lv_root_10_0= 'root' ) )? otherlv_11= 'entity' ( (lv_transpositionRule_12_0= ruleSimMorphComplexTypeRule ) ) ) | (otherlv_13= 'fuse' ( (lv_root_14_0= 'root' ) )? otherlv_15= 'entity' ( (lv_transpositionRule_16_0= ruleSimFuseComplexTypeRule ) ) ) ) ( (lv_description_17_0= ruleDRichText ) )? (this_TComplexTypeFeatures_18= ruleTComplexTypeFeatures[$current] )? )
            {
            // InternalSim.g:2247:2: ( () ( (otherlv_1= 'grab' ( (lv_root_2_0= 'root' ) )? otherlv_3= 'entity' ( (lv_transpositionRule_4_0= ruleSimGrabComplexTypeRule ) ) ) | (otherlv_5= 'ditch' ( (lv_root_6_0= 'root' ) )? otherlv_7= 'entity' ( (lv_transpositionRule_8_0= ruleSimDitchComplexTypeRule ) ) ) | (otherlv_9= 'morph' ( (lv_root_10_0= 'root' ) )? otherlv_11= 'entity' ( (lv_transpositionRule_12_0= ruleSimMorphComplexTypeRule ) ) ) | (otherlv_13= 'fuse' ( (lv_root_14_0= 'root' ) )? otherlv_15= 'entity' ( (lv_transpositionRule_16_0= ruleSimFuseComplexTypeRule ) ) ) ) ( (lv_description_17_0= ruleDRichText ) )? (this_TComplexTypeFeatures_18= ruleTComplexTypeFeatures[$current] )? )
            // InternalSim.g:2248:3: () ( (otherlv_1= 'grab' ( (lv_root_2_0= 'root' ) )? otherlv_3= 'entity' ( (lv_transpositionRule_4_0= ruleSimGrabComplexTypeRule ) ) ) | (otherlv_5= 'ditch' ( (lv_root_6_0= 'root' ) )? otherlv_7= 'entity' ( (lv_transpositionRule_8_0= ruleSimDitchComplexTypeRule ) ) ) | (otherlv_9= 'morph' ( (lv_root_10_0= 'root' ) )? otherlv_11= 'entity' ( (lv_transpositionRule_12_0= ruleSimMorphComplexTypeRule ) ) ) | (otherlv_13= 'fuse' ( (lv_root_14_0= 'root' ) )? otherlv_15= 'entity' ( (lv_transpositionRule_16_0= ruleSimFuseComplexTypeRule ) ) ) ) ( (lv_description_17_0= ruleDRichText ) )? (this_TComplexTypeFeatures_18= ruleTComplexTypeFeatures[$current] )?
            {
            // InternalSim.g:2248:3: ()
            // InternalSim.g:2249:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSimEntityTypeTranspositionAccess().getTEntityTypeTranspositionAction_0(),
              					current);
              			
            }

            }

            // InternalSim.g:2255:3: ( (otherlv_1= 'grab' ( (lv_root_2_0= 'root' ) )? otherlv_3= 'entity' ( (lv_transpositionRule_4_0= ruleSimGrabComplexTypeRule ) ) ) | (otherlv_5= 'ditch' ( (lv_root_6_0= 'root' ) )? otherlv_7= 'entity' ( (lv_transpositionRule_8_0= ruleSimDitchComplexTypeRule ) ) ) | (otherlv_9= 'morph' ( (lv_root_10_0= 'root' ) )? otherlv_11= 'entity' ( (lv_transpositionRule_12_0= ruleSimMorphComplexTypeRule ) ) ) | (otherlv_13= 'fuse' ( (lv_root_14_0= 'root' ) )? otherlv_15= 'entity' ( (lv_transpositionRule_16_0= ruleSimFuseComplexTypeRule ) ) ) )
            int alt47=4;
            switch ( input.LA(1) ) {
            case 29:
                {
                alt47=1;
                }
                break;
            case 34:
                {
                alt47=2;
                }
                break;
            case 39:
                {
                alt47=3;
                }
                break;
            case 40:
                {
                alt47=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 47, 0, input);

                throw nvae;
            }

            switch (alt47) {
                case 1 :
                    // InternalSim.g:2256:4: (otherlv_1= 'grab' ( (lv_root_2_0= 'root' ) )? otherlv_3= 'entity' ( (lv_transpositionRule_4_0= ruleSimGrabComplexTypeRule ) ) )
                    {
                    // InternalSim.g:2256:4: (otherlv_1= 'grab' ( (lv_root_2_0= 'root' ) )? otherlv_3= 'entity' ( (lv_transpositionRule_4_0= ruleSimGrabComplexTypeRule ) ) )
                    // InternalSim.g:2257:5: otherlv_1= 'grab' ( (lv_root_2_0= 'root' ) )? otherlv_3= 'entity' ( (lv_transpositionRule_4_0= ruleSimGrabComplexTypeRule ) )
                    {
                    otherlv_1=(Token)match(input,29,FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getSimEntityTypeTranspositionAccess().getGrabKeyword_1_0_0());
                      				
                    }
                    // InternalSim.g:2261:5: ( (lv_root_2_0= 'root' ) )?
                    int alt43=2;
                    int LA43_0 = input.LA(1);

                    if ( (LA43_0==37) ) {
                        alt43=1;
                    }
                    switch (alt43) {
                        case 1 :
                            // InternalSim.g:2262:6: (lv_root_2_0= 'root' )
                            {
                            // InternalSim.g:2262:6: (lv_root_2_0= 'root' )
                            // InternalSim.g:2263:7: lv_root_2_0= 'root'
                            {
                            lv_root_2_0=(Token)match(input,37,FOLLOW_37); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_root_2_0, grammarAccess.getSimEntityTypeTranspositionAccess().getRootRootKeyword_1_0_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSimEntityTypeTranspositionRule());
                              							}
                              							setWithLastConsumed(current, "root", true, "root");
                              						
                            }

                            }


                            }
                            break;

                    }

                    otherlv_3=(Token)match(input,38,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getSimEntityTypeTranspositionAccess().getEntityKeyword_1_0_2());
                      				
                    }
                    // InternalSim.g:2279:5: ( (lv_transpositionRule_4_0= ruleSimGrabComplexTypeRule ) )
                    // InternalSim.g:2280:6: (lv_transpositionRule_4_0= ruleSimGrabComplexTypeRule )
                    {
                    // InternalSim.g:2280:6: (lv_transpositionRule_4_0= ruleSimGrabComplexTypeRule )
                    // InternalSim.g:2281:7: lv_transpositionRule_4_0= ruleSimGrabComplexTypeRule
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSimEntityTypeTranspositionAccess().getTranspositionRuleSimGrabComplexTypeRuleParserRuleCall_1_0_3_0());
                      						
                    }
                    pushFollow(FOLLOW_22);
                    lv_transpositionRule_4_0=ruleSimGrabComplexTypeRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSimEntityTypeTranspositionRule());
                      							}
                      							set(
                      								current,
                      								"transpositionRule",
                      								lv_transpositionRule_4_0,
                      								"com.mimacom.ddd.sm.sim.Sim.SimGrabComplexTypeRule");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:2300:4: (otherlv_5= 'ditch' ( (lv_root_6_0= 'root' ) )? otherlv_7= 'entity' ( (lv_transpositionRule_8_0= ruleSimDitchComplexTypeRule ) ) )
                    {
                    // InternalSim.g:2300:4: (otherlv_5= 'ditch' ( (lv_root_6_0= 'root' ) )? otherlv_7= 'entity' ( (lv_transpositionRule_8_0= ruleSimDitchComplexTypeRule ) ) )
                    // InternalSim.g:2301:5: otherlv_5= 'ditch' ( (lv_root_6_0= 'root' ) )? otherlv_7= 'entity' ( (lv_transpositionRule_8_0= ruleSimDitchComplexTypeRule ) )
                    {
                    otherlv_5=(Token)match(input,34,FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getSimEntityTypeTranspositionAccess().getDitchKeyword_1_1_0());
                      				
                    }
                    // InternalSim.g:2305:5: ( (lv_root_6_0= 'root' ) )?
                    int alt44=2;
                    int LA44_0 = input.LA(1);

                    if ( (LA44_0==37) ) {
                        alt44=1;
                    }
                    switch (alt44) {
                        case 1 :
                            // InternalSim.g:2306:6: (lv_root_6_0= 'root' )
                            {
                            // InternalSim.g:2306:6: (lv_root_6_0= 'root' )
                            // InternalSim.g:2307:7: lv_root_6_0= 'root'
                            {
                            lv_root_6_0=(Token)match(input,37,FOLLOW_37); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_root_6_0, grammarAccess.getSimEntityTypeTranspositionAccess().getRootRootKeyword_1_1_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSimEntityTypeTranspositionRule());
                              							}
                              							setWithLastConsumed(current, "root", true, "root");
                              						
                            }

                            }


                            }
                            break;

                    }

                    otherlv_7=(Token)match(input,38,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getSimEntityTypeTranspositionAccess().getEntityKeyword_1_1_2());
                      				
                    }
                    // InternalSim.g:2323:5: ( (lv_transpositionRule_8_0= ruleSimDitchComplexTypeRule ) )
                    // InternalSim.g:2324:6: (lv_transpositionRule_8_0= ruleSimDitchComplexTypeRule )
                    {
                    // InternalSim.g:2324:6: (lv_transpositionRule_8_0= ruleSimDitchComplexTypeRule )
                    // InternalSim.g:2325:7: lv_transpositionRule_8_0= ruleSimDitchComplexTypeRule
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSimEntityTypeTranspositionAccess().getTranspositionRuleSimDitchComplexTypeRuleParserRuleCall_1_1_3_0());
                      						
                    }
                    pushFollow(FOLLOW_22);
                    lv_transpositionRule_8_0=ruleSimDitchComplexTypeRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSimEntityTypeTranspositionRule());
                      							}
                      							set(
                      								current,
                      								"transpositionRule",
                      								lv_transpositionRule_8_0,
                      								"com.mimacom.ddd.sm.sim.Sim.SimDitchComplexTypeRule");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSim.g:2344:4: (otherlv_9= 'morph' ( (lv_root_10_0= 'root' ) )? otherlv_11= 'entity' ( (lv_transpositionRule_12_0= ruleSimMorphComplexTypeRule ) ) )
                    {
                    // InternalSim.g:2344:4: (otherlv_9= 'morph' ( (lv_root_10_0= 'root' ) )? otherlv_11= 'entity' ( (lv_transpositionRule_12_0= ruleSimMorphComplexTypeRule ) ) )
                    // InternalSim.g:2345:5: otherlv_9= 'morph' ( (lv_root_10_0= 'root' ) )? otherlv_11= 'entity' ( (lv_transpositionRule_12_0= ruleSimMorphComplexTypeRule ) )
                    {
                    otherlv_9=(Token)match(input,39,FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getSimEntityTypeTranspositionAccess().getMorphKeyword_1_2_0());
                      				
                    }
                    // InternalSim.g:2349:5: ( (lv_root_10_0= 'root' ) )?
                    int alt45=2;
                    int LA45_0 = input.LA(1);

                    if ( (LA45_0==37) ) {
                        alt45=1;
                    }
                    switch (alt45) {
                        case 1 :
                            // InternalSim.g:2350:6: (lv_root_10_0= 'root' )
                            {
                            // InternalSim.g:2350:6: (lv_root_10_0= 'root' )
                            // InternalSim.g:2351:7: lv_root_10_0= 'root'
                            {
                            lv_root_10_0=(Token)match(input,37,FOLLOW_37); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_root_10_0, grammarAccess.getSimEntityTypeTranspositionAccess().getRootRootKeyword_1_2_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSimEntityTypeTranspositionRule());
                              							}
                              							setWithLastConsumed(current, "root", true, "root");
                              						
                            }

                            }


                            }
                            break;

                    }

                    otherlv_11=(Token)match(input,38,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_11, grammarAccess.getSimEntityTypeTranspositionAccess().getEntityKeyword_1_2_2());
                      				
                    }
                    // InternalSim.g:2367:5: ( (lv_transpositionRule_12_0= ruleSimMorphComplexTypeRule ) )
                    // InternalSim.g:2368:6: (lv_transpositionRule_12_0= ruleSimMorphComplexTypeRule )
                    {
                    // InternalSim.g:2368:6: (lv_transpositionRule_12_0= ruleSimMorphComplexTypeRule )
                    // InternalSim.g:2369:7: lv_transpositionRule_12_0= ruleSimMorphComplexTypeRule
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSimEntityTypeTranspositionAccess().getTranspositionRuleSimMorphComplexTypeRuleParserRuleCall_1_2_3_0());
                      						
                    }
                    pushFollow(FOLLOW_22);
                    lv_transpositionRule_12_0=ruleSimMorphComplexTypeRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSimEntityTypeTranspositionRule());
                      							}
                      							set(
                      								current,
                      								"transpositionRule",
                      								lv_transpositionRule_12_0,
                      								"com.mimacom.ddd.sm.sim.Sim.SimMorphComplexTypeRule");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalSim.g:2388:4: (otherlv_13= 'fuse' ( (lv_root_14_0= 'root' ) )? otherlv_15= 'entity' ( (lv_transpositionRule_16_0= ruleSimFuseComplexTypeRule ) ) )
                    {
                    // InternalSim.g:2388:4: (otherlv_13= 'fuse' ( (lv_root_14_0= 'root' ) )? otherlv_15= 'entity' ( (lv_transpositionRule_16_0= ruleSimFuseComplexTypeRule ) ) )
                    // InternalSim.g:2389:5: otherlv_13= 'fuse' ( (lv_root_14_0= 'root' ) )? otherlv_15= 'entity' ( (lv_transpositionRule_16_0= ruleSimFuseComplexTypeRule ) )
                    {
                    otherlv_13=(Token)match(input,40,FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_13, grammarAccess.getSimEntityTypeTranspositionAccess().getFuseKeyword_1_3_0());
                      				
                    }
                    // InternalSim.g:2393:5: ( (lv_root_14_0= 'root' ) )?
                    int alt46=2;
                    int LA46_0 = input.LA(1);

                    if ( (LA46_0==37) ) {
                        alt46=1;
                    }
                    switch (alt46) {
                        case 1 :
                            // InternalSim.g:2394:6: (lv_root_14_0= 'root' )
                            {
                            // InternalSim.g:2394:6: (lv_root_14_0= 'root' )
                            // InternalSim.g:2395:7: lv_root_14_0= 'root'
                            {
                            lv_root_14_0=(Token)match(input,37,FOLLOW_37); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_root_14_0, grammarAccess.getSimEntityTypeTranspositionAccess().getRootRootKeyword_1_3_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSimEntityTypeTranspositionRule());
                              							}
                              							setWithLastConsumed(current, "root", true, "root");
                              						
                            }

                            }


                            }
                            break;

                    }

                    otherlv_15=(Token)match(input,38,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_15, grammarAccess.getSimEntityTypeTranspositionAccess().getEntityKeyword_1_3_2());
                      				
                    }
                    // InternalSim.g:2411:5: ( (lv_transpositionRule_16_0= ruleSimFuseComplexTypeRule ) )
                    // InternalSim.g:2412:6: (lv_transpositionRule_16_0= ruleSimFuseComplexTypeRule )
                    {
                    // InternalSim.g:2412:6: (lv_transpositionRule_16_0= ruleSimFuseComplexTypeRule )
                    // InternalSim.g:2413:7: lv_transpositionRule_16_0= ruleSimFuseComplexTypeRule
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSimEntityTypeTranspositionAccess().getTranspositionRuleSimFuseComplexTypeRuleParserRuleCall_1_3_3_0());
                      						
                    }
                    pushFollow(FOLLOW_22);
                    lv_transpositionRule_16_0=ruleSimFuseComplexTypeRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSimEntityTypeTranspositionRule());
                      							}
                      							set(
                      								current,
                      								"transpositionRule",
                      								lv_transpositionRule_16_0,
                      								"com.mimacom.ddd.sm.sim.Sim.SimFuseComplexTypeRule");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalSim.g:2432:3: ( (lv_description_17_0= ruleDRichText ) )?
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( ((LA48_0>=RULE_PLAIN_TEXT_ONLY && LA48_0<=RULE_RICH_TEXT_START)) ) {
                alt48=1;
            }
            switch (alt48) {
                case 1 :
                    // InternalSim.g:2433:4: (lv_description_17_0= ruleDRichText )
                    {
                    // InternalSim.g:2433:4: (lv_description_17_0= ruleDRichText )
                    // InternalSim.g:2434:5: lv_description_17_0= ruleDRichText
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimEntityTypeTranspositionAccess().getDescriptionDRichTextParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_23);
                    lv_description_17_0=ruleDRichText();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimEntityTypeTranspositionRule());
                      					}
                      					set(
                      						current,
                      						"description",
                      						lv_description_17_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:2451:3: (this_TComplexTypeFeatures_18= ruleTComplexTypeFeatures[$current] )?
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==22) ) {
                alt49=1;
            }
            switch (alt49) {
                case 1 :
                    // InternalSim.g:2452:4: this_TComplexTypeFeatures_18= ruleTComplexTypeFeatures[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getSimEntityTypeTranspositionRule());
                      				}
                      				newCompositeNode(grammarAccess.getSimEntityTypeTranspositionAccess().getTComplexTypeFeaturesParserRuleCall_3());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_TComplexTypeFeatures_18=ruleTComplexTypeFeatures(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_TComplexTypeFeatures_18;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimEntityTypeTransposition"


    // $ANTLR start "entryRuleSimDetailTypeTransposition"
    // InternalSim.g:2468:1: entryRuleSimDetailTypeTransposition returns [EObject current=null] : iv_ruleSimDetailTypeTransposition= ruleSimDetailTypeTransposition EOF ;
    public final EObject entryRuleSimDetailTypeTransposition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimDetailTypeTransposition = null;


        try {
            // InternalSim.g:2468:67: (iv_ruleSimDetailTypeTransposition= ruleSimDetailTypeTransposition EOF )
            // InternalSim.g:2469:2: iv_ruleSimDetailTypeTransposition= ruleSimDetailTypeTransposition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimDetailTypeTranspositionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimDetailTypeTransposition=ruleSimDetailTypeTransposition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimDetailTypeTransposition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimDetailTypeTransposition"


    // $ANTLR start "ruleSimDetailTypeTransposition"
    // InternalSim.g:2475:1: ruleSimDetailTypeTransposition returns [EObject current=null] : ( () ( (otherlv_1= 'grab' otherlv_2= 'detail' ( (lv_transpositionRule_3_0= ruleSimGrabComplexTypeRule ) ) ) | (otherlv_4= 'ditch' otherlv_5= 'detail' ( (lv_transpositionRule_6_0= ruleSimDitchComplexTypeRule ) ) ) | (otherlv_7= 'morph' otherlv_8= 'detail' ( (lv_transpositionRule_9_0= ruleSimMorphComplexTypeRule ) ) ) | (otherlv_10= 'fuse' otherlv_11= 'detail' ( (lv_transpositionRule_12_0= ruleSimFuseComplexTypeRule ) ) ) ) ( (lv_description_13_0= ruleDRichText ) )? (this_TComplexTypeFeatures_14= ruleTComplexTypeFeatures[$current] )? ) ;
    public final EObject ruleSimDetailTypeTransposition() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        EObject lv_transpositionRule_3_0 = null;

        EObject lv_transpositionRule_6_0 = null;

        EObject lv_transpositionRule_9_0 = null;

        EObject lv_transpositionRule_12_0 = null;

        EObject lv_description_13_0 = null;

        EObject this_TComplexTypeFeatures_14 = null;



        	enterRule();

        try {
            // InternalSim.g:2481:2: ( ( () ( (otherlv_1= 'grab' otherlv_2= 'detail' ( (lv_transpositionRule_3_0= ruleSimGrabComplexTypeRule ) ) ) | (otherlv_4= 'ditch' otherlv_5= 'detail' ( (lv_transpositionRule_6_0= ruleSimDitchComplexTypeRule ) ) ) | (otherlv_7= 'morph' otherlv_8= 'detail' ( (lv_transpositionRule_9_0= ruleSimMorphComplexTypeRule ) ) ) | (otherlv_10= 'fuse' otherlv_11= 'detail' ( (lv_transpositionRule_12_0= ruleSimFuseComplexTypeRule ) ) ) ) ( (lv_description_13_0= ruleDRichText ) )? (this_TComplexTypeFeatures_14= ruleTComplexTypeFeatures[$current] )? ) )
            // InternalSim.g:2482:2: ( () ( (otherlv_1= 'grab' otherlv_2= 'detail' ( (lv_transpositionRule_3_0= ruleSimGrabComplexTypeRule ) ) ) | (otherlv_4= 'ditch' otherlv_5= 'detail' ( (lv_transpositionRule_6_0= ruleSimDitchComplexTypeRule ) ) ) | (otherlv_7= 'morph' otherlv_8= 'detail' ( (lv_transpositionRule_9_0= ruleSimMorphComplexTypeRule ) ) ) | (otherlv_10= 'fuse' otherlv_11= 'detail' ( (lv_transpositionRule_12_0= ruleSimFuseComplexTypeRule ) ) ) ) ( (lv_description_13_0= ruleDRichText ) )? (this_TComplexTypeFeatures_14= ruleTComplexTypeFeatures[$current] )? )
            {
            // InternalSim.g:2482:2: ( () ( (otherlv_1= 'grab' otherlv_2= 'detail' ( (lv_transpositionRule_3_0= ruleSimGrabComplexTypeRule ) ) ) | (otherlv_4= 'ditch' otherlv_5= 'detail' ( (lv_transpositionRule_6_0= ruleSimDitchComplexTypeRule ) ) ) | (otherlv_7= 'morph' otherlv_8= 'detail' ( (lv_transpositionRule_9_0= ruleSimMorphComplexTypeRule ) ) ) | (otherlv_10= 'fuse' otherlv_11= 'detail' ( (lv_transpositionRule_12_0= ruleSimFuseComplexTypeRule ) ) ) ) ( (lv_description_13_0= ruleDRichText ) )? (this_TComplexTypeFeatures_14= ruleTComplexTypeFeatures[$current] )? )
            // InternalSim.g:2483:3: () ( (otherlv_1= 'grab' otherlv_2= 'detail' ( (lv_transpositionRule_3_0= ruleSimGrabComplexTypeRule ) ) ) | (otherlv_4= 'ditch' otherlv_5= 'detail' ( (lv_transpositionRule_6_0= ruleSimDitchComplexTypeRule ) ) ) | (otherlv_7= 'morph' otherlv_8= 'detail' ( (lv_transpositionRule_9_0= ruleSimMorphComplexTypeRule ) ) ) | (otherlv_10= 'fuse' otherlv_11= 'detail' ( (lv_transpositionRule_12_0= ruleSimFuseComplexTypeRule ) ) ) ) ( (lv_description_13_0= ruleDRichText ) )? (this_TComplexTypeFeatures_14= ruleTComplexTypeFeatures[$current] )?
            {
            // InternalSim.g:2483:3: ()
            // InternalSim.g:2484:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSimDetailTypeTranspositionAccess().getTDetailTypeTranspositionAction_0(),
              					current);
              			
            }

            }

            // InternalSim.g:2490:3: ( (otherlv_1= 'grab' otherlv_2= 'detail' ( (lv_transpositionRule_3_0= ruleSimGrabComplexTypeRule ) ) ) | (otherlv_4= 'ditch' otherlv_5= 'detail' ( (lv_transpositionRule_6_0= ruleSimDitchComplexTypeRule ) ) ) | (otherlv_7= 'morph' otherlv_8= 'detail' ( (lv_transpositionRule_9_0= ruleSimMorphComplexTypeRule ) ) ) | (otherlv_10= 'fuse' otherlv_11= 'detail' ( (lv_transpositionRule_12_0= ruleSimFuseComplexTypeRule ) ) ) )
            int alt50=4;
            switch ( input.LA(1) ) {
            case 29:
                {
                alt50=1;
                }
                break;
            case 34:
                {
                alt50=2;
                }
                break;
            case 39:
                {
                alt50=3;
                }
                break;
            case 40:
                {
                alt50=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 50, 0, input);

                throw nvae;
            }

            switch (alt50) {
                case 1 :
                    // InternalSim.g:2491:4: (otherlv_1= 'grab' otherlv_2= 'detail' ( (lv_transpositionRule_3_0= ruleSimGrabComplexTypeRule ) ) )
                    {
                    // InternalSim.g:2491:4: (otherlv_1= 'grab' otherlv_2= 'detail' ( (lv_transpositionRule_3_0= ruleSimGrabComplexTypeRule ) ) )
                    // InternalSim.g:2492:5: otherlv_1= 'grab' otherlv_2= 'detail' ( (lv_transpositionRule_3_0= ruleSimGrabComplexTypeRule ) )
                    {
                    otherlv_1=(Token)match(input,29,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getSimDetailTypeTranspositionAccess().getGrabKeyword_1_0_0());
                      				
                    }
                    otherlv_2=(Token)match(input,41,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getSimDetailTypeTranspositionAccess().getDetailKeyword_1_0_1());
                      				
                    }
                    // InternalSim.g:2500:5: ( (lv_transpositionRule_3_0= ruleSimGrabComplexTypeRule ) )
                    // InternalSim.g:2501:6: (lv_transpositionRule_3_0= ruleSimGrabComplexTypeRule )
                    {
                    // InternalSim.g:2501:6: (lv_transpositionRule_3_0= ruleSimGrabComplexTypeRule )
                    // InternalSim.g:2502:7: lv_transpositionRule_3_0= ruleSimGrabComplexTypeRule
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSimDetailTypeTranspositionAccess().getTranspositionRuleSimGrabComplexTypeRuleParserRuleCall_1_0_2_0());
                      						
                    }
                    pushFollow(FOLLOW_22);
                    lv_transpositionRule_3_0=ruleSimGrabComplexTypeRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSimDetailTypeTranspositionRule());
                      							}
                      							set(
                      								current,
                      								"transpositionRule",
                      								lv_transpositionRule_3_0,
                      								"com.mimacom.ddd.sm.sim.Sim.SimGrabComplexTypeRule");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:2521:4: (otherlv_4= 'ditch' otherlv_5= 'detail' ( (lv_transpositionRule_6_0= ruleSimDitchComplexTypeRule ) ) )
                    {
                    // InternalSim.g:2521:4: (otherlv_4= 'ditch' otherlv_5= 'detail' ( (lv_transpositionRule_6_0= ruleSimDitchComplexTypeRule ) ) )
                    // InternalSim.g:2522:5: otherlv_4= 'ditch' otherlv_5= 'detail' ( (lv_transpositionRule_6_0= ruleSimDitchComplexTypeRule ) )
                    {
                    otherlv_4=(Token)match(input,34,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getSimDetailTypeTranspositionAccess().getDitchKeyword_1_1_0());
                      				
                    }
                    otherlv_5=(Token)match(input,41,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getSimDetailTypeTranspositionAccess().getDetailKeyword_1_1_1());
                      				
                    }
                    // InternalSim.g:2530:5: ( (lv_transpositionRule_6_0= ruleSimDitchComplexTypeRule ) )
                    // InternalSim.g:2531:6: (lv_transpositionRule_6_0= ruleSimDitchComplexTypeRule )
                    {
                    // InternalSim.g:2531:6: (lv_transpositionRule_6_0= ruleSimDitchComplexTypeRule )
                    // InternalSim.g:2532:7: lv_transpositionRule_6_0= ruleSimDitchComplexTypeRule
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSimDetailTypeTranspositionAccess().getTranspositionRuleSimDitchComplexTypeRuleParserRuleCall_1_1_2_0());
                      						
                    }
                    pushFollow(FOLLOW_22);
                    lv_transpositionRule_6_0=ruleSimDitchComplexTypeRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSimDetailTypeTranspositionRule());
                      							}
                      							set(
                      								current,
                      								"transpositionRule",
                      								lv_transpositionRule_6_0,
                      								"com.mimacom.ddd.sm.sim.Sim.SimDitchComplexTypeRule");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSim.g:2551:4: (otherlv_7= 'morph' otherlv_8= 'detail' ( (lv_transpositionRule_9_0= ruleSimMorphComplexTypeRule ) ) )
                    {
                    // InternalSim.g:2551:4: (otherlv_7= 'morph' otherlv_8= 'detail' ( (lv_transpositionRule_9_0= ruleSimMorphComplexTypeRule ) ) )
                    // InternalSim.g:2552:5: otherlv_7= 'morph' otherlv_8= 'detail' ( (lv_transpositionRule_9_0= ruleSimMorphComplexTypeRule ) )
                    {
                    otherlv_7=(Token)match(input,39,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getSimDetailTypeTranspositionAccess().getMorphKeyword_1_2_0());
                      				
                    }
                    otherlv_8=(Token)match(input,41,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_8, grammarAccess.getSimDetailTypeTranspositionAccess().getDetailKeyword_1_2_1());
                      				
                    }
                    // InternalSim.g:2560:5: ( (lv_transpositionRule_9_0= ruleSimMorphComplexTypeRule ) )
                    // InternalSim.g:2561:6: (lv_transpositionRule_9_0= ruleSimMorphComplexTypeRule )
                    {
                    // InternalSim.g:2561:6: (lv_transpositionRule_9_0= ruleSimMorphComplexTypeRule )
                    // InternalSim.g:2562:7: lv_transpositionRule_9_0= ruleSimMorphComplexTypeRule
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSimDetailTypeTranspositionAccess().getTranspositionRuleSimMorphComplexTypeRuleParserRuleCall_1_2_2_0());
                      						
                    }
                    pushFollow(FOLLOW_22);
                    lv_transpositionRule_9_0=ruleSimMorphComplexTypeRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSimDetailTypeTranspositionRule());
                      							}
                      							set(
                      								current,
                      								"transpositionRule",
                      								lv_transpositionRule_9_0,
                      								"com.mimacom.ddd.sm.sim.Sim.SimMorphComplexTypeRule");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalSim.g:2581:4: (otherlv_10= 'fuse' otherlv_11= 'detail' ( (lv_transpositionRule_12_0= ruleSimFuseComplexTypeRule ) ) )
                    {
                    // InternalSim.g:2581:4: (otherlv_10= 'fuse' otherlv_11= 'detail' ( (lv_transpositionRule_12_0= ruleSimFuseComplexTypeRule ) ) )
                    // InternalSim.g:2582:5: otherlv_10= 'fuse' otherlv_11= 'detail' ( (lv_transpositionRule_12_0= ruleSimFuseComplexTypeRule ) )
                    {
                    otherlv_10=(Token)match(input,40,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_10, grammarAccess.getSimDetailTypeTranspositionAccess().getFuseKeyword_1_3_0());
                      				
                    }
                    otherlv_11=(Token)match(input,41,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_11, grammarAccess.getSimDetailTypeTranspositionAccess().getDetailKeyword_1_3_1());
                      				
                    }
                    // InternalSim.g:2590:5: ( (lv_transpositionRule_12_0= ruleSimFuseComplexTypeRule ) )
                    // InternalSim.g:2591:6: (lv_transpositionRule_12_0= ruleSimFuseComplexTypeRule )
                    {
                    // InternalSim.g:2591:6: (lv_transpositionRule_12_0= ruleSimFuseComplexTypeRule )
                    // InternalSim.g:2592:7: lv_transpositionRule_12_0= ruleSimFuseComplexTypeRule
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSimDetailTypeTranspositionAccess().getTranspositionRuleSimFuseComplexTypeRuleParserRuleCall_1_3_2_0());
                      						
                    }
                    pushFollow(FOLLOW_22);
                    lv_transpositionRule_12_0=ruleSimFuseComplexTypeRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSimDetailTypeTranspositionRule());
                      							}
                      							set(
                      								current,
                      								"transpositionRule",
                      								lv_transpositionRule_12_0,
                      								"com.mimacom.ddd.sm.sim.Sim.SimFuseComplexTypeRule");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalSim.g:2611:3: ( (lv_description_13_0= ruleDRichText ) )?
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( ((LA51_0>=RULE_PLAIN_TEXT_ONLY && LA51_0<=RULE_RICH_TEXT_START)) ) {
                alt51=1;
            }
            switch (alt51) {
                case 1 :
                    // InternalSim.g:2612:4: (lv_description_13_0= ruleDRichText )
                    {
                    // InternalSim.g:2612:4: (lv_description_13_0= ruleDRichText )
                    // InternalSim.g:2613:5: lv_description_13_0= ruleDRichText
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimDetailTypeTranspositionAccess().getDescriptionDRichTextParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_23);
                    lv_description_13_0=ruleDRichText();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimDetailTypeTranspositionRule());
                      					}
                      					set(
                      						current,
                      						"description",
                      						lv_description_13_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:2630:3: (this_TComplexTypeFeatures_14= ruleTComplexTypeFeatures[$current] )?
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==22) ) {
                alt52=1;
            }
            switch (alt52) {
                case 1 :
                    // InternalSim.g:2631:4: this_TComplexTypeFeatures_14= ruleTComplexTypeFeatures[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getSimDetailTypeTranspositionRule());
                      				}
                      				newCompositeNode(grammarAccess.getSimDetailTypeTranspositionAccess().getTComplexTypeFeaturesParserRuleCall_3());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_TComplexTypeFeatures_14=ruleTComplexTypeFeatures(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_TComplexTypeFeatures_14;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimDetailTypeTransposition"


    // $ANTLR start "ruleTComplexTypeFeatures"
    // InternalSim.g:2648:1: ruleTComplexTypeFeatures[EObject in_current] returns [EObject current=in_current] : (otherlv_0= '{' ( ( (lv_features_1_0= ruleSimFeature ) ) | (otherlv_2= 'add' ( (lv_constraints_3_0= ruleDConstraint ) ) ) )* otherlv_4= '}' ) ;
    public final EObject ruleTComplexTypeFeatures(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_features_1_0 = null;

        EObject lv_constraints_3_0 = null;



        	enterRule();

        try {
            // InternalSim.g:2654:2: ( (otherlv_0= '{' ( ( (lv_features_1_0= ruleSimFeature ) ) | (otherlv_2= 'add' ( (lv_constraints_3_0= ruleDConstraint ) ) ) )* otherlv_4= '}' ) )
            // InternalSim.g:2655:2: (otherlv_0= '{' ( ( (lv_features_1_0= ruleSimFeature ) ) | (otherlv_2= 'add' ( (lv_constraints_3_0= ruleDConstraint ) ) ) )* otherlv_4= '}' )
            {
            // InternalSim.g:2655:2: (otherlv_0= '{' ( ( (lv_features_1_0= ruleSimFeature ) ) | (otherlv_2= 'add' ( (lv_constraints_3_0= ruleDConstraint ) ) ) )* otherlv_4= '}' )
            // InternalSim.g:2656:3: otherlv_0= '{' ( ( (lv_features_1_0= ruleSimFeature ) ) | (otherlv_2= 'add' ( (lv_constraints_3_0= ruleDConstraint ) ) ) )* otherlv_4= '}'
            {
            otherlv_0=(Token)match(input,22,FOLLOW_39); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTComplexTypeFeaturesAccess().getLeftCurlyBracketKeyword_0());
              		
            }
            // InternalSim.g:2660:3: ( ( (lv_features_1_0= ruleSimFeature ) ) | (otherlv_2= 'add' ( (lv_constraints_3_0= ruleDConstraint ) ) ) )*
            loop53:
            do {
                int alt53=3;
                int LA53_0 = input.LA(1);

                if ( (LA53_0==29||LA53_0==34||LA53_0==39) ) {
                    alt53=1;
                }
                else if ( (LA53_0==31) ) {
                    int LA53_3 = input.LA(2);

                    if ( (LA53_3==RULE_ID||LA53_3==41||LA53_3==55) ) {
                        alt53=1;
                    }
                    else if ( (LA53_3==48) ) {
                        alt53=2;
                    }


                }


                switch (alt53) {
            	case 1 :
            	    // InternalSim.g:2661:4: ( (lv_features_1_0= ruleSimFeature ) )
            	    {
            	    // InternalSim.g:2661:4: ( (lv_features_1_0= ruleSimFeature ) )
            	    // InternalSim.g:2662:5: (lv_features_1_0= ruleSimFeature )
            	    {
            	    // InternalSim.g:2662:5: (lv_features_1_0= ruleSimFeature )
            	    // InternalSim.g:2663:6: lv_features_1_0= ruleSimFeature
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTComplexTypeFeaturesAccess().getFeaturesSimFeatureParserRuleCall_1_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_39);
            	    lv_features_1_0=ruleSimFeature();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTComplexTypeFeaturesRule());
            	      						}
            	      						add(
            	      							current,
            	      							"features",
            	      							lv_features_1_0,
            	      							"com.mimacom.ddd.sm.sim.Sim.SimFeature");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalSim.g:2681:4: (otherlv_2= 'add' ( (lv_constraints_3_0= ruleDConstraint ) ) )
            	    {
            	    // InternalSim.g:2681:4: (otherlv_2= 'add' ( (lv_constraints_3_0= ruleDConstraint ) ) )
            	    // InternalSim.g:2682:5: otherlv_2= 'add' ( (lv_constraints_3_0= ruleDConstraint ) )
            	    {
            	    otherlv_2=(Token)match(input,31,FOLLOW_31); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_2, grammarAccess.getTComplexTypeFeaturesAccess().getAddKeyword_1_1_0());
            	      				
            	    }
            	    // InternalSim.g:2686:5: ( (lv_constraints_3_0= ruleDConstraint ) )
            	    // InternalSim.g:2687:6: (lv_constraints_3_0= ruleDConstraint )
            	    {
            	    // InternalSim.g:2687:6: (lv_constraints_3_0= ruleDConstraint )
            	    // InternalSim.g:2688:7: lv_constraints_3_0= ruleDConstraint
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getTComplexTypeFeaturesAccess().getConstraintsDConstraintParserRuleCall_1_1_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_39);
            	    lv_constraints_3_0=ruleDConstraint();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getTComplexTypeFeaturesRule());
            	      							}
            	      							add(
            	      								current,
            	      								"constraints",
            	      								lv_constraints_3_0,
            	      								"com.mimacom.ddd.dm.dim.Dim.DConstraint");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop53;
                }
            } while (true);

            otherlv_4=(Token)match(input,23,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getTComplexTypeFeaturesAccess().getRightCurlyBracketKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTComplexTypeFeatures"


    // $ANTLR start "entryRuleSimFeature"
    // InternalSim.g:2715:1: entryRuleSimFeature returns [EObject current=null] : iv_ruleSimFeature= ruleSimFeature EOF ;
    public final EObject entryRuleSimFeature() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimFeature = null;


        try {
            // InternalSim.g:2715:51: (iv_ruleSimFeature= ruleSimFeature EOF )
            // InternalSim.g:2716:2: iv_ruleSimFeature= ruleSimFeature EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimFeatureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimFeature=ruleSimFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimFeature; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimFeature"


    // $ANTLR start "ruleSimFeature"
    // InternalSim.g:2722:1: ruleSimFeature returns [EObject current=null] : (this_SimAssociationTransposition_0= ruleSimAssociationTransposition | (otherlv_1= 'add' this_DAssociation_2= ruleDAssociation ) | this_SimAttributeTransposition_3= ruleSimAttributeTransposition | (otherlv_4= 'add' this_DAttribute_5= ruleDAttribute ) | this_SimQueryTransposition_6= ruleSimQueryTransposition | (otherlv_7= 'add' this_DQuery_8= ruleDQuery ) ) ;
    public final EObject ruleSimFeature() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_7=null;
        EObject this_SimAssociationTransposition_0 = null;

        EObject this_DAssociation_2 = null;

        EObject this_SimAttributeTransposition_3 = null;

        EObject this_DAttribute_5 = null;

        EObject this_SimQueryTransposition_6 = null;

        EObject this_DQuery_8 = null;



        	enterRule();

        try {
            // InternalSim.g:2728:2: ( (this_SimAssociationTransposition_0= ruleSimAssociationTransposition | (otherlv_1= 'add' this_DAssociation_2= ruleDAssociation ) | this_SimAttributeTransposition_3= ruleSimAttributeTransposition | (otherlv_4= 'add' this_DAttribute_5= ruleDAttribute ) | this_SimQueryTransposition_6= ruleSimQueryTransposition | (otherlv_7= 'add' this_DQuery_8= ruleDQuery ) ) )
            // InternalSim.g:2729:2: (this_SimAssociationTransposition_0= ruleSimAssociationTransposition | (otherlv_1= 'add' this_DAssociation_2= ruleDAssociation ) | this_SimAttributeTransposition_3= ruleSimAttributeTransposition | (otherlv_4= 'add' this_DAttribute_5= ruleDAttribute ) | this_SimQueryTransposition_6= ruleSimQueryTransposition | (otherlv_7= 'add' this_DQuery_8= ruleDQuery ) )
            {
            // InternalSim.g:2729:2: (this_SimAssociationTransposition_0= ruleSimAssociationTransposition | (otherlv_1= 'add' this_DAssociation_2= ruleDAssociation ) | this_SimAttributeTransposition_3= ruleSimAttributeTransposition | (otherlv_4= 'add' this_DAttribute_5= ruleDAttribute ) | this_SimQueryTransposition_6= ruleSimQueryTransposition | (otherlv_7= 'add' this_DQuery_8= ruleDQuery ) )
            int alt54=6;
            alt54 = dfa54.predict(input);
            switch (alt54) {
                case 1 :
                    // InternalSim.g:2730:3: this_SimAssociationTransposition_0= ruleSimAssociationTransposition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSimFeatureAccess().getSimAssociationTranspositionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SimAssociationTransposition_0=ruleSimAssociationTransposition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SimAssociationTransposition_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSim.g:2739:3: (otherlv_1= 'add' this_DAssociation_2= ruleDAssociation )
                    {
                    // InternalSim.g:2739:3: (otherlv_1= 'add' this_DAssociation_2= ruleDAssociation )
                    // InternalSim.g:2740:4: otherlv_1= 'add' this_DAssociation_2= ruleDAssociation
                    {
                    otherlv_1=(Token)match(input,31,FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSimFeatureAccess().getAddKeyword_1_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSimFeatureAccess().getDAssociationParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_DAssociation_2=ruleDAssociation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_DAssociation_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSim.g:2754:3: this_SimAttributeTransposition_3= ruleSimAttributeTransposition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSimFeatureAccess().getSimAttributeTranspositionParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SimAttributeTransposition_3=ruleSimAttributeTransposition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SimAttributeTransposition_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSim.g:2763:3: (otherlv_4= 'add' this_DAttribute_5= ruleDAttribute )
                    {
                    // InternalSim.g:2763:3: (otherlv_4= 'add' this_DAttribute_5= ruleDAttribute )
                    // InternalSim.g:2764:4: otherlv_4= 'add' this_DAttribute_5= ruleDAttribute
                    {
                    otherlv_4=(Token)match(input,31,FOLLOW_41); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getSimFeatureAccess().getAddKeyword_3_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSimFeatureAccess().getDAttributeParserRuleCall_3_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_DAttribute_5=ruleDAttribute();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_DAttribute_5;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSim.g:2778:3: this_SimQueryTransposition_6= ruleSimQueryTransposition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSimFeatureAccess().getSimQueryTranspositionParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SimQueryTransposition_6=ruleSimQueryTransposition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SimQueryTransposition_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalSim.g:2787:3: (otherlv_7= 'add' this_DQuery_8= ruleDQuery )
                    {
                    // InternalSim.g:2787:3: (otherlv_7= 'add' this_DQuery_8= ruleDQuery )
                    // InternalSim.g:2788:4: otherlv_7= 'add' this_DQuery_8= ruleDQuery
                    {
                    otherlv_7=(Token)match(input,31,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getSimFeatureAccess().getAddKeyword_5_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSimFeatureAccess().getDQueryParserRuleCall_5_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_DQuery_8=ruleDQuery();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_DQuery_8;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimFeature"


    // $ANTLR start "entryRuleSimAssociationTransposition"
    // InternalSim.g:2805:1: entryRuleSimAssociationTransposition returns [EObject current=null] : iv_ruleSimAssociationTransposition= ruleSimAssociationTransposition EOF ;
    public final EObject entryRuleSimAssociationTransposition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimAssociationTransposition = null;


        try {
            // InternalSim.g:2805:68: (iv_ruleSimAssociationTransposition= ruleSimAssociationTransposition EOF )
            // InternalSim.g:2806:2: iv_ruleSimAssociationTransposition= ruleSimAssociationTransposition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimAssociationTranspositionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimAssociationTransposition=ruleSimAssociationTransposition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimAssociationTransposition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimAssociationTransposition"


    // $ANTLR start "ruleSimAssociationTransposition"
    // InternalSim.g:2812:1: ruleSimAssociationTransposition returns [EObject current=null] : ( () ( (otherlv_1= 'grab' (otherlv_2= 'reference' | otherlv_3= 'composite' ) ( (lv_transpositionRule_4_0= ruleSimGrabFeatureRule ) ) ) | (otherlv_5= 'morph' (otherlv_6= 'reference' | otherlv_7= 'composite' ) ( (lv_transpositionRule_8_0= ruleSimMorphFeatureRule ) ) ) | (otherlv_9= 'ditch' (otherlv_10= 'reference' | otherlv_11= 'composite' ) ( (lv_transpositionRule_12_0= ruleSimDitchFeatureRule ) ) ) ) ( (lv_description_13_0= ruleDRichText ) )? ) ;
    public final EObject ruleSimAssociationTransposition() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        EObject lv_transpositionRule_4_0 = null;

        EObject lv_transpositionRule_8_0 = null;

        EObject lv_transpositionRule_12_0 = null;

        EObject lv_description_13_0 = null;



        	enterRule();

        try {
            // InternalSim.g:2818:2: ( ( () ( (otherlv_1= 'grab' (otherlv_2= 'reference' | otherlv_3= 'composite' ) ( (lv_transpositionRule_4_0= ruleSimGrabFeatureRule ) ) ) | (otherlv_5= 'morph' (otherlv_6= 'reference' | otherlv_7= 'composite' ) ( (lv_transpositionRule_8_0= ruleSimMorphFeatureRule ) ) ) | (otherlv_9= 'ditch' (otherlv_10= 'reference' | otherlv_11= 'composite' ) ( (lv_transpositionRule_12_0= ruleSimDitchFeatureRule ) ) ) ) ( (lv_description_13_0= ruleDRichText ) )? ) )
            // InternalSim.g:2819:2: ( () ( (otherlv_1= 'grab' (otherlv_2= 'reference' | otherlv_3= 'composite' ) ( (lv_transpositionRule_4_0= ruleSimGrabFeatureRule ) ) ) | (otherlv_5= 'morph' (otherlv_6= 'reference' | otherlv_7= 'composite' ) ( (lv_transpositionRule_8_0= ruleSimMorphFeatureRule ) ) ) | (otherlv_9= 'ditch' (otherlv_10= 'reference' | otherlv_11= 'composite' ) ( (lv_transpositionRule_12_0= ruleSimDitchFeatureRule ) ) ) ) ( (lv_description_13_0= ruleDRichText ) )? )
            {
            // InternalSim.g:2819:2: ( () ( (otherlv_1= 'grab' (otherlv_2= 'reference' | otherlv_3= 'composite' ) ( (lv_transpositionRule_4_0= ruleSimGrabFeatureRule ) ) ) | (otherlv_5= 'morph' (otherlv_6= 'reference' | otherlv_7= 'composite' ) ( (lv_transpositionRule_8_0= ruleSimMorphFeatureRule ) ) ) | (otherlv_9= 'ditch' (otherlv_10= 'reference' | otherlv_11= 'composite' ) ( (lv_transpositionRule_12_0= ruleSimDitchFeatureRule ) ) ) ) ( (lv_description_13_0= ruleDRichText ) )? )
            // InternalSim.g:2820:3: () ( (otherlv_1= 'grab' (otherlv_2= 'reference' | otherlv_3= 'composite' ) ( (lv_transpositionRule_4_0= ruleSimGrabFeatureRule ) ) ) | (otherlv_5= 'morph' (otherlv_6= 'reference' | otherlv_7= 'composite' ) ( (lv_transpositionRule_8_0= ruleSimMorphFeatureRule ) ) ) | (otherlv_9= 'ditch' (otherlv_10= 'reference' | otherlv_11= 'composite' ) ( (lv_transpositionRule_12_0= ruleSimDitchFeatureRule ) ) ) ) ( (lv_description_13_0= ruleDRichText ) )?
            {
            // InternalSim.g:2820:3: ()
            // InternalSim.g:2821:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSimAssociationTranspositionAccess().getTAssociationTranspositionAction_0(),
              					current);
              			
            }

            }

            // InternalSim.g:2827:3: ( (otherlv_1= 'grab' (otherlv_2= 'reference' | otherlv_3= 'composite' ) ( (lv_transpositionRule_4_0= ruleSimGrabFeatureRule ) ) ) | (otherlv_5= 'morph' (otherlv_6= 'reference' | otherlv_7= 'composite' ) ( (lv_transpositionRule_8_0= ruleSimMorphFeatureRule ) ) ) | (otherlv_9= 'ditch' (otherlv_10= 'reference' | otherlv_11= 'composite' ) ( (lv_transpositionRule_12_0= ruleSimDitchFeatureRule ) ) ) )
            int alt58=3;
            switch ( input.LA(1) ) {
            case 29:
                {
                alt58=1;
                }
                break;
            case 39:
                {
                alt58=2;
                }
                break;
            case 34:
                {
                alt58=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 58, 0, input);

                throw nvae;
            }

            switch (alt58) {
                case 1 :
                    // InternalSim.g:2828:4: (otherlv_1= 'grab' (otherlv_2= 'reference' | otherlv_3= 'composite' ) ( (lv_transpositionRule_4_0= ruleSimGrabFeatureRule ) ) )
                    {
                    // InternalSim.g:2828:4: (otherlv_1= 'grab' (otherlv_2= 'reference' | otherlv_3= 'composite' ) ( (lv_transpositionRule_4_0= ruleSimGrabFeatureRule ) ) )
                    // InternalSim.g:2829:5: otherlv_1= 'grab' (otherlv_2= 'reference' | otherlv_3= 'composite' ) ( (lv_transpositionRule_4_0= ruleSimGrabFeatureRule ) )
                    {
                    otherlv_1=(Token)match(input,29,FOLLOW_42); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getSimAssociationTranspositionAccess().getGrabKeyword_1_0_0());
                      				
                    }
                    // InternalSim.g:2833:5: (otherlv_2= 'reference' | otherlv_3= 'composite' )
                    int alt55=2;
                    int LA55_0 = input.LA(1);

                    if ( (LA55_0==42) ) {
                        alt55=1;
                    }
                    else if ( (LA55_0==43) ) {
                        alt55=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 55, 0, input);

                        throw nvae;
                    }
                    switch (alt55) {
                        case 1 :
                            // InternalSim.g:2834:6: otherlv_2= 'reference'
                            {
                            otherlv_2=(Token)match(input,42,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_2, grammarAccess.getSimAssociationTranspositionAccess().getReferenceKeyword_1_0_1_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalSim.g:2839:6: otherlv_3= 'composite'
                            {
                            otherlv_3=(Token)match(input,43,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_3, grammarAccess.getSimAssociationTranspositionAccess().getCompositeKeyword_1_0_1_1());
                              					
                            }

                            }
                            break;

                    }

                    // InternalSim.g:2844:5: ( (lv_transpositionRule_4_0= ruleSimGrabFeatureRule ) )
                    // InternalSim.g:2845:6: (lv_transpositionRule_4_0= ruleSimGrabFeatureRule )
                    {
                    // InternalSim.g:2845:6: (lv_transpositionRule_4_0= ruleSimGrabFeatureRule )
                    // InternalSim.g:2846:7: lv_transpositionRule_4_0= ruleSimGrabFeatureRule
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSimAssociationTranspositionAccess().getTranspositionRuleSimGrabFeatureRuleParserRuleCall_1_0_2_0());
                      						
                    }
                    pushFollow(FOLLOW_35);
                    lv_transpositionRule_4_0=ruleSimGrabFeatureRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSimAssociationTranspositionRule());
                      							}
                      							set(
                      								current,
                      								"transpositionRule",
                      								lv_transpositionRule_4_0,
                      								"com.mimacom.ddd.sm.sim.Sim.SimGrabFeatureRule");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:2865:4: (otherlv_5= 'morph' (otherlv_6= 'reference' | otherlv_7= 'composite' ) ( (lv_transpositionRule_8_0= ruleSimMorphFeatureRule ) ) )
                    {
                    // InternalSim.g:2865:4: (otherlv_5= 'morph' (otherlv_6= 'reference' | otherlv_7= 'composite' ) ( (lv_transpositionRule_8_0= ruleSimMorphFeatureRule ) ) )
                    // InternalSim.g:2866:5: otherlv_5= 'morph' (otherlv_6= 'reference' | otherlv_7= 'composite' ) ( (lv_transpositionRule_8_0= ruleSimMorphFeatureRule ) )
                    {
                    otherlv_5=(Token)match(input,39,FOLLOW_42); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getSimAssociationTranspositionAccess().getMorphKeyword_1_1_0());
                      				
                    }
                    // InternalSim.g:2870:5: (otherlv_6= 'reference' | otherlv_7= 'composite' )
                    int alt56=2;
                    int LA56_0 = input.LA(1);

                    if ( (LA56_0==42) ) {
                        alt56=1;
                    }
                    else if ( (LA56_0==43) ) {
                        alt56=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 56, 0, input);

                        throw nvae;
                    }
                    switch (alt56) {
                        case 1 :
                            // InternalSim.g:2871:6: otherlv_6= 'reference'
                            {
                            otherlv_6=(Token)match(input,42,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_6, grammarAccess.getSimAssociationTranspositionAccess().getReferenceKeyword_1_1_1_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalSim.g:2876:6: otherlv_7= 'composite'
                            {
                            otherlv_7=(Token)match(input,43,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_7, grammarAccess.getSimAssociationTranspositionAccess().getCompositeKeyword_1_1_1_1());
                              					
                            }

                            }
                            break;

                    }

                    // InternalSim.g:2881:5: ( (lv_transpositionRule_8_0= ruleSimMorphFeatureRule ) )
                    // InternalSim.g:2882:6: (lv_transpositionRule_8_0= ruleSimMorphFeatureRule )
                    {
                    // InternalSim.g:2882:6: (lv_transpositionRule_8_0= ruleSimMorphFeatureRule )
                    // InternalSim.g:2883:7: lv_transpositionRule_8_0= ruleSimMorphFeatureRule
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSimAssociationTranspositionAccess().getTranspositionRuleSimMorphFeatureRuleParserRuleCall_1_1_2_0());
                      						
                    }
                    pushFollow(FOLLOW_35);
                    lv_transpositionRule_8_0=ruleSimMorphFeatureRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSimAssociationTranspositionRule());
                      							}
                      							set(
                      								current,
                      								"transpositionRule",
                      								lv_transpositionRule_8_0,
                      								"com.mimacom.ddd.sm.sim.Sim.SimMorphFeatureRule");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSim.g:2902:4: (otherlv_9= 'ditch' (otherlv_10= 'reference' | otherlv_11= 'composite' ) ( (lv_transpositionRule_12_0= ruleSimDitchFeatureRule ) ) )
                    {
                    // InternalSim.g:2902:4: (otherlv_9= 'ditch' (otherlv_10= 'reference' | otherlv_11= 'composite' ) ( (lv_transpositionRule_12_0= ruleSimDitchFeatureRule ) ) )
                    // InternalSim.g:2903:5: otherlv_9= 'ditch' (otherlv_10= 'reference' | otherlv_11= 'composite' ) ( (lv_transpositionRule_12_0= ruleSimDitchFeatureRule ) )
                    {
                    otherlv_9=(Token)match(input,34,FOLLOW_42); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getSimAssociationTranspositionAccess().getDitchKeyword_1_2_0());
                      				
                    }
                    // InternalSim.g:2907:5: (otherlv_10= 'reference' | otherlv_11= 'composite' )
                    int alt57=2;
                    int LA57_0 = input.LA(1);

                    if ( (LA57_0==42) ) {
                        alt57=1;
                    }
                    else if ( (LA57_0==43) ) {
                        alt57=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 57, 0, input);

                        throw nvae;
                    }
                    switch (alt57) {
                        case 1 :
                            // InternalSim.g:2908:6: otherlv_10= 'reference'
                            {
                            otherlv_10=(Token)match(input,42,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_10, grammarAccess.getSimAssociationTranspositionAccess().getReferenceKeyword_1_2_1_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalSim.g:2913:6: otherlv_11= 'composite'
                            {
                            otherlv_11=(Token)match(input,43,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_11, grammarAccess.getSimAssociationTranspositionAccess().getCompositeKeyword_1_2_1_1());
                              					
                            }

                            }
                            break;

                    }

                    // InternalSim.g:2918:5: ( (lv_transpositionRule_12_0= ruleSimDitchFeatureRule ) )
                    // InternalSim.g:2919:6: (lv_transpositionRule_12_0= ruleSimDitchFeatureRule )
                    {
                    // InternalSim.g:2919:6: (lv_transpositionRule_12_0= ruleSimDitchFeatureRule )
                    // InternalSim.g:2920:7: lv_transpositionRule_12_0= ruleSimDitchFeatureRule
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSimAssociationTranspositionAccess().getTranspositionRuleSimDitchFeatureRuleParserRuleCall_1_2_2_0());
                      						
                    }
                    pushFollow(FOLLOW_35);
                    lv_transpositionRule_12_0=ruleSimDitchFeatureRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSimAssociationTranspositionRule());
                      							}
                      							set(
                      								current,
                      								"transpositionRule",
                      								lv_transpositionRule_12_0,
                      								"com.mimacom.ddd.sm.sim.Sim.SimDitchFeatureRule");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalSim.g:2939:3: ( (lv_description_13_0= ruleDRichText ) )?
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( ((LA59_0>=RULE_PLAIN_TEXT_ONLY && LA59_0<=RULE_RICH_TEXT_START)) ) {
                alt59=1;
            }
            switch (alt59) {
                case 1 :
                    // InternalSim.g:2940:4: (lv_description_13_0= ruleDRichText )
                    {
                    // InternalSim.g:2940:4: (lv_description_13_0= ruleDRichText )
                    // InternalSim.g:2941:5: lv_description_13_0= ruleDRichText
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimAssociationTranspositionAccess().getDescriptionDRichTextParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_description_13_0=ruleDRichText();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimAssociationTranspositionRule());
                      					}
                      					set(
                      						current,
                      						"description",
                      						lv_description_13_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimAssociationTransposition"


    // $ANTLR start "entryRuleSimAttributeTransposition"
    // InternalSim.g:2962:1: entryRuleSimAttributeTransposition returns [EObject current=null] : iv_ruleSimAttributeTransposition= ruleSimAttributeTransposition EOF ;
    public final EObject entryRuleSimAttributeTransposition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimAttributeTransposition = null;


        try {
            // InternalSim.g:2962:66: (iv_ruleSimAttributeTransposition= ruleSimAttributeTransposition EOF )
            // InternalSim.g:2963:2: iv_ruleSimAttributeTransposition= ruleSimAttributeTransposition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimAttributeTranspositionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimAttributeTransposition=ruleSimAttributeTransposition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimAttributeTransposition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimAttributeTransposition"


    // $ANTLR start "ruleSimAttributeTransposition"
    // InternalSim.g:2969:1: ruleSimAttributeTransposition returns [EObject current=null] : ( () ( (otherlv_1= 'grab' (otherlv_2= 'attribute' | ( (lv_detail_3_0= 'detail' ) ) )? ( (lv_transpositionRule_4_0= ruleSimGrabFeatureRule ) ) ) | (otherlv_5= 'morph' (otherlv_6= 'attribute' | ( (lv_detail_7_0= 'detail' ) ) )? ( (lv_transpositionRule_8_0= ruleSimMorphFeatureRule ) ) ) | (otherlv_9= 'ditch' (otherlv_10= 'attribute' | ( (lv_detail_11_0= 'detail' ) ) )? ( (lv_transpositionRule_12_0= ruleSimDitchFeatureRule ) ) ) ) ( (lv_description_13_0= ruleDRichText ) )? ) ;
    public final EObject ruleSimAttributeTransposition() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_detail_3_0=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token lv_detail_7_0=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token lv_detail_11_0=null;
        EObject lv_transpositionRule_4_0 = null;

        EObject lv_transpositionRule_8_0 = null;

        EObject lv_transpositionRule_12_0 = null;

        EObject lv_description_13_0 = null;



        	enterRule();

        try {
            // InternalSim.g:2975:2: ( ( () ( (otherlv_1= 'grab' (otherlv_2= 'attribute' | ( (lv_detail_3_0= 'detail' ) ) )? ( (lv_transpositionRule_4_0= ruleSimGrabFeatureRule ) ) ) | (otherlv_5= 'morph' (otherlv_6= 'attribute' | ( (lv_detail_7_0= 'detail' ) ) )? ( (lv_transpositionRule_8_0= ruleSimMorphFeatureRule ) ) ) | (otherlv_9= 'ditch' (otherlv_10= 'attribute' | ( (lv_detail_11_0= 'detail' ) ) )? ( (lv_transpositionRule_12_0= ruleSimDitchFeatureRule ) ) ) ) ( (lv_description_13_0= ruleDRichText ) )? ) )
            // InternalSim.g:2976:2: ( () ( (otherlv_1= 'grab' (otherlv_2= 'attribute' | ( (lv_detail_3_0= 'detail' ) ) )? ( (lv_transpositionRule_4_0= ruleSimGrabFeatureRule ) ) ) | (otherlv_5= 'morph' (otherlv_6= 'attribute' | ( (lv_detail_7_0= 'detail' ) ) )? ( (lv_transpositionRule_8_0= ruleSimMorphFeatureRule ) ) ) | (otherlv_9= 'ditch' (otherlv_10= 'attribute' | ( (lv_detail_11_0= 'detail' ) ) )? ( (lv_transpositionRule_12_0= ruleSimDitchFeatureRule ) ) ) ) ( (lv_description_13_0= ruleDRichText ) )? )
            {
            // InternalSim.g:2976:2: ( () ( (otherlv_1= 'grab' (otherlv_2= 'attribute' | ( (lv_detail_3_0= 'detail' ) ) )? ( (lv_transpositionRule_4_0= ruleSimGrabFeatureRule ) ) ) | (otherlv_5= 'morph' (otherlv_6= 'attribute' | ( (lv_detail_7_0= 'detail' ) ) )? ( (lv_transpositionRule_8_0= ruleSimMorphFeatureRule ) ) ) | (otherlv_9= 'ditch' (otherlv_10= 'attribute' | ( (lv_detail_11_0= 'detail' ) ) )? ( (lv_transpositionRule_12_0= ruleSimDitchFeatureRule ) ) ) ) ( (lv_description_13_0= ruleDRichText ) )? )
            // InternalSim.g:2977:3: () ( (otherlv_1= 'grab' (otherlv_2= 'attribute' | ( (lv_detail_3_0= 'detail' ) ) )? ( (lv_transpositionRule_4_0= ruleSimGrabFeatureRule ) ) ) | (otherlv_5= 'morph' (otherlv_6= 'attribute' | ( (lv_detail_7_0= 'detail' ) ) )? ( (lv_transpositionRule_8_0= ruleSimMorphFeatureRule ) ) ) | (otherlv_9= 'ditch' (otherlv_10= 'attribute' | ( (lv_detail_11_0= 'detail' ) ) )? ( (lv_transpositionRule_12_0= ruleSimDitchFeatureRule ) ) ) ) ( (lv_description_13_0= ruleDRichText ) )?
            {
            // InternalSim.g:2977:3: ()
            // InternalSim.g:2978:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSimAttributeTranspositionAccess().getTAttributeTranspositionAction_0(),
              					current);
              			
            }

            }

            // InternalSim.g:2984:3: ( (otherlv_1= 'grab' (otherlv_2= 'attribute' | ( (lv_detail_3_0= 'detail' ) ) )? ( (lv_transpositionRule_4_0= ruleSimGrabFeatureRule ) ) ) | (otherlv_5= 'morph' (otherlv_6= 'attribute' | ( (lv_detail_7_0= 'detail' ) ) )? ( (lv_transpositionRule_8_0= ruleSimMorphFeatureRule ) ) ) | (otherlv_9= 'ditch' (otherlv_10= 'attribute' | ( (lv_detail_11_0= 'detail' ) ) )? ( (lv_transpositionRule_12_0= ruleSimDitchFeatureRule ) ) ) )
            int alt63=3;
            switch ( input.LA(1) ) {
            case 29:
                {
                alt63=1;
                }
                break;
            case 39:
                {
                alt63=2;
                }
                break;
            case 34:
                {
                alt63=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 63, 0, input);

                throw nvae;
            }

            switch (alt63) {
                case 1 :
                    // InternalSim.g:2985:4: (otherlv_1= 'grab' (otherlv_2= 'attribute' | ( (lv_detail_3_0= 'detail' ) ) )? ( (lv_transpositionRule_4_0= ruleSimGrabFeatureRule ) ) )
                    {
                    // InternalSim.g:2985:4: (otherlv_1= 'grab' (otherlv_2= 'attribute' | ( (lv_detail_3_0= 'detail' ) ) )? ( (lv_transpositionRule_4_0= ruleSimGrabFeatureRule ) ) )
                    // InternalSim.g:2986:5: otherlv_1= 'grab' (otherlv_2= 'attribute' | ( (lv_detail_3_0= 'detail' ) ) )? ( (lv_transpositionRule_4_0= ruleSimGrabFeatureRule ) )
                    {
                    otherlv_1=(Token)match(input,29,FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getSimAttributeTranspositionAccess().getGrabKeyword_1_0_0());
                      				
                    }
                    // InternalSim.g:2990:5: (otherlv_2= 'attribute' | ( (lv_detail_3_0= 'detail' ) ) )?
                    int alt60=3;
                    int LA60_0 = input.LA(1);

                    if ( (LA60_0==44) ) {
                        alt60=1;
                    }
                    else if ( (LA60_0==41) ) {
                        alt60=2;
                    }
                    switch (alt60) {
                        case 1 :
                            // InternalSim.g:2991:6: otherlv_2= 'attribute'
                            {
                            otherlv_2=(Token)match(input,44,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_2, grammarAccess.getSimAttributeTranspositionAccess().getAttributeKeyword_1_0_1_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalSim.g:2996:6: ( (lv_detail_3_0= 'detail' ) )
                            {
                            // InternalSim.g:2996:6: ( (lv_detail_3_0= 'detail' ) )
                            // InternalSim.g:2997:7: (lv_detail_3_0= 'detail' )
                            {
                            // InternalSim.g:2997:7: (lv_detail_3_0= 'detail' )
                            // InternalSim.g:2998:8: lv_detail_3_0= 'detail'
                            {
                            lv_detail_3_0=(Token)match(input,41,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_detail_3_0, grammarAccess.getSimAttributeTranspositionAccess().getDetailDetailKeyword_1_0_1_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getSimAttributeTranspositionRule());
                              								}
                              								setWithLastConsumed(current, "detail", true, "detail");
                              							
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalSim.g:3011:5: ( (lv_transpositionRule_4_0= ruleSimGrabFeatureRule ) )
                    // InternalSim.g:3012:6: (lv_transpositionRule_4_0= ruleSimGrabFeatureRule )
                    {
                    // InternalSim.g:3012:6: (lv_transpositionRule_4_0= ruleSimGrabFeatureRule )
                    // InternalSim.g:3013:7: lv_transpositionRule_4_0= ruleSimGrabFeatureRule
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSimAttributeTranspositionAccess().getTranspositionRuleSimGrabFeatureRuleParserRuleCall_1_0_2_0());
                      						
                    }
                    pushFollow(FOLLOW_35);
                    lv_transpositionRule_4_0=ruleSimGrabFeatureRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSimAttributeTranspositionRule());
                      							}
                      							set(
                      								current,
                      								"transpositionRule",
                      								lv_transpositionRule_4_0,
                      								"com.mimacom.ddd.sm.sim.Sim.SimGrabFeatureRule");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:3032:4: (otherlv_5= 'morph' (otherlv_6= 'attribute' | ( (lv_detail_7_0= 'detail' ) ) )? ( (lv_transpositionRule_8_0= ruleSimMorphFeatureRule ) ) )
                    {
                    // InternalSim.g:3032:4: (otherlv_5= 'morph' (otherlv_6= 'attribute' | ( (lv_detail_7_0= 'detail' ) ) )? ( (lv_transpositionRule_8_0= ruleSimMorphFeatureRule ) ) )
                    // InternalSim.g:3033:5: otherlv_5= 'morph' (otherlv_6= 'attribute' | ( (lv_detail_7_0= 'detail' ) ) )? ( (lv_transpositionRule_8_0= ruleSimMorphFeatureRule ) )
                    {
                    otherlv_5=(Token)match(input,39,FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getSimAttributeTranspositionAccess().getMorphKeyword_1_1_0());
                      				
                    }
                    // InternalSim.g:3037:5: (otherlv_6= 'attribute' | ( (lv_detail_7_0= 'detail' ) ) )?
                    int alt61=3;
                    int LA61_0 = input.LA(1);

                    if ( (LA61_0==44) ) {
                        alt61=1;
                    }
                    else if ( (LA61_0==41) ) {
                        alt61=2;
                    }
                    switch (alt61) {
                        case 1 :
                            // InternalSim.g:3038:6: otherlv_6= 'attribute'
                            {
                            otherlv_6=(Token)match(input,44,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_6, grammarAccess.getSimAttributeTranspositionAccess().getAttributeKeyword_1_1_1_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalSim.g:3043:6: ( (lv_detail_7_0= 'detail' ) )
                            {
                            // InternalSim.g:3043:6: ( (lv_detail_7_0= 'detail' ) )
                            // InternalSim.g:3044:7: (lv_detail_7_0= 'detail' )
                            {
                            // InternalSim.g:3044:7: (lv_detail_7_0= 'detail' )
                            // InternalSim.g:3045:8: lv_detail_7_0= 'detail'
                            {
                            lv_detail_7_0=(Token)match(input,41,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_detail_7_0, grammarAccess.getSimAttributeTranspositionAccess().getDetailDetailKeyword_1_1_1_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getSimAttributeTranspositionRule());
                              								}
                              								setWithLastConsumed(current, "detail", true, "detail");
                              							
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalSim.g:3058:5: ( (lv_transpositionRule_8_0= ruleSimMorphFeatureRule ) )
                    // InternalSim.g:3059:6: (lv_transpositionRule_8_0= ruleSimMorphFeatureRule )
                    {
                    // InternalSim.g:3059:6: (lv_transpositionRule_8_0= ruleSimMorphFeatureRule )
                    // InternalSim.g:3060:7: lv_transpositionRule_8_0= ruleSimMorphFeatureRule
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSimAttributeTranspositionAccess().getTranspositionRuleSimMorphFeatureRuleParserRuleCall_1_1_2_0());
                      						
                    }
                    pushFollow(FOLLOW_35);
                    lv_transpositionRule_8_0=ruleSimMorphFeatureRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSimAttributeTranspositionRule());
                      							}
                      							set(
                      								current,
                      								"transpositionRule",
                      								lv_transpositionRule_8_0,
                      								"com.mimacom.ddd.sm.sim.Sim.SimMorphFeatureRule");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSim.g:3079:4: (otherlv_9= 'ditch' (otherlv_10= 'attribute' | ( (lv_detail_11_0= 'detail' ) ) )? ( (lv_transpositionRule_12_0= ruleSimDitchFeatureRule ) ) )
                    {
                    // InternalSim.g:3079:4: (otherlv_9= 'ditch' (otherlv_10= 'attribute' | ( (lv_detail_11_0= 'detail' ) ) )? ( (lv_transpositionRule_12_0= ruleSimDitchFeatureRule ) ) )
                    // InternalSim.g:3080:5: otherlv_9= 'ditch' (otherlv_10= 'attribute' | ( (lv_detail_11_0= 'detail' ) ) )? ( (lv_transpositionRule_12_0= ruleSimDitchFeatureRule ) )
                    {
                    otherlv_9=(Token)match(input,34,FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getSimAttributeTranspositionAccess().getDitchKeyword_1_2_0());
                      				
                    }
                    // InternalSim.g:3084:5: (otherlv_10= 'attribute' | ( (lv_detail_11_0= 'detail' ) ) )?
                    int alt62=3;
                    int LA62_0 = input.LA(1);

                    if ( (LA62_0==44) ) {
                        alt62=1;
                    }
                    else if ( (LA62_0==41) ) {
                        alt62=2;
                    }
                    switch (alt62) {
                        case 1 :
                            // InternalSim.g:3085:6: otherlv_10= 'attribute'
                            {
                            otherlv_10=(Token)match(input,44,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_10, grammarAccess.getSimAttributeTranspositionAccess().getAttributeKeyword_1_2_1_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalSim.g:3090:6: ( (lv_detail_11_0= 'detail' ) )
                            {
                            // InternalSim.g:3090:6: ( (lv_detail_11_0= 'detail' ) )
                            // InternalSim.g:3091:7: (lv_detail_11_0= 'detail' )
                            {
                            // InternalSim.g:3091:7: (lv_detail_11_0= 'detail' )
                            // InternalSim.g:3092:8: lv_detail_11_0= 'detail'
                            {
                            lv_detail_11_0=(Token)match(input,41,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_detail_11_0, grammarAccess.getSimAttributeTranspositionAccess().getDetailDetailKeyword_1_2_1_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getSimAttributeTranspositionRule());
                              								}
                              								setWithLastConsumed(current, "detail", true, "detail");
                              							
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalSim.g:3105:5: ( (lv_transpositionRule_12_0= ruleSimDitchFeatureRule ) )
                    // InternalSim.g:3106:6: (lv_transpositionRule_12_0= ruleSimDitchFeatureRule )
                    {
                    // InternalSim.g:3106:6: (lv_transpositionRule_12_0= ruleSimDitchFeatureRule )
                    // InternalSim.g:3107:7: lv_transpositionRule_12_0= ruleSimDitchFeatureRule
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSimAttributeTranspositionAccess().getTranspositionRuleSimDitchFeatureRuleParserRuleCall_1_2_2_0());
                      						
                    }
                    pushFollow(FOLLOW_35);
                    lv_transpositionRule_12_0=ruleSimDitchFeatureRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSimAttributeTranspositionRule());
                      							}
                      							set(
                      								current,
                      								"transpositionRule",
                      								lv_transpositionRule_12_0,
                      								"com.mimacom.ddd.sm.sim.Sim.SimDitchFeatureRule");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalSim.g:3126:3: ( (lv_description_13_0= ruleDRichText ) )?
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( ((LA64_0>=RULE_PLAIN_TEXT_ONLY && LA64_0<=RULE_RICH_TEXT_START)) ) {
                alt64=1;
            }
            switch (alt64) {
                case 1 :
                    // InternalSim.g:3127:4: (lv_description_13_0= ruleDRichText )
                    {
                    // InternalSim.g:3127:4: (lv_description_13_0= ruleDRichText )
                    // InternalSim.g:3128:5: lv_description_13_0= ruleDRichText
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimAttributeTranspositionAccess().getDescriptionDRichTextParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_description_13_0=ruleDRichText();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimAttributeTranspositionRule());
                      					}
                      					set(
                      						current,
                      						"description",
                      						lv_description_13_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimAttributeTransposition"


    // $ANTLR start "entryRuleSimQueryTransposition"
    // InternalSim.g:3149:1: entryRuleSimQueryTransposition returns [EObject current=null] : iv_ruleSimQueryTransposition= ruleSimQueryTransposition EOF ;
    public final EObject entryRuleSimQueryTransposition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimQueryTransposition = null;


        try {
            // InternalSim.g:3149:62: (iv_ruleSimQueryTransposition= ruleSimQueryTransposition EOF )
            // InternalSim.g:3150:2: iv_ruleSimQueryTransposition= ruleSimQueryTransposition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimQueryTranspositionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimQueryTransposition=ruleSimQueryTransposition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimQueryTransposition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimQueryTransposition"


    // $ANTLR start "ruleSimQueryTransposition"
    // InternalSim.g:3156:1: ruleSimQueryTransposition returns [EObject current=null] : ( () ( ( ( (otherlv_1= 'grab' otherlv_2= 'query' ( (lv_transpositionRule_3_0= ruleSimGrabFeatureRule ) ) ) | (otherlv_4= 'morph' otherlv_5= 'query' ( (lv_transpositionRule_6_0= ruleSimMorphFeatureRule ) ) ) ) otherlv_7= '(' (otherlv_8= '*' | ( ( (lv_parameters_9_0= ruleSimQueryParameter ) ) (otherlv_10= ',' ( (lv_parameters_11_0= ruleSimQueryParameter ) ) )* ) ) otherlv_12= ')' ) | (otherlv_13= 'ditch' otherlv_14= 'query' ( (lv_transpositionRule_15_0= ruleSimDitchFeatureRule ) ) ) ) ( (lv_description_16_0= ruleDRichText ) )? ) ;
    public final EObject ruleSimQueryTransposition() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        EObject lv_transpositionRule_3_0 = null;

        EObject lv_transpositionRule_6_0 = null;

        EObject lv_parameters_9_0 = null;

        EObject lv_parameters_11_0 = null;

        EObject lv_transpositionRule_15_0 = null;

        EObject lv_description_16_0 = null;



        	enterRule();

        try {
            // InternalSim.g:3162:2: ( ( () ( ( ( (otherlv_1= 'grab' otherlv_2= 'query' ( (lv_transpositionRule_3_0= ruleSimGrabFeatureRule ) ) ) | (otherlv_4= 'morph' otherlv_5= 'query' ( (lv_transpositionRule_6_0= ruleSimMorphFeatureRule ) ) ) ) otherlv_7= '(' (otherlv_8= '*' | ( ( (lv_parameters_9_0= ruleSimQueryParameter ) ) (otherlv_10= ',' ( (lv_parameters_11_0= ruleSimQueryParameter ) ) )* ) ) otherlv_12= ')' ) | (otherlv_13= 'ditch' otherlv_14= 'query' ( (lv_transpositionRule_15_0= ruleSimDitchFeatureRule ) ) ) ) ( (lv_description_16_0= ruleDRichText ) )? ) )
            // InternalSim.g:3163:2: ( () ( ( ( (otherlv_1= 'grab' otherlv_2= 'query' ( (lv_transpositionRule_3_0= ruleSimGrabFeatureRule ) ) ) | (otherlv_4= 'morph' otherlv_5= 'query' ( (lv_transpositionRule_6_0= ruleSimMorphFeatureRule ) ) ) ) otherlv_7= '(' (otherlv_8= '*' | ( ( (lv_parameters_9_0= ruleSimQueryParameter ) ) (otherlv_10= ',' ( (lv_parameters_11_0= ruleSimQueryParameter ) ) )* ) ) otherlv_12= ')' ) | (otherlv_13= 'ditch' otherlv_14= 'query' ( (lv_transpositionRule_15_0= ruleSimDitchFeatureRule ) ) ) ) ( (lv_description_16_0= ruleDRichText ) )? )
            {
            // InternalSim.g:3163:2: ( () ( ( ( (otherlv_1= 'grab' otherlv_2= 'query' ( (lv_transpositionRule_3_0= ruleSimGrabFeatureRule ) ) ) | (otherlv_4= 'morph' otherlv_5= 'query' ( (lv_transpositionRule_6_0= ruleSimMorphFeatureRule ) ) ) ) otherlv_7= '(' (otherlv_8= '*' | ( ( (lv_parameters_9_0= ruleSimQueryParameter ) ) (otherlv_10= ',' ( (lv_parameters_11_0= ruleSimQueryParameter ) ) )* ) ) otherlv_12= ')' ) | (otherlv_13= 'ditch' otherlv_14= 'query' ( (lv_transpositionRule_15_0= ruleSimDitchFeatureRule ) ) ) ) ( (lv_description_16_0= ruleDRichText ) )? )
            // InternalSim.g:3164:3: () ( ( ( (otherlv_1= 'grab' otherlv_2= 'query' ( (lv_transpositionRule_3_0= ruleSimGrabFeatureRule ) ) ) | (otherlv_4= 'morph' otherlv_5= 'query' ( (lv_transpositionRule_6_0= ruleSimMorphFeatureRule ) ) ) ) otherlv_7= '(' (otherlv_8= '*' | ( ( (lv_parameters_9_0= ruleSimQueryParameter ) ) (otherlv_10= ',' ( (lv_parameters_11_0= ruleSimQueryParameter ) ) )* ) ) otherlv_12= ')' ) | (otherlv_13= 'ditch' otherlv_14= 'query' ( (lv_transpositionRule_15_0= ruleSimDitchFeatureRule ) ) ) ) ( (lv_description_16_0= ruleDRichText ) )?
            {
            // InternalSim.g:3164:3: ()
            // InternalSim.g:3165:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSimQueryTranspositionAccess().getTQueryTranspositionAction_0(),
              					current);
              			
            }

            }

            // InternalSim.g:3171:3: ( ( ( (otherlv_1= 'grab' otherlv_2= 'query' ( (lv_transpositionRule_3_0= ruleSimGrabFeatureRule ) ) ) | (otherlv_4= 'morph' otherlv_5= 'query' ( (lv_transpositionRule_6_0= ruleSimMorphFeatureRule ) ) ) ) otherlv_7= '(' (otherlv_8= '*' | ( ( (lv_parameters_9_0= ruleSimQueryParameter ) ) (otherlv_10= ',' ( (lv_parameters_11_0= ruleSimQueryParameter ) ) )* ) ) otherlv_12= ')' ) | (otherlv_13= 'ditch' otherlv_14= 'query' ( (lv_transpositionRule_15_0= ruleSimDitchFeatureRule ) ) ) )
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==29||LA68_0==39) ) {
                alt68=1;
            }
            else if ( (LA68_0==34) ) {
                alt68=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 68, 0, input);

                throw nvae;
            }
            switch (alt68) {
                case 1 :
                    // InternalSim.g:3172:4: ( ( (otherlv_1= 'grab' otherlv_2= 'query' ( (lv_transpositionRule_3_0= ruleSimGrabFeatureRule ) ) ) | (otherlv_4= 'morph' otherlv_5= 'query' ( (lv_transpositionRule_6_0= ruleSimMorphFeatureRule ) ) ) ) otherlv_7= '(' (otherlv_8= '*' | ( ( (lv_parameters_9_0= ruleSimQueryParameter ) ) (otherlv_10= ',' ( (lv_parameters_11_0= ruleSimQueryParameter ) ) )* ) ) otherlv_12= ')' )
                    {
                    // InternalSim.g:3172:4: ( ( (otherlv_1= 'grab' otherlv_2= 'query' ( (lv_transpositionRule_3_0= ruleSimGrabFeatureRule ) ) ) | (otherlv_4= 'morph' otherlv_5= 'query' ( (lv_transpositionRule_6_0= ruleSimMorphFeatureRule ) ) ) ) otherlv_7= '(' (otherlv_8= '*' | ( ( (lv_parameters_9_0= ruleSimQueryParameter ) ) (otherlv_10= ',' ( (lv_parameters_11_0= ruleSimQueryParameter ) ) )* ) ) otherlv_12= ')' )
                    // InternalSim.g:3173:5: ( (otherlv_1= 'grab' otherlv_2= 'query' ( (lv_transpositionRule_3_0= ruleSimGrabFeatureRule ) ) ) | (otherlv_4= 'morph' otherlv_5= 'query' ( (lv_transpositionRule_6_0= ruleSimMorphFeatureRule ) ) ) ) otherlv_7= '(' (otherlv_8= '*' | ( ( (lv_parameters_9_0= ruleSimQueryParameter ) ) (otherlv_10= ',' ( (lv_parameters_11_0= ruleSimQueryParameter ) ) )* ) ) otherlv_12= ')'
                    {
                    // InternalSim.g:3173:5: ( (otherlv_1= 'grab' otherlv_2= 'query' ( (lv_transpositionRule_3_0= ruleSimGrabFeatureRule ) ) ) | (otherlv_4= 'morph' otherlv_5= 'query' ( (lv_transpositionRule_6_0= ruleSimMorphFeatureRule ) ) ) )
                    int alt65=2;
                    int LA65_0 = input.LA(1);

                    if ( (LA65_0==29) ) {
                        alt65=1;
                    }
                    else if ( (LA65_0==39) ) {
                        alt65=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 65, 0, input);

                        throw nvae;
                    }
                    switch (alt65) {
                        case 1 :
                            // InternalSim.g:3174:6: (otherlv_1= 'grab' otherlv_2= 'query' ( (lv_transpositionRule_3_0= ruleSimGrabFeatureRule ) ) )
                            {
                            // InternalSim.g:3174:6: (otherlv_1= 'grab' otherlv_2= 'query' ( (lv_transpositionRule_3_0= ruleSimGrabFeatureRule ) ) )
                            // InternalSim.g:3175:7: otherlv_1= 'grab' otherlv_2= 'query' ( (lv_transpositionRule_3_0= ruleSimGrabFeatureRule ) )
                            {
                            otherlv_1=(Token)match(input,29,FOLLOW_25); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_1, grammarAccess.getSimQueryTranspositionAccess().getGrabKeyword_1_0_0_0_0());
                              						
                            }
                            otherlv_2=(Token)match(input,32,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_2, grammarAccess.getSimQueryTranspositionAccess().getQueryKeyword_1_0_0_0_1());
                              						
                            }
                            // InternalSim.g:3183:7: ( (lv_transpositionRule_3_0= ruleSimGrabFeatureRule ) )
                            // InternalSim.g:3184:8: (lv_transpositionRule_3_0= ruleSimGrabFeatureRule )
                            {
                            // InternalSim.g:3184:8: (lv_transpositionRule_3_0= ruleSimGrabFeatureRule )
                            // InternalSim.g:3185:9: lv_transpositionRule_3_0= ruleSimGrabFeatureRule
                            {
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getSimQueryTranspositionAccess().getTranspositionRuleSimGrabFeatureRuleParserRuleCall_1_0_0_0_2_0());
                              								
                            }
                            pushFollow(FOLLOW_44);
                            lv_transpositionRule_3_0=ruleSimGrabFeatureRule();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElementForParent(grammarAccess.getSimQueryTranspositionRule());
                              									}
                              									set(
                              										current,
                              										"transpositionRule",
                              										lv_transpositionRule_3_0,
                              										"com.mimacom.ddd.sm.sim.Sim.SimGrabFeatureRule");
                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalSim.g:3204:6: (otherlv_4= 'morph' otherlv_5= 'query' ( (lv_transpositionRule_6_0= ruleSimMorphFeatureRule ) ) )
                            {
                            // InternalSim.g:3204:6: (otherlv_4= 'morph' otherlv_5= 'query' ( (lv_transpositionRule_6_0= ruleSimMorphFeatureRule ) ) )
                            // InternalSim.g:3205:7: otherlv_4= 'morph' otherlv_5= 'query' ( (lv_transpositionRule_6_0= ruleSimMorphFeatureRule ) )
                            {
                            otherlv_4=(Token)match(input,39,FOLLOW_25); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_4, grammarAccess.getSimQueryTranspositionAccess().getMorphKeyword_1_0_0_1_0());
                              						
                            }
                            otherlv_5=(Token)match(input,32,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_5, grammarAccess.getSimQueryTranspositionAccess().getQueryKeyword_1_0_0_1_1());
                              						
                            }
                            // InternalSim.g:3213:7: ( (lv_transpositionRule_6_0= ruleSimMorphFeatureRule ) )
                            // InternalSim.g:3214:8: (lv_transpositionRule_6_0= ruleSimMorphFeatureRule )
                            {
                            // InternalSim.g:3214:8: (lv_transpositionRule_6_0= ruleSimMorphFeatureRule )
                            // InternalSim.g:3215:9: lv_transpositionRule_6_0= ruleSimMorphFeatureRule
                            {
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getSimQueryTranspositionAccess().getTranspositionRuleSimMorphFeatureRuleParserRuleCall_1_0_0_1_2_0());
                              								
                            }
                            pushFollow(FOLLOW_44);
                            lv_transpositionRule_6_0=ruleSimMorphFeatureRule();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElementForParent(grammarAccess.getSimQueryTranspositionRule());
                              									}
                              									set(
                              										current,
                              										"transpositionRule",
                              										lv_transpositionRule_6_0,
                              										"com.mimacom.ddd.sm.sim.Sim.SimMorphFeatureRule");
                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }


                            }


                            }
                            break;

                    }

                    otherlv_7=(Token)match(input,45,FOLLOW_45); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getSimQueryTranspositionAccess().getLeftParenthesisKeyword_1_0_1());
                      				
                    }
                    // InternalSim.g:3238:5: (otherlv_8= '*' | ( ( (lv_parameters_9_0= ruleSimQueryParameter ) ) (otherlv_10= ',' ( (lv_parameters_11_0= ruleSimQueryParameter ) ) )* ) )
                    int alt67=2;
                    int LA67_0 = input.LA(1);

                    if ( (LA67_0==46) ) {
                        alt67=1;
                    }
                    else if ( (LA67_0==29||LA67_0==31||LA67_0==34||LA67_0==39) ) {
                        alt67=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 67, 0, input);

                        throw nvae;
                    }
                    switch (alt67) {
                        case 1 :
                            // InternalSim.g:3239:6: otherlv_8= '*'
                            {
                            otherlv_8=(Token)match(input,46,FOLLOW_46); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_8, grammarAccess.getSimQueryTranspositionAccess().getAsteriskKeyword_1_0_2_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalSim.g:3244:6: ( ( (lv_parameters_9_0= ruleSimQueryParameter ) ) (otherlv_10= ',' ( (lv_parameters_11_0= ruleSimQueryParameter ) ) )* )
                            {
                            // InternalSim.g:3244:6: ( ( (lv_parameters_9_0= ruleSimQueryParameter ) ) (otherlv_10= ',' ( (lv_parameters_11_0= ruleSimQueryParameter ) ) )* )
                            // InternalSim.g:3245:7: ( (lv_parameters_9_0= ruleSimQueryParameter ) ) (otherlv_10= ',' ( (lv_parameters_11_0= ruleSimQueryParameter ) ) )*
                            {
                            // InternalSim.g:3245:7: ( (lv_parameters_9_0= ruleSimQueryParameter ) )
                            // InternalSim.g:3246:8: (lv_parameters_9_0= ruleSimQueryParameter )
                            {
                            // InternalSim.g:3246:8: (lv_parameters_9_0= ruleSimQueryParameter )
                            // InternalSim.g:3247:9: lv_parameters_9_0= ruleSimQueryParameter
                            {
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getSimQueryTranspositionAccess().getParametersSimQueryParameterParserRuleCall_1_0_2_1_0_0());
                              								
                            }
                            pushFollow(FOLLOW_47);
                            lv_parameters_9_0=ruleSimQueryParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElementForParent(grammarAccess.getSimQueryTranspositionRule());
                              									}
                              									add(
                              										current,
                              										"parameters",
                              										lv_parameters_9_0,
                              										"com.mimacom.ddd.sm.sim.Sim.SimQueryParameter");
                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }

                            // InternalSim.g:3264:7: (otherlv_10= ',' ( (lv_parameters_11_0= ruleSimQueryParameter ) ) )*
                            loop66:
                            do {
                                int alt66=2;
                                int LA66_0 = input.LA(1);

                                if ( (LA66_0==36) ) {
                                    alt66=1;
                                }


                                switch (alt66) {
                            	case 1 :
                            	    // InternalSim.g:3265:8: otherlv_10= ',' ( (lv_parameters_11_0= ruleSimQueryParameter ) )
                            	    {
                            	    otherlv_10=(Token)match(input,36,FOLLOW_45); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								newLeafNode(otherlv_10, grammarAccess.getSimQueryTranspositionAccess().getCommaKeyword_1_0_2_1_1_0());
                            	      							
                            	    }
                            	    // InternalSim.g:3269:8: ( (lv_parameters_11_0= ruleSimQueryParameter ) )
                            	    // InternalSim.g:3270:9: (lv_parameters_11_0= ruleSimQueryParameter )
                            	    {
                            	    // InternalSim.g:3270:9: (lv_parameters_11_0= ruleSimQueryParameter )
                            	    // InternalSim.g:3271:10: lv_parameters_11_0= ruleSimQueryParameter
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      										newCompositeNode(grammarAccess.getSimQueryTranspositionAccess().getParametersSimQueryParameterParserRuleCall_1_0_2_1_1_1_0());
                            	      									
                            	    }
                            	    pushFollow(FOLLOW_47);
                            	    lv_parameters_11_0=ruleSimQueryParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      										if (current==null) {
                            	      											current = createModelElementForParent(grammarAccess.getSimQueryTranspositionRule());
                            	      										}
                            	      										add(
                            	      											current,
                            	      											"parameters",
                            	      											lv_parameters_11_0,
                            	      											"com.mimacom.ddd.sm.sim.Sim.SimQueryParameter");
                            	      										afterParserOrEnumRuleCall();
                            	      									
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop66;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }

                    otherlv_12=(Token)match(input,47,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_12, grammarAccess.getSimQueryTranspositionAccess().getRightParenthesisKeyword_1_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:3297:4: (otherlv_13= 'ditch' otherlv_14= 'query' ( (lv_transpositionRule_15_0= ruleSimDitchFeatureRule ) ) )
                    {
                    // InternalSim.g:3297:4: (otherlv_13= 'ditch' otherlv_14= 'query' ( (lv_transpositionRule_15_0= ruleSimDitchFeatureRule ) ) )
                    // InternalSim.g:3298:5: otherlv_13= 'ditch' otherlv_14= 'query' ( (lv_transpositionRule_15_0= ruleSimDitchFeatureRule ) )
                    {
                    otherlv_13=(Token)match(input,34,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_13, grammarAccess.getSimQueryTranspositionAccess().getDitchKeyword_1_1_0());
                      				
                    }
                    otherlv_14=(Token)match(input,32,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_14, grammarAccess.getSimQueryTranspositionAccess().getQueryKeyword_1_1_1());
                      				
                    }
                    // InternalSim.g:3306:5: ( (lv_transpositionRule_15_0= ruleSimDitchFeatureRule ) )
                    // InternalSim.g:3307:6: (lv_transpositionRule_15_0= ruleSimDitchFeatureRule )
                    {
                    // InternalSim.g:3307:6: (lv_transpositionRule_15_0= ruleSimDitchFeatureRule )
                    // InternalSim.g:3308:7: lv_transpositionRule_15_0= ruleSimDitchFeatureRule
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSimQueryTranspositionAccess().getTranspositionRuleSimDitchFeatureRuleParserRuleCall_1_1_2_0());
                      						
                    }
                    pushFollow(FOLLOW_35);
                    lv_transpositionRule_15_0=ruleSimDitchFeatureRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSimQueryTranspositionRule());
                      							}
                      							set(
                      								current,
                      								"transpositionRule",
                      								lv_transpositionRule_15_0,
                      								"com.mimacom.ddd.sm.sim.Sim.SimDitchFeatureRule");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalSim.g:3327:3: ( (lv_description_16_0= ruleDRichText ) )?
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( ((LA69_0>=RULE_PLAIN_TEXT_ONLY && LA69_0<=RULE_RICH_TEXT_START)) ) {
                alt69=1;
            }
            switch (alt69) {
                case 1 :
                    // InternalSim.g:3328:4: (lv_description_16_0= ruleDRichText )
                    {
                    // InternalSim.g:3328:4: (lv_description_16_0= ruleDRichText )
                    // InternalSim.g:3329:5: lv_description_16_0= ruleDRichText
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimQueryTranspositionAccess().getDescriptionDRichTextParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_description_16_0=ruleDRichText();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimQueryTranspositionRule());
                      					}
                      					set(
                      						current,
                      						"description",
                      						lv_description_16_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimQueryTransposition"


    // $ANTLR start "entryRuleSimQueryParameter"
    // InternalSim.g:3350:1: entryRuleSimQueryParameter returns [EObject current=null] : iv_ruleSimQueryParameter= ruleSimQueryParameter EOF ;
    public final EObject entryRuleSimQueryParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimQueryParameter = null;


        try {
            // InternalSim.g:3350:58: (iv_ruleSimQueryParameter= ruleSimQueryParameter EOF )
            // InternalSim.g:3351:2: iv_ruleSimQueryParameter= ruleSimQueryParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimQueryParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimQueryParameter=ruleSimQueryParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimQueryParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimQueryParameter"


    // $ANTLR start "ruleSimQueryParameter"
    // InternalSim.g:3357:1: ruleSimQueryParameter returns [EObject current=null] : (this_SimQueryParameterTransposition_0= ruleSimQueryParameterTransposition | (otherlv_1= 'add' this_DQueryParameter_2= ruleDQueryParameter ) ) ;
    public final EObject ruleSimQueryParameter() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_SimQueryParameterTransposition_0 = null;

        EObject this_DQueryParameter_2 = null;



        	enterRule();

        try {
            // InternalSim.g:3363:2: ( (this_SimQueryParameterTransposition_0= ruleSimQueryParameterTransposition | (otherlv_1= 'add' this_DQueryParameter_2= ruleDQueryParameter ) ) )
            // InternalSim.g:3364:2: (this_SimQueryParameterTransposition_0= ruleSimQueryParameterTransposition | (otherlv_1= 'add' this_DQueryParameter_2= ruleDQueryParameter ) )
            {
            // InternalSim.g:3364:2: (this_SimQueryParameterTransposition_0= ruleSimQueryParameterTransposition | (otherlv_1= 'add' this_DQueryParameter_2= ruleDQueryParameter ) )
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==29||LA70_0==34||LA70_0==39) ) {
                alt70=1;
            }
            else if ( (LA70_0==31) ) {
                alt70=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 70, 0, input);

                throw nvae;
            }
            switch (alt70) {
                case 1 :
                    // InternalSim.g:3365:3: this_SimQueryParameterTransposition_0= ruleSimQueryParameterTransposition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSimQueryParameterAccess().getSimQueryParameterTranspositionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SimQueryParameterTransposition_0=ruleSimQueryParameterTransposition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SimQueryParameterTransposition_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSim.g:3374:3: (otherlv_1= 'add' this_DQueryParameter_2= ruleDQueryParameter )
                    {
                    // InternalSim.g:3374:3: (otherlv_1= 'add' this_DQueryParameter_2= ruleDQueryParameter )
                    // InternalSim.g:3375:4: otherlv_1= 'add' this_DQueryParameter_2= ruleDQueryParameter
                    {
                    otherlv_1=(Token)match(input,31,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSimQueryParameterAccess().getAddKeyword_1_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSimQueryParameterAccess().getDQueryParameterParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_DQueryParameter_2=ruleDQueryParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_DQueryParameter_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimQueryParameter"


    // $ANTLR start "entryRuleSimQueryParameterTransposition"
    // InternalSim.g:3392:1: entryRuleSimQueryParameterTransposition returns [EObject current=null] : iv_ruleSimQueryParameterTransposition= ruleSimQueryParameterTransposition EOF ;
    public final EObject entryRuleSimQueryParameterTransposition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimQueryParameterTransposition = null;


        try {
            // InternalSim.g:3392:71: (iv_ruleSimQueryParameterTransposition= ruleSimQueryParameterTransposition EOF )
            // InternalSim.g:3393:2: iv_ruleSimQueryParameterTransposition= ruleSimQueryParameterTransposition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimQueryParameterTranspositionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimQueryParameterTransposition=ruleSimQueryParameterTransposition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimQueryParameterTransposition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimQueryParameterTransposition"


    // $ANTLR start "ruleSimQueryParameterTransposition"
    // InternalSim.g:3399:1: ruleSimQueryParameterTransposition returns [EObject current=null] : ( () ( (otherlv_1= 'grab' ( (lv_transpositionRule_2_0= ruleSimGrabQueryParameterRule ) ) ) | (otherlv_3= 'morph' ( (lv_transpositionRule_4_0= ruleSimMorphQueryParameterRule ) ) ) | (otherlv_5= 'ditch' ( (lv_transpositionRule_6_0= ruleSimDitchQueryParameterRule ) ) ) ) ( (lv_description_7_0= ruleDRichText ) )? ) ;
    public final EObject ruleSimQueryParameterTransposition() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_transpositionRule_2_0 = null;

        EObject lv_transpositionRule_4_0 = null;

        EObject lv_transpositionRule_6_0 = null;

        EObject lv_description_7_0 = null;



        	enterRule();

        try {
            // InternalSim.g:3405:2: ( ( () ( (otherlv_1= 'grab' ( (lv_transpositionRule_2_0= ruleSimGrabQueryParameterRule ) ) ) | (otherlv_3= 'morph' ( (lv_transpositionRule_4_0= ruleSimMorphQueryParameterRule ) ) ) | (otherlv_5= 'ditch' ( (lv_transpositionRule_6_0= ruleSimDitchQueryParameterRule ) ) ) ) ( (lv_description_7_0= ruleDRichText ) )? ) )
            // InternalSim.g:3406:2: ( () ( (otherlv_1= 'grab' ( (lv_transpositionRule_2_0= ruleSimGrabQueryParameterRule ) ) ) | (otherlv_3= 'morph' ( (lv_transpositionRule_4_0= ruleSimMorphQueryParameterRule ) ) ) | (otherlv_5= 'ditch' ( (lv_transpositionRule_6_0= ruleSimDitchQueryParameterRule ) ) ) ) ( (lv_description_7_0= ruleDRichText ) )? )
            {
            // InternalSim.g:3406:2: ( () ( (otherlv_1= 'grab' ( (lv_transpositionRule_2_0= ruleSimGrabQueryParameterRule ) ) ) | (otherlv_3= 'morph' ( (lv_transpositionRule_4_0= ruleSimMorphQueryParameterRule ) ) ) | (otherlv_5= 'ditch' ( (lv_transpositionRule_6_0= ruleSimDitchQueryParameterRule ) ) ) ) ( (lv_description_7_0= ruleDRichText ) )? )
            // InternalSim.g:3407:3: () ( (otherlv_1= 'grab' ( (lv_transpositionRule_2_0= ruleSimGrabQueryParameterRule ) ) ) | (otherlv_3= 'morph' ( (lv_transpositionRule_4_0= ruleSimMorphQueryParameterRule ) ) ) | (otherlv_5= 'ditch' ( (lv_transpositionRule_6_0= ruleSimDitchQueryParameterRule ) ) ) ) ( (lv_description_7_0= ruleDRichText ) )?
            {
            // InternalSim.g:3407:3: ()
            // InternalSim.g:3408:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSimQueryParameterTranspositionAccess().getTQueryParameterTranspositionAction_0(),
              					current);
              			
            }

            }

            // InternalSim.g:3414:3: ( (otherlv_1= 'grab' ( (lv_transpositionRule_2_0= ruleSimGrabQueryParameterRule ) ) ) | (otherlv_3= 'morph' ( (lv_transpositionRule_4_0= ruleSimMorphQueryParameterRule ) ) ) | (otherlv_5= 'ditch' ( (lv_transpositionRule_6_0= ruleSimDitchQueryParameterRule ) ) ) )
            int alt71=3;
            switch ( input.LA(1) ) {
            case 29:
                {
                alt71=1;
                }
                break;
            case 39:
                {
                alt71=2;
                }
                break;
            case 34:
                {
                alt71=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 71, 0, input);

                throw nvae;
            }

            switch (alt71) {
                case 1 :
                    // InternalSim.g:3415:4: (otherlv_1= 'grab' ( (lv_transpositionRule_2_0= ruleSimGrabQueryParameterRule ) ) )
                    {
                    // InternalSim.g:3415:4: (otherlv_1= 'grab' ( (lv_transpositionRule_2_0= ruleSimGrabQueryParameterRule ) ) )
                    // InternalSim.g:3416:5: otherlv_1= 'grab' ( (lv_transpositionRule_2_0= ruleSimGrabQueryParameterRule ) )
                    {
                    otherlv_1=(Token)match(input,29,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getSimQueryParameterTranspositionAccess().getGrabKeyword_1_0_0());
                      				
                    }
                    // InternalSim.g:3420:5: ( (lv_transpositionRule_2_0= ruleSimGrabQueryParameterRule ) )
                    // InternalSim.g:3421:6: (lv_transpositionRule_2_0= ruleSimGrabQueryParameterRule )
                    {
                    // InternalSim.g:3421:6: (lv_transpositionRule_2_0= ruleSimGrabQueryParameterRule )
                    // InternalSim.g:3422:7: lv_transpositionRule_2_0= ruleSimGrabQueryParameterRule
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSimQueryParameterTranspositionAccess().getTranspositionRuleSimGrabQueryParameterRuleParserRuleCall_1_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_35);
                    lv_transpositionRule_2_0=ruleSimGrabQueryParameterRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSimQueryParameterTranspositionRule());
                      							}
                      							set(
                      								current,
                      								"transpositionRule",
                      								lv_transpositionRule_2_0,
                      								"com.mimacom.ddd.sm.sim.Sim.SimGrabQueryParameterRule");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:3441:4: (otherlv_3= 'morph' ( (lv_transpositionRule_4_0= ruleSimMorphQueryParameterRule ) ) )
                    {
                    // InternalSim.g:3441:4: (otherlv_3= 'morph' ( (lv_transpositionRule_4_0= ruleSimMorphQueryParameterRule ) ) )
                    // InternalSim.g:3442:5: otherlv_3= 'morph' ( (lv_transpositionRule_4_0= ruleSimMorphQueryParameterRule ) )
                    {
                    otherlv_3=(Token)match(input,39,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getSimQueryParameterTranspositionAccess().getMorphKeyword_1_1_0());
                      				
                    }
                    // InternalSim.g:3446:5: ( (lv_transpositionRule_4_0= ruleSimMorphQueryParameterRule ) )
                    // InternalSim.g:3447:6: (lv_transpositionRule_4_0= ruleSimMorphQueryParameterRule )
                    {
                    // InternalSim.g:3447:6: (lv_transpositionRule_4_0= ruleSimMorphQueryParameterRule )
                    // InternalSim.g:3448:7: lv_transpositionRule_4_0= ruleSimMorphQueryParameterRule
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSimQueryParameterTranspositionAccess().getTranspositionRuleSimMorphQueryParameterRuleParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_35);
                    lv_transpositionRule_4_0=ruleSimMorphQueryParameterRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSimQueryParameterTranspositionRule());
                      							}
                      							set(
                      								current,
                      								"transpositionRule",
                      								lv_transpositionRule_4_0,
                      								"com.mimacom.ddd.sm.sim.Sim.SimMorphQueryParameterRule");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSim.g:3467:4: (otherlv_5= 'ditch' ( (lv_transpositionRule_6_0= ruleSimDitchQueryParameterRule ) ) )
                    {
                    // InternalSim.g:3467:4: (otherlv_5= 'ditch' ( (lv_transpositionRule_6_0= ruleSimDitchQueryParameterRule ) ) )
                    // InternalSim.g:3468:5: otherlv_5= 'ditch' ( (lv_transpositionRule_6_0= ruleSimDitchQueryParameterRule ) )
                    {
                    otherlv_5=(Token)match(input,34,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getSimQueryParameterTranspositionAccess().getDitchKeyword_1_2_0());
                      				
                    }
                    // InternalSim.g:3472:5: ( (lv_transpositionRule_6_0= ruleSimDitchQueryParameterRule ) )
                    // InternalSim.g:3473:6: (lv_transpositionRule_6_0= ruleSimDitchQueryParameterRule )
                    {
                    // InternalSim.g:3473:6: (lv_transpositionRule_6_0= ruleSimDitchQueryParameterRule )
                    // InternalSim.g:3474:7: lv_transpositionRule_6_0= ruleSimDitchQueryParameterRule
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSimQueryParameterTranspositionAccess().getTranspositionRuleSimDitchQueryParameterRuleParserRuleCall_1_2_1_0());
                      						
                    }
                    pushFollow(FOLLOW_35);
                    lv_transpositionRule_6_0=ruleSimDitchQueryParameterRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSimQueryParameterTranspositionRule());
                      							}
                      							set(
                      								current,
                      								"transpositionRule",
                      								lv_transpositionRule_6_0,
                      								"com.mimacom.ddd.sm.sim.Sim.SimDitchQueryParameterRule");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalSim.g:3493:3: ( (lv_description_7_0= ruleDRichText ) )?
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( ((LA72_0>=RULE_PLAIN_TEXT_ONLY && LA72_0<=RULE_RICH_TEXT_START)) ) {
                alt72=1;
            }
            switch (alt72) {
                case 1 :
                    // InternalSim.g:3494:4: (lv_description_7_0= ruleDRichText )
                    {
                    // InternalSim.g:3494:4: (lv_description_7_0= ruleDRichText )
                    // InternalSim.g:3495:5: lv_description_7_0= ruleDRichText
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimQueryParameterTranspositionAccess().getDescriptionDRichTextParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_description_7_0=ruleDRichText();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimQueryParameterTranspositionRule());
                      					}
                      					set(
                      						current,
                      						"description",
                      						lv_description_7_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimQueryParameterTransposition"


    // $ANTLR start "entryRuleDAggregate"
    // InternalSim.g:3516:1: entryRuleDAggregate returns [EObject current=null] : iv_ruleDAggregate= ruleDAggregate EOF ;
    public final EObject entryRuleDAggregate() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDAggregate = null;


        try {
            // InternalSim.g:3516:51: (iv_ruleDAggregate= ruleDAggregate EOF )
            // InternalSim.g:3517:2: iv_ruleDAggregate= ruleDAggregate EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDAggregateRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDAggregate=ruleDAggregate();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDAggregate; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDAggregate"


    // $ANTLR start "ruleDAggregate"
    // InternalSim.g:3523:1: ruleDAggregate returns [EObject current=null] : ( () ruleDAggregateKeyword ( (lv_name_2_0= RULE_ID ) ) ( (lv_description_3_0= ruleDRichText ) )? otherlv_4= '{' (otherlv_5= 'query' ( (lv_features_6_0= ruleDQuery ) ) )* ( (lv_types_7_0= ruleDType ) )* otherlv_8= '}' ) ;
    public final EObject ruleDAggregate() throws RecognitionException {
        EObject current = null;

        Token lv_name_2_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_8=null;
        EObject lv_description_3_0 = null;

        EObject lv_features_6_0 = null;

        EObject lv_types_7_0 = null;



        	enterRule();

        try {
            // InternalSim.g:3529:2: ( ( () ruleDAggregateKeyword ( (lv_name_2_0= RULE_ID ) ) ( (lv_description_3_0= ruleDRichText ) )? otherlv_4= '{' (otherlv_5= 'query' ( (lv_features_6_0= ruleDQuery ) ) )* ( (lv_types_7_0= ruleDType ) )* otherlv_8= '}' ) )
            // InternalSim.g:3530:2: ( () ruleDAggregateKeyword ( (lv_name_2_0= RULE_ID ) ) ( (lv_description_3_0= ruleDRichText ) )? otherlv_4= '{' (otherlv_5= 'query' ( (lv_features_6_0= ruleDQuery ) ) )* ( (lv_types_7_0= ruleDType ) )* otherlv_8= '}' )
            {
            // InternalSim.g:3530:2: ( () ruleDAggregateKeyword ( (lv_name_2_0= RULE_ID ) ) ( (lv_description_3_0= ruleDRichText ) )? otherlv_4= '{' (otherlv_5= 'query' ( (lv_features_6_0= ruleDQuery ) ) )* ( (lv_types_7_0= ruleDType ) )* otherlv_8= '}' )
            // InternalSim.g:3531:3: () ruleDAggregateKeyword ( (lv_name_2_0= RULE_ID ) ) ( (lv_description_3_0= ruleDRichText ) )? otherlv_4= '{' (otherlv_5= 'query' ( (lv_features_6_0= ruleDQuery ) ) )* ( (lv_types_7_0= ruleDType ) )* otherlv_8= '}'
            {
            // InternalSim.g:3531:3: ()
            // InternalSim.g:3532:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDAggregateAccess().getDAggregateAction_0(),
              					current);
              			
            }

            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDAggregateAccess().getDAggregateKeywordParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_3);
            ruleDAggregateKeyword();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSim.g:3545:3: ( (lv_name_2_0= RULE_ID ) )
            // InternalSim.g:3546:4: (lv_name_2_0= RULE_ID )
            {
            // InternalSim.g:3546:4: (lv_name_2_0= RULE_ID )
            // InternalSim.g:3547:5: lv_name_2_0= RULE_ID
            {
            lv_name_2_0=(Token)match(input,RULE_ID,FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_2_0, grammarAccess.getDAggregateAccess().getNameIDTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDAggregateRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_2_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.ID");
              				
            }

            }


            }

            // InternalSim.g:3563:3: ( (lv_description_3_0= ruleDRichText ) )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( ((LA73_0>=RULE_PLAIN_TEXT_ONLY && LA73_0<=RULE_RICH_TEXT_START)) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // InternalSim.g:3564:4: (lv_description_3_0= ruleDRichText )
                    {
                    // InternalSim.g:3564:4: (lv_description_3_0= ruleDRichText )
                    // InternalSim.g:3565:5: lv_description_3_0= ruleDRichText
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDAggregateAccess().getDescriptionDRichTextParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_10);
                    lv_description_3_0=ruleDRichText();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDAggregateRule());
                      					}
                      					set(
                      						current,
                      						"description",
                      						lv_description_3_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,22,FOLLOW_48); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getDAggregateAccess().getLeftCurlyBracketKeyword_4());
              		
            }
            // InternalSim.g:3586:3: (otherlv_5= 'query' ( (lv_features_6_0= ruleDQuery ) ) )*
            loop74:
            do {
                int alt74=2;
                int LA74_0 = input.LA(1);

                if ( (LA74_0==32) ) {
                    alt74=1;
                }


                switch (alt74) {
            	case 1 :
            	    // InternalSim.g:3587:4: otherlv_5= 'query' ( (lv_features_6_0= ruleDQuery ) )
            	    {
            	    otherlv_5=(Token)match(input,32,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_5, grammarAccess.getDAggregateAccess().getQueryKeyword_5_0());
            	      			
            	    }
            	    // InternalSim.g:3591:4: ( (lv_features_6_0= ruleDQuery ) )
            	    // InternalSim.g:3592:5: (lv_features_6_0= ruleDQuery )
            	    {
            	    // InternalSim.g:3592:5: (lv_features_6_0= ruleDQuery )
            	    // InternalSim.g:3593:6: lv_features_6_0= ruleDQuery
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getDAggregateAccess().getFeaturesDQueryParserRuleCall_5_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_48);
            	    lv_features_6_0=ruleDQuery();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getDAggregateRule());
            	      						}
            	      						add(
            	      							current,
            	      							"features",
            	      							lv_features_6_0,
            	      							"com.mimacom.ddd.dm.dim.Dim.DQuery");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop74;
                }
            } while (true);

            // InternalSim.g:3611:3: ( (lv_types_7_0= ruleDType ) )*
            loop75:
            do {
                int alt75=2;
                int LA75_0 = input.LA(1);

                if ( (LA75_0==29||(LA75_0>=33 && LA75_0<=35)||(LA75_0>=38 && LA75_0<=41)||(LA75_0>=51 && LA75_0<=52)||(LA75_0>=100 && LA75_0<=101)) ) {
                    alt75=1;
                }


                switch (alt75) {
            	case 1 :
            	    // InternalSim.g:3612:4: (lv_types_7_0= ruleDType )
            	    {
            	    // InternalSim.g:3612:4: (lv_types_7_0= ruleDType )
            	    // InternalSim.g:3613:5: lv_types_7_0= ruleDType
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getDAggregateAccess().getTypesDTypeParserRuleCall_6_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_49);
            	    lv_types_7_0=ruleDType();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getDAggregateRule());
            	      					}
            	      					add(
            	      						current,
            	      						"types",
            	      						lv_types_7_0,
            	      						"com.mimacom.ddd.sm.sim.Sim.DType");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop75;
                }
            } while (true);

            otherlv_8=(Token)match(input,23,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getDAggregateAccess().getRightCurlyBracketKeyword_7());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDAggregate"


    // $ANTLR start "entryRuleDConstraint"
    // InternalSim.g:3638:1: entryRuleDConstraint returns [EObject current=null] : iv_ruleDConstraint= ruleDConstraint EOF ;
    public final EObject entryRuleDConstraint() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDConstraint = null;


        try {
            // InternalSim.g:3638:52: (iv_ruleDConstraint= ruleDConstraint EOF )
            // InternalSim.g:3639:2: iv_ruleDConstraint= ruleDConstraint EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDConstraintRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDConstraint=ruleDConstraint();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDConstraint; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDConstraint"


    // $ANTLR start "ruleDConstraint"
    // InternalSim.g:3645:1: ruleDConstraint returns [EObject current=null] : (otherlv_0= 'constraint' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'alias' ( (lv_aliases_3_0= RULE_ID ) ) )* otherlv_4= ':' ( (lv_predicate_5_0= ruleDExpression ) ) ( (lv_description_6_0= ruleDRichText ) )? ) ;
    public final EObject ruleDConstraint() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token lv_aliases_3_0=null;
        Token otherlv_4=null;
        EObject lv_predicate_5_0 = null;

        EObject lv_description_6_0 = null;



        	enterRule();

        try {
            // InternalSim.g:3651:2: ( (otherlv_0= 'constraint' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'alias' ( (lv_aliases_3_0= RULE_ID ) ) )* otherlv_4= ':' ( (lv_predicate_5_0= ruleDExpression ) ) ( (lv_description_6_0= ruleDRichText ) )? ) )
            // InternalSim.g:3652:2: (otherlv_0= 'constraint' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'alias' ( (lv_aliases_3_0= RULE_ID ) ) )* otherlv_4= ':' ( (lv_predicate_5_0= ruleDExpression ) ) ( (lv_description_6_0= ruleDRichText ) )? )
            {
            // InternalSim.g:3652:2: (otherlv_0= 'constraint' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'alias' ( (lv_aliases_3_0= RULE_ID ) ) )* otherlv_4= ':' ( (lv_predicate_5_0= ruleDExpression ) ) ( (lv_description_6_0= ruleDRichText ) )? )
            // InternalSim.g:3653:3: otherlv_0= 'constraint' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'alias' ( (lv_aliases_3_0= RULE_ID ) ) )* otherlv_4= ':' ( (lv_predicate_5_0= ruleDExpression ) ) ( (lv_description_6_0= ruleDRichText ) )?
            {
            otherlv_0=(Token)match(input,48,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDConstraintAccess().getConstraintKeyword_0());
              		
            }
            // InternalSim.g:3657:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalSim.g:3658:4: (lv_name_1_0= RULE_ID )
            {
            // InternalSim.g:3658:4: (lv_name_1_0= RULE_ID )
            // InternalSim.g:3659:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_50); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getDConstraintAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDConstraintRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.ID");
              				
            }

            }


            }

            // InternalSim.g:3675:3: (otherlv_2= 'alias' ( (lv_aliases_3_0= RULE_ID ) ) )*
            loop76:
            do {
                int alt76=2;
                int LA76_0 = input.LA(1);

                if ( (LA76_0==49) ) {
                    alt76=1;
                }


                switch (alt76) {
            	case 1 :
            	    // InternalSim.g:3676:4: otherlv_2= 'alias' ( (lv_aliases_3_0= RULE_ID ) )
            	    {
            	    otherlv_2=(Token)match(input,49,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getDConstraintAccess().getAliasKeyword_2_0());
            	      			
            	    }
            	    // InternalSim.g:3680:4: ( (lv_aliases_3_0= RULE_ID ) )
            	    // InternalSim.g:3681:5: (lv_aliases_3_0= RULE_ID )
            	    {
            	    // InternalSim.g:3681:5: (lv_aliases_3_0= RULE_ID )
            	    // InternalSim.g:3682:6: lv_aliases_3_0= RULE_ID
            	    {
            	    lv_aliases_3_0=(Token)match(input,RULE_ID,FOLLOW_50); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_aliases_3_0, grammarAccess.getDConstraintAccess().getAliasesIDTerminalRuleCall_2_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getDConstraintRule());
            	      						}
            	      						addWithLastConsumed(
            	      							current,
            	      							"aliases",
            	      							lv_aliases_3_0,
            	      							"com.mimacom.ddd.dm.dmx.Dmx.ID");
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop76;
                }
            } while (true);

            otherlv_4=(Token)match(input,28,FOLLOW_51); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getDConstraintAccess().getColonKeyword_3());
              		
            }
            // InternalSim.g:3703:3: ( (lv_predicate_5_0= ruleDExpression ) )
            // InternalSim.g:3704:4: (lv_predicate_5_0= ruleDExpression )
            {
            // InternalSim.g:3704:4: (lv_predicate_5_0= ruleDExpression )
            // InternalSim.g:3705:5: lv_predicate_5_0= ruleDExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDConstraintAccess().getPredicateDExpressionParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_35);
            lv_predicate_5_0=ruleDExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDConstraintRule());
              					}
              					set(
              						current,
              						"predicate",
              						lv_predicate_5_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.DExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSim.g:3722:3: ( (lv_description_6_0= ruleDRichText ) )?
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( ((LA77_0>=RULE_PLAIN_TEXT_ONLY && LA77_0<=RULE_RICH_TEXT_START)) ) {
                alt77=1;
            }
            switch (alt77) {
                case 1 :
                    // InternalSim.g:3723:4: (lv_description_6_0= ruleDRichText )
                    {
                    // InternalSim.g:3723:4: (lv_description_6_0= ruleDRichText )
                    // InternalSim.g:3724:5: lv_description_6_0= ruleDRichText
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDConstraintAccess().getDescriptionDRichTextParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_description_6_0=ruleDRichText();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDConstraintRule());
                      					}
                      					set(
                      						current,
                      						"description",
                      						lv_description_6_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDConstraint"


    // $ANTLR start "entryRuleDPrimitive"
    // InternalSim.g:3745:1: entryRuleDPrimitive returns [EObject current=null] : iv_ruleDPrimitive= ruleDPrimitive EOF ;
    public final EObject entryRuleDPrimitive() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDPrimitive = null;


        try {
            // InternalSim.g:3745:51: (iv_ruleDPrimitive= ruleDPrimitive EOF )
            // InternalSim.g:3746:2: iv_ruleDPrimitive= ruleDPrimitive EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDPrimitiveRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDPrimitive=ruleDPrimitive();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDPrimitive; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDPrimitive"


    // $ANTLR start "ruleDPrimitive"
    // InternalSim.g:3752:1: ruleDPrimitive returns [EObject current=null] : (otherlv_0= 'primitive' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'alias' ( (lv_aliases_3_0= RULE_ID ) ) )* otherlv_4= 'redefines' ( (otherlv_5= RULE_ID ) ) ( (lv_description_6_0= ruleDRichText ) )? (otherlv_7= '{' ( (lv_constraints_8_0= ruleDConstraint ) )+ otherlv_9= '}' )? ) ;
    public final EObject ruleDPrimitive() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token lv_aliases_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        EObject lv_description_6_0 = null;

        EObject lv_constraints_8_0 = null;



        	enterRule();

        try {
            // InternalSim.g:3758:2: ( (otherlv_0= 'primitive' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'alias' ( (lv_aliases_3_0= RULE_ID ) ) )* otherlv_4= 'redefines' ( (otherlv_5= RULE_ID ) ) ( (lv_description_6_0= ruleDRichText ) )? (otherlv_7= '{' ( (lv_constraints_8_0= ruleDConstraint ) )+ otherlv_9= '}' )? ) )
            // InternalSim.g:3759:2: (otherlv_0= 'primitive' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'alias' ( (lv_aliases_3_0= RULE_ID ) ) )* otherlv_4= 'redefines' ( (otherlv_5= RULE_ID ) ) ( (lv_description_6_0= ruleDRichText ) )? (otherlv_7= '{' ( (lv_constraints_8_0= ruleDConstraint ) )+ otherlv_9= '}' )? )
            {
            // InternalSim.g:3759:2: (otherlv_0= 'primitive' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'alias' ( (lv_aliases_3_0= RULE_ID ) ) )* otherlv_4= 'redefines' ( (otherlv_5= RULE_ID ) ) ( (lv_description_6_0= ruleDRichText ) )? (otherlv_7= '{' ( (lv_constraints_8_0= ruleDConstraint ) )+ otherlv_9= '}' )? )
            // InternalSim.g:3760:3: otherlv_0= 'primitive' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'alias' ( (lv_aliases_3_0= RULE_ID ) ) )* otherlv_4= 'redefines' ( (otherlv_5= RULE_ID ) ) ( (lv_description_6_0= ruleDRichText ) )? (otherlv_7= '{' ( (lv_constraints_8_0= ruleDConstraint ) )+ otherlv_9= '}' )?
            {
            otherlv_0=(Token)match(input,33,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDPrimitiveAccess().getPrimitiveKeyword_0());
              		
            }
            // InternalSim.g:3764:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalSim.g:3765:4: (lv_name_1_0= RULE_ID )
            {
            // InternalSim.g:3765:4: (lv_name_1_0= RULE_ID )
            // InternalSim.g:3766:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_52); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getDPrimitiveAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDPrimitiveRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.ID");
              				
            }

            }


            }

            // InternalSim.g:3782:3: (otherlv_2= 'alias' ( (lv_aliases_3_0= RULE_ID ) ) )*
            loop78:
            do {
                int alt78=2;
                int LA78_0 = input.LA(1);

                if ( (LA78_0==49) ) {
                    alt78=1;
                }


                switch (alt78) {
            	case 1 :
            	    // InternalSim.g:3783:4: otherlv_2= 'alias' ( (lv_aliases_3_0= RULE_ID ) )
            	    {
            	    otherlv_2=(Token)match(input,49,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getDPrimitiveAccess().getAliasKeyword_2_0());
            	      			
            	    }
            	    // InternalSim.g:3787:4: ( (lv_aliases_3_0= RULE_ID ) )
            	    // InternalSim.g:3788:5: (lv_aliases_3_0= RULE_ID )
            	    {
            	    // InternalSim.g:3788:5: (lv_aliases_3_0= RULE_ID )
            	    // InternalSim.g:3789:6: lv_aliases_3_0= RULE_ID
            	    {
            	    lv_aliases_3_0=(Token)match(input,RULE_ID,FOLLOW_52); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_aliases_3_0, grammarAccess.getDPrimitiveAccess().getAliasesIDTerminalRuleCall_2_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getDPrimitiveRule());
            	      						}
            	      						addWithLastConsumed(
            	      							current,
            	      							"aliases",
            	      							lv_aliases_3_0,
            	      							"com.mimacom.ddd.dm.dmx.Dmx.ID");
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop78;
                }
            } while (true);

            otherlv_4=(Token)match(input,50,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getDPrimitiveAccess().getRedefinesKeyword_3());
              		
            }
            // InternalSim.g:3810:3: ( (otherlv_5= RULE_ID ) )
            // InternalSim.g:3811:4: (otherlv_5= RULE_ID )
            {
            // InternalSim.g:3811:4: (otherlv_5= RULE_ID )
            // InternalSim.g:3812:5: otherlv_5= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDPrimitiveRule());
              					}
              				
            }
            otherlv_5=(Token)match(input,RULE_ID,FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_5, grammarAccess.getDPrimitiveAccess().getRedefinesDmxArchetypeCrossReference_4_0());
              				
            }

            }


            }

            // InternalSim.g:3823:3: ( (lv_description_6_0= ruleDRichText ) )?
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( ((LA79_0>=RULE_PLAIN_TEXT_ONLY && LA79_0<=RULE_RICH_TEXT_START)) ) {
                alt79=1;
            }
            switch (alt79) {
                case 1 :
                    // InternalSim.g:3824:4: (lv_description_6_0= ruleDRichText )
                    {
                    // InternalSim.g:3824:4: (lv_description_6_0= ruleDRichText )
                    // InternalSim.g:3825:5: lv_description_6_0= ruleDRichText
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDPrimitiveAccess().getDescriptionDRichTextParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_23);
                    lv_description_6_0=ruleDRichText();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDPrimitiveRule());
                      					}
                      					set(
                      						current,
                      						"description",
                      						lv_description_6_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:3842:3: (otherlv_7= '{' ( (lv_constraints_8_0= ruleDConstraint ) )+ otherlv_9= '}' )?
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( (LA81_0==22) ) {
                alt81=1;
            }
            switch (alt81) {
                case 1 :
                    // InternalSim.g:3843:4: otherlv_7= '{' ( (lv_constraints_8_0= ruleDConstraint ) )+ otherlv_9= '}'
                    {
                    otherlv_7=(Token)match(input,22,FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getDPrimitiveAccess().getLeftCurlyBracketKeyword_6_0());
                      			
                    }
                    // InternalSim.g:3847:4: ( (lv_constraints_8_0= ruleDConstraint ) )+
                    int cnt80=0;
                    loop80:
                    do {
                        int alt80=2;
                        int LA80_0 = input.LA(1);

                        if ( (LA80_0==48) ) {
                            alt80=1;
                        }


                        switch (alt80) {
                    	case 1 :
                    	    // InternalSim.g:3848:5: (lv_constraints_8_0= ruleDConstraint )
                    	    {
                    	    // InternalSim.g:3848:5: (lv_constraints_8_0= ruleDConstraint )
                    	    // InternalSim.g:3849:6: lv_constraints_8_0= ruleDConstraint
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getDPrimitiveAccess().getConstraintsDConstraintParserRuleCall_6_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_53);
                    	    lv_constraints_8_0=ruleDConstraint();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getDPrimitiveRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"constraints",
                    	      							lv_constraints_8_0,
                    	      							"com.mimacom.ddd.dm.dim.Dim.DConstraint");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt80 >= 1 ) break loop80;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(80, input);
                                throw eee;
                        }
                        cnt80++;
                    } while (true);

                    otherlv_9=(Token)match(input,23,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getDPrimitiveAccess().getRightCurlyBracketKeyword_6_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDPrimitive"


    // $ANTLR start "entryRuleDEnumeration"
    // InternalSim.g:3875:1: entryRuleDEnumeration returns [EObject current=null] : iv_ruleDEnumeration= ruleDEnumeration EOF ;
    public final EObject entryRuleDEnumeration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDEnumeration = null;


        try {
            // InternalSim.g:3875:53: (iv_ruleDEnumeration= ruleDEnumeration EOF )
            // InternalSim.g:3876:2: iv_ruleDEnumeration= ruleDEnumeration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDEnumerationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDEnumeration=ruleDEnumeration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDEnumeration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDEnumeration"


    // $ANTLR start "ruleDEnumeration"
    // InternalSim.g:3882:1: ruleDEnumeration returns [EObject current=null] : (otherlv_0= 'enumeration' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'alias' ( (lv_aliases_3_0= RULE_ID ) ) )* ( (lv_description_4_0= ruleDRichText ) )? otherlv_5= '{' ( ( (lv_literals_6_0= ruleDLiteral ) ) (otherlv_7= ',' ( (lv_literals_8_0= ruleDLiteral ) ) )* )? ( (lv_constraints_9_0= ruleDConstraint ) )* otherlv_10= '}' ) ;
    public final EObject ruleDEnumeration() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token lv_aliases_3_0=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_10=null;
        EObject lv_description_4_0 = null;

        EObject lv_literals_6_0 = null;

        EObject lv_literals_8_0 = null;

        EObject lv_constraints_9_0 = null;



        	enterRule();

        try {
            // InternalSim.g:3888:2: ( (otherlv_0= 'enumeration' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'alias' ( (lv_aliases_3_0= RULE_ID ) ) )* ( (lv_description_4_0= ruleDRichText ) )? otherlv_5= '{' ( ( (lv_literals_6_0= ruleDLiteral ) ) (otherlv_7= ',' ( (lv_literals_8_0= ruleDLiteral ) ) )* )? ( (lv_constraints_9_0= ruleDConstraint ) )* otherlv_10= '}' ) )
            // InternalSim.g:3889:2: (otherlv_0= 'enumeration' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'alias' ( (lv_aliases_3_0= RULE_ID ) ) )* ( (lv_description_4_0= ruleDRichText ) )? otherlv_5= '{' ( ( (lv_literals_6_0= ruleDLiteral ) ) (otherlv_7= ',' ( (lv_literals_8_0= ruleDLiteral ) ) )* )? ( (lv_constraints_9_0= ruleDConstraint ) )* otherlv_10= '}' )
            {
            // InternalSim.g:3889:2: (otherlv_0= 'enumeration' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'alias' ( (lv_aliases_3_0= RULE_ID ) ) )* ( (lv_description_4_0= ruleDRichText ) )? otherlv_5= '{' ( ( (lv_literals_6_0= ruleDLiteral ) ) (otherlv_7= ',' ( (lv_literals_8_0= ruleDLiteral ) ) )* )? ( (lv_constraints_9_0= ruleDConstraint ) )* otherlv_10= '}' )
            // InternalSim.g:3890:3: otherlv_0= 'enumeration' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'alias' ( (lv_aliases_3_0= RULE_ID ) ) )* ( (lv_description_4_0= ruleDRichText ) )? otherlv_5= '{' ( ( (lv_literals_6_0= ruleDLiteral ) ) (otherlv_7= ',' ( (lv_literals_8_0= ruleDLiteral ) ) )* )? ( (lv_constraints_9_0= ruleDConstraint ) )* otherlv_10= '}'
            {
            otherlv_0=(Token)match(input,35,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDEnumerationAccess().getEnumerationKeyword_0());
              		
            }
            // InternalSim.g:3894:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalSim.g:3895:4: (lv_name_1_0= RULE_ID )
            {
            // InternalSim.g:3895:4: (lv_name_1_0= RULE_ID )
            // InternalSim.g:3896:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getDEnumerationAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDEnumerationRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.ID");
              				
            }

            }


            }

            // InternalSim.g:3912:3: (otherlv_2= 'alias' ( (lv_aliases_3_0= RULE_ID ) ) )*
            loop82:
            do {
                int alt82=2;
                int LA82_0 = input.LA(1);

                if ( (LA82_0==49) ) {
                    alt82=1;
                }


                switch (alt82) {
            	case 1 :
            	    // InternalSim.g:3913:4: otherlv_2= 'alias' ( (lv_aliases_3_0= RULE_ID ) )
            	    {
            	    otherlv_2=(Token)match(input,49,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getDEnumerationAccess().getAliasKeyword_2_0());
            	      			
            	    }
            	    // InternalSim.g:3917:4: ( (lv_aliases_3_0= RULE_ID ) )
            	    // InternalSim.g:3918:5: (lv_aliases_3_0= RULE_ID )
            	    {
            	    // InternalSim.g:3918:5: (lv_aliases_3_0= RULE_ID )
            	    // InternalSim.g:3919:6: lv_aliases_3_0= RULE_ID
            	    {
            	    lv_aliases_3_0=(Token)match(input,RULE_ID,FOLLOW_54); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_aliases_3_0, grammarAccess.getDEnumerationAccess().getAliasesIDTerminalRuleCall_2_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getDEnumerationRule());
            	      						}
            	      						addWithLastConsumed(
            	      							current,
            	      							"aliases",
            	      							lv_aliases_3_0,
            	      							"com.mimacom.ddd.dm.dmx.Dmx.ID");
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop82;
                }
            } while (true);

            // InternalSim.g:3936:3: ( (lv_description_4_0= ruleDRichText ) )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( ((LA83_0>=RULE_PLAIN_TEXT_ONLY && LA83_0<=RULE_RICH_TEXT_START)) ) {
                alt83=1;
            }
            switch (alt83) {
                case 1 :
                    // InternalSim.g:3937:4: (lv_description_4_0= ruleDRichText )
                    {
                    // InternalSim.g:3937:4: (lv_description_4_0= ruleDRichText )
                    // InternalSim.g:3938:5: lv_description_4_0= ruleDRichText
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDEnumerationAccess().getDescriptionDRichTextParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_10);
                    lv_description_4_0=ruleDRichText();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDEnumerationRule());
                      					}
                      					set(
                      						current,
                      						"description",
                      						lv_description_4_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,22,FOLLOW_55); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getDEnumerationAccess().getLeftCurlyBracketKeyword_4());
              		
            }
            // InternalSim.g:3959:3: ( ( (lv_literals_6_0= ruleDLiteral ) ) (otherlv_7= ',' ( (lv_literals_8_0= ruleDLiteral ) ) )* )?
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==RULE_ID) ) {
                alt85=1;
            }
            switch (alt85) {
                case 1 :
                    // InternalSim.g:3960:4: ( (lv_literals_6_0= ruleDLiteral ) ) (otherlv_7= ',' ( (lv_literals_8_0= ruleDLiteral ) ) )*
                    {
                    // InternalSim.g:3960:4: ( (lv_literals_6_0= ruleDLiteral ) )
                    // InternalSim.g:3961:5: (lv_literals_6_0= ruleDLiteral )
                    {
                    // InternalSim.g:3961:5: (lv_literals_6_0= ruleDLiteral )
                    // InternalSim.g:3962:6: lv_literals_6_0= ruleDLiteral
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDEnumerationAccess().getLiteralsDLiteralParserRuleCall_5_0_0());
                      					
                    }
                    pushFollow(FOLLOW_56);
                    lv_literals_6_0=ruleDLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDEnumerationRule());
                      						}
                      						add(
                      							current,
                      							"literals",
                      							lv_literals_6_0,
                      							"com.mimacom.ddd.dm.dim.Dim.DLiteral");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSim.g:3979:4: (otherlv_7= ',' ( (lv_literals_8_0= ruleDLiteral ) ) )*
                    loop84:
                    do {
                        int alt84=2;
                        int LA84_0 = input.LA(1);

                        if ( (LA84_0==36) ) {
                            alt84=1;
                        }


                        switch (alt84) {
                    	case 1 :
                    	    // InternalSim.g:3980:5: otherlv_7= ',' ( (lv_literals_8_0= ruleDLiteral ) )
                    	    {
                    	    otherlv_7=(Token)match(input,36,FOLLOW_3); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_7, grammarAccess.getDEnumerationAccess().getCommaKeyword_5_1_0());
                    	      				
                    	    }
                    	    // InternalSim.g:3984:5: ( (lv_literals_8_0= ruleDLiteral ) )
                    	    // InternalSim.g:3985:6: (lv_literals_8_0= ruleDLiteral )
                    	    {
                    	    // InternalSim.g:3985:6: (lv_literals_8_0= ruleDLiteral )
                    	    // InternalSim.g:3986:7: lv_literals_8_0= ruleDLiteral
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getDEnumerationAccess().getLiteralsDLiteralParserRuleCall_5_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_56);
                    	    lv_literals_8_0=ruleDLiteral();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getDEnumerationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"literals",
                    	      								lv_literals_8_0,
                    	      								"com.mimacom.ddd.dm.dim.Dim.DLiteral");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop84;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalSim.g:4005:3: ( (lv_constraints_9_0= ruleDConstraint ) )*
            loop86:
            do {
                int alt86=2;
                int LA86_0 = input.LA(1);

                if ( (LA86_0==48) ) {
                    alt86=1;
                }


                switch (alt86) {
            	case 1 :
            	    // InternalSim.g:4006:4: (lv_constraints_9_0= ruleDConstraint )
            	    {
            	    // InternalSim.g:4006:4: (lv_constraints_9_0= ruleDConstraint )
            	    // InternalSim.g:4007:5: lv_constraints_9_0= ruleDConstraint
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getDEnumerationAccess().getConstraintsDConstraintParserRuleCall_6_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_53);
            	    lv_constraints_9_0=ruleDConstraint();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getDEnumerationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"constraints",
            	      						lv_constraints_9_0,
            	      						"com.mimacom.ddd.dm.dim.Dim.DConstraint");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop86;
                }
            } while (true);

            otherlv_10=(Token)match(input,23,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getDEnumerationAccess().getRightCurlyBracketKeyword_7());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDEnumeration"


    // $ANTLR start "entryRuleDLiteral"
    // InternalSim.g:4032:1: entryRuleDLiteral returns [EObject current=null] : iv_ruleDLiteral= ruleDLiteral EOF ;
    public final EObject entryRuleDLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDLiteral = null;


        try {
            // InternalSim.g:4032:49: (iv_ruleDLiteral= ruleDLiteral EOF )
            // InternalSim.g:4033:2: iv_ruleDLiteral= ruleDLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDLiteral=ruleDLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDLiteral"


    // $ANTLR start "ruleDLiteral"
    // InternalSim.g:4039:1: ruleDLiteral returns [EObject current=null] : ( ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= 'alias' ( (lv_aliases_2_0= RULE_ID ) ) )* ( (lv_description_3_0= ruleDRichText ) )? ) ;
    public final EObject ruleDLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token lv_aliases_2_0=null;
        EObject lv_description_3_0 = null;



        	enterRule();

        try {
            // InternalSim.g:4045:2: ( ( ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= 'alias' ( (lv_aliases_2_0= RULE_ID ) ) )* ( (lv_description_3_0= ruleDRichText ) )? ) )
            // InternalSim.g:4046:2: ( ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= 'alias' ( (lv_aliases_2_0= RULE_ID ) ) )* ( (lv_description_3_0= ruleDRichText ) )? )
            {
            // InternalSim.g:4046:2: ( ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= 'alias' ( (lv_aliases_2_0= RULE_ID ) ) )* ( (lv_description_3_0= ruleDRichText ) )? )
            // InternalSim.g:4047:3: ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= 'alias' ( (lv_aliases_2_0= RULE_ID ) ) )* ( (lv_description_3_0= ruleDRichText ) )?
            {
            // InternalSim.g:4047:3: ( (lv_name_0_0= RULE_ID ) )
            // InternalSim.g:4048:4: (lv_name_0_0= RULE_ID )
            {
            // InternalSim.g:4048:4: (lv_name_0_0= RULE_ID )
            // InternalSim.g:4049:5: lv_name_0_0= RULE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ID,FOLLOW_57); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getDLiteralAccess().getNameIDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDLiteralRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.ID");
              				
            }

            }


            }

            // InternalSim.g:4065:3: (otherlv_1= 'alias' ( (lv_aliases_2_0= RULE_ID ) ) )*
            loop87:
            do {
                int alt87=2;
                int LA87_0 = input.LA(1);

                if ( (LA87_0==49) ) {
                    alt87=1;
                }


                switch (alt87) {
            	case 1 :
            	    // InternalSim.g:4066:4: otherlv_1= 'alias' ( (lv_aliases_2_0= RULE_ID ) )
            	    {
            	    otherlv_1=(Token)match(input,49,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getDLiteralAccess().getAliasKeyword_1_0());
            	      			
            	    }
            	    // InternalSim.g:4070:4: ( (lv_aliases_2_0= RULE_ID ) )
            	    // InternalSim.g:4071:5: (lv_aliases_2_0= RULE_ID )
            	    {
            	    // InternalSim.g:4071:5: (lv_aliases_2_0= RULE_ID )
            	    // InternalSim.g:4072:6: lv_aliases_2_0= RULE_ID
            	    {
            	    lv_aliases_2_0=(Token)match(input,RULE_ID,FOLLOW_57); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_aliases_2_0, grammarAccess.getDLiteralAccess().getAliasesIDTerminalRuleCall_1_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getDLiteralRule());
            	      						}
            	      						addWithLastConsumed(
            	      							current,
            	      							"aliases",
            	      							lv_aliases_2_0,
            	      							"com.mimacom.ddd.dm.dmx.Dmx.ID");
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop87;
                }
            } while (true);

            // InternalSim.g:4089:3: ( (lv_description_3_0= ruleDRichText ) )?
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( ((LA88_0>=RULE_PLAIN_TEXT_ONLY && LA88_0<=RULE_RICH_TEXT_START)) ) {
                alt88=1;
            }
            switch (alt88) {
                case 1 :
                    // InternalSim.g:4090:4: (lv_description_3_0= ruleDRichText )
                    {
                    // InternalSim.g:4090:4: (lv_description_3_0= ruleDRichText )
                    // InternalSim.g:4091:5: lv_description_3_0= ruleDRichText
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDLiteralAccess().getDescriptionDRichTextParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_description_3_0=ruleDRichText();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDLiteralRule());
                      					}
                      					set(
                      						current,
                      						"description",
                      						lv_description_3_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDLiteral"


    // $ANTLR start "entryRuleDEntityType"
    // InternalSim.g:4112:1: entryRuleDEntityType returns [EObject current=null] : iv_ruleDEntityType= ruleDEntityType EOF ;
    public final EObject entryRuleDEntityType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDEntityType = null;


        try {
            // InternalSim.g:4112:52: (iv_ruleDEntityType= ruleDEntityType EOF )
            // InternalSim.g:4113:2: iv_ruleDEntityType= ruleDEntityType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDEntityTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDEntityType=ruleDEntityType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDEntityType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDEntityType"


    // $ANTLR start "ruleDEntityType"
    // InternalSim.g:4119:1: ruleDEntityType returns [EObject current=null] : ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_root_1_0= 'main' ) )? (otherlv_2= 'entity' | ( ( (lv_nature_3_0= ruleDEntityNatureAutonomous ) ) otherlv_4= 'entity' ) | ( (lv_nature_5_0= ruleDEntityNatureRelationship ) ) ) this_DComplexType_6= ruleDComplexType[$current] otherlv_7= '{' (otherlv_8= 'states' otherlv_9= '{' ( (lv_states_10_0= ruleDState ) ) (otherlv_11= ',' ( (lv_states_12_0= ruleDState ) ) )* otherlv_13= '}' (otherlv_14= 'events' otherlv_15= '{' ( (lv_events_16_0= ruleDStateEvent ) ) (otherlv_17= ',' ( (lv_events_18_0= ruleDStateEvent ) ) )* otherlv_19= '}' )? )? ( ( (lv_features_20_0= ruleDFeature ) ) | ( (lv_constraints_21_0= ruleDConstraint ) ) )* otherlv_22= '}' ) ;
    public final EObject ruleDEntityType() throws RecognitionException {
        EObject current = null;

        Token lv_abstract_0_0=null;
        Token lv_root_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_22=null;
        Enumerator lv_nature_3_0 = null;

        Enumerator lv_nature_5_0 = null;

        EObject this_DComplexType_6 = null;

        EObject lv_states_10_0 = null;

        EObject lv_states_12_0 = null;

        EObject lv_events_16_0 = null;

        EObject lv_events_18_0 = null;

        EObject lv_features_20_0 = null;

        EObject lv_constraints_21_0 = null;



        	enterRule();

        try {
            // InternalSim.g:4125:2: ( ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_root_1_0= 'main' ) )? (otherlv_2= 'entity' | ( ( (lv_nature_3_0= ruleDEntityNatureAutonomous ) ) otherlv_4= 'entity' ) | ( (lv_nature_5_0= ruleDEntityNatureRelationship ) ) ) this_DComplexType_6= ruleDComplexType[$current] otherlv_7= '{' (otherlv_8= 'states' otherlv_9= '{' ( (lv_states_10_0= ruleDState ) ) (otherlv_11= ',' ( (lv_states_12_0= ruleDState ) ) )* otherlv_13= '}' (otherlv_14= 'events' otherlv_15= '{' ( (lv_events_16_0= ruleDStateEvent ) ) (otherlv_17= ',' ( (lv_events_18_0= ruleDStateEvent ) ) )* otherlv_19= '}' )? )? ( ( (lv_features_20_0= ruleDFeature ) ) | ( (lv_constraints_21_0= ruleDConstraint ) ) )* otherlv_22= '}' ) )
            // InternalSim.g:4126:2: ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_root_1_0= 'main' ) )? (otherlv_2= 'entity' | ( ( (lv_nature_3_0= ruleDEntityNatureAutonomous ) ) otherlv_4= 'entity' ) | ( (lv_nature_5_0= ruleDEntityNatureRelationship ) ) ) this_DComplexType_6= ruleDComplexType[$current] otherlv_7= '{' (otherlv_8= 'states' otherlv_9= '{' ( (lv_states_10_0= ruleDState ) ) (otherlv_11= ',' ( (lv_states_12_0= ruleDState ) ) )* otherlv_13= '}' (otherlv_14= 'events' otherlv_15= '{' ( (lv_events_16_0= ruleDStateEvent ) ) (otherlv_17= ',' ( (lv_events_18_0= ruleDStateEvent ) ) )* otherlv_19= '}' )? )? ( ( (lv_features_20_0= ruleDFeature ) ) | ( (lv_constraints_21_0= ruleDConstraint ) ) )* otherlv_22= '}' )
            {
            // InternalSim.g:4126:2: ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_root_1_0= 'main' ) )? (otherlv_2= 'entity' | ( ( (lv_nature_3_0= ruleDEntityNatureAutonomous ) ) otherlv_4= 'entity' ) | ( (lv_nature_5_0= ruleDEntityNatureRelationship ) ) ) this_DComplexType_6= ruleDComplexType[$current] otherlv_7= '{' (otherlv_8= 'states' otherlv_9= '{' ( (lv_states_10_0= ruleDState ) ) (otherlv_11= ',' ( (lv_states_12_0= ruleDState ) ) )* otherlv_13= '}' (otherlv_14= 'events' otherlv_15= '{' ( (lv_events_16_0= ruleDStateEvent ) ) (otherlv_17= ',' ( (lv_events_18_0= ruleDStateEvent ) ) )* otherlv_19= '}' )? )? ( ( (lv_features_20_0= ruleDFeature ) ) | ( (lv_constraints_21_0= ruleDConstraint ) ) )* otherlv_22= '}' )
            // InternalSim.g:4127:3: ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_root_1_0= 'main' ) )? (otherlv_2= 'entity' | ( ( (lv_nature_3_0= ruleDEntityNatureAutonomous ) ) otherlv_4= 'entity' ) | ( (lv_nature_5_0= ruleDEntityNatureRelationship ) ) ) this_DComplexType_6= ruleDComplexType[$current] otherlv_7= '{' (otherlv_8= 'states' otherlv_9= '{' ( (lv_states_10_0= ruleDState ) ) (otherlv_11= ',' ( (lv_states_12_0= ruleDState ) ) )* otherlv_13= '}' (otherlv_14= 'events' otherlv_15= '{' ( (lv_events_16_0= ruleDStateEvent ) ) (otherlv_17= ',' ( (lv_events_18_0= ruleDStateEvent ) ) )* otherlv_19= '}' )? )? ( ( (lv_features_20_0= ruleDFeature ) ) | ( (lv_constraints_21_0= ruleDConstraint ) ) )* otherlv_22= '}'
            {
            // InternalSim.g:4127:3: ( (lv_abstract_0_0= 'abstract' ) )?
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( (LA89_0==51) ) {
                alt89=1;
            }
            switch (alt89) {
                case 1 :
                    // InternalSim.g:4128:4: (lv_abstract_0_0= 'abstract' )
                    {
                    // InternalSim.g:4128:4: (lv_abstract_0_0= 'abstract' )
                    // InternalSim.g:4129:5: lv_abstract_0_0= 'abstract'
                    {
                    lv_abstract_0_0=(Token)match(input,51,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_abstract_0_0, grammarAccess.getDEntityTypeAccess().getAbstractAbstractKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDEntityTypeRule());
                      					}
                      					setWithLastConsumed(current, "abstract", true, "abstract");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:4141:3: ( (lv_root_1_0= 'main' ) )?
            int alt90=2;
            int LA90_0 = input.LA(1);

            if ( (LA90_0==52) ) {
                alt90=1;
            }
            switch (alt90) {
                case 1 :
                    // InternalSim.g:4142:4: (lv_root_1_0= 'main' )
                    {
                    // InternalSim.g:4142:4: (lv_root_1_0= 'main' )
                    // InternalSim.g:4143:5: lv_root_1_0= 'main'
                    {
                    lv_root_1_0=(Token)match(input,52,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_root_1_0, grammarAccess.getDEntityTypeAccess().getRootMainKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDEntityTypeRule());
                      					}
                      					setWithLastConsumed(current, "root", true, "main");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:4155:3: (otherlv_2= 'entity' | ( ( (lv_nature_3_0= ruleDEntityNatureAutonomous ) ) otherlv_4= 'entity' ) | ( (lv_nature_5_0= ruleDEntityNatureRelationship ) ) )
            int alt91=3;
            switch ( input.LA(1) ) {
            case 38:
                {
                alt91=1;
                }
                break;
            case 100:
                {
                alt91=2;
                }
                break;
            case 101:
                {
                alt91=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 91, 0, input);

                throw nvae;
            }

            switch (alt91) {
                case 1 :
                    // InternalSim.g:4156:4: otherlv_2= 'entity'
                    {
                    otherlv_2=(Token)match(input,38,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getDEntityTypeAccess().getEntityKeyword_2_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalSim.g:4161:4: ( ( (lv_nature_3_0= ruleDEntityNatureAutonomous ) ) otherlv_4= 'entity' )
                    {
                    // InternalSim.g:4161:4: ( ( (lv_nature_3_0= ruleDEntityNatureAutonomous ) ) otherlv_4= 'entity' )
                    // InternalSim.g:4162:5: ( (lv_nature_3_0= ruleDEntityNatureAutonomous ) ) otherlv_4= 'entity'
                    {
                    // InternalSim.g:4162:5: ( (lv_nature_3_0= ruleDEntityNatureAutonomous ) )
                    // InternalSim.g:4163:6: (lv_nature_3_0= ruleDEntityNatureAutonomous )
                    {
                    // InternalSim.g:4163:6: (lv_nature_3_0= ruleDEntityNatureAutonomous )
                    // InternalSim.g:4164:7: lv_nature_3_0= ruleDEntityNatureAutonomous
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getDEntityTypeAccess().getNatureDEntityNatureAutonomousEnumRuleCall_2_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_37);
                    lv_nature_3_0=ruleDEntityNatureAutonomous();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getDEntityTypeRule());
                      							}
                      							set(
                      								current,
                      								"nature",
                      								lv_nature_3_0,
                      								"com.mimacom.ddd.dm.dim.Dim.DEntityNatureAutonomous");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,38,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getDEntityTypeAccess().getEntityKeyword_2_1_1());
                      				
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSim.g:4187:4: ( (lv_nature_5_0= ruleDEntityNatureRelationship ) )
                    {
                    // InternalSim.g:4187:4: ( (lv_nature_5_0= ruleDEntityNatureRelationship ) )
                    // InternalSim.g:4188:5: (lv_nature_5_0= ruleDEntityNatureRelationship )
                    {
                    // InternalSim.g:4188:5: (lv_nature_5_0= ruleDEntityNatureRelationship )
                    // InternalSim.g:4189:6: lv_nature_5_0= ruleDEntityNatureRelationship
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDEntityTypeAccess().getNatureDEntityNatureRelationshipEnumRuleCall_2_2_0());
                      					
                    }
                    pushFollow(FOLLOW_3);
                    lv_nature_5_0=ruleDEntityNatureRelationship();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDEntityTypeRule());
                      						}
                      						set(
                      							current,
                      							"nature",
                      							lv_nature_5_0,
                      							"com.mimacom.ddd.dm.dim.Dim.DEntityNatureRelationship");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getDEntityTypeRule());
              			}
              			newCompositeNode(grammarAccess.getDEntityTypeAccess().getDComplexTypeParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_10);
            this_DComplexType_6=ruleDComplexType(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_DComplexType_6;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_7=(Token)match(input,22,FOLLOW_58); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getDEntityTypeAccess().getLeftCurlyBracketKeyword_4());
              		
            }
            // InternalSim.g:4222:3: (otherlv_8= 'states' otherlv_9= '{' ( (lv_states_10_0= ruleDState ) ) (otherlv_11= ',' ( (lv_states_12_0= ruleDState ) ) )* otherlv_13= '}' (otherlv_14= 'events' otherlv_15= '{' ( (lv_events_16_0= ruleDStateEvent ) ) (otherlv_17= ',' ( (lv_events_18_0= ruleDStateEvent ) ) )* otherlv_19= '}' )? )?
            int alt95=2;
            int LA95_0 = input.LA(1);

            if ( (LA95_0==53) ) {
                alt95=1;
            }
            switch (alt95) {
                case 1 :
                    // InternalSim.g:4223:4: otherlv_8= 'states' otherlv_9= '{' ( (lv_states_10_0= ruleDState ) ) (otherlv_11= ',' ( (lv_states_12_0= ruleDState ) ) )* otherlv_13= '}' (otherlv_14= 'events' otherlv_15= '{' ( (lv_events_16_0= ruleDStateEvent ) ) (otherlv_17= ',' ( (lv_events_18_0= ruleDStateEvent ) ) )* otherlv_19= '}' )?
                    {
                    otherlv_8=(Token)match(input,53,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getDEntityTypeAccess().getStatesKeyword_5_0());
                      			
                    }
                    otherlv_9=(Token)match(input,22,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getDEntityTypeAccess().getLeftCurlyBracketKeyword_5_1());
                      			
                    }
                    // InternalSim.g:4231:4: ( (lv_states_10_0= ruleDState ) )
                    // InternalSim.g:4232:5: (lv_states_10_0= ruleDState )
                    {
                    // InternalSim.g:4232:5: (lv_states_10_0= ruleDState )
                    // InternalSim.g:4233:6: lv_states_10_0= ruleDState
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDEntityTypeAccess().getStatesDStateParserRuleCall_5_2_0());
                      					
                    }
                    pushFollow(FOLLOW_59);
                    lv_states_10_0=ruleDState();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDEntityTypeRule());
                      						}
                      						add(
                      							current,
                      							"states",
                      							lv_states_10_0,
                      							"com.mimacom.ddd.dm.dim.Dim.DState");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSim.g:4250:4: (otherlv_11= ',' ( (lv_states_12_0= ruleDState ) ) )*
                    loop92:
                    do {
                        int alt92=2;
                        int LA92_0 = input.LA(1);

                        if ( (LA92_0==36) ) {
                            alt92=1;
                        }


                        switch (alt92) {
                    	case 1 :
                    	    // InternalSim.g:4251:5: otherlv_11= ',' ( (lv_states_12_0= ruleDState ) )
                    	    {
                    	    otherlv_11=(Token)match(input,36,FOLLOW_3); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_11, grammarAccess.getDEntityTypeAccess().getCommaKeyword_5_3_0());
                    	      				
                    	    }
                    	    // InternalSim.g:4255:5: ( (lv_states_12_0= ruleDState ) )
                    	    // InternalSim.g:4256:6: (lv_states_12_0= ruleDState )
                    	    {
                    	    // InternalSim.g:4256:6: (lv_states_12_0= ruleDState )
                    	    // InternalSim.g:4257:7: lv_states_12_0= ruleDState
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getDEntityTypeAccess().getStatesDStateParserRuleCall_5_3_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_59);
                    	    lv_states_12_0=ruleDState();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getDEntityTypeRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"states",
                    	      								lv_states_12_0,
                    	      								"com.mimacom.ddd.dm.dim.Dim.DState");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop92;
                        }
                    } while (true);

                    otherlv_13=(Token)match(input,23,FOLLOW_60); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getDEntityTypeAccess().getRightCurlyBracketKeyword_5_4());
                      			
                    }
                    // InternalSim.g:4279:4: (otherlv_14= 'events' otherlv_15= '{' ( (lv_events_16_0= ruleDStateEvent ) ) (otherlv_17= ',' ( (lv_events_18_0= ruleDStateEvent ) ) )* otherlv_19= '}' )?
                    int alt94=2;
                    int LA94_0 = input.LA(1);

                    if ( (LA94_0==54) ) {
                        alt94=1;
                    }
                    switch (alt94) {
                        case 1 :
                            // InternalSim.g:4280:5: otherlv_14= 'events' otherlv_15= '{' ( (lv_events_16_0= ruleDStateEvent ) ) (otherlv_17= ',' ( (lv_events_18_0= ruleDStateEvent ) ) )* otherlv_19= '}'
                            {
                            otherlv_14=(Token)match(input,54,FOLLOW_10); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_14, grammarAccess.getDEntityTypeAccess().getEventsKeyword_5_5_0());
                              				
                            }
                            otherlv_15=(Token)match(input,22,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_15, grammarAccess.getDEntityTypeAccess().getLeftCurlyBracketKeyword_5_5_1());
                              				
                            }
                            // InternalSim.g:4288:5: ( (lv_events_16_0= ruleDStateEvent ) )
                            // InternalSim.g:4289:6: (lv_events_16_0= ruleDStateEvent )
                            {
                            // InternalSim.g:4289:6: (lv_events_16_0= ruleDStateEvent )
                            // InternalSim.g:4290:7: lv_events_16_0= ruleDStateEvent
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getDEntityTypeAccess().getEventsDStateEventParserRuleCall_5_5_2_0());
                              						
                            }
                            pushFollow(FOLLOW_59);
                            lv_events_16_0=ruleDStateEvent();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getDEntityTypeRule());
                              							}
                              							add(
                              								current,
                              								"events",
                              								lv_events_16_0,
                              								"com.mimacom.ddd.dm.dim.Dim.DStateEvent");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalSim.g:4307:5: (otherlv_17= ',' ( (lv_events_18_0= ruleDStateEvent ) ) )*
                            loop93:
                            do {
                                int alt93=2;
                                int LA93_0 = input.LA(1);

                                if ( (LA93_0==36) ) {
                                    alt93=1;
                                }


                                switch (alt93) {
                            	case 1 :
                            	    // InternalSim.g:4308:6: otherlv_17= ',' ( (lv_events_18_0= ruleDStateEvent ) )
                            	    {
                            	    otherlv_17=(Token)match(input,36,FOLLOW_3); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_17, grammarAccess.getDEntityTypeAccess().getCommaKeyword_5_5_3_0());
                            	      					
                            	    }
                            	    // InternalSim.g:4312:6: ( (lv_events_18_0= ruleDStateEvent ) )
                            	    // InternalSim.g:4313:7: (lv_events_18_0= ruleDStateEvent )
                            	    {
                            	    // InternalSim.g:4313:7: (lv_events_18_0= ruleDStateEvent )
                            	    // InternalSim.g:4314:8: lv_events_18_0= ruleDStateEvent
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getDEntityTypeAccess().getEventsDStateEventParserRuleCall_5_5_3_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_59);
                            	    lv_events_18_0=ruleDStateEvent();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getDEntityTypeRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"events",
                            	      									lv_events_18_0,
                            	      									"com.mimacom.ddd.dm.dim.Dim.DStateEvent");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop93;
                                }
                            } while (true);

                            otherlv_19=(Token)match(input,23,FOLLOW_61); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_19, grammarAccess.getDEntityTypeAccess().getRightCurlyBracketKeyword_5_5_4());
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalSim.g:4338:3: ( ( (lv_features_20_0= ruleDFeature ) ) | ( (lv_constraints_21_0= ruleDConstraint ) ) )*
            loop96:
            do {
                int alt96=3;
                int LA96_0 = input.LA(1);

                if ( (LA96_0==RULE_ID||LA96_0==41||LA96_0==55) ) {
                    alt96=1;
                }
                else if ( (LA96_0==48) ) {
                    alt96=2;
                }


                switch (alt96) {
            	case 1 :
            	    // InternalSim.g:4339:4: ( (lv_features_20_0= ruleDFeature ) )
            	    {
            	    // InternalSim.g:4339:4: ( (lv_features_20_0= ruleDFeature ) )
            	    // InternalSim.g:4340:5: (lv_features_20_0= ruleDFeature )
            	    {
            	    // InternalSim.g:4340:5: (lv_features_20_0= ruleDFeature )
            	    // InternalSim.g:4341:6: lv_features_20_0= ruleDFeature
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getDEntityTypeAccess().getFeaturesDFeatureParserRuleCall_6_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_61);
            	    lv_features_20_0=ruleDFeature();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getDEntityTypeRule());
            	      						}
            	      						add(
            	      							current,
            	      							"features",
            	      							lv_features_20_0,
            	      							"com.mimacom.ddd.dm.dim.Dim.DFeature");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalSim.g:4359:4: ( (lv_constraints_21_0= ruleDConstraint ) )
            	    {
            	    // InternalSim.g:4359:4: ( (lv_constraints_21_0= ruleDConstraint ) )
            	    // InternalSim.g:4360:5: (lv_constraints_21_0= ruleDConstraint )
            	    {
            	    // InternalSim.g:4360:5: (lv_constraints_21_0= ruleDConstraint )
            	    // InternalSim.g:4361:6: lv_constraints_21_0= ruleDConstraint
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getDEntityTypeAccess().getConstraintsDConstraintParserRuleCall_6_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_61);
            	    lv_constraints_21_0=ruleDConstraint();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getDEntityTypeRule());
            	      						}
            	      						add(
            	      							current,
            	      							"constraints",
            	      							lv_constraints_21_0,
            	      							"com.mimacom.ddd.dm.dim.Dim.DConstraint");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop96;
                }
            } while (true);

            otherlv_22=(Token)match(input,23,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_22, grammarAccess.getDEntityTypeAccess().getRightCurlyBracketKeyword_7());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDEntityType"


    // $ANTLR start "entryRuleDState"
    // InternalSim.g:4387:1: entryRuleDState returns [EObject current=null] : iv_ruleDState= ruleDState EOF ;
    public final EObject entryRuleDState() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDState = null;


        try {
            // InternalSim.g:4387:47: (iv_ruleDState= ruleDState EOF )
            // InternalSim.g:4388:2: iv_ruleDState= ruleDState EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDStateRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDState=ruleDState();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDState; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDState"


    // $ANTLR start "ruleDState"
    // InternalSim.g:4394:1: ruleDState returns [EObject current=null] : ( (lv_name_0_0= RULE_ID ) ) ;
    public final EObject ruleDState() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;


        	enterRule();

        try {
            // InternalSim.g:4400:2: ( ( (lv_name_0_0= RULE_ID ) ) )
            // InternalSim.g:4401:2: ( (lv_name_0_0= RULE_ID ) )
            {
            // InternalSim.g:4401:2: ( (lv_name_0_0= RULE_ID ) )
            // InternalSim.g:4402:3: (lv_name_0_0= RULE_ID )
            {
            // InternalSim.g:4402:3: (lv_name_0_0= RULE_ID )
            // InternalSim.g:4403:4: lv_name_0_0= RULE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_name_0_0, grammarAccess.getDStateAccess().getNameIDTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getDStateRule());
              				}
              				setWithLastConsumed(
              					current,
              					"name",
              					lv_name_0_0,
              					"com.mimacom.ddd.dm.dmx.Dmx.ID");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDState"


    // $ANTLR start "entryRuleDStateEvent"
    // InternalSim.g:4422:1: entryRuleDStateEvent returns [EObject current=null] : iv_ruleDStateEvent= ruleDStateEvent EOF ;
    public final EObject entryRuleDStateEvent() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDStateEvent = null;


        try {
            // InternalSim.g:4422:52: (iv_ruleDStateEvent= ruleDStateEvent EOF )
            // InternalSim.g:4423:2: iv_ruleDStateEvent= ruleDStateEvent EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDStateEventRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDStateEvent=ruleDStateEvent();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDStateEvent; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDStateEvent"


    // $ANTLR start "ruleDStateEvent"
    // InternalSim.g:4429:1: ruleDStateEvent returns [EObject current=null] : ( (lv_name_0_0= RULE_ID ) ) ;
    public final EObject ruleDStateEvent() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;


        	enterRule();

        try {
            // InternalSim.g:4435:2: ( ( (lv_name_0_0= RULE_ID ) ) )
            // InternalSim.g:4436:2: ( (lv_name_0_0= RULE_ID ) )
            {
            // InternalSim.g:4436:2: ( (lv_name_0_0= RULE_ID ) )
            // InternalSim.g:4437:3: (lv_name_0_0= RULE_ID )
            {
            // InternalSim.g:4437:3: (lv_name_0_0= RULE_ID )
            // InternalSim.g:4438:4: lv_name_0_0= RULE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_name_0_0, grammarAccess.getDStateEventAccess().getNameIDTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getDStateEventRule());
              				}
              				setWithLastConsumed(
              					current,
              					"name",
              					lv_name_0_0,
              					"com.mimacom.ddd.dm.dmx.Dmx.ID");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDStateEvent"


    // $ANTLR start "entryRuleDDetailType"
    // InternalSim.g:4457:1: entryRuleDDetailType returns [EObject current=null] : iv_ruleDDetailType= ruleDDetailType EOF ;
    public final EObject entryRuleDDetailType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDDetailType = null;


        try {
            // InternalSim.g:4457:52: (iv_ruleDDetailType= ruleDDetailType EOF )
            // InternalSim.g:4458:2: iv_ruleDDetailType= ruleDDetailType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDDetailTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDDetailType=ruleDDetailType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDDetailType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDDetailType"


    // $ANTLR start "ruleDDetailType"
    // InternalSim.g:4464:1: ruleDDetailType returns [EObject current=null] : ( ( (lv_abstract_0_0= 'abstract' ) )? otherlv_1= 'detail' this_DComplexType_2= ruleDComplexType[$current] otherlv_3= '{' ( ( (lv_features_4_0= ruleDFeature ) ) | ( (lv_constraints_5_0= ruleDConstraint ) ) )* otherlv_6= '}' ) ;
    public final EObject ruleDDetailType() throws RecognitionException {
        EObject current = null;

        Token lv_abstract_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_6=null;
        EObject this_DComplexType_2 = null;

        EObject lv_features_4_0 = null;

        EObject lv_constraints_5_0 = null;



        	enterRule();

        try {
            // InternalSim.g:4470:2: ( ( ( (lv_abstract_0_0= 'abstract' ) )? otherlv_1= 'detail' this_DComplexType_2= ruleDComplexType[$current] otherlv_3= '{' ( ( (lv_features_4_0= ruleDFeature ) ) | ( (lv_constraints_5_0= ruleDConstraint ) ) )* otherlv_6= '}' ) )
            // InternalSim.g:4471:2: ( ( (lv_abstract_0_0= 'abstract' ) )? otherlv_1= 'detail' this_DComplexType_2= ruleDComplexType[$current] otherlv_3= '{' ( ( (lv_features_4_0= ruleDFeature ) ) | ( (lv_constraints_5_0= ruleDConstraint ) ) )* otherlv_6= '}' )
            {
            // InternalSim.g:4471:2: ( ( (lv_abstract_0_0= 'abstract' ) )? otherlv_1= 'detail' this_DComplexType_2= ruleDComplexType[$current] otherlv_3= '{' ( ( (lv_features_4_0= ruleDFeature ) ) | ( (lv_constraints_5_0= ruleDConstraint ) ) )* otherlv_6= '}' )
            // InternalSim.g:4472:3: ( (lv_abstract_0_0= 'abstract' ) )? otherlv_1= 'detail' this_DComplexType_2= ruleDComplexType[$current] otherlv_3= '{' ( ( (lv_features_4_0= ruleDFeature ) ) | ( (lv_constraints_5_0= ruleDConstraint ) ) )* otherlv_6= '}'
            {
            // InternalSim.g:4472:3: ( (lv_abstract_0_0= 'abstract' ) )?
            int alt97=2;
            int LA97_0 = input.LA(1);

            if ( (LA97_0==51) ) {
                alt97=1;
            }
            switch (alt97) {
                case 1 :
                    // InternalSim.g:4473:4: (lv_abstract_0_0= 'abstract' )
                    {
                    // InternalSim.g:4473:4: (lv_abstract_0_0= 'abstract' )
                    // InternalSim.g:4474:5: lv_abstract_0_0= 'abstract'
                    {
                    lv_abstract_0_0=(Token)match(input,51,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_abstract_0_0, grammarAccess.getDDetailTypeAccess().getAbstractAbstractKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDDetailTypeRule());
                      					}
                      					setWithLastConsumed(current, "abstract", true, "abstract");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,41,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getDDetailTypeAccess().getDetailKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getDDetailTypeRule());
              			}
              			newCompositeNode(grammarAccess.getDDetailTypeAccess().getDComplexTypeParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_10);
            this_DComplexType_2=ruleDComplexType(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_DComplexType_2;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_3=(Token)match(input,22,FOLLOW_61); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getDDetailTypeAccess().getLeftCurlyBracketKeyword_3());
              		
            }
            // InternalSim.g:4505:3: ( ( (lv_features_4_0= ruleDFeature ) ) | ( (lv_constraints_5_0= ruleDConstraint ) ) )*
            loop98:
            do {
                int alt98=3;
                int LA98_0 = input.LA(1);

                if ( (LA98_0==RULE_ID||LA98_0==41||LA98_0==55) ) {
                    alt98=1;
                }
                else if ( (LA98_0==48) ) {
                    alt98=2;
                }


                switch (alt98) {
            	case 1 :
            	    // InternalSim.g:4506:4: ( (lv_features_4_0= ruleDFeature ) )
            	    {
            	    // InternalSim.g:4506:4: ( (lv_features_4_0= ruleDFeature ) )
            	    // InternalSim.g:4507:5: (lv_features_4_0= ruleDFeature )
            	    {
            	    // InternalSim.g:4507:5: (lv_features_4_0= ruleDFeature )
            	    // InternalSim.g:4508:6: lv_features_4_0= ruleDFeature
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getDDetailTypeAccess().getFeaturesDFeatureParserRuleCall_4_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_61);
            	    lv_features_4_0=ruleDFeature();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getDDetailTypeRule());
            	      						}
            	      						add(
            	      							current,
            	      							"features",
            	      							lv_features_4_0,
            	      							"com.mimacom.ddd.dm.dim.Dim.DFeature");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalSim.g:4526:4: ( (lv_constraints_5_0= ruleDConstraint ) )
            	    {
            	    // InternalSim.g:4526:4: ( (lv_constraints_5_0= ruleDConstraint ) )
            	    // InternalSim.g:4527:5: (lv_constraints_5_0= ruleDConstraint )
            	    {
            	    // InternalSim.g:4527:5: (lv_constraints_5_0= ruleDConstraint )
            	    // InternalSim.g:4528:6: lv_constraints_5_0= ruleDConstraint
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getDDetailTypeAccess().getConstraintsDConstraintParserRuleCall_4_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_61);
            	    lv_constraints_5_0=ruleDConstraint();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getDDetailTypeRule());
            	      						}
            	      						add(
            	      							current,
            	      							"constraints",
            	      							lv_constraints_5_0,
            	      							"com.mimacom.ddd.dm.dim.Dim.DConstraint");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop98;
                }
            } while (true);

            otherlv_6=(Token)match(input,23,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getDDetailTypeAccess().getRightCurlyBracketKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDDetailType"


    // $ANTLR start "ruleDComplexType"
    // InternalSim.g:4555:1: ruleDComplexType[EObject in_current] returns [EObject current=in_current] : ( ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= 'alias' ( (lv_aliases_2_0= RULE_ID ) ) )* (otherlv_3= 'extends' ( (otherlv_4= RULE_ID ) ) )? ( (lv_description_5_0= ruleDRichText ) )? ) ;
    public final EObject ruleDComplexType(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token lv_aliases_2_0=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_description_5_0 = null;



        	enterRule();

        try {
            // InternalSim.g:4561:2: ( ( ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= 'alias' ( (lv_aliases_2_0= RULE_ID ) ) )* (otherlv_3= 'extends' ( (otherlv_4= RULE_ID ) ) )? ( (lv_description_5_0= ruleDRichText ) )? ) )
            // InternalSim.g:4562:2: ( ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= 'alias' ( (lv_aliases_2_0= RULE_ID ) ) )* (otherlv_3= 'extends' ( (otherlv_4= RULE_ID ) ) )? ( (lv_description_5_0= ruleDRichText ) )? )
            {
            // InternalSim.g:4562:2: ( ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= 'alias' ( (lv_aliases_2_0= RULE_ID ) ) )* (otherlv_3= 'extends' ( (otherlv_4= RULE_ID ) ) )? ( (lv_description_5_0= ruleDRichText ) )? )
            // InternalSim.g:4563:3: ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= 'alias' ( (lv_aliases_2_0= RULE_ID ) ) )* (otherlv_3= 'extends' ( (otherlv_4= RULE_ID ) ) )? ( (lv_description_5_0= ruleDRichText ) )?
            {
            // InternalSim.g:4563:3: ( (lv_name_0_0= RULE_ID ) )
            // InternalSim.g:4564:4: (lv_name_0_0= RULE_ID )
            {
            // InternalSim.g:4564:4: (lv_name_0_0= RULE_ID )
            // InternalSim.g:4565:5: lv_name_0_0= RULE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ID,FOLLOW_62); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getDComplexTypeAccess().getNameIDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDComplexTypeRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.ID");
              				
            }

            }


            }

            // InternalSim.g:4581:3: (otherlv_1= 'alias' ( (lv_aliases_2_0= RULE_ID ) ) )*
            loop99:
            do {
                int alt99=2;
                int LA99_0 = input.LA(1);

                if ( (LA99_0==49) ) {
                    alt99=1;
                }


                switch (alt99) {
            	case 1 :
            	    // InternalSim.g:4582:4: otherlv_1= 'alias' ( (lv_aliases_2_0= RULE_ID ) )
            	    {
            	    otherlv_1=(Token)match(input,49,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getDComplexTypeAccess().getAliasKeyword_1_0());
            	      			
            	    }
            	    // InternalSim.g:4586:4: ( (lv_aliases_2_0= RULE_ID ) )
            	    // InternalSim.g:4587:5: (lv_aliases_2_0= RULE_ID )
            	    {
            	    // InternalSim.g:4587:5: (lv_aliases_2_0= RULE_ID )
            	    // InternalSim.g:4588:6: lv_aliases_2_0= RULE_ID
            	    {
            	    lv_aliases_2_0=(Token)match(input,RULE_ID,FOLLOW_62); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_aliases_2_0, grammarAccess.getDComplexTypeAccess().getAliasesIDTerminalRuleCall_1_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getDComplexTypeRule());
            	      						}
            	      						addWithLastConsumed(
            	      							current,
            	      							"aliases",
            	      							lv_aliases_2_0,
            	      							"com.mimacom.ddd.dm.dmx.Dmx.ID");
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop99;
                }
            } while (true);

            // InternalSim.g:4605:3: (otherlv_3= 'extends' ( (otherlv_4= RULE_ID ) ) )?
            int alt100=2;
            int LA100_0 = input.LA(1);

            if ( (LA100_0==27) ) {
                alt100=1;
            }
            switch (alt100) {
                case 1 :
                    // InternalSim.g:4606:4: otherlv_3= 'extends' ( (otherlv_4= RULE_ID ) )
                    {
                    otherlv_3=(Token)match(input,27,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getDComplexTypeAccess().getExtendsKeyword_2_0());
                      			
                    }
                    // InternalSim.g:4610:4: ( (otherlv_4= RULE_ID ) )
                    // InternalSim.g:4611:5: (otherlv_4= RULE_ID )
                    {
                    // InternalSim.g:4611:5: (otherlv_4= RULE_ID )
                    // InternalSim.g:4612:6: otherlv_4= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDComplexTypeRule());
                      						}
                      					
                    }
                    otherlv_4=(Token)match(input,RULE_ID,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_4, grammarAccess.getDComplexTypeAccess().getSuperTypeDComplexTypeCrossReference_2_1_0());
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSim.g:4624:3: ( (lv_description_5_0= ruleDRichText ) )?
            int alt101=2;
            int LA101_0 = input.LA(1);

            if ( ((LA101_0>=RULE_PLAIN_TEXT_ONLY && LA101_0<=RULE_RICH_TEXT_START)) ) {
                alt101=1;
            }
            switch (alt101) {
                case 1 :
                    // InternalSim.g:4625:4: (lv_description_5_0= ruleDRichText )
                    {
                    // InternalSim.g:4625:4: (lv_description_5_0= ruleDRichText )
                    // InternalSim.g:4626:5: lv_description_5_0= ruleDRichText
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDComplexTypeAccess().getDescriptionDRichTextParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_description_5_0=ruleDRichText();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDComplexTypeRule());
                      					}
                      					set(
                      						current,
                      						"description",
                      						lv_description_5_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDComplexType"


    // $ANTLR start "entryRuleDFeature"
    // InternalSim.g:4647:1: entryRuleDFeature returns [EObject current=null] : iv_ruleDFeature= ruleDFeature EOF ;
    public final EObject entryRuleDFeature() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDFeature = null;


        try {
            // InternalSim.g:4647:49: (iv_ruleDFeature= ruleDFeature EOF )
            // InternalSim.g:4648:2: iv_ruleDFeature= ruleDFeature EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDFeatureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDFeature=ruleDFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDFeature; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDFeature"


    // $ANTLR start "ruleDFeature"
    // InternalSim.g:4654:1: ruleDFeature returns [EObject current=null] : (this_DAssociation_0= ruleDAssociation | this_DAttribute_1= ruleDAttribute | this_DQuery_2= ruleDQuery ) ;
    public final EObject ruleDFeature() throws RecognitionException {
        EObject current = null;

        EObject this_DAssociation_0 = null;

        EObject this_DAttribute_1 = null;

        EObject this_DQuery_2 = null;



        	enterRule();

        try {
            // InternalSim.g:4660:2: ( (this_DAssociation_0= ruleDAssociation | this_DAttribute_1= ruleDAttribute | this_DQuery_2= ruleDQuery ) )
            // InternalSim.g:4661:2: (this_DAssociation_0= ruleDAssociation | this_DAttribute_1= ruleDAttribute | this_DQuery_2= ruleDQuery )
            {
            // InternalSim.g:4661:2: (this_DAssociation_0= ruleDAssociation | this_DAttribute_1= ruleDAttribute | this_DQuery_2= ruleDQuery )
            int alt102=3;
            alt102 = dfa102.predict(input);
            switch (alt102) {
                case 1 :
                    // InternalSim.g:4662:3: this_DAssociation_0= ruleDAssociation
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDFeatureAccess().getDAssociationParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DAssociation_0=ruleDAssociation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DAssociation_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSim.g:4671:3: this_DAttribute_1= ruleDAttribute
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDFeatureAccess().getDAttributeParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DAttribute_1=ruleDAttribute();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DAttribute_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSim.g:4680:3: this_DQuery_2= ruleDQuery
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDFeatureAccess().getDQueryParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DQuery_2=ruleDQuery();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DQuery_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDFeature"


    // $ANTLR start "entryRuleDAssociation"
    // InternalSim.g:4692:1: entryRuleDAssociation returns [EObject current=null] : iv_ruleDAssociation= ruleDAssociation EOF ;
    public final EObject entryRuleDAssociation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDAssociation = null;


        try {
            // InternalSim.g:4692:53: (iv_ruleDAssociation= ruleDAssociation EOF )
            // InternalSim.g:4693:2: iv_ruleDAssociation= ruleDAssociation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDAssociationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDAssociation=ruleDAssociation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDAssociation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDAssociation"


    // $ANTLR start "ruleDAssociation"
    // InternalSim.g:4699:1: ruleDAssociation returns [EObject current=null] : ( ( (lv_derived_0_0= 'derived' ) )? ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'alias' ( (lv_aliases_3_0= RULE_ID ) ) )* ( ( (lv_kind_4_0= ruleDAssociationKind ) ) | ( ( (lv_kind_5_0= ruleDAssociationKindInverse ) ) otherlv_6= 'contains' ) ) ( (otherlv_7= RULE_ID ) )? ( (lv_multiplicity_8_0= ruleDMultiplicity ) )? ( (lv_description_9_0= ruleDRichText ) )? ) ;
    public final EObject ruleDAssociation() throws RecognitionException {
        EObject current = null;

        Token lv_derived_0_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token lv_aliases_3_0=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Enumerator lv_kind_4_0 = null;

        Enumerator lv_kind_5_0 = null;

        EObject lv_multiplicity_8_0 = null;

        EObject lv_description_9_0 = null;



        	enterRule();

        try {
            // InternalSim.g:4705:2: ( ( ( (lv_derived_0_0= 'derived' ) )? ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'alias' ( (lv_aliases_3_0= RULE_ID ) ) )* ( ( (lv_kind_4_0= ruleDAssociationKind ) ) | ( ( (lv_kind_5_0= ruleDAssociationKindInverse ) ) otherlv_6= 'contains' ) ) ( (otherlv_7= RULE_ID ) )? ( (lv_multiplicity_8_0= ruleDMultiplicity ) )? ( (lv_description_9_0= ruleDRichText ) )? ) )
            // InternalSim.g:4706:2: ( ( (lv_derived_0_0= 'derived' ) )? ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'alias' ( (lv_aliases_3_0= RULE_ID ) ) )* ( ( (lv_kind_4_0= ruleDAssociationKind ) ) | ( ( (lv_kind_5_0= ruleDAssociationKindInverse ) ) otherlv_6= 'contains' ) ) ( (otherlv_7= RULE_ID ) )? ( (lv_multiplicity_8_0= ruleDMultiplicity ) )? ( (lv_description_9_0= ruleDRichText ) )? )
            {
            // InternalSim.g:4706:2: ( ( (lv_derived_0_0= 'derived' ) )? ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'alias' ( (lv_aliases_3_0= RULE_ID ) ) )* ( ( (lv_kind_4_0= ruleDAssociationKind ) ) | ( ( (lv_kind_5_0= ruleDAssociationKindInverse ) ) otherlv_6= 'contains' ) ) ( (otherlv_7= RULE_ID ) )? ( (lv_multiplicity_8_0= ruleDMultiplicity ) )? ( (lv_description_9_0= ruleDRichText ) )? )
            // InternalSim.g:4707:3: ( (lv_derived_0_0= 'derived' ) )? ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'alias' ( (lv_aliases_3_0= RULE_ID ) ) )* ( ( (lv_kind_4_0= ruleDAssociationKind ) ) | ( ( (lv_kind_5_0= ruleDAssociationKindInverse ) ) otherlv_6= 'contains' ) ) ( (otherlv_7= RULE_ID ) )? ( (lv_multiplicity_8_0= ruleDMultiplicity ) )? ( (lv_description_9_0= ruleDRichText ) )?
            {
            // InternalSim.g:4707:3: ( (lv_derived_0_0= 'derived' ) )?
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( (LA103_0==55) ) {
                alt103=1;
            }
            switch (alt103) {
                case 1 :
                    // InternalSim.g:4708:4: (lv_derived_0_0= 'derived' )
                    {
                    // InternalSim.g:4708:4: (lv_derived_0_0= 'derived' )
                    // InternalSim.g:4709:5: lv_derived_0_0= 'derived'
                    {
                    lv_derived_0_0=(Token)match(input,55,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_derived_0_0, grammarAccess.getDAssociationAccess().getDerivedDerivedKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDAssociationRule());
                      					}
                      					setWithLastConsumed(current, "derived", true, "derived");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:4721:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalSim.g:4722:4: (lv_name_1_0= RULE_ID )
            {
            // InternalSim.g:4722:4: (lv_name_1_0= RULE_ID )
            // InternalSim.g:4723:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_63); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getDAssociationAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDAssociationRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.ID");
              				
            }

            }


            }

            // InternalSim.g:4739:3: (otherlv_2= 'alias' ( (lv_aliases_3_0= RULE_ID ) ) )*
            loop104:
            do {
                int alt104=2;
                int LA104_0 = input.LA(1);

                if ( (LA104_0==49) ) {
                    alt104=1;
                }


                switch (alt104) {
            	case 1 :
            	    // InternalSim.g:4740:4: otherlv_2= 'alias' ( (lv_aliases_3_0= RULE_ID ) )
            	    {
            	    otherlv_2=(Token)match(input,49,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getDAssociationAccess().getAliasKeyword_2_0());
            	      			
            	    }
            	    // InternalSim.g:4744:4: ( (lv_aliases_3_0= RULE_ID ) )
            	    // InternalSim.g:4745:5: (lv_aliases_3_0= RULE_ID )
            	    {
            	    // InternalSim.g:4745:5: (lv_aliases_3_0= RULE_ID )
            	    // InternalSim.g:4746:6: lv_aliases_3_0= RULE_ID
            	    {
            	    lv_aliases_3_0=(Token)match(input,RULE_ID,FOLLOW_63); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_aliases_3_0, grammarAccess.getDAssociationAccess().getAliasesIDTerminalRuleCall_2_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getDAssociationRule());
            	      						}
            	      						addWithLastConsumed(
            	      							current,
            	      							"aliases",
            	      							lv_aliases_3_0,
            	      							"com.mimacom.ddd.dm.dmx.Dmx.ID");
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop104;
                }
            } while (true);

            // InternalSim.g:4763:3: ( ( (lv_kind_4_0= ruleDAssociationKind ) ) | ( ( (lv_kind_5_0= ruleDAssociationKindInverse ) ) otherlv_6= 'contains' ) )
            int alt105=2;
            int LA105_0 = input.LA(1);

            if ( (LA105_0==56||LA105_0==102) ) {
                alt105=1;
            }
            else if ( (LA105_0==103) ) {
                alt105=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 105, 0, input);

                throw nvae;
            }
            switch (alt105) {
                case 1 :
                    // InternalSim.g:4764:4: ( (lv_kind_4_0= ruleDAssociationKind ) )
                    {
                    // InternalSim.g:4764:4: ( (lv_kind_4_0= ruleDAssociationKind ) )
                    // InternalSim.g:4765:5: (lv_kind_4_0= ruleDAssociationKind )
                    {
                    // InternalSim.g:4765:5: (lv_kind_4_0= ruleDAssociationKind )
                    // InternalSim.g:4766:6: lv_kind_4_0= ruleDAssociationKind
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDAssociationAccess().getKindDAssociationKindEnumRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_64);
                    lv_kind_4_0=ruleDAssociationKind();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDAssociationRule());
                      						}
                      						set(
                      							current,
                      							"kind",
                      							lv_kind_4_0,
                      							"com.mimacom.ddd.dm.dim.Dim.DAssociationKind");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:4784:4: ( ( (lv_kind_5_0= ruleDAssociationKindInverse ) ) otherlv_6= 'contains' )
                    {
                    // InternalSim.g:4784:4: ( ( (lv_kind_5_0= ruleDAssociationKindInverse ) ) otherlv_6= 'contains' )
                    // InternalSim.g:4785:5: ( (lv_kind_5_0= ruleDAssociationKindInverse ) ) otherlv_6= 'contains'
                    {
                    // InternalSim.g:4785:5: ( (lv_kind_5_0= ruleDAssociationKindInverse ) )
                    // InternalSim.g:4786:6: (lv_kind_5_0= ruleDAssociationKindInverse )
                    {
                    // InternalSim.g:4786:6: (lv_kind_5_0= ruleDAssociationKindInverse )
                    // InternalSim.g:4787:7: lv_kind_5_0= ruleDAssociationKindInverse
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getDAssociationAccess().getKindDAssociationKindInverseEnumRuleCall_3_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_65);
                    lv_kind_5_0=ruleDAssociationKindInverse();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getDAssociationRule());
                      							}
                      							set(
                      								current,
                      								"kind",
                      								lv_kind_5_0,
                      								"com.mimacom.ddd.dm.dim.Dim.DAssociationKindInverse");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_6=(Token)match(input,56,FOLLOW_64); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getDAssociationAccess().getContainsKeyword_3_1_1());
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:4810:3: ( (otherlv_7= RULE_ID ) )?
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( (LA106_0==RULE_ID) ) {
                int LA106_1 = input.LA(2);

                if ( (LA106_1==45) ) {
                    int LA106_3 = input.LA(3);

                    if ( (LA106_3==RULE_NATURAL) ) {
                        alt106=1;
                    }
                }
                else if ( (LA106_1==EOF||(LA106_1>=RULE_ID && LA106_1<=RULE_RICH_TEXT_START)||LA106_1==23||LA106_1==29||LA106_1==31||LA106_1==34||LA106_1==39||LA106_1==41||LA106_1==46||LA106_1==48||LA106_1==55||LA106_1==92||LA106_1==137) ) {
                    alt106=1;
                }
            }
            switch (alt106) {
                case 1 :
                    // InternalSim.g:4811:4: (otherlv_7= RULE_ID )
                    {
                    // InternalSim.g:4811:4: (otherlv_7= RULE_ID )
                    // InternalSim.g:4812:5: otherlv_7= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDAssociationRule());
                      					}
                      				
                    }
                    otherlv_7=(Token)match(input,RULE_ID,FOLLOW_66); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getDAssociationAccess().getTypeDEntityTypeCrossReference_4_0());
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:4823:3: ( (lv_multiplicity_8_0= ruleDMultiplicity ) )?
            int alt107=2;
            int LA107_0 = input.LA(1);

            if ( ((LA107_0>=45 && LA107_0<=46)||LA107_0==92||LA107_0==137) ) {
                alt107=1;
            }
            switch (alt107) {
                case 1 :
                    // InternalSim.g:4824:4: (lv_multiplicity_8_0= ruleDMultiplicity )
                    {
                    // InternalSim.g:4824:4: (lv_multiplicity_8_0= ruleDMultiplicity )
                    // InternalSim.g:4825:5: lv_multiplicity_8_0= ruleDMultiplicity
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDAssociationAccess().getMultiplicityDMultiplicityParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_35);
                    lv_multiplicity_8_0=ruleDMultiplicity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDAssociationRule());
                      					}
                      					set(
                      						current,
                      						"multiplicity",
                      						lv_multiplicity_8_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DMultiplicity");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:4842:3: ( (lv_description_9_0= ruleDRichText ) )?
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( ((LA108_0>=RULE_PLAIN_TEXT_ONLY && LA108_0<=RULE_RICH_TEXT_START)) ) {
                alt108=1;
            }
            switch (alt108) {
                case 1 :
                    // InternalSim.g:4843:4: (lv_description_9_0= ruleDRichText )
                    {
                    // InternalSim.g:4843:4: (lv_description_9_0= ruleDRichText )
                    // InternalSim.g:4844:5: lv_description_9_0= ruleDRichText
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDAssociationAccess().getDescriptionDRichTextParserRuleCall_6_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_description_9_0=ruleDRichText();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDAssociationRule());
                      					}
                      					set(
                      						current,
                      						"description",
                      						lv_description_9_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDAssociation"


    // $ANTLR start "entryRuleDAttribute"
    // InternalSim.g:4865:1: entryRuleDAttribute returns [EObject current=null] : iv_ruleDAttribute= ruleDAttribute EOF ;
    public final EObject entryRuleDAttribute() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDAttribute = null;


        try {
            // InternalSim.g:4865:51: (iv_ruleDAttribute= ruleDAttribute EOF )
            // InternalSim.g:4866:2: iv_ruleDAttribute= ruleDAttribute EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDAttributeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDAttribute=ruleDAttribute();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDAttribute; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDAttribute"


    // $ANTLR start "ruleDAttribute"
    // InternalSim.g:4872:1: ruleDAttribute returns [EObject current=null] : ( ( (lv_detail_0_0= 'detail' ) )? ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'alias' ( (lv_aliases_3_0= RULE_ID ) ) )* otherlv_4= ':' ( (otherlv_5= RULE_ID ) )? ( (lv_multiplicity_6_0= ruleDMultiplicity ) )? ( (lv_key_7_0= 'key' ) )? ( (lv_description_8_0= ruleDRichText ) )? ) ;
    public final EObject ruleDAttribute() throws RecognitionException {
        EObject current = null;

        Token lv_detail_0_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token lv_aliases_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_key_7_0=null;
        EObject lv_multiplicity_6_0 = null;

        EObject lv_description_8_0 = null;



        	enterRule();

        try {
            // InternalSim.g:4878:2: ( ( ( (lv_detail_0_0= 'detail' ) )? ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'alias' ( (lv_aliases_3_0= RULE_ID ) ) )* otherlv_4= ':' ( (otherlv_5= RULE_ID ) )? ( (lv_multiplicity_6_0= ruleDMultiplicity ) )? ( (lv_key_7_0= 'key' ) )? ( (lv_description_8_0= ruleDRichText ) )? ) )
            // InternalSim.g:4879:2: ( ( (lv_detail_0_0= 'detail' ) )? ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'alias' ( (lv_aliases_3_0= RULE_ID ) ) )* otherlv_4= ':' ( (otherlv_5= RULE_ID ) )? ( (lv_multiplicity_6_0= ruleDMultiplicity ) )? ( (lv_key_7_0= 'key' ) )? ( (lv_description_8_0= ruleDRichText ) )? )
            {
            // InternalSim.g:4879:2: ( ( (lv_detail_0_0= 'detail' ) )? ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'alias' ( (lv_aliases_3_0= RULE_ID ) ) )* otherlv_4= ':' ( (otherlv_5= RULE_ID ) )? ( (lv_multiplicity_6_0= ruleDMultiplicity ) )? ( (lv_key_7_0= 'key' ) )? ( (lv_description_8_0= ruleDRichText ) )? )
            // InternalSim.g:4880:3: ( (lv_detail_0_0= 'detail' ) )? ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'alias' ( (lv_aliases_3_0= RULE_ID ) ) )* otherlv_4= ':' ( (otherlv_5= RULE_ID ) )? ( (lv_multiplicity_6_0= ruleDMultiplicity ) )? ( (lv_key_7_0= 'key' ) )? ( (lv_description_8_0= ruleDRichText ) )?
            {
            // InternalSim.g:4880:3: ( (lv_detail_0_0= 'detail' ) )?
            int alt109=2;
            int LA109_0 = input.LA(1);

            if ( (LA109_0==41) ) {
                alt109=1;
            }
            switch (alt109) {
                case 1 :
                    // InternalSim.g:4881:4: (lv_detail_0_0= 'detail' )
                    {
                    // InternalSim.g:4881:4: (lv_detail_0_0= 'detail' )
                    // InternalSim.g:4882:5: lv_detail_0_0= 'detail'
                    {
                    lv_detail_0_0=(Token)match(input,41,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_detail_0_0, grammarAccess.getDAttributeAccess().getDetailDetailKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDAttributeRule());
                      					}
                      					setWithLastConsumed(current, "detail", true, "detail");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:4894:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalSim.g:4895:4: (lv_name_1_0= RULE_ID )
            {
            // InternalSim.g:4895:4: (lv_name_1_0= RULE_ID )
            // InternalSim.g:4896:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_50); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getDAttributeAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDAttributeRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.ID");
              				
            }

            }


            }

            // InternalSim.g:4912:3: (otherlv_2= 'alias' ( (lv_aliases_3_0= RULE_ID ) ) )*
            loop110:
            do {
                int alt110=2;
                int LA110_0 = input.LA(1);

                if ( (LA110_0==49) ) {
                    alt110=1;
                }


                switch (alt110) {
            	case 1 :
            	    // InternalSim.g:4913:4: otherlv_2= 'alias' ( (lv_aliases_3_0= RULE_ID ) )
            	    {
            	    otherlv_2=(Token)match(input,49,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getDAttributeAccess().getAliasKeyword_2_0());
            	      			
            	    }
            	    // InternalSim.g:4917:4: ( (lv_aliases_3_0= RULE_ID ) )
            	    // InternalSim.g:4918:5: (lv_aliases_3_0= RULE_ID )
            	    {
            	    // InternalSim.g:4918:5: (lv_aliases_3_0= RULE_ID )
            	    // InternalSim.g:4919:6: lv_aliases_3_0= RULE_ID
            	    {
            	    lv_aliases_3_0=(Token)match(input,RULE_ID,FOLLOW_50); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_aliases_3_0, grammarAccess.getDAttributeAccess().getAliasesIDTerminalRuleCall_2_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getDAttributeRule());
            	      						}
            	      						addWithLastConsumed(
            	      							current,
            	      							"aliases",
            	      							lv_aliases_3_0,
            	      							"com.mimacom.ddd.dm.dmx.Dmx.ID");
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop110;
                }
            } while (true);

            otherlv_4=(Token)match(input,28,FOLLOW_67); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getDAttributeAccess().getColonKeyword_3());
              		
            }
            // InternalSim.g:4940:3: ( (otherlv_5= RULE_ID ) )?
            int alt111=2;
            int LA111_0 = input.LA(1);

            if ( (LA111_0==RULE_ID) ) {
                int LA111_1 = input.LA(2);

                if ( (LA111_1==45) ) {
                    int LA111_3 = input.LA(3);

                    if ( (LA111_3==RULE_NATURAL) ) {
                        alt111=1;
                    }
                }
                else if ( (LA111_1==EOF||(LA111_1>=RULE_ID && LA111_1<=RULE_RICH_TEXT_START)||LA111_1==23||LA111_1==29||LA111_1==31||LA111_1==34||LA111_1==39||LA111_1==41||LA111_1==46||LA111_1==48||LA111_1==55||LA111_1==57||LA111_1==92||LA111_1==137) ) {
                    alt111=1;
                }
            }
            switch (alt111) {
                case 1 :
                    // InternalSim.g:4941:4: (otherlv_5= RULE_ID )
                    {
                    // InternalSim.g:4941:4: (otherlv_5= RULE_ID )
                    // InternalSim.g:4942:5: otherlv_5= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDAttributeRule());
                      					}
                      				
                    }
                    otherlv_5=(Token)match(input,RULE_ID,FOLLOW_68); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getDAttributeAccess().getTypeDTypeCrossReference_4_0());
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:4953:3: ( (lv_multiplicity_6_0= ruleDMultiplicity ) )?
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( ((LA112_0>=45 && LA112_0<=46)||LA112_0==92||LA112_0==137) ) {
                alt112=1;
            }
            switch (alt112) {
                case 1 :
                    // InternalSim.g:4954:4: (lv_multiplicity_6_0= ruleDMultiplicity )
                    {
                    // InternalSim.g:4954:4: (lv_multiplicity_6_0= ruleDMultiplicity )
                    // InternalSim.g:4955:5: lv_multiplicity_6_0= ruleDMultiplicity
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDAttributeAccess().getMultiplicityDMultiplicityParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_69);
                    lv_multiplicity_6_0=ruleDMultiplicity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDAttributeRule());
                      					}
                      					set(
                      						current,
                      						"multiplicity",
                      						lv_multiplicity_6_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DMultiplicity");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:4972:3: ( (lv_key_7_0= 'key' ) )?
            int alt113=2;
            int LA113_0 = input.LA(1);

            if ( (LA113_0==57) ) {
                alt113=1;
            }
            switch (alt113) {
                case 1 :
                    // InternalSim.g:4973:4: (lv_key_7_0= 'key' )
                    {
                    // InternalSim.g:4973:4: (lv_key_7_0= 'key' )
                    // InternalSim.g:4974:5: lv_key_7_0= 'key'
                    {
                    lv_key_7_0=(Token)match(input,57,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_key_7_0, grammarAccess.getDAttributeAccess().getKeyKeyKeyword_6_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDAttributeRule());
                      					}
                      					setWithLastConsumed(current, "key", true, "key");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:4986:3: ( (lv_description_8_0= ruleDRichText ) )?
            int alt114=2;
            int LA114_0 = input.LA(1);

            if ( ((LA114_0>=RULE_PLAIN_TEXT_ONLY && LA114_0<=RULE_RICH_TEXT_START)) ) {
                alt114=1;
            }
            switch (alt114) {
                case 1 :
                    // InternalSim.g:4987:4: (lv_description_8_0= ruleDRichText )
                    {
                    // InternalSim.g:4987:4: (lv_description_8_0= ruleDRichText )
                    // InternalSim.g:4988:5: lv_description_8_0= ruleDRichText
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDAttributeAccess().getDescriptionDRichTextParserRuleCall_7_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_description_8_0=ruleDRichText();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDAttributeRule());
                      					}
                      					set(
                      						current,
                      						"description",
                      						lv_description_8_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDAttribute"


    // $ANTLR start "entryRuleDQuery"
    // InternalSim.g:5009:1: entryRuleDQuery returns [EObject current=null] : iv_ruleDQuery= ruleDQuery EOF ;
    public final EObject entryRuleDQuery() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDQuery = null;


        try {
            // InternalSim.g:5009:47: (iv_ruleDQuery= ruleDQuery EOF )
            // InternalSim.g:5010:2: iv_ruleDQuery= ruleDQuery EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDQueryRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDQuery=ruleDQuery();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDQuery; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDQuery"


    // $ANTLR start "ruleDQuery"
    // InternalSim.g:5016:1: ruleDQuery returns [EObject current=null] : ( ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= 'alias' ( (lv_aliases_2_0= RULE_ID ) ) )* otherlv_3= '(' ( ( (lv_parameters_4_0= ruleDQueryParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleDQueryParameter ) ) )* )? otherlv_7= ')' otherlv_8= ':' ( (otherlv_9= RULE_ID ) )? ( (lv_multiplicity_10_0= ruleDMultiplicity ) )? (otherlv_11= 'returns' ( (lv_returns_12_0= ruleDExpression ) ) )? ( (lv_description_13_0= ruleDRichText ) )? ) ;
    public final EObject ruleDQuery() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token lv_aliases_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        EObject lv_parameters_4_0 = null;

        EObject lv_parameters_6_0 = null;

        EObject lv_multiplicity_10_0 = null;

        EObject lv_returns_12_0 = null;

        EObject lv_description_13_0 = null;



        	enterRule();

        try {
            // InternalSim.g:5022:2: ( ( ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= 'alias' ( (lv_aliases_2_0= RULE_ID ) ) )* otherlv_3= '(' ( ( (lv_parameters_4_0= ruleDQueryParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleDQueryParameter ) ) )* )? otherlv_7= ')' otherlv_8= ':' ( (otherlv_9= RULE_ID ) )? ( (lv_multiplicity_10_0= ruleDMultiplicity ) )? (otherlv_11= 'returns' ( (lv_returns_12_0= ruleDExpression ) ) )? ( (lv_description_13_0= ruleDRichText ) )? ) )
            // InternalSim.g:5023:2: ( ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= 'alias' ( (lv_aliases_2_0= RULE_ID ) ) )* otherlv_3= '(' ( ( (lv_parameters_4_0= ruleDQueryParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleDQueryParameter ) ) )* )? otherlv_7= ')' otherlv_8= ':' ( (otherlv_9= RULE_ID ) )? ( (lv_multiplicity_10_0= ruleDMultiplicity ) )? (otherlv_11= 'returns' ( (lv_returns_12_0= ruleDExpression ) ) )? ( (lv_description_13_0= ruleDRichText ) )? )
            {
            // InternalSim.g:5023:2: ( ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= 'alias' ( (lv_aliases_2_0= RULE_ID ) ) )* otherlv_3= '(' ( ( (lv_parameters_4_0= ruleDQueryParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleDQueryParameter ) ) )* )? otherlv_7= ')' otherlv_8= ':' ( (otherlv_9= RULE_ID ) )? ( (lv_multiplicity_10_0= ruleDMultiplicity ) )? (otherlv_11= 'returns' ( (lv_returns_12_0= ruleDExpression ) ) )? ( (lv_description_13_0= ruleDRichText ) )? )
            // InternalSim.g:5024:3: ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= 'alias' ( (lv_aliases_2_0= RULE_ID ) ) )* otherlv_3= '(' ( ( (lv_parameters_4_0= ruleDQueryParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleDQueryParameter ) ) )* )? otherlv_7= ')' otherlv_8= ':' ( (otherlv_9= RULE_ID ) )? ( (lv_multiplicity_10_0= ruleDMultiplicity ) )? (otherlv_11= 'returns' ( (lv_returns_12_0= ruleDExpression ) ) )? ( (lv_description_13_0= ruleDRichText ) )?
            {
            // InternalSim.g:5024:3: ( (lv_name_0_0= RULE_ID ) )
            // InternalSim.g:5025:4: (lv_name_0_0= RULE_ID )
            {
            // InternalSim.g:5025:4: (lv_name_0_0= RULE_ID )
            // InternalSim.g:5026:5: lv_name_0_0= RULE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ID,FOLLOW_70); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getDQueryAccess().getNameIDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDQueryRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.ID");
              				
            }

            }


            }

            // InternalSim.g:5042:3: (otherlv_1= 'alias' ( (lv_aliases_2_0= RULE_ID ) ) )*
            loop115:
            do {
                int alt115=2;
                int LA115_0 = input.LA(1);

                if ( (LA115_0==49) ) {
                    alt115=1;
                }


                switch (alt115) {
            	case 1 :
            	    // InternalSim.g:5043:4: otherlv_1= 'alias' ( (lv_aliases_2_0= RULE_ID ) )
            	    {
            	    otherlv_1=(Token)match(input,49,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getDQueryAccess().getAliasKeyword_1_0());
            	      			
            	    }
            	    // InternalSim.g:5047:4: ( (lv_aliases_2_0= RULE_ID ) )
            	    // InternalSim.g:5048:5: (lv_aliases_2_0= RULE_ID )
            	    {
            	    // InternalSim.g:5048:5: (lv_aliases_2_0= RULE_ID )
            	    // InternalSim.g:5049:6: lv_aliases_2_0= RULE_ID
            	    {
            	    lv_aliases_2_0=(Token)match(input,RULE_ID,FOLLOW_70); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_aliases_2_0, grammarAccess.getDQueryAccess().getAliasesIDTerminalRuleCall_1_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getDQueryRule());
            	      						}
            	      						addWithLastConsumed(
            	      							current,
            	      							"aliases",
            	      							lv_aliases_2_0,
            	      							"com.mimacom.ddd.dm.dmx.Dmx.ID");
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop115;
                }
            } while (true);

            otherlv_3=(Token)match(input,45,FOLLOW_71); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getDQueryAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalSim.g:5070:3: ( ( (lv_parameters_4_0= ruleDQueryParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleDQueryParameter ) ) )* )?
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( (LA117_0==RULE_ID) ) {
                alt117=1;
            }
            switch (alt117) {
                case 1 :
                    // InternalSim.g:5071:4: ( (lv_parameters_4_0= ruleDQueryParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleDQueryParameter ) ) )*
                    {
                    // InternalSim.g:5071:4: ( (lv_parameters_4_0= ruleDQueryParameter ) )
                    // InternalSim.g:5072:5: (lv_parameters_4_0= ruleDQueryParameter )
                    {
                    // InternalSim.g:5072:5: (lv_parameters_4_0= ruleDQueryParameter )
                    // InternalSim.g:5073:6: lv_parameters_4_0= ruleDQueryParameter
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDQueryAccess().getParametersDQueryParameterParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_47);
                    lv_parameters_4_0=ruleDQueryParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDQueryRule());
                      						}
                      						add(
                      							current,
                      							"parameters",
                      							lv_parameters_4_0,
                      							"com.mimacom.ddd.dm.dim.Dim.DQueryParameter");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSim.g:5090:4: (otherlv_5= ',' ( (lv_parameters_6_0= ruleDQueryParameter ) ) )*
                    loop116:
                    do {
                        int alt116=2;
                        int LA116_0 = input.LA(1);

                        if ( (LA116_0==36) ) {
                            alt116=1;
                        }


                        switch (alt116) {
                    	case 1 :
                    	    // InternalSim.g:5091:5: otherlv_5= ',' ( (lv_parameters_6_0= ruleDQueryParameter ) )
                    	    {
                    	    otherlv_5=(Token)match(input,36,FOLLOW_3); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_5, grammarAccess.getDQueryAccess().getCommaKeyword_3_1_0());
                    	      				
                    	    }
                    	    // InternalSim.g:5095:5: ( (lv_parameters_6_0= ruleDQueryParameter ) )
                    	    // InternalSim.g:5096:6: (lv_parameters_6_0= ruleDQueryParameter )
                    	    {
                    	    // InternalSim.g:5096:6: (lv_parameters_6_0= ruleDQueryParameter )
                    	    // InternalSim.g:5097:7: lv_parameters_6_0= ruleDQueryParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getDQueryAccess().getParametersDQueryParameterParserRuleCall_3_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_47);
                    	    lv_parameters_6_0=ruleDQueryParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getDQueryRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"parameters",
                    	      								lv_parameters_6_0,
                    	      								"com.mimacom.ddd.dm.dim.Dim.DQueryParameter");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop116;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_7=(Token)match(input,47,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getDQueryAccess().getRightParenthesisKeyword_4());
              		
            }
            otherlv_8=(Token)match(input,28,FOLLOW_72); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getDQueryAccess().getColonKeyword_5());
              		
            }
            // InternalSim.g:5124:3: ( (otherlv_9= RULE_ID ) )?
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( (LA118_0==RULE_ID) ) {
                int LA118_1 = input.LA(2);

                if ( (LA118_1==EOF||(LA118_1>=RULE_ID && LA118_1<=RULE_RICH_TEXT_START)||LA118_1==23||LA118_1==29||(LA118_1>=31 && LA118_1<=35)||(LA118_1>=38 && LA118_1<=41)||LA118_1==46||LA118_1==48||(LA118_1>=51 && LA118_1<=52)||LA118_1==55||LA118_1==58||LA118_1==92||(LA118_1>=100 && LA118_1<=101)||LA118_1==137) ) {
                    alt118=1;
                }
                else if ( (LA118_1==45) ) {
                    int LA118_4 = input.LA(3);

                    if ( (LA118_4==RULE_NATURAL) ) {
                        alt118=1;
                    }
                }
            }
            switch (alt118) {
                case 1 :
                    // InternalSim.g:5125:4: (otherlv_9= RULE_ID )
                    {
                    // InternalSim.g:5125:4: (otherlv_9= RULE_ID )
                    // InternalSim.g:5126:5: otherlv_9= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDQueryRule());
                      					}
                      				
                    }
                    otherlv_9=(Token)match(input,RULE_ID,FOLLOW_73); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getDQueryAccess().getTypeDTypeCrossReference_6_0());
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:5137:3: ( (lv_multiplicity_10_0= ruleDMultiplicity ) )?
            int alt119=2;
            int LA119_0 = input.LA(1);

            if ( ((LA119_0>=45 && LA119_0<=46)||LA119_0==92||LA119_0==137) ) {
                alt119=1;
            }
            switch (alt119) {
                case 1 :
                    // InternalSim.g:5138:4: (lv_multiplicity_10_0= ruleDMultiplicity )
                    {
                    // InternalSim.g:5138:4: (lv_multiplicity_10_0= ruleDMultiplicity )
                    // InternalSim.g:5139:5: lv_multiplicity_10_0= ruleDMultiplicity
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDQueryAccess().getMultiplicityDMultiplicityParserRuleCall_7_0());
                      				
                    }
                    pushFollow(FOLLOW_74);
                    lv_multiplicity_10_0=ruleDMultiplicity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDQueryRule());
                      					}
                      					set(
                      						current,
                      						"multiplicity",
                      						lv_multiplicity_10_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DMultiplicity");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:5156:3: (otherlv_11= 'returns' ( (lv_returns_12_0= ruleDExpression ) ) )?
            int alt120=2;
            int LA120_0 = input.LA(1);

            if ( (LA120_0==58) ) {
                alt120=1;
            }
            switch (alt120) {
                case 1 :
                    // InternalSim.g:5157:4: otherlv_11= 'returns' ( (lv_returns_12_0= ruleDExpression ) )
                    {
                    otherlv_11=(Token)match(input,58,FOLLOW_51); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getDQueryAccess().getReturnsKeyword_8_0());
                      			
                    }
                    // InternalSim.g:5161:4: ( (lv_returns_12_0= ruleDExpression ) )
                    // InternalSim.g:5162:5: (lv_returns_12_0= ruleDExpression )
                    {
                    // InternalSim.g:5162:5: (lv_returns_12_0= ruleDExpression )
                    // InternalSim.g:5163:6: lv_returns_12_0= ruleDExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDQueryAccess().getReturnsDExpressionParserRuleCall_8_1_0());
                      					
                    }
                    pushFollow(FOLLOW_35);
                    lv_returns_12_0=ruleDExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDQueryRule());
                      						}
                      						set(
                      							current,
                      							"returns",
                      							lv_returns_12_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.DExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSim.g:5181:3: ( (lv_description_13_0= ruleDRichText ) )?
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( ((LA121_0>=RULE_PLAIN_TEXT_ONLY && LA121_0<=RULE_RICH_TEXT_START)) ) {
                alt121=1;
            }
            switch (alt121) {
                case 1 :
                    // InternalSim.g:5182:4: (lv_description_13_0= ruleDRichText )
                    {
                    // InternalSim.g:5182:4: (lv_description_13_0= ruleDRichText )
                    // InternalSim.g:5183:5: lv_description_13_0= ruleDRichText
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDQueryAccess().getDescriptionDRichTextParserRuleCall_9_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_description_13_0=ruleDRichText();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDQueryRule());
                      					}
                      					set(
                      						current,
                      						"description",
                      						lv_description_13_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDQuery"


    // $ANTLR start "entryRuleDQueryParameter"
    // InternalSim.g:5204:1: entryRuleDQueryParameter returns [EObject current=null] : iv_ruleDQueryParameter= ruleDQueryParameter EOF ;
    public final EObject entryRuleDQueryParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDQueryParameter = null;


        try {
            // InternalSim.g:5204:56: (iv_ruleDQueryParameter= ruleDQueryParameter EOF )
            // InternalSim.g:5205:2: iv_ruleDQueryParameter= ruleDQueryParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDQueryParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDQueryParameter=ruleDQueryParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDQueryParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDQueryParameter"


    // $ANTLR start "ruleDQueryParameter"
    // InternalSim.g:5211:1: ruleDQueryParameter returns [EObject current=null] : ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= ':' ( (otherlv_2= RULE_ID ) )? ( (lv_multiplicity_3_0= ruleDMultiplicity ) )? ( (lv_description_4_0= ruleDRichText ) )? ) ;
    public final EObject ruleDQueryParameter() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_multiplicity_3_0 = null;

        EObject lv_description_4_0 = null;



        	enterRule();

        try {
            // InternalSim.g:5217:2: ( ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= ':' ( (otherlv_2= RULE_ID ) )? ( (lv_multiplicity_3_0= ruleDMultiplicity ) )? ( (lv_description_4_0= ruleDRichText ) )? ) )
            // InternalSim.g:5218:2: ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= ':' ( (otherlv_2= RULE_ID ) )? ( (lv_multiplicity_3_0= ruleDMultiplicity ) )? ( (lv_description_4_0= ruleDRichText ) )? )
            {
            // InternalSim.g:5218:2: ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= ':' ( (otherlv_2= RULE_ID ) )? ( (lv_multiplicity_3_0= ruleDMultiplicity ) )? ( (lv_description_4_0= ruleDRichText ) )? )
            // InternalSim.g:5219:3: ( (lv_name_0_0= RULE_ID ) ) otherlv_1= ':' ( (otherlv_2= RULE_ID ) )? ( (lv_multiplicity_3_0= ruleDMultiplicity ) )? ( (lv_description_4_0= ruleDRichText ) )?
            {
            // InternalSim.g:5219:3: ( (lv_name_0_0= RULE_ID ) )
            // InternalSim.g:5220:4: (lv_name_0_0= RULE_ID )
            {
            // InternalSim.g:5220:4: (lv_name_0_0= RULE_ID )
            // InternalSim.g:5221:5: lv_name_0_0= RULE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ID,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getDQueryParameterAccess().getNameIDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDQueryParameterRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.ID");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,28,FOLLOW_64); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getDQueryParameterAccess().getColonKeyword_1());
              		
            }
            // InternalSim.g:5241:3: ( (otherlv_2= RULE_ID ) )?
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( (LA122_0==RULE_ID) ) {
                alt122=1;
            }
            switch (alt122) {
                case 1 :
                    // InternalSim.g:5242:4: (otherlv_2= RULE_ID )
                    {
                    // InternalSim.g:5242:4: (otherlv_2= RULE_ID )
                    // InternalSim.g:5243:5: otherlv_2= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDQueryParameterRule());
                      					}
                      				
                    }
                    otherlv_2=(Token)match(input,RULE_ID,FOLLOW_66); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getDQueryParameterAccess().getTypeDTypeCrossReference_2_0());
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:5254:3: ( (lv_multiplicity_3_0= ruleDMultiplicity ) )?
            int alt123=2;
            int LA123_0 = input.LA(1);

            if ( ((LA123_0>=45 && LA123_0<=46)||LA123_0==92||LA123_0==137) ) {
                alt123=1;
            }
            switch (alt123) {
                case 1 :
                    // InternalSim.g:5255:4: (lv_multiplicity_3_0= ruleDMultiplicity )
                    {
                    // InternalSim.g:5255:4: (lv_multiplicity_3_0= ruleDMultiplicity )
                    // InternalSim.g:5256:5: lv_multiplicity_3_0= ruleDMultiplicity
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDQueryParameterAccess().getMultiplicityDMultiplicityParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_35);
                    lv_multiplicity_3_0=ruleDMultiplicity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDQueryParameterRule());
                      					}
                      					set(
                      						current,
                      						"multiplicity",
                      						lv_multiplicity_3_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DMultiplicity");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:5273:3: ( (lv_description_4_0= ruleDRichText ) )?
            int alt124=2;
            int LA124_0 = input.LA(1);

            if ( ((LA124_0>=RULE_PLAIN_TEXT_ONLY && LA124_0<=RULE_RICH_TEXT_START)) ) {
                alt124=1;
            }
            switch (alt124) {
                case 1 :
                    // InternalSim.g:5274:4: (lv_description_4_0= ruleDRichText )
                    {
                    // InternalSim.g:5274:4: (lv_description_4_0= ruleDRichText )
                    // InternalSim.g:5275:5: lv_description_4_0= ruleDRichText
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDQueryParameterAccess().getDescriptionDRichTextParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_description_4_0=ruleDRichText();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDQueryParameterRule());
                      					}
                      					set(
                      						current,
                      						"description",
                      						lv_description_4_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDQueryParameter"


    // $ANTLR start "entryRuleDImport"
    // InternalSim.g:5296:1: entryRuleDImport returns [EObject current=null] : iv_ruleDImport= ruleDImport EOF ;
    public final EObject entryRuleDImport() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDImport = null;


        try {
            // InternalSim.g:5296:48: (iv_ruleDImport= ruleDImport EOF )
            // InternalSim.g:5297:2: iv_ruleDImport= ruleDImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDImportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDImport=ruleDImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDImport; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDImport"


    // $ANTLR start "ruleDImport"
    // InternalSim.g:5303:1: ruleDImport returns [EObject current=null] : (otherlv_0= 'import' ( (lv_importedNamespace_1_0= ruleDQualifiedNameWithWildcard ) ) ) ;
    public final EObject ruleDImport() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_importedNamespace_1_0 = null;



        	enterRule();

        try {
            // InternalSim.g:5309:2: ( (otherlv_0= 'import' ( (lv_importedNamespace_1_0= ruleDQualifiedNameWithWildcard ) ) ) )
            // InternalSim.g:5310:2: (otherlv_0= 'import' ( (lv_importedNamespace_1_0= ruleDQualifiedNameWithWildcard ) ) )
            {
            // InternalSim.g:5310:2: (otherlv_0= 'import' ( (lv_importedNamespace_1_0= ruleDQualifiedNameWithWildcard ) ) )
            // InternalSim.g:5311:3: otherlv_0= 'import' ( (lv_importedNamespace_1_0= ruleDQualifiedNameWithWildcard ) )
            {
            otherlv_0=(Token)match(input,59,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDImportAccess().getImportKeyword_0());
              		
            }
            // InternalSim.g:5315:3: ( (lv_importedNamespace_1_0= ruleDQualifiedNameWithWildcard ) )
            // InternalSim.g:5316:4: (lv_importedNamespace_1_0= ruleDQualifiedNameWithWildcard )
            {
            // InternalSim.g:5316:4: (lv_importedNamespace_1_0= ruleDQualifiedNameWithWildcard )
            // InternalSim.g:5317:5: lv_importedNamespace_1_0= ruleDQualifiedNameWithWildcard
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDImportAccess().getImportedNamespaceDQualifiedNameWithWildcardParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_importedNamespace_1_0=ruleDQualifiedNameWithWildcard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDImportRule());
              					}
              					set(
              						current,
              						"importedNamespace",
              						lv_importedNamespace_1_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.DQualifiedNameWithWildcard");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDImport"


    // $ANTLR start "entryRuleDmxTest"
    // InternalSim.g:5338:1: entryRuleDmxTest returns [EObject current=null] : iv_ruleDmxTest= ruleDmxTest EOF ;
    public final EObject entryRuleDmxTest() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxTest = null;


        try {
            // InternalSim.g:5338:48: (iv_ruleDmxTest= ruleDmxTest EOF )
            // InternalSim.g:5339:2: iv_ruleDmxTest= ruleDmxTest EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxTestRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxTest=ruleDmxTest();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxTest; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxTest"


    // $ANTLR start "ruleDmxTest"
    // InternalSim.g:5345:1: ruleDmxTest returns [EObject current=null] : (otherlv_0= 'test' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'context' ( (lv_context_3_0= ruleDmxTestContext ) ) (otherlv_4= ',' ( (lv_context_5_0= ruleDmxTestContext ) ) )* )? otherlv_6= '{' ( (lv_expr_7_0= ruleDExpression ) ) otherlv_8= '}' ) ;
    public final EObject ruleDmxTest() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        EObject lv_context_3_0 = null;

        EObject lv_context_5_0 = null;

        EObject lv_expr_7_0 = null;



        	enterRule();

        try {
            // InternalSim.g:5351:2: ( (otherlv_0= 'test' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'context' ( (lv_context_3_0= ruleDmxTestContext ) ) (otherlv_4= ',' ( (lv_context_5_0= ruleDmxTestContext ) ) )* )? otherlv_6= '{' ( (lv_expr_7_0= ruleDExpression ) ) otherlv_8= '}' ) )
            // InternalSim.g:5352:2: (otherlv_0= 'test' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'context' ( (lv_context_3_0= ruleDmxTestContext ) ) (otherlv_4= ',' ( (lv_context_5_0= ruleDmxTestContext ) ) )* )? otherlv_6= '{' ( (lv_expr_7_0= ruleDExpression ) ) otherlv_8= '}' )
            {
            // InternalSim.g:5352:2: (otherlv_0= 'test' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'context' ( (lv_context_3_0= ruleDmxTestContext ) ) (otherlv_4= ',' ( (lv_context_5_0= ruleDmxTestContext ) ) )* )? otherlv_6= '{' ( (lv_expr_7_0= ruleDExpression ) ) otherlv_8= '}' )
            // InternalSim.g:5353:3: otherlv_0= 'test' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'context' ( (lv_context_3_0= ruleDmxTestContext ) ) (otherlv_4= ',' ( (lv_context_5_0= ruleDmxTestContext ) ) )* )? otherlv_6= '{' ( (lv_expr_7_0= ruleDExpression ) ) otherlv_8= '}'
            {
            otherlv_0=(Token)match(input,60,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDmxTestAccess().getTestKeyword_0());
              		
            }
            // InternalSim.g:5357:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalSim.g:5358:4: (lv_name_1_0= RULE_ID )
            {
            // InternalSim.g:5358:4: (lv_name_1_0= RULE_ID )
            // InternalSim.g:5359:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_75); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getDmxTestAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDmxTestRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.ID");
              				
            }

            }


            }

            // InternalSim.g:5375:3: (otherlv_2= 'context' ( (lv_context_3_0= ruleDmxTestContext ) ) (otherlv_4= ',' ( (lv_context_5_0= ruleDmxTestContext ) ) )* )?
            int alt126=2;
            int LA126_0 = input.LA(1);

            if ( (LA126_0==61) ) {
                alt126=1;
            }
            switch (alt126) {
                case 1 :
                    // InternalSim.g:5376:4: otherlv_2= 'context' ( (lv_context_3_0= ruleDmxTestContext ) ) (otherlv_4= ',' ( (lv_context_5_0= ruleDmxTestContext ) ) )*
                    {
                    otherlv_2=(Token)match(input,61,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getDmxTestAccess().getContextKeyword_2_0());
                      			
                    }
                    // InternalSim.g:5380:4: ( (lv_context_3_0= ruleDmxTestContext ) )
                    // InternalSim.g:5381:5: (lv_context_3_0= ruleDmxTestContext )
                    {
                    // InternalSim.g:5381:5: (lv_context_3_0= ruleDmxTestContext )
                    // InternalSim.g:5382:6: lv_context_3_0= ruleDmxTestContext
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDmxTestAccess().getContextDmxTestContextParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_76);
                    lv_context_3_0=ruleDmxTestContext();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDmxTestRule());
                      						}
                      						add(
                      							current,
                      							"context",
                      							lv_context_3_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.DmxTestContext");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSim.g:5399:4: (otherlv_4= ',' ( (lv_context_5_0= ruleDmxTestContext ) ) )*
                    loop125:
                    do {
                        int alt125=2;
                        int LA125_0 = input.LA(1);

                        if ( (LA125_0==36) ) {
                            alt125=1;
                        }


                        switch (alt125) {
                    	case 1 :
                    	    // InternalSim.g:5400:5: otherlv_4= ',' ( (lv_context_5_0= ruleDmxTestContext ) )
                    	    {
                    	    otherlv_4=(Token)match(input,36,FOLLOW_3); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getDmxTestAccess().getCommaKeyword_2_2_0());
                    	      				
                    	    }
                    	    // InternalSim.g:5404:5: ( (lv_context_5_0= ruleDmxTestContext ) )
                    	    // InternalSim.g:5405:6: (lv_context_5_0= ruleDmxTestContext )
                    	    {
                    	    // InternalSim.g:5405:6: (lv_context_5_0= ruleDmxTestContext )
                    	    // InternalSim.g:5406:7: lv_context_5_0= ruleDmxTestContext
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getDmxTestAccess().getContextDmxTestContextParserRuleCall_2_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_76);
                    	    lv_context_5_0=ruleDmxTestContext();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getDmxTestRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"context",
                    	      								lv_context_5_0,
                    	      								"com.mimacom.ddd.dm.dmx.Dmx.DmxTestContext");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop125;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,22,FOLLOW_51); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getDmxTestAccess().getLeftCurlyBracketKeyword_3());
              		
            }
            // InternalSim.g:5429:3: ( (lv_expr_7_0= ruleDExpression ) )
            // InternalSim.g:5430:4: (lv_expr_7_0= ruleDExpression )
            {
            // InternalSim.g:5430:4: (lv_expr_7_0= ruleDExpression )
            // InternalSim.g:5431:5: lv_expr_7_0= ruleDExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDmxTestAccess().getExprDExpressionParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_77);
            lv_expr_7_0=ruleDExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDmxTestRule());
              					}
              					set(
              						current,
              						"expr",
              						lv_expr_7_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.DExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_8=(Token)match(input,23,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getDmxTestAccess().getRightCurlyBracketKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxTest"


    // $ANTLR start "entryRuleDmxTestContext"
    // InternalSim.g:5456:1: entryRuleDmxTestContext returns [EObject current=null] : iv_ruleDmxTestContext= ruleDmxTestContext EOF ;
    public final EObject entryRuleDmxTestContext() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxTestContext = null;


        try {
            // InternalSim.g:5456:55: (iv_ruleDmxTestContext= ruleDmxTestContext EOF )
            // InternalSim.g:5457:2: iv_ruleDmxTestContext= ruleDmxTestContext EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxTestContextRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxTestContext=ruleDmxTestContext();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxTestContext; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxTestContext"


    // $ANTLR start "ruleDmxTestContext"
    // InternalSim.g:5463:1: ruleDmxTestContext returns [EObject current=null] : ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= ':' ( (otherlv_2= RULE_ID ) ) ( (lv_multiplicity_3_0= ruleDMultiplicity ) )? (otherlv_4= ':=' ( ( (lv_value_5_0= ruleDmxLiteralExpression ) ) | ( (lv_value_6_0= ruleDmxLiteralListExpression ) ) ) )? ) ;
    public final EObject ruleDmxTestContext() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_multiplicity_3_0 = null;

        EObject lv_value_5_0 = null;

        EObject lv_value_6_0 = null;



        	enterRule();

        try {
            // InternalSim.g:5469:2: ( ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= ':' ( (otherlv_2= RULE_ID ) ) ( (lv_multiplicity_3_0= ruleDMultiplicity ) )? (otherlv_4= ':=' ( ( (lv_value_5_0= ruleDmxLiteralExpression ) ) | ( (lv_value_6_0= ruleDmxLiteralListExpression ) ) ) )? ) )
            // InternalSim.g:5470:2: ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= ':' ( (otherlv_2= RULE_ID ) ) ( (lv_multiplicity_3_0= ruleDMultiplicity ) )? (otherlv_4= ':=' ( ( (lv_value_5_0= ruleDmxLiteralExpression ) ) | ( (lv_value_6_0= ruleDmxLiteralListExpression ) ) ) )? )
            {
            // InternalSim.g:5470:2: ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= ':' ( (otherlv_2= RULE_ID ) ) ( (lv_multiplicity_3_0= ruleDMultiplicity ) )? (otherlv_4= ':=' ( ( (lv_value_5_0= ruleDmxLiteralExpression ) ) | ( (lv_value_6_0= ruleDmxLiteralListExpression ) ) ) )? )
            // InternalSim.g:5471:3: ( (lv_name_0_0= RULE_ID ) ) otherlv_1= ':' ( (otherlv_2= RULE_ID ) ) ( (lv_multiplicity_3_0= ruleDMultiplicity ) )? (otherlv_4= ':=' ( ( (lv_value_5_0= ruleDmxLiteralExpression ) ) | ( (lv_value_6_0= ruleDmxLiteralListExpression ) ) ) )?
            {
            // InternalSim.g:5471:3: ( (lv_name_0_0= RULE_ID ) )
            // InternalSim.g:5472:4: (lv_name_0_0= RULE_ID )
            {
            // InternalSim.g:5472:4: (lv_name_0_0= RULE_ID )
            // InternalSim.g:5473:5: lv_name_0_0= RULE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ID,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getDmxTestContextAccess().getNameIDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDmxTestContextRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.ID");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,28,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getDmxTestContextAccess().getColonKeyword_1());
              		
            }
            // InternalSim.g:5493:3: ( (otherlv_2= RULE_ID ) )
            // InternalSim.g:5494:4: (otherlv_2= RULE_ID )
            {
            // InternalSim.g:5494:4: (otherlv_2= RULE_ID )
            // InternalSim.g:5495:5: otherlv_2= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDmxTestContextRule());
              					}
              				
            }
            otherlv_2=(Token)match(input,RULE_ID,FOLLOW_78); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_2, grammarAccess.getDmxTestContextAccess().getTypeDTypeCrossReference_2_0());
              				
            }

            }


            }

            // InternalSim.g:5506:3: ( (lv_multiplicity_3_0= ruleDMultiplicity ) )?
            int alt127=2;
            int LA127_0 = input.LA(1);

            if ( ((LA127_0>=45 && LA127_0<=46)||LA127_0==92||LA127_0==137) ) {
                alt127=1;
            }
            switch (alt127) {
                case 1 :
                    // InternalSim.g:5507:4: (lv_multiplicity_3_0= ruleDMultiplicity )
                    {
                    // InternalSim.g:5507:4: (lv_multiplicity_3_0= ruleDMultiplicity )
                    // InternalSim.g:5508:5: lv_multiplicity_3_0= ruleDMultiplicity
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDmxTestContextAccess().getMultiplicityDMultiplicityParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_79);
                    lv_multiplicity_3_0=ruleDMultiplicity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDmxTestContextRule());
                      					}
                      					set(
                      						current,
                      						"multiplicity",
                      						lv_multiplicity_3_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DMultiplicity");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:5525:3: (otherlv_4= ':=' ( ( (lv_value_5_0= ruleDmxLiteralExpression ) ) | ( (lv_value_6_0= ruleDmxLiteralListExpression ) ) ) )?
            int alt129=2;
            int LA129_0 = input.LA(1);

            if ( (LA129_0==62) ) {
                alt129=1;
            }
            switch (alt129) {
                case 1 :
                    // InternalSim.g:5526:4: otherlv_4= ':=' ( ( (lv_value_5_0= ruleDmxLiteralExpression ) ) | ( (lv_value_6_0= ruleDmxLiteralListExpression ) ) )
                    {
                    otherlv_4=(Token)match(input,62,FOLLOW_80); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getDmxTestContextAccess().getColonEqualsSignKeyword_4_0());
                      			
                    }
                    // InternalSim.g:5530:4: ( ( (lv_value_5_0= ruleDmxLiteralExpression ) ) | ( (lv_value_6_0= ruleDmxLiteralListExpression ) ) )
                    int alt128=2;
                    int LA128_0 = input.LA(1);

                    if ( ((LA128_0>=RULE_NATURAL && LA128_0<=RULE_STRING)||LA128_0==38||LA128_0==41||(LA128_0>=84 && LA128_0<=89)) ) {
                        alt128=1;
                    }
                    else if ( (LA128_0==22) ) {
                        alt128=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 128, 0, input);

                        throw nvae;
                    }
                    switch (alt128) {
                        case 1 :
                            // InternalSim.g:5531:5: ( (lv_value_5_0= ruleDmxLiteralExpression ) )
                            {
                            // InternalSim.g:5531:5: ( (lv_value_5_0= ruleDmxLiteralExpression ) )
                            // InternalSim.g:5532:6: (lv_value_5_0= ruleDmxLiteralExpression )
                            {
                            // InternalSim.g:5532:6: (lv_value_5_0= ruleDmxLiteralExpression )
                            // InternalSim.g:5533:7: lv_value_5_0= ruleDmxLiteralExpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getDmxTestContextAccess().getValueDmxLiteralExpressionParserRuleCall_4_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_value_5_0=ruleDmxLiteralExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getDmxTestContextRule());
                              							}
                              							set(
                              								current,
                              								"value",
                              								lv_value_5_0,
                              								"com.mimacom.ddd.dm.dmx.Dmx.DmxLiteralExpression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalSim.g:5551:5: ( (lv_value_6_0= ruleDmxLiteralListExpression ) )
                            {
                            // InternalSim.g:5551:5: ( (lv_value_6_0= ruleDmxLiteralListExpression ) )
                            // InternalSim.g:5552:6: (lv_value_6_0= ruleDmxLiteralListExpression )
                            {
                            // InternalSim.g:5552:6: (lv_value_6_0= ruleDmxLiteralListExpression )
                            // InternalSim.g:5553:7: lv_value_6_0= ruleDmxLiteralListExpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getDmxTestContextAccess().getValueDmxLiteralListExpressionParserRuleCall_4_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_value_6_0=ruleDmxLiteralListExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getDmxTestContextRule());
                              							}
                              							set(
                              								current,
                              								"value",
                              								lv_value_6_0,
                              								"com.mimacom.ddd.dm.dmx.Dmx.DmxLiteralListExpression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxTestContext"


    // $ANTLR start "entryRuleDmxBaseTypeSet"
    // InternalSim.g:5576:1: entryRuleDmxBaseTypeSet returns [EObject current=null] : iv_ruleDmxBaseTypeSet= ruleDmxBaseTypeSet EOF ;
    public final EObject entryRuleDmxBaseTypeSet() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxBaseTypeSet = null;


        try {
            // InternalSim.g:5576:55: (iv_ruleDmxBaseTypeSet= ruleDmxBaseTypeSet EOF )
            // InternalSim.g:5577:2: iv_ruleDmxBaseTypeSet= ruleDmxBaseTypeSet EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxBaseTypeSetRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxBaseTypeSet=ruleDmxBaseTypeSet();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxBaseTypeSet; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxBaseTypeSet"


    // $ANTLR start "ruleDmxBaseTypeSet"
    // InternalSim.g:5583:1: ruleDmxBaseTypeSet returns [EObject current=null] : ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= 'in' otherlv_2= '(' ( (lv_members_3_0= ruleDmxBaseType ) ) (otherlv_4= ',' ( (lv_members_5_0= ruleDmxBaseType ) ) )+ otherlv_6= ')' ) ;
    public final EObject ruleDmxBaseTypeSet() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Enumerator lv_members_3_0 = null;

        Enumerator lv_members_5_0 = null;



        	enterRule();

        try {
            // InternalSim.g:5589:2: ( ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= 'in' otherlv_2= '(' ( (lv_members_3_0= ruleDmxBaseType ) ) (otherlv_4= ',' ( (lv_members_5_0= ruleDmxBaseType ) ) )+ otherlv_6= ')' ) )
            // InternalSim.g:5590:2: ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= 'in' otherlv_2= '(' ( (lv_members_3_0= ruleDmxBaseType ) ) (otherlv_4= ',' ( (lv_members_5_0= ruleDmxBaseType ) ) )+ otherlv_6= ')' )
            {
            // InternalSim.g:5590:2: ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= 'in' otherlv_2= '(' ( (lv_members_3_0= ruleDmxBaseType ) ) (otherlv_4= ',' ( (lv_members_5_0= ruleDmxBaseType ) ) )+ otherlv_6= ')' )
            // InternalSim.g:5591:3: ( (lv_name_0_0= RULE_ID ) ) otherlv_1= 'in' otherlv_2= '(' ( (lv_members_3_0= ruleDmxBaseType ) ) (otherlv_4= ',' ( (lv_members_5_0= ruleDmxBaseType ) ) )+ otherlv_6= ')'
            {
            // InternalSim.g:5591:3: ( (lv_name_0_0= RULE_ID ) )
            // InternalSim.g:5592:4: (lv_name_0_0= RULE_ID )
            {
            // InternalSim.g:5592:4: (lv_name_0_0= RULE_ID )
            // InternalSim.g:5593:5: lv_name_0_0= RULE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ID,FOLLOW_81); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getDmxBaseTypeSetAccess().getNameIDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDmxBaseTypeSetRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.ID");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,63,FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getDmxBaseTypeSetAccess().getInKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,45,FOLLOW_82); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getDmxBaseTypeSetAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalSim.g:5617:3: ( (lv_members_3_0= ruleDmxBaseType ) )
            // InternalSim.g:5618:4: (lv_members_3_0= ruleDmxBaseType )
            {
            // InternalSim.g:5618:4: (lv_members_3_0= ruleDmxBaseType )
            // InternalSim.g:5619:5: lv_members_3_0= ruleDmxBaseType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDmxBaseTypeSetAccess().getMembersDmxBaseTypeEnumRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_83);
            lv_members_3_0=ruleDmxBaseType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDmxBaseTypeSetRule());
              					}
              					add(
              						current,
              						"members",
              						lv_members_3_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.DmxBaseType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSim.g:5636:3: (otherlv_4= ',' ( (lv_members_5_0= ruleDmxBaseType ) ) )+
            int cnt130=0;
            loop130:
            do {
                int alt130=2;
                int LA130_0 = input.LA(1);

                if ( (LA130_0==36) ) {
                    alt130=1;
                }


                switch (alt130) {
            	case 1 :
            	    // InternalSim.g:5637:4: otherlv_4= ',' ( (lv_members_5_0= ruleDmxBaseType ) )
            	    {
            	    otherlv_4=(Token)match(input,36,FOLLOW_82); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getDmxBaseTypeSetAccess().getCommaKeyword_4_0());
            	      			
            	    }
            	    // InternalSim.g:5641:4: ( (lv_members_5_0= ruleDmxBaseType ) )
            	    // InternalSim.g:5642:5: (lv_members_5_0= ruleDmxBaseType )
            	    {
            	    // InternalSim.g:5642:5: (lv_members_5_0= ruleDmxBaseType )
            	    // InternalSim.g:5643:6: lv_members_5_0= ruleDmxBaseType
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getDmxBaseTypeSetAccess().getMembersDmxBaseTypeEnumRuleCall_4_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_47);
            	    lv_members_5_0=ruleDmxBaseType();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getDmxBaseTypeSetRule());
            	      						}
            	      						add(
            	      							current,
            	      							"members",
            	      							lv_members_5_0,
            	      							"com.mimacom.ddd.dm.dmx.Dmx.DmxBaseType");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt130 >= 1 ) break loop130;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(130, input);
                        throw eee;
                }
                cnt130++;
            } while (true);

            otherlv_6=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getDmxBaseTypeSetAccess().getRightParenthesisKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxBaseTypeSet"


    // $ANTLR start "entryRuleDmxArchetype"
    // InternalSim.g:5669:1: entryRuleDmxArchetype returns [EObject current=null] : iv_ruleDmxArchetype= ruleDmxArchetype EOF ;
    public final EObject entryRuleDmxArchetype() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxArchetype = null;


        try {
            // InternalSim.g:5669:53: (iv_ruleDmxArchetype= ruleDmxArchetype EOF )
            // InternalSim.g:5670:2: iv_ruleDmxArchetype= ruleDmxArchetype EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxArchetypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxArchetype=ruleDmxArchetype();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxArchetype; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxArchetype"


    // $ANTLR start "ruleDmxArchetype"
    // InternalSim.g:5676:1: ruleDmxArchetype returns [EObject current=null] : (otherlv_0= 'archetype' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= 'is' ( (lv_baseType_3_0= ruleDmxBaseType ) ) ( (lv_description_4_0= ruleDRichText ) )? ) ;
    public final EObject ruleDmxArchetype() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Enumerator lv_baseType_3_0 = null;

        EObject lv_description_4_0 = null;



        	enterRule();

        try {
            // InternalSim.g:5682:2: ( (otherlv_0= 'archetype' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= 'is' ( (lv_baseType_3_0= ruleDmxBaseType ) ) ( (lv_description_4_0= ruleDRichText ) )? ) )
            // InternalSim.g:5683:2: (otherlv_0= 'archetype' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= 'is' ( (lv_baseType_3_0= ruleDmxBaseType ) ) ( (lv_description_4_0= ruleDRichText ) )? )
            {
            // InternalSim.g:5683:2: (otherlv_0= 'archetype' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= 'is' ( (lv_baseType_3_0= ruleDmxBaseType ) ) ( (lv_description_4_0= ruleDRichText ) )? )
            // InternalSim.g:5684:3: otherlv_0= 'archetype' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= 'is' ( (lv_baseType_3_0= ruleDmxBaseType ) ) ( (lv_description_4_0= ruleDRichText ) )?
            {
            otherlv_0=(Token)match(input,64,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDmxArchetypeAccess().getArchetypeKeyword_0());
              		
            }
            // InternalSim.g:5688:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalSim.g:5689:4: (lv_name_1_0= RULE_ID )
            {
            // InternalSim.g:5689:4: (lv_name_1_0= RULE_ID )
            // InternalSim.g:5690:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_84); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getDmxArchetypeAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDmxArchetypeRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.ID");
              				
            }

            }


            }

            otherlv_2=(Token)match(input,65,FOLLOW_82); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getDmxArchetypeAccess().getIsKeyword_2());
              		
            }
            // InternalSim.g:5710:3: ( (lv_baseType_3_0= ruleDmxBaseType ) )
            // InternalSim.g:5711:4: (lv_baseType_3_0= ruleDmxBaseType )
            {
            // InternalSim.g:5711:4: (lv_baseType_3_0= ruleDmxBaseType )
            // InternalSim.g:5712:5: lv_baseType_3_0= ruleDmxBaseType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDmxArchetypeAccess().getBaseTypeDmxBaseTypeEnumRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_35);
            lv_baseType_3_0=ruleDmxBaseType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDmxArchetypeRule());
              					}
              					set(
              						current,
              						"baseType",
              						lv_baseType_3_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.DmxBaseType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSim.g:5729:3: ( (lv_description_4_0= ruleDRichText ) )?
            int alt131=2;
            int LA131_0 = input.LA(1);

            if ( ((LA131_0>=RULE_PLAIN_TEXT_ONLY && LA131_0<=RULE_RICH_TEXT_START)) ) {
                alt131=1;
            }
            switch (alt131) {
                case 1 :
                    // InternalSim.g:5730:4: (lv_description_4_0= ruleDRichText )
                    {
                    // InternalSim.g:5730:4: (lv_description_4_0= ruleDRichText )
                    // InternalSim.g:5731:5: lv_description_4_0= ruleDRichText
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDmxArchetypeAccess().getDescriptionDRichTextParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_description_4_0=ruleDRichText();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDmxArchetypeRule());
                      					}
                      					set(
                      						current,
                      						"description",
                      						lv_description_4_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxArchetype"


    // $ANTLR start "entryRuleDmxFilter"
    // InternalSim.g:5752:1: entryRuleDmxFilter returns [EObject current=null] : iv_ruleDmxFilter= ruleDmxFilter EOF ;
    public final EObject entryRuleDmxFilter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxFilter = null;


        try {
            // InternalSim.g:5752:50: (iv_ruleDmxFilter= ruleDmxFilter EOF )
            // InternalSim.g:5753:2: iv_ruleDmxFilter= ruleDmxFilter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxFilterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxFilter=ruleDmxFilter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxFilter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxFilter"


    // $ANTLR start "ruleDmxFilter"
    // InternalSim.g:5759:1: ruleDmxFilter returns [EObject current=null] : (otherlv_0= 'filter' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_parameters_3_0= ruleDmxFilterParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleDmxFilterParameter ) ) )* )? otherlv_6= ')' otherlv_7= ':' ( (lv_typeDesc_8_0= ruleDmxFilterTypeDescriptor ) ) (otherlv_9= 'with' ( (lv_withTypeSet_10_0= ruleDmxBaseTypeSet ) ) )? ) ;
    public final EObject ruleDmxFilter() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        EObject lv_parameters_3_0 = null;

        EObject lv_parameters_5_0 = null;

        EObject lv_typeDesc_8_0 = null;

        EObject lv_withTypeSet_10_0 = null;



        	enterRule();

        try {
            // InternalSim.g:5765:2: ( (otherlv_0= 'filter' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_parameters_3_0= ruleDmxFilterParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleDmxFilterParameter ) ) )* )? otherlv_6= ')' otherlv_7= ':' ( (lv_typeDesc_8_0= ruleDmxFilterTypeDescriptor ) ) (otherlv_9= 'with' ( (lv_withTypeSet_10_0= ruleDmxBaseTypeSet ) ) )? ) )
            // InternalSim.g:5766:2: (otherlv_0= 'filter' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_parameters_3_0= ruleDmxFilterParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleDmxFilterParameter ) ) )* )? otherlv_6= ')' otherlv_7= ':' ( (lv_typeDesc_8_0= ruleDmxFilterTypeDescriptor ) ) (otherlv_9= 'with' ( (lv_withTypeSet_10_0= ruleDmxBaseTypeSet ) ) )? )
            {
            // InternalSim.g:5766:2: (otherlv_0= 'filter' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_parameters_3_0= ruleDmxFilterParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleDmxFilterParameter ) ) )* )? otherlv_6= ')' otherlv_7= ':' ( (lv_typeDesc_8_0= ruleDmxFilterTypeDescriptor ) ) (otherlv_9= 'with' ( (lv_withTypeSet_10_0= ruleDmxBaseTypeSet ) ) )? )
            // InternalSim.g:5767:3: otherlv_0= 'filter' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_parameters_3_0= ruleDmxFilterParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleDmxFilterParameter ) ) )* )? otherlv_6= ')' otherlv_7= ':' ( (lv_typeDesc_8_0= ruleDmxFilterTypeDescriptor ) ) (otherlv_9= 'with' ( (lv_withTypeSet_10_0= ruleDmxBaseTypeSet ) ) )?
            {
            otherlv_0=(Token)match(input,66,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDmxFilterAccess().getFilterKeyword_0());
              		
            }
            // InternalSim.g:5771:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalSim.g:5772:4: (lv_name_1_0= RULE_ID )
            {
            // InternalSim.g:5772:4: (lv_name_1_0= RULE_ID )
            // InternalSim.g:5773:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getDmxFilterAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDmxFilterRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.ID");
              				
            }

            }


            }

            otherlv_2=(Token)match(input,45,FOLLOW_71); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getDmxFilterAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalSim.g:5793:3: ( ( (lv_parameters_3_0= ruleDmxFilterParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleDmxFilterParameter ) ) )* )?
            int alt133=2;
            int LA133_0 = input.LA(1);

            if ( (LA133_0==RULE_ID) ) {
                alt133=1;
            }
            switch (alt133) {
                case 1 :
                    // InternalSim.g:5794:4: ( (lv_parameters_3_0= ruleDmxFilterParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleDmxFilterParameter ) ) )*
                    {
                    // InternalSim.g:5794:4: ( (lv_parameters_3_0= ruleDmxFilterParameter ) )
                    // InternalSim.g:5795:5: (lv_parameters_3_0= ruleDmxFilterParameter )
                    {
                    // InternalSim.g:5795:5: (lv_parameters_3_0= ruleDmxFilterParameter )
                    // InternalSim.g:5796:6: lv_parameters_3_0= ruleDmxFilterParameter
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDmxFilterAccess().getParametersDmxFilterParameterParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_47);
                    lv_parameters_3_0=ruleDmxFilterParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDmxFilterRule());
                      						}
                      						add(
                      							current,
                      							"parameters",
                      							lv_parameters_3_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.DmxFilterParameter");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSim.g:5813:4: (otherlv_4= ',' ( (lv_parameters_5_0= ruleDmxFilterParameter ) ) )*
                    loop132:
                    do {
                        int alt132=2;
                        int LA132_0 = input.LA(1);

                        if ( (LA132_0==36) ) {
                            alt132=1;
                        }


                        switch (alt132) {
                    	case 1 :
                    	    // InternalSim.g:5814:5: otherlv_4= ',' ( (lv_parameters_5_0= ruleDmxFilterParameter ) )
                    	    {
                    	    otherlv_4=(Token)match(input,36,FOLLOW_3); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getDmxFilterAccess().getCommaKeyword_3_1_0());
                    	      				
                    	    }
                    	    // InternalSim.g:5818:5: ( (lv_parameters_5_0= ruleDmxFilterParameter ) )
                    	    // InternalSim.g:5819:6: (lv_parameters_5_0= ruleDmxFilterParameter )
                    	    {
                    	    // InternalSim.g:5819:6: (lv_parameters_5_0= ruleDmxFilterParameter )
                    	    // InternalSim.g:5820:7: lv_parameters_5_0= ruleDmxFilterParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getDmxFilterAccess().getParametersDmxFilterParameterParserRuleCall_3_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_47);
                    	    lv_parameters_5_0=ruleDmxFilterParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getDmxFilterRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"parameters",
                    	      								lv_parameters_5_0,
                    	      								"com.mimacom.ddd.dm.dmx.Dmx.DmxFilterParameter");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop132;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,47,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getDmxFilterAccess().getRightParenthesisKeyword_4());
              		
            }
            otherlv_7=(Token)match(input,28,FOLLOW_85); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getDmxFilterAccess().getColonKeyword_5());
              		
            }
            // InternalSim.g:5847:3: ( (lv_typeDesc_8_0= ruleDmxFilterTypeDescriptor ) )
            // InternalSim.g:5848:4: (lv_typeDesc_8_0= ruleDmxFilterTypeDescriptor )
            {
            // InternalSim.g:5848:4: (lv_typeDesc_8_0= ruleDmxFilterTypeDescriptor )
            // InternalSim.g:5849:5: lv_typeDesc_8_0= ruleDmxFilterTypeDescriptor
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDmxFilterAccess().getTypeDescDmxFilterTypeDescriptorParserRuleCall_6_0());
              				
            }
            pushFollow(FOLLOW_86);
            lv_typeDesc_8_0=ruleDmxFilterTypeDescriptor();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDmxFilterRule());
              					}
              					set(
              						current,
              						"typeDesc",
              						lv_typeDesc_8_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.DmxFilterTypeDescriptor");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSim.g:5866:3: (otherlv_9= 'with' ( (lv_withTypeSet_10_0= ruleDmxBaseTypeSet ) ) )?
            int alt134=2;
            int LA134_0 = input.LA(1);

            if ( (LA134_0==67) ) {
                alt134=1;
            }
            switch (alt134) {
                case 1 :
                    // InternalSim.g:5867:4: otherlv_9= 'with' ( (lv_withTypeSet_10_0= ruleDmxBaseTypeSet ) )
                    {
                    otherlv_9=(Token)match(input,67,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getDmxFilterAccess().getWithKeyword_7_0());
                      			
                    }
                    // InternalSim.g:5871:4: ( (lv_withTypeSet_10_0= ruleDmxBaseTypeSet ) )
                    // InternalSim.g:5872:5: (lv_withTypeSet_10_0= ruleDmxBaseTypeSet )
                    {
                    // InternalSim.g:5872:5: (lv_withTypeSet_10_0= ruleDmxBaseTypeSet )
                    // InternalSim.g:5873:6: lv_withTypeSet_10_0= ruleDmxBaseTypeSet
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDmxFilterAccess().getWithTypeSetDmxBaseTypeSetParserRuleCall_7_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_withTypeSet_10_0=ruleDmxBaseTypeSet();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDmxFilterRule());
                      						}
                      						set(
                      							current,
                      							"withTypeSet",
                      							lv_withTypeSet_10_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.DmxBaseTypeSet");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxFilter"


    // $ANTLR start "entryRuleDmxFilterTypeDescriptor"
    // InternalSim.g:5895:1: entryRuleDmxFilterTypeDescriptor returns [EObject current=null] : iv_ruleDmxFilterTypeDescriptor= ruleDmxFilterTypeDescriptor EOF ;
    public final EObject entryRuleDmxFilterTypeDescriptor() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxFilterTypeDescriptor = null;


        try {
            // InternalSim.g:5895:64: (iv_ruleDmxFilterTypeDescriptor= ruleDmxFilterTypeDescriptor EOF )
            // InternalSim.g:5896:2: iv_ruleDmxFilterTypeDescriptor= ruleDmxFilterTypeDescriptor EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxFilterTypeDescriptorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxFilterTypeDescriptor=ruleDmxFilterTypeDescriptor();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxFilterTypeDescriptor; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxFilterTypeDescriptor"


    // $ANTLR start "ruleDmxFilterTypeDescriptor"
    // InternalSim.g:5902:1: ruleDmxFilterTypeDescriptor returns [EObject current=null] : ( ( ( (lv_single_0_0= ruleDmxBaseType ) ) | ( (otherlv_1= RULE_ID ) ) ) ( (lv_collection_2_0= '*' ) )? ) ;
    public final EObject ruleDmxFilterTypeDescriptor() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_collection_2_0=null;
        Enumerator lv_single_0_0 = null;



        	enterRule();

        try {
            // InternalSim.g:5908:2: ( ( ( ( (lv_single_0_0= ruleDmxBaseType ) ) | ( (otherlv_1= RULE_ID ) ) ) ( (lv_collection_2_0= '*' ) )? ) )
            // InternalSim.g:5909:2: ( ( ( (lv_single_0_0= ruleDmxBaseType ) ) | ( (otherlv_1= RULE_ID ) ) ) ( (lv_collection_2_0= '*' ) )? )
            {
            // InternalSim.g:5909:2: ( ( ( (lv_single_0_0= ruleDmxBaseType ) ) | ( (otherlv_1= RULE_ID ) ) ) ( (lv_collection_2_0= '*' ) )? )
            // InternalSim.g:5910:3: ( ( (lv_single_0_0= ruleDmxBaseType ) ) | ( (otherlv_1= RULE_ID ) ) ) ( (lv_collection_2_0= '*' ) )?
            {
            // InternalSim.g:5910:3: ( ( (lv_single_0_0= ruleDmxBaseType ) ) | ( (otherlv_1= RULE_ID ) ) )
            int alt135=2;
            int LA135_0 = input.LA(1);

            if ( ((LA135_0>=104 && LA135_0<=114)) ) {
                alt135=1;
            }
            else if ( (LA135_0==RULE_ID) ) {
                alt135=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 135, 0, input);

                throw nvae;
            }
            switch (alt135) {
                case 1 :
                    // InternalSim.g:5911:4: ( (lv_single_0_0= ruleDmxBaseType ) )
                    {
                    // InternalSim.g:5911:4: ( (lv_single_0_0= ruleDmxBaseType ) )
                    // InternalSim.g:5912:5: (lv_single_0_0= ruleDmxBaseType )
                    {
                    // InternalSim.g:5912:5: (lv_single_0_0= ruleDmxBaseType )
                    // InternalSim.g:5913:6: lv_single_0_0= ruleDmxBaseType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDmxFilterTypeDescriptorAccess().getSingleDmxBaseTypeEnumRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_87);
                    lv_single_0_0=ruleDmxBaseType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDmxFilterTypeDescriptorRule());
                      						}
                      						set(
                      							current,
                      							"single",
                      							lv_single_0_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.DmxBaseType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:5931:4: ( (otherlv_1= RULE_ID ) )
                    {
                    // InternalSim.g:5931:4: ( (otherlv_1= RULE_ID ) )
                    // InternalSim.g:5932:5: (otherlv_1= RULE_ID )
                    {
                    // InternalSim.g:5932:5: (otherlv_1= RULE_ID )
                    // InternalSim.g:5933:6: otherlv_1= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDmxFilterTypeDescriptorRule());
                      						}
                      					
                    }
                    otherlv_1=(Token)match(input,RULE_ID,FOLLOW_87); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_1, grammarAccess.getDmxFilterTypeDescriptorAccess().getMultipleDmxBaseTypeSetCrossReference_0_1_0());
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSim.g:5945:3: ( (lv_collection_2_0= '*' ) )?
            int alt136=2;
            int LA136_0 = input.LA(1);

            if ( (LA136_0==46) ) {
                alt136=1;
            }
            switch (alt136) {
                case 1 :
                    // InternalSim.g:5946:4: (lv_collection_2_0= '*' )
                    {
                    // InternalSim.g:5946:4: (lv_collection_2_0= '*' )
                    // InternalSim.g:5947:5: lv_collection_2_0= '*'
                    {
                    lv_collection_2_0=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_collection_2_0, grammarAccess.getDmxFilterTypeDescriptorAccess().getCollectionAsteriskKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDmxFilterTypeDescriptorRule());
                      					}
                      					setWithLastConsumed(current, "collection", true, "*");
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxFilterTypeDescriptor"


    // $ANTLR start "entryRuleDmxFilterParameter"
    // InternalSim.g:5963:1: entryRuleDmxFilterParameter returns [EObject current=null] : iv_ruleDmxFilterParameter= ruleDmxFilterParameter EOF ;
    public final EObject entryRuleDmxFilterParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxFilterParameter = null;


        try {
            // InternalSim.g:5963:59: (iv_ruleDmxFilterParameter= ruleDmxFilterParameter EOF )
            // InternalSim.g:5964:2: iv_ruleDmxFilterParameter= ruleDmxFilterParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxFilterParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxFilterParameter=ruleDmxFilterParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxFilterParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxFilterParameter"


    // $ANTLR start "ruleDmxFilterParameter"
    // InternalSim.g:5970:1: ruleDmxFilterParameter returns [EObject current=null] : ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= ':' ( (lv_typeDesc_2_0= ruleDmxFilterTypeDescriptor ) ) ) ;
    public final EObject ruleDmxFilterParameter() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        EObject lv_typeDesc_2_0 = null;



        	enterRule();

        try {
            // InternalSim.g:5976:2: ( ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= ':' ( (lv_typeDesc_2_0= ruleDmxFilterTypeDescriptor ) ) ) )
            // InternalSim.g:5977:2: ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= ':' ( (lv_typeDesc_2_0= ruleDmxFilterTypeDescriptor ) ) )
            {
            // InternalSim.g:5977:2: ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= ':' ( (lv_typeDesc_2_0= ruleDmxFilterTypeDescriptor ) ) )
            // InternalSim.g:5978:3: ( (lv_name_0_0= RULE_ID ) ) otherlv_1= ':' ( (lv_typeDesc_2_0= ruleDmxFilterTypeDescriptor ) )
            {
            // InternalSim.g:5978:3: ( (lv_name_0_0= RULE_ID ) )
            // InternalSim.g:5979:4: (lv_name_0_0= RULE_ID )
            {
            // InternalSim.g:5979:4: (lv_name_0_0= RULE_ID )
            // InternalSim.g:5980:5: lv_name_0_0= RULE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ID,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getDmxFilterParameterAccess().getNameIDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDmxFilterParameterRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.ID");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,28,FOLLOW_85); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getDmxFilterParameterAccess().getColonKeyword_1());
              		
            }
            // InternalSim.g:6000:3: ( (lv_typeDesc_2_0= ruleDmxFilterTypeDescriptor ) )
            // InternalSim.g:6001:4: (lv_typeDesc_2_0= ruleDmxFilterTypeDescriptor )
            {
            // InternalSim.g:6001:4: (lv_typeDesc_2_0= ruleDmxFilterTypeDescriptor )
            // InternalSim.g:6002:5: lv_typeDesc_2_0= ruleDmxFilterTypeDescriptor
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDmxFilterParameterAccess().getTypeDescDmxFilterTypeDescriptorParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeDesc_2_0=ruleDmxFilterTypeDescriptor();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDmxFilterParameterRule());
              					}
              					set(
              						current,
              						"typeDesc",
              						lv_typeDesc_2_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.DmxFilterTypeDescriptor");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxFilterParameter"


    // $ANTLR start "entryRuleDExpression"
    // InternalSim.g:6023:1: entryRuleDExpression returns [EObject current=null] : iv_ruleDExpression= ruleDExpression EOF ;
    public final EObject entryRuleDExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDExpression = null;


        try {
            // InternalSim.g:6023:52: (iv_ruleDExpression= ruleDExpression EOF )
            // InternalSim.g:6024:2: iv_ruleDExpression= ruleDExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDExpression=ruleDExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDExpression"


    // $ANTLR start "ruleDExpression"
    // InternalSim.g:6030:1: ruleDExpression returns [EObject current=null] : (this_DmxAssignment_0= ruleDmxAssignment | this_DmxPredicateWithCorrelationVariable_1= ruleDmxPredicateWithCorrelationVariable | this_DRichText_2= ruleDRichText ) ;
    public final EObject ruleDExpression() throws RecognitionException {
        EObject current = null;

        EObject this_DmxAssignment_0 = null;

        EObject this_DmxPredicateWithCorrelationVariable_1 = null;

        EObject this_DRichText_2 = null;



        	enterRule();

        try {
            // InternalSim.g:6036:2: ( (this_DmxAssignment_0= ruleDmxAssignment | this_DmxPredicateWithCorrelationVariable_1= ruleDmxPredicateWithCorrelationVariable | this_DRichText_2= ruleDRichText ) )
            // InternalSim.g:6037:2: (this_DmxAssignment_0= ruleDmxAssignment | this_DmxPredicateWithCorrelationVariable_1= ruleDmxPredicateWithCorrelationVariable | this_DRichText_2= ruleDRichText )
            {
            // InternalSim.g:6037:2: (this_DmxAssignment_0= ruleDmxAssignment | this_DmxPredicateWithCorrelationVariable_1= ruleDmxPredicateWithCorrelationVariable | this_DRichText_2= ruleDRichText )
            int alt137=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                int LA137_1 = input.LA(2);

                if ( (LA137_1==EOF||(LA137_1>=RULE_ID && LA137_1<=RULE_RICH_TEXT_END)||(LA137_1>=23 && LA137_1<=25)||LA137_1==29||(LA137_1>=31 && LA137_1<=36)||(LA137_1>=38 && LA137_1<=41)||(LA137_1>=45 && LA137_1<=48)||(LA137_1>=51 && LA137_1<=52)||LA137_1==55||LA137_1==63||(LA137_1>=68 && LA137_1<=74)||(LA137_1>=80 && LA137_1<=83)||(LA137_1>=92 && LA137_1<=93)||(LA137_1>=100 && LA137_1<=101)||(LA137_1>=115 && LA137_1<=133)) ) {
                    alt137=2;
                }
                else if ( (LA137_1==62) ) {
                    alt137=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 137, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_NATURAL:
            case RULE_STRING:
            case 22:
            case 38:
            case 41:
            case 45:
            case 75:
            case 79:
            case 84:
            case 85:
            case 86:
            case 87:
            case 88:
            case 89:
            case 92:
            case 93:
            case 134:
            case 135:
            case 136:
                {
                alt137=2;
                }
                break;
            case RULE_PLAIN_TEXT_ONLY:
            case RULE_RICH_TEXT_START:
                {
                alt137=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 137, 0, input);

                throw nvae;
            }

            switch (alt137) {
                case 1 :
                    // InternalSim.g:6038:3: this_DmxAssignment_0= ruleDmxAssignment
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDExpressionAccess().getDmxAssignmentParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DmxAssignment_0=ruleDmxAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DmxAssignment_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSim.g:6047:3: this_DmxPredicateWithCorrelationVariable_1= ruleDmxPredicateWithCorrelationVariable
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDExpressionAccess().getDmxPredicateWithCorrelationVariableParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DmxPredicateWithCorrelationVariable_1=ruleDmxPredicateWithCorrelationVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DmxPredicateWithCorrelationVariable_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSim.g:6056:3: this_DRichText_2= ruleDRichText
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDExpressionAccess().getDRichTextParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DRichText_2=ruleDRichText();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DRichText_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDExpression"


    // $ANTLR start "entryRuleDRichText"
    // InternalSim.g:6068:1: entryRuleDRichText returns [EObject current=null] : iv_ruleDRichText= ruleDRichText EOF ;
    public final EObject entryRuleDRichText() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDRichText = null;


        try {
            // InternalSim.g:6068:50: (iv_ruleDRichText= ruleDRichText EOF )
            // InternalSim.g:6069:2: iv_ruleDRichText= ruleDRichText EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDRichTextRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDRichText=ruleDRichText();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDRichText; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDRichText"


    // $ANTLR start "ruleDRichText"
    // InternalSim.g:6075:1: ruleDRichText returns [EObject current=null] : ( ( (lv_segments_0_0= ruleDmxTextOnly ) ) | ( ( (lv_segments_1_0= ruleDmxTextStart ) ) ( (lv_segments_2_0= ruleDExpression ) ) ( ( (lv_segments_3_0= ruleDmxTextMiddle ) ) ( (lv_segments_4_0= ruleDExpression ) ) )* ( (lv_segments_5_0= ruleDmxTextEnd ) ) ) ) ;
    public final EObject ruleDRichText() throws RecognitionException {
        EObject current = null;

        EObject lv_segments_0_0 = null;

        EObject lv_segments_1_0 = null;

        EObject lv_segments_2_0 = null;

        EObject lv_segments_3_0 = null;

        EObject lv_segments_4_0 = null;

        EObject lv_segments_5_0 = null;



        	enterRule();

        try {
            // InternalSim.g:6081:2: ( ( ( (lv_segments_0_0= ruleDmxTextOnly ) ) | ( ( (lv_segments_1_0= ruleDmxTextStart ) ) ( (lv_segments_2_0= ruleDExpression ) ) ( ( (lv_segments_3_0= ruleDmxTextMiddle ) ) ( (lv_segments_4_0= ruleDExpression ) ) )* ( (lv_segments_5_0= ruleDmxTextEnd ) ) ) ) )
            // InternalSim.g:6082:2: ( ( (lv_segments_0_0= ruleDmxTextOnly ) ) | ( ( (lv_segments_1_0= ruleDmxTextStart ) ) ( (lv_segments_2_0= ruleDExpression ) ) ( ( (lv_segments_3_0= ruleDmxTextMiddle ) ) ( (lv_segments_4_0= ruleDExpression ) ) )* ( (lv_segments_5_0= ruleDmxTextEnd ) ) ) )
            {
            // InternalSim.g:6082:2: ( ( (lv_segments_0_0= ruleDmxTextOnly ) ) | ( ( (lv_segments_1_0= ruleDmxTextStart ) ) ( (lv_segments_2_0= ruleDExpression ) ) ( ( (lv_segments_3_0= ruleDmxTextMiddle ) ) ( (lv_segments_4_0= ruleDExpression ) ) )* ( (lv_segments_5_0= ruleDmxTextEnd ) ) ) )
            int alt139=2;
            int LA139_0 = input.LA(1);

            if ( (LA139_0==RULE_PLAIN_TEXT_ONLY) ) {
                alt139=1;
            }
            else if ( (LA139_0==RULE_RICH_TEXT_START) ) {
                alt139=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 139, 0, input);

                throw nvae;
            }
            switch (alt139) {
                case 1 :
                    // InternalSim.g:6083:3: ( (lv_segments_0_0= ruleDmxTextOnly ) )
                    {
                    // InternalSim.g:6083:3: ( (lv_segments_0_0= ruleDmxTextOnly ) )
                    // InternalSim.g:6084:4: (lv_segments_0_0= ruleDmxTextOnly )
                    {
                    // InternalSim.g:6084:4: (lv_segments_0_0= ruleDmxTextOnly )
                    // InternalSim.g:6085:5: lv_segments_0_0= ruleDmxTextOnly
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDRichTextAccess().getSegmentsDmxTextOnlyParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_segments_0_0=ruleDmxTextOnly();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDRichTextRule());
                      					}
                      					add(
                      						current,
                      						"segments",
                      						lv_segments_0_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DmxTextOnly");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:6103:3: ( ( (lv_segments_1_0= ruleDmxTextStart ) ) ( (lv_segments_2_0= ruleDExpression ) ) ( ( (lv_segments_3_0= ruleDmxTextMiddle ) ) ( (lv_segments_4_0= ruleDExpression ) ) )* ( (lv_segments_5_0= ruleDmxTextEnd ) ) )
                    {
                    // InternalSim.g:6103:3: ( ( (lv_segments_1_0= ruleDmxTextStart ) ) ( (lv_segments_2_0= ruleDExpression ) ) ( ( (lv_segments_3_0= ruleDmxTextMiddle ) ) ( (lv_segments_4_0= ruleDExpression ) ) )* ( (lv_segments_5_0= ruleDmxTextEnd ) ) )
                    // InternalSim.g:6104:4: ( (lv_segments_1_0= ruleDmxTextStart ) ) ( (lv_segments_2_0= ruleDExpression ) ) ( ( (lv_segments_3_0= ruleDmxTextMiddle ) ) ( (lv_segments_4_0= ruleDExpression ) ) )* ( (lv_segments_5_0= ruleDmxTextEnd ) )
                    {
                    // InternalSim.g:6104:4: ( (lv_segments_1_0= ruleDmxTextStart ) )
                    // InternalSim.g:6105:5: (lv_segments_1_0= ruleDmxTextStart )
                    {
                    // InternalSim.g:6105:5: (lv_segments_1_0= ruleDmxTextStart )
                    // InternalSim.g:6106:6: lv_segments_1_0= ruleDmxTextStart
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDRichTextAccess().getSegmentsDmxTextStartParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_51);
                    lv_segments_1_0=ruleDmxTextStart();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDRichTextRule());
                      						}
                      						add(
                      							current,
                      							"segments",
                      							lv_segments_1_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.DmxTextStart");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSim.g:6123:4: ( (lv_segments_2_0= ruleDExpression ) )
                    // InternalSim.g:6124:5: (lv_segments_2_0= ruleDExpression )
                    {
                    // InternalSim.g:6124:5: (lv_segments_2_0= ruleDExpression )
                    // InternalSim.g:6125:6: lv_segments_2_0= ruleDExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDRichTextAccess().getSegmentsDExpressionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_88);
                    lv_segments_2_0=ruleDExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDRichTextRule());
                      						}
                      						add(
                      							current,
                      							"segments",
                      							lv_segments_2_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.DExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSim.g:6142:4: ( ( (lv_segments_3_0= ruleDmxTextMiddle ) ) ( (lv_segments_4_0= ruleDExpression ) ) )*
                    loop138:
                    do {
                        int alt138=2;
                        int LA138_0 = input.LA(1);

                        if ( (LA138_0==RULE_RICH_TEXT_MIDDLE) ) {
                            alt138=1;
                        }


                        switch (alt138) {
                    	case 1 :
                    	    // InternalSim.g:6143:5: ( (lv_segments_3_0= ruleDmxTextMiddle ) ) ( (lv_segments_4_0= ruleDExpression ) )
                    	    {
                    	    // InternalSim.g:6143:5: ( (lv_segments_3_0= ruleDmxTextMiddle ) )
                    	    // InternalSim.g:6144:6: (lv_segments_3_0= ruleDmxTextMiddle )
                    	    {
                    	    // InternalSim.g:6144:6: (lv_segments_3_0= ruleDmxTextMiddle )
                    	    // InternalSim.g:6145:7: lv_segments_3_0= ruleDmxTextMiddle
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getDRichTextAccess().getSegmentsDmxTextMiddleParserRuleCall_1_2_0_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_51);
                    	    lv_segments_3_0=ruleDmxTextMiddle();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getDRichTextRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"segments",
                    	      								lv_segments_3_0,
                    	      								"com.mimacom.ddd.dm.dmx.Dmx.DmxTextMiddle");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }

                    	    // InternalSim.g:6162:5: ( (lv_segments_4_0= ruleDExpression ) )
                    	    // InternalSim.g:6163:6: (lv_segments_4_0= ruleDExpression )
                    	    {
                    	    // InternalSim.g:6163:6: (lv_segments_4_0= ruleDExpression )
                    	    // InternalSim.g:6164:7: lv_segments_4_0= ruleDExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getDRichTextAccess().getSegmentsDExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_88);
                    	    lv_segments_4_0=ruleDExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getDRichTextRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"segments",
                    	      								lv_segments_4_0,
                    	      								"com.mimacom.ddd.dm.dmx.Dmx.DExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop138;
                        }
                    } while (true);

                    // InternalSim.g:6182:4: ( (lv_segments_5_0= ruleDmxTextEnd ) )
                    // InternalSim.g:6183:5: (lv_segments_5_0= ruleDmxTextEnd )
                    {
                    // InternalSim.g:6183:5: (lv_segments_5_0= ruleDmxTextEnd )
                    // InternalSim.g:6184:6: lv_segments_5_0= ruleDmxTextEnd
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDRichTextAccess().getSegmentsDmxTextEndParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_segments_5_0=ruleDmxTextEnd();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDRichTextRule());
                      						}
                      						add(
                      							current,
                      							"segments",
                      							lv_segments_5_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.DmxTextEnd");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDRichText"


    // $ANTLR start "entryRuleDmxTextOnly"
    // InternalSim.g:6206:1: entryRuleDmxTextOnly returns [EObject current=null] : iv_ruleDmxTextOnly= ruleDmxTextOnly EOF ;
    public final EObject entryRuleDmxTextOnly() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxTextOnly = null;


        try {
            // InternalSim.g:6206:52: (iv_ruleDmxTextOnly= ruleDmxTextOnly EOF )
            // InternalSim.g:6207:2: iv_ruleDmxTextOnly= ruleDmxTextOnly EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxTextOnlyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxTextOnly=ruleDmxTextOnly();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxTextOnly; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxTextOnly"


    // $ANTLR start "ruleDmxTextOnly"
    // InternalSim.g:6213:1: ruleDmxTextOnly returns [EObject current=null] : ( (lv_value_0_0= RULE_PLAIN_TEXT_ONLY ) ) ;
    public final EObject ruleDmxTextOnly() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
            // InternalSim.g:6219:2: ( ( (lv_value_0_0= RULE_PLAIN_TEXT_ONLY ) ) )
            // InternalSim.g:6220:2: ( (lv_value_0_0= RULE_PLAIN_TEXT_ONLY ) )
            {
            // InternalSim.g:6220:2: ( (lv_value_0_0= RULE_PLAIN_TEXT_ONLY ) )
            // InternalSim.g:6221:3: (lv_value_0_0= RULE_PLAIN_TEXT_ONLY )
            {
            // InternalSim.g:6221:3: (lv_value_0_0= RULE_PLAIN_TEXT_ONLY )
            // InternalSim.g:6222:4: lv_value_0_0= RULE_PLAIN_TEXT_ONLY
            {
            lv_value_0_0=(Token)match(input,RULE_PLAIN_TEXT_ONLY,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getDmxTextOnlyAccess().getValuePLAIN_TEXT_ONLYTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getDmxTextOnlyRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"com.mimacom.ddd.dm.dmx.Dmx.PLAIN_TEXT_ONLY");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxTextOnly"


    // $ANTLR start "entryRuleDmxTextStart"
    // InternalSim.g:6241:1: entryRuleDmxTextStart returns [EObject current=null] : iv_ruleDmxTextStart= ruleDmxTextStart EOF ;
    public final EObject entryRuleDmxTextStart() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxTextStart = null;


        try {
            // InternalSim.g:6241:53: (iv_ruleDmxTextStart= ruleDmxTextStart EOF )
            // InternalSim.g:6242:2: iv_ruleDmxTextStart= ruleDmxTextStart EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxTextStartRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxTextStart=ruleDmxTextStart();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxTextStart; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxTextStart"


    // $ANTLR start "ruleDmxTextStart"
    // InternalSim.g:6248:1: ruleDmxTextStart returns [EObject current=null] : ( (lv_value_0_0= RULE_RICH_TEXT_START ) ) ;
    public final EObject ruleDmxTextStart() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
            // InternalSim.g:6254:2: ( ( (lv_value_0_0= RULE_RICH_TEXT_START ) ) )
            // InternalSim.g:6255:2: ( (lv_value_0_0= RULE_RICH_TEXT_START ) )
            {
            // InternalSim.g:6255:2: ( (lv_value_0_0= RULE_RICH_TEXT_START ) )
            // InternalSim.g:6256:3: (lv_value_0_0= RULE_RICH_TEXT_START )
            {
            // InternalSim.g:6256:3: (lv_value_0_0= RULE_RICH_TEXT_START )
            // InternalSim.g:6257:4: lv_value_0_0= RULE_RICH_TEXT_START
            {
            lv_value_0_0=(Token)match(input,RULE_RICH_TEXT_START,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getDmxTextStartAccess().getValueRICH_TEXT_STARTTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getDmxTextStartRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"com.mimacom.ddd.dm.dmx.Dmx.RICH_TEXT_START");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxTextStart"


    // $ANTLR start "entryRuleDmxTextMiddle"
    // InternalSim.g:6276:1: entryRuleDmxTextMiddle returns [EObject current=null] : iv_ruleDmxTextMiddle= ruleDmxTextMiddle EOF ;
    public final EObject entryRuleDmxTextMiddle() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxTextMiddle = null;


        try {
            // InternalSim.g:6276:54: (iv_ruleDmxTextMiddle= ruleDmxTextMiddle EOF )
            // InternalSim.g:6277:2: iv_ruleDmxTextMiddle= ruleDmxTextMiddle EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxTextMiddleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxTextMiddle=ruleDmxTextMiddle();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxTextMiddle; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxTextMiddle"


    // $ANTLR start "ruleDmxTextMiddle"
    // InternalSim.g:6283:1: ruleDmxTextMiddle returns [EObject current=null] : ( (lv_value_0_0= RULE_RICH_TEXT_MIDDLE ) ) ;
    public final EObject ruleDmxTextMiddle() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
            // InternalSim.g:6289:2: ( ( (lv_value_0_0= RULE_RICH_TEXT_MIDDLE ) ) )
            // InternalSim.g:6290:2: ( (lv_value_0_0= RULE_RICH_TEXT_MIDDLE ) )
            {
            // InternalSim.g:6290:2: ( (lv_value_0_0= RULE_RICH_TEXT_MIDDLE ) )
            // InternalSim.g:6291:3: (lv_value_0_0= RULE_RICH_TEXT_MIDDLE )
            {
            // InternalSim.g:6291:3: (lv_value_0_0= RULE_RICH_TEXT_MIDDLE )
            // InternalSim.g:6292:4: lv_value_0_0= RULE_RICH_TEXT_MIDDLE
            {
            lv_value_0_0=(Token)match(input,RULE_RICH_TEXT_MIDDLE,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getDmxTextMiddleAccess().getValueRICH_TEXT_MIDDLETerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getDmxTextMiddleRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"com.mimacom.ddd.dm.dmx.Dmx.RICH_TEXT_MIDDLE");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxTextMiddle"


    // $ANTLR start "entryRuleDmxTextEnd"
    // InternalSim.g:6311:1: entryRuleDmxTextEnd returns [EObject current=null] : iv_ruleDmxTextEnd= ruleDmxTextEnd EOF ;
    public final EObject entryRuleDmxTextEnd() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxTextEnd = null;


        try {
            // InternalSim.g:6311:51: (iv_ruleDmxTextEnd= ruleDmxTextEnd EOF )
            // InternalSim.g:6312:2: iv_ruleDmxTextEnd= ruleDmxTextEnd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxTextEndRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxTextEnd=ruleDmxTextEnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxTextEnd; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxTextEnd"


    // $ANTLR start "ruleDmxTextEnd"
    // InternalSim.g:6318:1: ruleDmxTextEnd returns [EObject current=null] : ( (lv_value_0_0= RULE_RICH_TEXT_END ) ) ;
    public final EObject ruleDmxTextEnd() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
            // InternalSim.g:6324:2: ( ( (lv_value_0_0= RULE_RICH_TEXT_END ) ) )
            // InternalSim.g:6325:2: ( (lv_value_0_0= RULE_RICH_TEXT_END ) )
            {
            // InternalSim.g:6325:2: ( (lv_value_0_0= RULE_RICH_TEXT_END ) )
            // InternalSim.g:6326:3: (lv_value_0_0= RULE_RICH_TEXT_END )
            {
            // InternalSim.g:6326:3: (lv_value_0_0= RULE_RICH_TEXT_END )
            // InternalSim.g:6327:4: lv_value_0_0= RULE_RICH_TEXT_END
            {
            lv_value_0_0=(Token)match(input,RULE_RICH_TEXT_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getDmxTextEndAccess().getValueRICH_TEXT_ENDTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getDmxTextEndRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"com.mimacom.ddd.dm.dmx.Dmx.RICH_TEXT_END");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxTextEnd"


    // $ANTLR start "entryRuleDmxNavigableMemberReference"
    // InternalSim.g:6346:1: entryRuleDmxNavigableMemberReference returns [EObject current=null] : iv_ruleDmxNavigableMemberReference= ruleDmxNavigableMemberReference EOF ;
    public final EObject entryRuleDmxNavigableMemberReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxNavigableMemberReference = null;


        try {
            // InternalSim.g:6346:68: (iv_ruleDmxNavigableMemberReference= ruleDmxNavigableMemberReference EOF )
            // InternalSim.g:6347:2: iv_ruleDmxNavigableMemberReference= ruleDmxNavigableMemberReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxNavigableMemberReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxNavigableMemberReference=ruleDmxNavigableMemberReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxNavigableMemberReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxNavigableMemberReference"


    // $ANTLR start "ruleDmxNavigableMemberReference"
    // InternalSim.g:6353:1: ruleDmxNavigableMemberReference returns [EObject current=null] : (this_DmxPrimaryExpression_0= ruleDmxPrimaryExpression ( ( ( ( ( () '.' ( ( RULE_ID ) ) ruleDmxOpSingleAssign ) )=> ( () otherlv_2= '.' ( (otherlv_3= RULE_ID ) ) ruleDmxOpSingleAssign ) ) ( (lv_value_5_0= ruleDmxOrExpression ) ) ) | ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( (otherlv_8= RULE_ID ) ) ( ( ( ( ( '(' ) )=> (lv_explicitOperationCall_9_0= '(' ) ) ( (lv_callArguments_10_0= ruleDmxCallArguments ) ) otherlv_11= ')' ) | ( (lv_before_12_0= '@before' ) ) )? ) )* ) ;
    public final EObject ruleDmxNavigableMemberReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token lv_explicitOperationCall_9_0=null;
        Token otherlv_11=null;
        Token lv_before_12_0=null;
        EObject this_DmxPrimaryExpression_0 = null;

        EObject lv_value_5_0 = null;

        EObject lv_callArguments_10_0 = null;



        	enterRule();

        try {
            // InternalSim.g:6359:2: ( (this_DmxPrimaryExpression_0= ruleDmxPrimaryExpression ( ( ( ( ( () '.' ( ( RULE_ID ) ) ruleDmxOpSingleAssign ) )=> ( () otherlv_2= '.' ( (otherlv_3= RULE_ID ) ) ruleDmxOpSingleAssign ) ) ( (lv_value_5_0= ruleDmxOrExpression ) ) ) | ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( (otherlv_8= RULE_ID ) ) ( ( ( ( ( '(' ) )=> (lv_explicitOperationCall_9_0= '(' ) ) ( (lv_callArguments_10_0= ruleDmxCallArguments ) ) otherlv_11= ')' ) | ( (lv_before_12_0= '@before' ) ) )? ) )* ) )
            // InternalSim.g:6360:2: (this_DmxPrimaryExpression_0= ruleDmxPrimaryExpression ( ( ( ( ( () '.' ( ( RULE_ID ) ) ruleDmxOpSingleAssign ) )=> ( () otherlv_2= '.' ( (otherlv_3= RULE_ID ) ) ruleDmxOpSingleAssign ) ) ( (lv_value_5_0= ruleDmxOrExpression ) ) ) | ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( (otherlv_8= RULE_ID ) ) ( ( ( ( ( '(' ) )=> (lv_explicitOperationCall_9_0= '(' ) ) ( (lv_callArguments_10_0= ruleDmxCallArguments ) ) otherlv_11= ')' ) | ( (lv_before_12_0= '@before' ) ) )? ) )* )
            {
            // InternalSim.g:6360:2: (this_DmxPrimaryExpression_0= ruleDmxPrimaryExpression ( ( ( ( ( () '.' ( ( RULE_ID ) ) ruleDmxOpSingleAssign ) )=> ( () otherlv_2= '.' ( (otherlv_3= RULE_ID ) ) ruleDmxOpSingleAssign ) ) ( (lv_value_5_0= ruleDmxOrExpression ) ) ) | ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( (otherlv_8= RULE_ID ) ) ( ( ( ( ( '(' ) )=> (lv_explicitOperationCall_9_0= '(' ) ) ( (lv_callArguments_10_0= ruleDmxCallArguments ) ) otherlv_11= ')' ) | ( (lv_before_12_0= '@before' ) ) )? ) )* )
            // InternalSim.g:6361:3: this_DmxPrimaryExpression_0= ruleDmxPrimaryExpression ( ( ( ( ( () '.' ( ( RULE_ID ) ) ruleDmxOpSingleAssign ) )=> ( () otherlv_2= '.' ( (otherlv_3= RULE_ID ) ) ruleDmxOpSingleAssign ) ) ( (lv_value_5_0= ruleDmxOrExpression ) ) ) | ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( (otherlv_8= RULE_ID ) ) ( ( ( ( ( '(' ) )=> (lv_explicitOperationCall_9_0= '(' ) ) ( (lv_callArguments_10_0= ruleDmxCallArguments ) ) otherlv_11= ')' ) | ( (lv_before_12_0= '@before' ) ) )? ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDmxNavigableMemberReferenceAccess().getDmxPrimaryExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_89);
            this_DmxPrimaryExpression_0=ruleDmxPrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_DmxPrimaryExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSim.g:6369:3: ( ( ( ( ( () '.' ( ( RULE_ID ) ) ruleDmxOpSingleAssign ) )=> ( () otherlv_2= '.' ( (otherlv_3= RULE_ID ) ) ruleDmxOpSingleAssign ) ) ( (lv_value_5_0= ruleDmxOrExpression ) ) ) | ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( (otherlv_8= RULE_ID ) ) ( ( ( ( ( '(' ) )=> (lv_explicitOperationCall_9_0= '(' ) ) ( (lv_callArguments_10_0= ruleDmxCallArguments ) ) otherlv_11= ')' ) | ( (lv_before_12_0= '@before' ) ) )? ) )*
            loop141:
            do {
                int alt141=3;
                int LA141_0 = input.LA(1);

                if ( (LA141_0==68) ) {
                    int LA141_2 = input.LA(2);

                    if ( (synpred1_InternalSim()) ) {
                        alt141=1;
                    }
                    else if ( (synpred2_InternalSim()) ) {
                        alt141=2;
                    }


                }


                switch (alt141) {
            	case 1 :
            	    // InternalSim.g:6370:4: ( ( ( ( () '.' ( ( RULE_ID ) ) ruleDmxOpSingleAssign ) )=> ( () otherlv_2= '.' ( (otherlv_3= RULE_ID ) ) ruleDmxOpSingleAssign ) ) ( (lv_value_5_0= ruleDmxOrExpression ) ) )
            	    {
            	    // InternalSim.g:6370:4: ( ( ( ( () '.' ( ( RULE_ID ) ) ruleDmxOpSingleAssign ) )=> ( () otherlv_2= '.' ( (otherlv_3= RULE_ID ) ) ruleDmxOpSingleAssign ) ) ( (lv_value_5_0= ruleDmxOrExpression ) ) )
            	    // InternalSim.g:6371:5: ( ( ( () '.' ( ( RULE_ID ) ) ruleDmxOpSingleAssign ) )=> ( () otherlv_2= '.' ( (otherlv_3= RULE_ID ) ) ruleDmxOpSingleAssign ) ) ( (lv_value_5_0= ruleDmxOrExpression ) )
            	    {
            	    // InternalSim.g:6371:5: ( ( ( () '.' ( ( RULE_ID ) ) ruleDmxOpSingleAssign ) )=> ( () otherlv_2= '.' ( (otherlv_3= RULE_ID ) ) ruleDmxOpSingleAssign ) )
            	    // InternalSim.g:6372:6: ( ( () '.' ( ( RULE_ID ) ) ruleDmxOpSingleAssign ) )=> ( () otherlv_2= '.' ( (otherlv_3= RULE_ID ) ) ruleDmxOpSingleAssign )
            	    {
            	    // InternalSim.g:6384:6: ( () otherlv_2= '.' ( (otherlv_3= RULE_ID ) ) ruleDmxOpSingleAssign )
            	    // InternalSim.g:6385:7: () otherlv_2= '.' ( (otherlv_3= RULE_ID ) ) ruleDmxOpSingleAssign
            	    {
            	    // InternalSim.g:6385:7: ()
            	    // InternalSim.g:6386:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								current = forceCreateModelElementAndSet(
            	      									grammarAccess.getDmxNavigableMemberReferenceAccess().getDmxAssignmentPrecedingNavigationSegmentAction_1_0_0_0_0(),
            	      									current);
            	      							
            	    }

            	    }

            	    otherlv_2=(Token)match(input,68,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							newLeafNode(otherlv_2, grammarAccess.getDmxNavigableMemberReferenceAccess().getFullStopKeyword_1_0_0_0_1());
            	      						
            	    }
            	    // InternalSim.g:6396:7: ( (otherlv_3= RULE_ID ) )
            	    // InternalSim.g:6397:8: (otherlv_3= RULE_ID )
            	    {
            	    // InternalSim.g:6397:8: (otherlv_3= RULE_ID )
            	    // InternalSim.g:6398:9: otherlv_3= RULE_ID
            	    {
            	    if ( state.backtracking==0 ) {

            	      									if (current==null) {
            	      										current = createModelElement(grammarAccess.getDmxNavigableMemberReferenceRule());
            	      									}
            	      								
            	    }
            	    otherlv_3=(Token)match(input,RULE_ID,FOLLOW_90); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_3, grammarAccess.getDmxNavigableMemberReferenceAccess().getAssignToMemberDNavigableMemberCrossReference_1_0_0_0_2_0());
            	      								
            	    }

            	    }


            	    }

            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getDmxNavigableMemberReferenceAccess().getDmxOpSingleAssignParserRuleCall_1_0_0_0_3());
            	      						
            	    }
            	    pushFollow(FOLLOW_91);
            	    ruleDmxOpSingleAssign();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalSim.g:6418:5: ( (lv_value_5_0= ruleDmxOrExpression ) )
            	    // InternalSim.g:6419:6: (lv_value_5_0= ruleDmxOrExpression )
            	    {
            	    // InternalSim.g:6419:6: (lv_value_5_0= ruleDmxOrExpression )
            	    // InternalSim.g:6420:7: lv_value_5_0= ruleDmxOrExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getDmxNavigableMemberReferenceAccess().getValueDmxOrExpressionParserRuleCall_1_0_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_89);
            	    lv_value_5_0=ruleDmxOrExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getDmxNavigableMemberReferenceRule());
            	      							}
            	      							set(
            	      								current,
            	      								"value",
            	      								lv_value_5_0,
            	      								"com.mimacom.ddd.dm.dmx.Dmx.DmxOrExpression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalSim.g:6439:4: ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( (otherlv_8= RULE_ID ) ) ( ( ( ( ( '(' ) )=> (lv_explicitOperationCall_9_0= '(' ) ) ( (lv_callArguments_10_0= ruleDmxCallArguments ) ) otherlv_11= ')' ) | ( (lv_before_12_0= '@before' ) ) )? )
            	    {
            	    // InternalSim.g:6439:4: ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( (otherlv_8= RULE_ID ) ) ( ( ( ( ( '(' ) )=> (lv_explicitOperationCall_9_0= '(' ) ) ( (lv_callArguments_10_0= ruleDmxCallArguments ) ) otherlv_11= ')' ) | ( (lv_before_12_0= '@before' ) ) )? )
            	    // InternalSim.g:6440:5: ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( (otherlv_8= RULE_ID ) ) ( ( ( ( ( '(' ) )=> (lv_explicitOperationCall_9_0= '(' ) ) ( (lv_callArguments_10_0= ruleDmxCallArguments ) ) otherlv_11= ')' ) | ( (lv_before_12_0= '@before' ) ) )?
            	    {
            	    // InternalSim.g:6440:5: ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) )
            	    // InternalSim.g:6441:6: ( ( () '.' ) )=> ( () otherlv_7= '.' )
            	    {
            	    // InternalSim.g:6447:6: ( () otherlv_7= '.' )
            	    // InternalSim.g:6448:7: () otherlv_7= '.'
            	    {
            	    // InternalSim.g:6448:7: ()
            	    // InternalSim.g:6449:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								current = forceCreateModelElementAndSet(
            	      									grammarAccess.getDmxNavigableMemberReferenceAccess().getDmxMemberNavigationPrecedingNavigationSegmentAction_1_1_0_0_0(),
            	      									current);
            	      							
            	    }

            	    }

            	    otherlv_7=(Token)match(input,68,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							newLeafNode(otherlv_7, grammarAccess.getDmxNavigableMemberReferenceAccess().getFullStopKeyword_1_1_0_0_1());
            	      						
            	    }

            	    }


            	    }

            	    // InternalSim.g:6461:5: ( (otherlv_8= RULE_ID ) )
            	    // InternalSim.g:6462:6: (otherlv_8= RULE_ID )
            	    {
            	    // InternalSim.g:6462:6: (otherlv_8= RULE_ID )
            	    // InternalSim.g:6463:7: otherlv_8= RULE_ID
            	    {
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElement(grammarAccess.getDmxNavigableMemberReferenceRule());
            	      							}
            	      						
            	    }
            	    otherlv_8=(Token)match(input,RULE_ID,FOLLOW_92); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							newLeafNode(otherlv_8, grammarAccess.getDmxNavigableMemberReferenceAccess().getMemberDNavigableMemberCrossReference_1_1_1_0());
            	      						
            	    }

            	    }


            	    }

            	    // InternalSim.g:6474:5: ( ( ( ( ( '(' ) )=> (lv_explicitOperationCall_9_0= '(' ) ) ( (lv_callArguments_10_0= ruleDmxCallArguments ) ) otherlv_11= ')' ) | ( (lv_before_12_0= '@before' ) ) )?
            	    int alt140=3;
            	    int LA140_0 = input.LA(1);

            	    if ( (LA140_0==45) && (synpred3_InternalSim())) {
            	        alt140=1;
            	    }
            	    else if ( (LA140_0==69) ) {
            	        alt140=2;
            	    }
            	    switch (alt140) {
            	        case 1 :
            	            // InternalSim.g:6475:6: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_9_0= '(' ) ) ( (lv_callArguments_10_0= ruleDmxCallArguments ) ) otherlv_11= ')' )
            	            {
            	            // InternalSim.g:6475:6: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_9_0= '(' ) ) ( (lv_callArguments_10_0= ruleDmxCallArguments ) ) otherlv_11= ')' )
            	            // InternalSim.g:6476:7: ( ( ( '(' ) )=> (lv_explicitOperationCall_9_0= '(' ) ) ( (lv_callArguments_10_0= ruleDmxCallArguments ) ) otherlv_11= ')'
            	            {
            	            // InternalSim.g:6476:7: ( ( ( '(' ) )=> (lv_explicitOperationCall_9_0= '(' ) )
            	            // InternalSim.g:6477:8: ( ( '(' ) )=> (lv_explicitOperationCall_9_0= '(' )
            	            {
            	            // InternalSim.g:6481:8: (lv_explicitOperationCall_9_0= '(' )
            	            // InternalSim.g:6482:9: lv_explicitOperationCall_9_0= '('
            	            {
            	            lv_explicitOperationCall_9_0=(Token)match(input,45,FOLLOW_93); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(lv_explicitOperationCall_9_0, grammarAccess.getDmxNavigableMemberReferenceAccess().getExplicitOperationCallLeftParenthesisKeyword_1_1_2_0_0_0());
            	              								
            	            }
            	            if ( state.backtracking==0 ) {

            	              									if (current==null) {
            	              										current = createModelElement(grammarAccess.getDmxNavigableMemberReferenceRule());
            	              									}
            	              									setWithLastConsumed(current, "explicitOperationCall", true, "(");
            	              								
            	            }

            	            }


            	            }

            	            // InternalSim.g:6494:7: ( (lv_callArguments_10_0= ruleDmxCallArguments ) )
            	            // InternalSim.g:6495:8: (lv_callArguments_10_0= ruleDmxCallArguments )
            	            {
            	            // InternalSim.g:6495:8: (lv_callArguments_10_0= ruleDmxCallArguments )
            	            // InternalSim.g:6496:9: lv_callArguments_10_0= ruleDmxCallArguments
            	            {
            	            if ( state.backtracking==0 ) {

            	              									newCompositeNode(grammarAccess.getDmxNavigableMemberReferenceAccess().getCallArgumentsDmxCallArgumentsParserRuleCall_1_1_2_0_1_0());
            	              								
            	            }
            	            pushFollow(FOLLOW_46);
            	            lv_callArguments_10_0=ruleDmxCallArguments();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									if (current==null) {
            	              										current = createModelElementForParent(grammarAccess.getDmxNavigableMemberReferenceRule());
            	              									}
            	              									set(
            	              										current,
            	              										"callArguments",
            	              										lv_callArguments_10_0,
            	              										"com.mimacom.ddd.dm.dmx.Dmx.DmxCallArguments");
            	              									afterParserOrEnumRuleCall();
            	              								
            	            }

            	            }


            	            }

            	            otherlv_11=(Token)match(input,47,FOLLOW_89); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(otherlv_11, grammarAccess.getDmxNavigableMemberReferenceAccess().getRightParenthesisKeyword_1_1_2_0_2());
            	              						
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalSim.g:6519:6: ( (lv_before_12_0= '@before' ) )
            	            {
            	            // InternalSim.g:6519:6: ( (lv_before_12_0= '@before' ) )
            	            // InternalSim.g:6520:7: (lv_before_12_0= '@before' )
            	            {
            	            // InternalSim.g:6520:7: (lv_before_12_0= '@before' )
            	            // InternalSim.g:6521:8: lv_before_12_0= '@before'
            	            {
            	            lv_before_12_0=(Token)match(input,69,FOLLOW_89); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(lv_before_12_0, grammarAccess.getDmxNavigableMemberReferenceAccess().getBeforeBeforeKeyword_1_1_2_1_0());
            	              							
            	            }
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElement(grammarAccess.getDmxNavigableMemberReferenceRule());
            	              								}
            	              								setWithLastConsumed(current, "before", true, "@before");
            	              							
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop141;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxNavigableMemberReference"


    // $ANTLR start "entryRuleDmxCallArguments"
    // InternalSim.g:6540:1: entryRuleDmxCallArguments returns [EObject current=null] : iv_ruleDmxCallArguments= ruleDmxCallArguments EOF ;
    public final EObject entryRuleDmxCallArguments() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxCallArguments = null;


        try {
            // InternalSim.g:6540:57: (iv_ruleDmxCallArguments= ruleDmxCallArguments EOF )
            // InternalSim.g:6541:2: iv_ruleDmxCallArguments= ruleDmxCallArguments EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxCallArgumentsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxCallArguments=ruleDmxCallArguments();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxCallArguments; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxCallArguments"


    // $ANTLR start "ruleDmxCallArguments"
    // InternalSim.g:6547:1: ruleDmxCallArguments returns [EObject current=null] : ( () ( ( (lv_arguments_1_0= ruleDmxPredicateWithCorrelationVariable ) ) (otherlv_2= ',' ( (lv_arguments_3_0= ruleDmxPredicateWithCorrelationVariable ) ) )* )? ) ;
    public final EObject ruleDmxCallArguments() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_arguments_1_0 = null;

        EObject lv_arguments_3_0 = null;



        	enterRule();

        try {
            // InternalSim.g:6553:2: ( ( () ( ( (lv_arguments_1_0= ruleDmxPredicateWithCorrelationVariable ) ) (otherlv_2= ',' ( (lv_arguments_3_0= ruleDmxPredicateWithCorrelationVariable ) ) )* )? ) )
            // InternalSim.g:6554:2: ( () ( ( (lv_arguments_1_0= ruleDmxPredicateWithCorrelationVariable ) ) (otherlv_2= ',' ( (lv_arguments_3_0= ruleDmxPredicateWithCorrelationVariable ) ) )* )? )
            {
            // InternalSim.g:6554:2: ( () ( ( (lv_arguments_1_0= ruleDmxPredicateWithCorrelationVariable ) ) (otherlv_2= ',' ( (lv_arguments_3_0= ruleDmxPredicateWithCorrelationVariable ) ) )* )? )
            // InternalSim.g:6555:3: () ( ( (lv_arguments_1_0= ruleDmxPredicateWithCorrelationVariable ) ) (otherlv_2= ',' ( (lv_arguments_3_0= ruleDmxPredicateWithCorrelationVariable ) ) )* )?
            {
            // InternalSim.g:6555:3: ()
            // InternalSim.g:6556:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDmxCallArgumentsAccess().getDmxCallArgumentsAction_0(),
              					current);
              			
            }

            }

            // InternalSim.g:6562:3: ( ( (lv_arguments_1_0= ruleDmxPredicateWithCorrelationVariable ) ) (otherlv_2= ',' ( (lv_arguments_3_0= ruleDmxPredicateWithCorrelationVariable ) ) )* )?
            int alt143=2;
            int LA143_0 = input.LA(1);

            if ( (LA143_0==RULE_ID||(LA143_0>=RULE_NATURAL && LA143_0<=RULE_STRING)||LA143_0==22||LA143_0==38||LA143_0==41||LA143_0==45||LA143_0==75||LA143_0==79||(LA143_0>=84 && LA143_0<=89)||(LA143_0>=92 && LA143_0<=93)||(LA143_0>=134 && LA143_0<=136)) ) {
                alt143=1;
            }
            switch (alt143) {
                case 1 :
                    // InternalSim.g:6563:4: ( (lv_arguments_1_0= ruleDmxPredicateWithCorrelationVariable ) ) (otherlv_2= ',' ( (lv_arguments_3_0= ruleDmxPredicateWithCorrelationVariable ) ) )*
                    {
                    // InternalSim.g:6563:4: ( (lv_arguments_1_0= ruleDmxPredicateWithCorrelationVariable ) )
                    // InternalSim.g:6564:5: (lv_arguments_1_0= ruleDmxPredicateWithCorrelationVariable )
                    {
                    // InternalSim.g:6564:5: (lv_arguments_1_0= ruleDmxPredicateWithCorrelationVariable )
                    // InternalSim.g:6565:6: lv_arguments_1_0= ruleDmxPredicateWithCorrelationVariable
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDmxCallArgumentsAccess().getArgumentsDmxPredicateWithCorrelationVariableParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_94);
                    lv_arguments_1_0=ruleDmxPredicateWithCorrelationVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDmxCallArgumentsRule());
                      						}
                      						add(
                      							current,
                      							"arguments",
                      							lv_arguments_1_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.DmxPredicateWithCorrelationVariable");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSim.g:6582:4: (otherlv_2= ',' ( (lv_arguments_3_0= ruleDmxPredicateWithCorrelationVariable ) ) )*
                    loop142:
                    do {
                        int alt142=2;
                        int LA142_0 = input.LA(1);

                        if ( (LA142_0==36) ) {
                            alt142=1;
                        }


                        switch (alt142) {
                    	case 1 :
                    	    // InternalSim.g:6583:5: otherlv_2= ',' ( (lv_arguments_3_0= ruleDmxPredicateWithCorrelationVariable ) )
                    	    {
                    	    otherlv_2=(Token)match(input,36,FOLLOW_91); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_2, grammarAccess.getDmxCallArgumentsAccess().getCommaKeyword_1_1_0());
                    	      				
                    	    }
                    	    // InternalSim.g:6587:5: ( (lv_arguments_3_0= ruleDmxPredicateWithCorrelationVariable ) )
                    	    // InternalSim.g:6588:6: (lv_arguments_3_0= ruleDmxPredicateWithCorrelationVariable )
                    	    {
                    	    // InternalSim.g:6588:6: (lv_arguments_3_0= ruleDmxPredicateWithCorrelationVariable )
                    	    // InternalSim.g:6589:7: lv_arguments_3_0= ruleDmxPredicateWithCorrelationVariable
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getDmxCallArgumentsAccess().getArgumentsDmxPredicateWithCorrelationVariableParserRuleCall_1_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_94);
                    	    lv_arguments_3_0=ruleDmxPredicateWithCorrelationVariable();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getDmxCallArgumentsRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"arguments",
                    	      								lv_arguments_3_0,
                    	      								"com.mimacom.ddd.dm.dmx.Dmx.DmxPredicateWithCorrelationVariable");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop142;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxCallArguments"


    // $ANTLR start "entryRuleDmxAssignment"
    // InternalSim.g:6612:1: entryRuleDmxAssignment returns [EObject current=null] : iv_ruleDmxAssignment= ruleDmxAssignment EOF ;
    public final EObject entryRuleDmxAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxAssignment = null;


        try {
            // InternalSim.g:6612:54: (iv_ruleDmxAssignment= ruleDmxAssignment EOF )
            // InternalSim.g:6613:2: iv_ruleDmxAssignment= ruleDmxAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxAssignmentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxAssignment=ruleDmxAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxAssignment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxAssignment"


    // $ANTLR start "ruleDmxAssignment"
    // InternalSim.g:6619:1: ruleDmxAssignment returns [EObject current=null] : ( () ( (otherlv_1= RULE_ID ) ) ruleDmxOpSingleAssign ( (lv_value_3_0= ruleDmxOrExpression ) ) ) ;
    public final EObject ruleDmxAssignment() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_value_3_0 = null;



        	enterRule();

        try {
            // InternalSim.g:6625:2: ( ( () ( (otherlv_1= RULE_ID ) ) ruleDmxOpSingleAssign ( (lv_value_3_0= ruleDmxOrExpression ) ) ) )
            // InternalSim.g:6626:2: ( () ( (otherlv_1= RULE_ID ) ) ruleDmxOpSingleAssign ( (lv_value_3_0= ruleDmxOrExpression ) ) )
            {
            // InternalSim.g:6626:2: ( () ( (otherlv_1= RULE_ID ) ) ruleDmxOpSingleAssign ( (lv_value_3_0= ruleDmxOrExpression ) ) )
            // InternalSim.g:6627:3: () ( (otherlv_1= RULE_ID ) ) ruleDmxOpSingleAssign ( (lv_value_3_0= ruleDmxOrExpression ) )
            {
            // InternalSim.g:6627:3: ()
            // InternalSim.g:6628:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDmxAssignmentAccess().getDmxAssignmentAction_0(),
              					current);
              			
            }

            }

            // InternalSim.g:6634:3: ( (otherlv_1= RULE_ID ) )
            // InternalSim.g:6635:4: (otherlv_1= RULE_ID )
            {
            // InternalSim.g:6635:4: (otherlv_1= RULE_ID )
            // InternalSim.g:6636:5: otherlv_1= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDmxAssignmentRule());
              					}
              				
            }
            otherlv_1=(Token)match(input,RULE_ID,FOLLOW_90); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getDmxAssignmentAccess().getAssignToMemberDNavigableMemberCrossReference_1_0());
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDmxAssignmentAccess().getDmxOpSingleAssignParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_91);
            ruleDmxOpSingleAssign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSim.g:6654:3: ( (lv_value_3_0= ruleDmxOrExpression ) )
            // InternalSim.g:6655:4: (lv_value_3_0= ruleDmxOrExpression )
            {
            // InternalSim.g:6655:4: (lv_value_3_0= ruleDmxOrExpression )
            // InternalSim.g:6656:5: lv_value_3_0= ruleDmxOrExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDmxAssignmentAccess().getValueDmxOrExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_3_0=ruleDmxOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDmxAssignmentRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_3_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.DmxOrExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxAssignment"


    // $ANTLR start "entryRuleDmxOpSingleAssign"
    // InternalSim.g:6677:1: entryRuleDmxOpSingleAssign returns [String current=null] : iv_ruleDmxOpSingleAssign= ruleDmxOpSingleAssign EOF ;
    public final String entryRuleDmxOpSingleAssign() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleDmxOpSingleAssign = null;


        try {
            // InternalSim.g:6677:57: (iv_ruleDmxOpSingleAssign= ruleDmxOpSingleAssign EOF )
            // InternalSim.g:6678:2: iv_ruleDmxOpSingleAssign= ruleDmxOpSingleAssign EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxOpSingleAssignRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxOpSingleAssign=ruleDmxOpSingleAssign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxOpSingleAssign.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxOpSingleAssign"


    // $ANTLR start "ruleDmxOpSingleAssign"
    // InternalSim.g:6684:1: ruleDmxOpSingleAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= ':=' ;
    public final AntlrDatatypeRuleToken ruleDmxOpSingleAssign() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalSim.g:6690:2: (kw= ':=' )
            // InternalSim.g:6691:2: kw= ':='
            {
            kw=(Token)match(input,62,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getDmxOpSingleAssignAccess().getColonEqualsSignKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxOpSingleAssign"


    // $ANTLR start "entryRuleDmxPredicateWithCorrelationVariable"
    // InternalSim.g:6699:1: entryRuleDmxPredicateWithCorrelationVariable returns [EObject current=null] : iv_ruleDmxPredicateWithCorrelationVariable= ruleDmxPredicateWithCorrelationVariable EOF ;
    public final EObject entryRuleDmxPredicateWithCorrelationVariable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxPredicateWithCorrelationVariable = null;


        try {
            // InternalSim.g:6699:76: (iv_ruleDmxPredicateWithCorrelationVariable= ruleDmxPredicateWithCorrelationVariable EOF )
            // InternalSim.g:6700:2: iv_ruleDmxPredicateWithCorrelationVariable= ruleDmxPredicateWithCorrelationVariable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxPredicateWithCorrelationVariableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxPredicateWithCorrelationVariable=ruleDmxPredicateWithCorrelationVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxPredicateWithCorrelationVariable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxPredicateWithCorrelationVariable"


    // $ANTLR start "ruleDmxPredicateWithCorrelationVariable"
    // InternalSim.g:6706:1: ruleDmxPredicateWithCorrelationVariable returns [EObject current=null] : ( ( () ( (lv_correlationVariable_1_0= ruleDmxCorrelationVariable ) ) otherlv_2= '|' ( (lv_predicate_3_0= ruleDmxOrExpression ) ) ) | this_DmxOrExpression_4= ruleDmxOrExpression ) ;
    public final EObject ruleDmxPredicateWithCorrelationVariable() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_correlationVariable_1_0 = null;

        EObject lv_predicate_3_0 = null;

        EObject this_DmxOrExpression_4 = null;



        	enterRule();

        try {
            // InternalSim.g:6712:2: ( ( ( () ( (lv_correlationVariable_1_0= ruleDmxCorrelationVariable ) ) otherlv_2= '|' ( (lv_predicate_3_0= ruleDmxOrExpression ) ) ) | this_DmxOrExpression_4= ruleDmxOrExpression ) )
            // InternalSim.g:6713:2: ( ( () ( (lv_correlationVariable_1_0= ruleDmxCorrelationVariable ) ) otherlv_2= '|' ( (lv_predicate_3_0= ruleDmxOrExpression ) ) ) | this_DmxOrExpression_4= ruleDmxOrExpression )
            {
            // InternalSim.g:6713:2: ( ( () ( (lv_correlationVariable_1_0= ruleDmxCorrelationVariable ) ) otherlv_2= '|' ( (lv_predicate_3_0= ruleDmxOrExpression ) ) ) | this_DmxOrExpression_4= ruleDmxOrExpression )
            int alt144=2;
            int LA144_0 = input.LA(1);

            if ( (LA144_0==RULE_ID) ) {
                int LA144_1 = input.LA(2);

                if ( (LA144_1==70) ) {
                    alt144=1;
                }
                else if ( (LA144_1==EOF||(LA144_1>=RULE_ID && LA144_1<=RULE_RICH_TEXT_END)||(LA144_1>=23 && LA144_1<=25)||LA144_1==29||(LA144_1>=31 && LA144_1<=36)||(LA144_1>=38 && LA144_1<=41)||(LA144_1>=45 && LA144_1<=48)||(LA144_1>=51 && LA144_1<=52)||LA144_1==55||LA144_1==63||(LA144_1>=68 && LA144_1<=69)||(LA144_1>=71 && LA144_1<=74)||(LA144_1>=80 && LA144_1<=83)||(LA144_1>=92 && LA144_1<=93)||(LA144_1>=100 && LA144_1<=101)||(LA144_1>=115 && LA144_1<=133)) ) {
                    alt144=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 144, 1, input);

                    throw nvae;
                }
            }
            else if ( ((LA144_0>=RULE_NATURAL && LA144_0<=RULE_STRING)||LA144_0==22||LA144_0==38||LA144_0==41||LA144_0==45||LA144_0==75||LA144_0==79||(LA144_0>=84 && LA144_0<=89)||(LA144_0>=92 && LA144_0<=93)||(LA144_0>=134 && LA144_0<=136)) ) {
                alt144=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 144, 0, input);

                throw nvae;
            }
            switch (alt144) {
                case 1 :
                    // InternalSim.g:6714:3: ( () ( (lv_correlationVariable_1_0= ruleDmxCorrelationVariable ) ) otherlv_2= '|' ( (lv_predicate_3_0= ruleDmxOrExpression ) ) )
                    {
                    // InternalSim.g:6714:3: ( () ( (lv_correlationVariable_1_0= ruleDmxCorrelationVariable ) ) otherlv_2= '|' ( (lv_predicate_3_0= ruleDmxOrExpression ) ) )
                    // InternalSim.g:6715:4: () ( (lv_correlationVariable_1_0= ruleDmxCorrelationVariable ) ) otherlv_2= '|' ( (lv_predicate_3_0= ruleDmxOrExpression ) )
                    {
                    // InternalSim.g:6715:4: ()
                    // InternalSim.g:6716:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getDmxPredicateWithCorrelationVariableAccess().getDmxPredicateWithCorrelationVariableAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSim.g:6722:4: ( (lv_correlationVariable_1_0= ruleDmxCorrelationVariable ) )
                    // InternalSim.g:6723:5: (lv_correlationVariable_1_0= ruleDmxCorrelationVariable )
                    {
                    // InternalSim.g:6723:5: (lv_correlationVariable_1_0= ruleDmxCorrelationVariable )
                    // InternalSim.g:6724:6: lv_correlationVariable_1_0= ruleDmxCorrelationVariable
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDmxPredicateWithCorrelationVariableAccess().getCorrelationVariableDmxCorrelationVariableParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_95);
                    lv_correlationVariable_1_0=ruleDmxCorrelationVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDmxPredicateWithCorrelationVariableRule());
                      						}
                      						set(
                      							current,
                      							"correlationVariable",
                      							lv_correlationVariable_1_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.DmxCorrelationVariable");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,70,FOLLOW_91); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getDmxPredicateWithCorrelationVariableAccess().getVerticalLineKeyword_0_2());
                      			
                    }
                    // InternalSim.g:6745:4: ( (lv_predicate_3_0= ruleDmxOrExpression ) )
                    // InternalSim.g:6746:5: (lv_predicate_3_0= ruleDmxOrExpression )
                    {
                    // InternalSim.g:6746:5: (lv_predicate_3_0= ruleDmxOrExpression )
                    // InternalSim.g:6747:6: lv_predicate_3_0= ruleDmxOrExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDmxPredicateWithCorrelationVariableAccess().getPredicateDmxOrExpressionParserRuleCall_0_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_predicate_3_0=ruleDmxOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDmxPredicateWithCorrelationVariableRule());
                      						}
                      						set(
                      							current,
                      							"predicate",
                      							lv_predicate_3_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.DmxOrExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:6766:3: this_DmxOrExpression_4= ruleDmxOrExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDmxPredicateWithCorrelationVariableAccess().getDmxOrExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DmxOrExpression_4=ruleDmxOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DmxOrExpression_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxPredicateWithCorrelationVariable"


    // $ANTLR start "entryRuleDmxCorrelationVariable"
    // InternalSim.g:6778:1: entryRuleDmxCorrelationVariable returns [EObject current=null] : iv_ruleDmxCorrelationVariable= ruleDmxCorrelationVariable EOF ;
    public final EObject entryRuleDmxCorrelationVariable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxCorrelationVariable = null;


        try {
            // InternalSim.g:6778:63: (iv_ruleDmxCorrelationVariable= ruleDmxCorrelationVariable EOF )
            // InternalSim.g:6779:2: iv_ruleDmxCorrelationVariable= ruleDmxCorrelationVariable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxCorrelationVariableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxCorrelationVariable=ruleDmxCorrelationVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxCorrelationVariable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxCorrelationVariable"


    // $ANTLR start "ruleDmxCorrelationVariable"
    // InternalSim.g:6785:1: ruleDmxCorrelationVariable returns [EObject current=null] : ( (lv_name_0_0= RULE_ID ) ) ;
    public final EObject ruleDmxCorrelationVariable() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;


        	enterRule();

        try {
            // InternalSim.g:6791:2: ( ( (lv_name_0_0= RULE_ID ) ) )
            // InternalSim.g:6792:2: ( (lv_name_0_0= RULE_ID ) )
            {
            // InternalSim.g:6792:2: ( (lv_name_0_0= RULE_ID ) )
            // InternalSim.g:6793:3: (lv_name_0_0= RULE_ID )
            {
            // InternalSim.g:6793:3: (lv_name_0_0= RULE_ID )
            // InternalSim.g:6794:4: lv_name_0_0= RULE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_name_0_0, grammarAccess.getDmxCorrelationVariableAccess().getNameIDTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getDmxCorrelationVariableRule());
              				}
              				setWithLastConsumed(
              					current,
              					"name",
              					lv_name_0_0,
              					"com.mimacom.ddd.dm.dmx.Dmx.ID");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxCorrelationVariable"


    // $ANTLR start "entryRuleDmxOrExpression"
    // InternalSim.g:6813:1: entryRuleDmxOrExpression returns [EObject current=null] : iv_ruleDmxOrExpression= ruleDmxOrExpression EOF ;
    public final EObject entryRuleDmxOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxOrExpression = null;


        try {
            // InternalSim.g:6813:56: (iv_ruleDmxOrExpression= ruleDmxOrExpression EOF )
            // InternalSim.g:6814:2: iv_ruleDmxOrExpression= ruleDmxOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxOrExpression=ruleDmxOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxOrExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxOrExpression"


    // $ANTLR start "ruleDmxOrExpression"
    // InternalSim.g:6820:1: ruleDmxOrExpression returns [EObject current=null] : (this_DmxAndExpression_0= ruleDmxAndExpression ( ( ( ( () ( ( ruleDmxOpOr ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxAndExpression ) ) )* ) ;
    public final EObject ruleDmxOrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_DmxAndExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalSim.g:6826:2: ( (this_DmxAndExpression_0= ruleDmxAndExpression ( ( ( ( () ( ( ruleDmxOpOr ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxAndExpression ) ) )* ) )
            // InternalSim.g:6827:2: (this_DmxAndExpression_0= ruleDmxAndExpression ( ( ( ( () ( ( ruleDmxOpOr ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxAndExpression ) ) )* )
            {
            // InternalSim.g:6827:2: (this_DmxAndExpression_0= ruleDmxAndExpression ( ( ( ( () ( ( ruleDmxOpOr ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxAndExpression ) ) )* )
            // InternalSim.g:6828:3: this_DmxAndExpression_0= ruleDmxAndExpression ( ( ( ( () ( ( ruleDmxOpOr ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxAndExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDmxOrExpressionAccess().getDmxAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_96);
            this_DmxAndExpression_0=ruleDmxAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_DmxAndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSim.g:6836:3: ( ( ( ( () ( ( ruleDmxOpOr ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxAndExpression ) ) )*
            loop145:
            do {
                int alt145=2;
                switch ( input.LA(1) ) {
                case 115:
                    {
                    int LA145_2 = input.LA(2);

                    if ( (synpred4_InternalSim()) ) {
                        alt145=1;
                    }


                    }
                    break;
                case 116:
                    {
                    int LA145_3 = input.LA(2);

                    if ( (synpred4_InternalSim()) ) {
                        alt145=1;
                    }


                    }
                    break;
                case 117:
                    {
                    int LA145_4 = input.LA(2);

                    if ( (synpred4_InternalSim()) ) {
                        alt145=1;
                    }


                    }
                    break;
                case 118:
                    {
                    int LA145_5 = input.LA(2);

                    if ( (synpred4_InternalSim()) ) {
                        alt145=1;
                    }


                    }
                    break;

                }

                switch (alt145) {
            	case 1 :
            	    // InternalSim.g:6837:4: ( ( ( () ( ( ruleDmxOpOr ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxAndExpression ) )
            	    {
            	    // InternalSim.g:6837:4: ( ( ( () ( ( ruleDmxOpOr ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpOr ) ) ) )
            	    // InternalSim.g:6838:5: ( ( () ( ( ruleDmxOpOr ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpOr ) ) )
            	    {
            	    // InternalSim.g:6848:5: ( () ( (lv_operator_2_0= ruleDmxOpOr ) ) )
            	    // InternalSim.g:6849:6: () ( (lv_operator_2_0= ruleDmxOpOr ) )
            	    {
            	    // InternalSim.g:6849:6: ()
            	    // InternalSim.g:6850:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getDmxOrExpressionAccess().getDmxBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalSim.g:6856:6: ( (lv_operator_2_0= ruleDmxOpOr ) )
            	    // InternalSim.g:6857:7: (lv_operator_2_0= ruleDmxOpOr )
            	    {
            	    // InternalSim.g:6857:7: (lv_operator_2_0= ruleDmxOpOr )
            	    // InternalSim.g:6858:8: lv_operator_2_0= ruleDmxOpOr
            	    {
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getDmxOrExpressionAccess().getOperatorDmxOpOrEnumRuleCall_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_91);
            	    lv_operator_2_0=ruleDmxOpOr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElementForParent(grammarAccess.getDmxOrExpressionRule());
            	      								}
            	      								set(
            	      									current,
            	      									"operator",
            	      									lv_operator_2_0,
            	      									"com.mimacom.ddd.dm.dmx.Dmx.DmxOpOr");
            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalSim.g:6877:4: ( (lv_rightOperand_3_0= ruleDmxAndExpression ) )
            	    // InternalSim.g:6878:5: (lv_rightOperand_3_0= ruleDmxAndExpression )
            	    {
            	    // InternalSim.g:6878:5: (lv_rightOperand_3_0= ruleDmxAndExpression )
            	    // InternalSim.g:6879:6: lv_rightOperand_3_0= ruleDmxAndExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getDmxOrExpressionAccess().getRightOperandDmxAndExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_96);
            	    lv_rightOperand_3_0=ruleDmxAndExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getDmxOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"com.mimacom.ddd.dm.dmx.Dmx.DmxAndExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop145;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxOrExpression"


    // $ANTLR start "entryRuleDmxAndExpression"
    // InternalSim.g:6901:1: entryRuleDmxAndExpression returns [EObject current=null] : iv_ruleDmxAndExpression= ruleDmxAndExpression EOF ;
    public final EObject entryRuleDmxAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxAndExpression = null;


        try {
            // InternalSim.g:6901:57: (iv_ruleDmxAndExpression= ruleDmxAndExpression EOF )
            // InternalSim.g:6902:2: iv_ruleDmxAndExpression= ruleDmxAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxAndExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxAndExpression=ruleDmxAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxAndExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxAndExpression"


    // $ANTLR start "ruleDmxAndExpression"
    // InternalSim.g:6908:1: ruleDmxAndExpression returns [EObject current=null] : (this_DmxEqualityExpression_0= ruleDmxEqualityExpression ( ( ( ( () ( ( ruleDmxOpAnd ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxEqualityExpression ) ) )* ) ;
    public final EObject ruleDmxAndExpression() throws RecognitionException {
        EObject current = null;

        EObject this_DmxEqualityExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalSim.g:6914:2: ( (this_DmxEqualityExpression_0= ruleDmxEqualityExpression ( ( ( ( () ( ( ruleDmxOpAnd ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxEqualityExpression ) ) )* ) )
            // InternalSim.g:6915:2: (this_DmxEqualityExpression_0= ruleDmxEqualityExpression ( ( ( ( () ( ( ruleDmxOpAnd ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxEqualityExpression ) ) )* )
            {
            // InternalSim.g:6915:2: (this_DmxEqualityExpression_0= ruleDmxEqualityExpression ( ( ( ( () ( ( ruleDmxOpAnd ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxEqualityExpression ) ) )* )
            // InternalSim.g:6916:3: this_DmxEqualityExpression_0= ruleDmxEqualityExpression ( ( ( ( () ( ( ruleDmxOpAnd ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxEqualityExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDmxAndExpressionAccess().getDmxEqualityExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_97);
            this_DmxEqualityExpression_0=ruleDmxEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_DmxEqualityExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSim.g:6924:3: ( ( ( ( () ( ( ruleDmxOpAnd ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxEqualityExpression ) ) )*
            loop146:
            do {
                int alt146=2;
                int LA146_0 = input.LA(1);

                if ( (LA146_0==119) ) {
                    int LA146_2 = input.LA(2);

                    if ( (synpred5_InternalSim()) ) {
                        alt146=1;
                    }


                }
                else if ( (LA146_0==25) ) {
                    int LA146_3 = input.LA(2);

                    if ( (synpred5_InternalSim()) ) {
                        alt146=1;
                    }


                }


                switch (alt146) {
            	case 1 :
            	    // InternalSim.g:6925:4: ( ( ( () ( ( ruleDmxOpAnd ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxEqualityExpression ) )
            	    {
            	    // InternalSim.g:6925:4: ( ( ( () ( ( ruleDmxOpAnd ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpAnd ) ) ) )
            	    // InternalSim.g:6926:5: ( ( () ( ( ruleDmxOpAnd ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpAnd ) ) )
            	    {
            	    // InternalSim.g:6936:5: ( () ( (lv_operator_2_0= ruleDmxOpAnd ) ) )
            	    // InternalSim.g:6937:6: () ( (lv_operator_2_0= ruleDmxOpAnd ) )
            	    {
            	    // InternalSim.g:6937:6: ()
            	    // InternalSim.g:6938:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getDmxAndExpressionAccess().getDmxBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalSim.g:6944:6: ( (lv_operator_2_0= ruleDmxOpAnd ) )
            	    // InternalSim.g:6945:7: (lv_operator_2_0= ruleDmxOpAnd )
            	    {
            	    // InternalSim.g:6945:7: (lv_operator_2_0= ruleDmxOpAnd )
            	    // InternalSim.g:6946:8: lv_operator_2_0= ruleDmxOpAnd
            	    {
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getDmxAndExpressionAccess().getOperatorDmxOpAndEnumRuleCall_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_91);
            	    lv_operator_2_0=ruleDmxOpAnd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElementForParent(grammarAccess.getDmxAndExpressionRule());
            	      								}
            	      								set(
            	      									current,
            	      									"operator",
            	      									lv_operator_2_0,
            	      									"com.mimacom.ddd.dm.dmx.Dmx.DmxOpAnd");
            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalSim.g:6965:4: ( (lv_rightOperand_3_0= ruleDmxEqualityExpression ) )
            	    // InternalSim.g:6966:5: (lv_rightOperand_3_0= ruleDmxEqualityExpression )
            	    {
            	    // InternalSim.g:6966:5: (lv_rightOperand_3_0= ruleDmxEqualityExpression )
            	    // InternalSim.g:6967:6: lv_rightOperand_3_0= ruleDmxEqualityExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getDmxAndExpressionAccess().getRightOperandDmxEqualityExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_97);
            	    lv_rightOperand_3_0=ruleDmxEqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getDmxAndExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"com.mimacom.ddd.dm.dmx.Dmx.DmxEqualityExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop146;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxAndExpression"


    // $ANTLR start "entryRuleDmxEqualityExpression"
    // InternalSim.g:6989:1: entryRuleDmxEqualityExpression returns [EObject current=null] : iv_ruleDmxEqualityExpression= ruleDmxEqualityExpression EOF ;
    public final EObject entryRuleDmxEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxEqualityExpression = null;


        try {
            // InternalSim.g:6989:62: (iv_ruleDmxEqualityExpression= ruleDmxEqualityExpression EOF )
            // InternalSim.g:6990:2: iv_ruleDmxEqualityExpression= ruleDmxEqualityExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxEqualityExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxEqualityExpression=ruleDmxEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxEqualityExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxEqualityExpression"


    // $ANTLR start "ruleDmxEqualityExpression"
    // InternalSim.g:6996:1: ruleDmxEqualityExpression returns [EObject current=null] : (this_DmxRelationalExpression_0= ruleDmxRelationalExpression ( ( ( ( () ( ( ruleDmxOpEquality ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxRelationalExpression ) ) )* ) ;
    public final EObject ruleDmxEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject this_DmxRelationalExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalSim.g:7002:2: ( (this_DmxRelationalExpression_0= ruleDmxRelationalExpression ( ( ( ( () ( ( ruleDmxOpEquality ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxRelationalExpression ) ) )* ) )
            // InternalSim.g:7003:2: (this_DmxRelationalExpression_0= ruleDmxRelationalExpression ( ( ( ( () ( ( ruleDmxOpEquality ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxRelationalExpression ) ) )* )
            {
            // InternalSim.g:7003:2: (this_DmxRelationalExpression_0= ruleDmxRelationalExpression ( ( ( ( () ( ( ruleDmxOpEquality ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxRelationalExpression ) ) )* )
            // InternalSim.g:7004:3: this_DmxRelationalExpression_0= ruleDmxRelationalExpression ( ( ( ( () ( ( ruleDmxOpEquality ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxRelationalExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDmxEqualityExpressionAccess().getDmxRelationalExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_98);
            this_DmxRelationalExpression_0=ruleDmxRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_DmxRelationalExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSim.g:7012:3: ( ( ( ( () ( ( ruleDmxOpEquality ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxRelationalExpression ) ) )*
            loop147:
            do {
                int alt147=2;
                switch ( input.LA(1) ) {
                case 74:
                    {
                    int LA147_2 = input.LA(2);

                    if ( (synpred6_InternalSim()) ) {
                        alt147=1;
                    }


                    }
                    break;
                case 120:
                    {
                    int LA147_3 = input.LA(2);

                    if ( (synpred6_InternalSim()) ) {
                        alt147=1;
                    }


                    }
                    break;
                case 121:
                    {
                    int LA147_4 = input.LA(2);

                    if ( (synpred6_InternalSim()) ) {
                        alt147=1;
                    }


                    }
                    break;

                }

                switch (alt147) {
            	case 1 :
            	    // InternalSim.g:7013:4: ( ( ( () ( ( ruleDmxOpEquality ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxRelationalExpression ) )
            	    {
            	    // InternalSim.g:7013:4: ( ( ( () ( ( ruleDmxOpEquality ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpEquality ) ) ) )
            	    // InternalSim.g:7014:5: ( ( () ( ( ruleDmxOpEquality ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpEquality ) ) )
            	    {
            	    // InternalSim.g:7024:5: ( () ( (lv_operator_2_0= ruleDmxOpEquality ) ) )
            	    // InternalSim.g:7025:6: () ( (lv_operator_2_0= ruleDmxOpEquality ) )
            	    {
            	    // InternalSim.g:7025:6: ()
            	    // InternalSim.g:7026:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getDmxEqualityExpressionAccess().getDmxBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalSim.g:7032:6: ( (lv_operator_2_0= ruleDmxOpEquality ) )
            	    // InternalSim.g:7033:7: (lv_operator_2_0= ruleDmxOpEquality )
            	    {
            	    // InternalSim.g:7033:7: (lv_operator_2_0= ruleDmxOpEquality )
            	    // InternalSim.g:7034:8: lv_operator_2_0= ruleDmxOpEquality
            	    {
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getDmxEqualityExpressionAccess().getOperatorDmxOpEqualityEnumRuleCall_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_91);
            	    lv_operator_2_0=ruleDmxOpEquality();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElementForParent(grammarAccess.getDmxEqualityExpressionRule());
            	      								}
            	      								set(
            	      									current,
            	      									"operator",
            	      									lv_operator_2_0,
            	      									"com.mimacom.ddd.dm.dmx.Dmx.DmxOpEquality");
            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalSim.g:7053:4: ( (lv_rightOperand_3_0= ruleDmxRelationalExpression ) )
            	    // InternalSim.g:7054:5: (lv_rightOperand_3_0= ruleDmxRelationalExpression )
            	    {
            	    // InternalSim.g:7054:5: (lv_rightOperand_3_0= ruleDmxRelationalExpression )
            	    // InternalSim.g:7055:6: lv_rightOperand_3_0= ruleDmxRelationalExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getDmxEqualityExpressionAccess().getRightOperandDmxRelationalExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_98);
            	    lv_rightOperand_3_0=ruleDmxRelationalExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getDmxEqualityExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"com.mimacom.ddd.dm.dmx.Dmx.DmxRelationalExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop147;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxEqualityExpression"


    // $ANTLR start "entryRuleDmxRelationalExpression"
    // InternalSim.g:7077:1: entryRuleDmxRelationalExpression returns [EObject current=null] : iv_ruleDmxRelationalExpression= ruleDmxRelationalExpression EOF ;
    public final EObject entryRuleDmxRelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxRelationalExpression = null;


        try {
            // InternalSim.g:7077:64: (iv_ruleDmxRelationalExpression= ruleDmxRelationalExpression EOF )
            // InternalSim.g:7078:2: iv_ruleDmxRelationalExpression= ruleDmxRelationalExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxRelationalExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxRelationalExpression=ruleDmxRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxRelationalExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxRelationalExpression"


    // $ANTLR start "ruleDmxRelationalExpression"
    // InternalSim.g:7084:1: ruleDmxRelationalExpression returns [EObject current=null] : (this_DmxOtherOperatorExpression_0= ruleDmxOtherOperatorExpression ( ( ( ( ( () ruleDmxOpInstanceOf ) )=> ( () ruleDmxOpInstanceOf ) ) ( (otherlv_3= RULE_ID ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( (lv_operator_5_0= ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleDmxOtherOperatorExpression ) ) ) )* ) ;
    public final EObject ruleDmxRelationalExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        EObject this_DmxOtherOperatorExpression_0 = null;

        Enumerator lv_operator_5_0 = null;

        EObject lv_rightOperand_6_0 = null;



        	enterRule();

        try {
            // InternalSim.g:7090:2: ( (this_DmxOtherOperatorExpression_0= ruleDmxOtherOperatorExpression ( ( ( ( ( () ruleDmxOpInstanceOf ) )=> ( () ruleDmxOpInstanceOf ) ) ( (otherlv_3= RULE_ID ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( (lv_operator_5_0= ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleDmxOtherOperatorExpression ) ) ) )* ) )
            // InternalSim.g:7091:2: (this_DmxOtherOperatorExpression_0= ruleDmxOtherOperatorExpression ( ( ( ( ( () ruleDmxOpInstanceOf ) )=> ( () ruleDmxOpInstanceOf ) ) ( (otherlv_3= RULE_ID ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( (lv_operator_5_0= ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleDmxOtherOperatorExpression ) ) ) )* )
            {
            // InternalSim.g:7091:2: (this_DmxOtherOperatorExpression_0= ruleDmxOtherOperatorExpression ( ( ( ( ( () ruleDmxOpInstanceOf ) )=> ( () ruleDmxOpInstanceOf ) ) ( (otherlv_3= RULE_ID ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( (lv_operator_5_0= ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleDmxOtherOperatorExpression ) ) ) )* )
            // InternalSim.g:7092:3: this_DmxOtherOperatorExpression_0= ruleDmxOtherOperatorExpression ( ( ( ( ( () ruleDmxOpInstanceOf ) )=> ( () ruleDmxOpInstanceOf ) ) ( (otherlv_3= RULE_ID ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( (lv_operator_5_0= ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleDmxOtherOperatorExpression ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDmxRelationalExpressionAccess().getDmxOtherOperatorExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_99);
            this_DmxOtherOperatorExpression_0=ruleDmxOtherOperatorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_DmxOtherOperatorExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSim.g:7100:3: ( ( ( ( ( () ruleDmxOpInstanceOf ) )=> ( () ruleDmxOpInstanceOf ) ) ( (otherlv_3= RULE_ID ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( (lv_operator_5_0= ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleDmxOtherOperatorExpression ) ) ) )*
            loop148:
            do {
                int alt148=3;
                alt148 = dfa148.predict(input);
                switch (alt148) {
            	case 1 :
            	    // InternalSim.g:7101:4: ( ( ( ( () ruleDmxOpInstanceOf ) )=> ( () ruleDmxOpInstanceOf ) ) ( (otherlv_3= RULE_ID ) ) )
            	    {
            	    // InternalSim.g:7101:4: ( ( ( ( () ruleDmxOpInstanceOf ) )=> ( () ruleDmxOpInstanceOf ) ) ( (otherlv_3= RULE_ID ) ) )
            	    // InternalSim.g:7102:5: ( ( ( () ruleDmxOpInstanceOf ) )=> ( () ruleDmxOpInstanceOf ) ) ( (otherlv_3= RULE_ID ) )
            	    {
            	    // InternalSim.g:7102:5: ( ( ( () ruleDmxOpInstanceOf ) )=> ( () ruleDmxOpInstanceOf ) )
            	    // InternalSim.g:7103:6: ( ( () ruleDmxOpInstanceOf ) )=> ( () ruleDmxOpInstanceOf )
            	    {
            	    // InternalSim.g:7109:6: ( () ruleDmxOpInstanceOf )
            	    // InternalSim.g:7110:7: () ruleDmxOpInstanceOf
            	    {
            	    // InternalSim.g:7110:7: ()
            	    // InternalSim.g:7111:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								current = forceCreateModelElementAndSet(
            	      									grammarAccess.getDmxRelationalExpressionAccess().getDmxInstanceOfExpressionExpressionAction_1_0_0_0_0(),
            	      									current);
            	      							
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getDmxRelationalExpressionAccess().getDmxOpInstanceOfParserRuleCall_1_0_0_0_1());
            	      						
            	    }
            	    pushFollow(FOLLOW_3);
            	    ruleDmxOpInstanceOf();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalSim.g:7126:5: ( (otherlv_3= RULE_ID ) )
            	    // InternalSim.g:7127:6: (otherlv_3= RULE_ID )
            	    {
            	    // InternalSim.g:7127:6: (otherlv_3= RULE_ID )
            	    // InternalSim.g:7128:7: otherlv_3= RULE_ID
            	    {
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElement(grammarAccess.getDmxRelationalExpressionRule());
            	      							}
            	      						
            	    }
            	    otherlv_3=(Token)match(input,RULE_ID,FOLLOW_99); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							newLeafNode(otherlv_3, grammarAccess.getDmxRelationalExpressionAccess().getTypeDTypeCrossReference_1_0_1_0());
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalSim.g:7141:4: ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( (lv_operator_5_0= ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleDmxOtherOperatorExpression ) ) )
            	    {
            	    // InternalSim.g:7141:4: ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( (lv_operator_5_0= ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleDmxOtherOperatorExpression ) ) )
            	    // InternalSim.g:7142:5: ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( (lv_operator_5_0= ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleDmxOtherOperatorExpression ) )
            	    {
            	    // InternalSim.g:7142:5: ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( (lv_operator_5_0= ruleOpCompare ) ) ) )
            	    // InternalSim.g:7143:6: ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( (lv_operator_5_0= ruleOpCompare ) ) )
            	    {
            	    // InternalSim.g:7153:6: ( () ( (lv_operator_5_0= ruleOpCompare ) ) )
            	    // InternalSim.g:7154:7: () ( (lv_operator_5_0= ruleOpCompare ) )
            	    {
            	    // InternalSim.g:7154:7: ()
            	    // InternalSim.g:7155:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								current = forceCreateModelElementAndSet(
            	      									grammarAccess.getDmxRelationalExpressionAccess().getDmxBinaryOperationLeftOperandAction_1_1_0_0_0(),
            	      									current);
            	      							
            	    }

            	    }

            	    // InternalSim.g:7161:7: ( (lv_operator_5_0= ruleOpCompare ) )
            	    // InternalSim.g:7162:8: (lv_operator_5_0= ruleOpCompare )
            	    {
            	    // InternalSim.g:7162:8: (lv_operator_5_0= ruleOpCompare )
            	    // InternalSim.g:7163:9: lv_operator_5_0= ruleOpCompare
            	    {
            	    if ( state.backtracking==0 ) {

            	      									newCompositeNode(grammarAccess.getDmxRelationalExpressionAccess().getOperatorOpCompareEnumRuleCall_1_1_0_0_1_0());
            	      								
            	    }
            	    pushFollow(FOLLOW_91);
            	    lv_operator_5_0=ruleOpCompare();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									if (current==null) {
            	      										current = createModelElementForParent(grammarAccess.getDmxRelationalExpressionRule());
            	      									}
            	      									set(
            	      										current,
            	      										"operator",
            	      										lv_operator_5_0,
            	      										"com.mimacom.ddd.dm.dmx.Dmx.OpCompare");
            	      									afterParserOrEnumRuleCall();
            	      								
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalSim.g:7182:5: ( (lv_rightOperand_6_0= ruleDmxOtherOperatorExpression ) )
            	    // InternalSim.g:7183:6: (lv_rightOperand_6_0= ruleDmxOtherOperatorExpression )
            	    {
            	    // InternalSim.g:7183:6: (lv_rightOperand_6_0= ruleDmxOtherOperatorExpression )
            	    // InternalSim.g:7184:7: lv_rightOperand_6_0= ruleDmxOtherOperatorExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getDmxRelationalExpressionAccess().getRightOperandDmxOtherOperatorExpressionParserRuleCall_1_1_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_99);
            	    lv_rightOperand_6_0=ruleDmxOtherOperatorExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getDmxRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"rightOperand",
            	      								lv_rightOperand_6_0,
            	      								"com.mimacom.ddd.dm.dmx.Dmx.DmxOtherOperatorExpression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop148;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxRelationalExpression"


    // $ANTLR start "entryRuleDmxOpInstanceOf"
    // InternalSim.g:7207:1: entryRuleDmxOpInstanceOf returns [String current=null] : iv_ruleDmxOpInstanceOf= ruleDmxOpInstanceOf EOF ;
    public final String entryRuleDmxOpInstanceOf() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleDmxOpInstanceOf = null;


        try {
            // InternalSim.g:7207:55: (iv_ruleDmxOpInstanceOf= ruleDmxOpInstanceOf EOF )
            // InternalSim.g:7208:2: iv_ruleDmxOpInstanceOf= ruleDmxOpInstanceOf EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxOpInstanceOfRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxOpInstanceOf=ruleDmxOpInstanceOf();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxOpInstanceOf.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxOpInstanceOf"


    // $ANTLR start "ruleDmxOpInstanceOf"
    // InternalSim.g:7214:1: ruleDmxOpInstanceOf returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'ISA' | kw= 'isa' ) ;
    public final AntlrDatatypeRuleToken ruleDmxOpInstanceOf() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalSim.g:7220:2: ( (kw= 'ISA' | kw= 'isa' ) )
            // InternalSim.g:7221:2: (kw= 'ISA' | kw= 'isa' )
            {
            // InternalSim.g:7221:2: (kw= 'ISA' | kw= 'isa' )
            int alt149=2;
            int LA149_0 = input.LA(1);

            if ( (LA149_0==71) ) {
                alt149=1;
            }
            else if ( (LA149_0==72) ) {
                alt149=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 149, 0, input);

                throw nvae;
            }
            switch (alt149) {
                case 1 :
                    // InternalSim.g:7222:3: kw= 'ISA'
                    {
                    kw=(Token)match(input,71,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDmxOpInstanceOfAccess().getISAKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSim.g:7228:3: kw= 'isa'
                    {
                    kw=(Token)match(input,72,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDmxOpInstanceOfAccess().getIsaKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxOpInstanceOf"


    // $ANTLR start "entryRuleDmxOtherOperatorExpression"
    // InternalSim.g:7237:1: entryRuleDmxOtherOperatorExpression returns [EObject current=null] : iv_ruleDmxOtherOperatorExpression= ruleDmxOtherOperatorExpression EOF ;
    public final EObject entryRuleDmxOtherOperatorExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxOtherOperatorExpression = null;


        try {
            // InternalSim.g:7237:67: (iv_ruleDmxOtherOperatorExpression= ruleDmxOtherOperatorExpression EOF )
            // InternalSim.g:7238:2: iv_ruleDmxOtherOperatorExpression= ruleDmxOtherOperatorExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxOtherOperatorExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxOtherOperatorExpression=ruleDmxOtherOperatorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxOtherOperatorExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxOtherOperatorExpression"


    // $ANTLR start "ruleDmxOtherOperatorExpression"
    // InternalSim.g:7244:1: ruleDmxOtherOperatorExpression returns [EObject current=null] : (this_DmxAdditiveExpression_0= ruleDmxAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxAdditiveExpression ) ) )* ) ;
    public final EObject ruleDmxOtherOperatorExpression() throws RecognitionException {
        EObject current = null;

        EObject this_DmxAdditiveExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalSim.g:7250:2: ( (this_DmxAdditiveExpression_0= ruleDmxAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxAdditiveExpression ) ) )* ) )
            // InternalSim.g:7251:2: (this_DmxAdditiveExpression_0= ruleDmxAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxAdditiveExpression ) ) )* )
            {
            // InternalSim.g:7251:2: (this_DmxAdditiveExpression_0= ruleDmxAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxAdditiveExpression ) ) )* )
            // InternalSim.g:7252:3: this_DmxAdditiveExpression_0= ruleDmxAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxAdditiveExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDmxOtherOperatorExpressionAccess().getDmxAdditiveExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_100);
            this_DmxAdditiveExpression_0=ruleDmxAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_DmxAdditiveExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSim.g:7260:3: ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxAdditiveExpression ) ) )*
            loop150:
            do {
                int alt150=2;
                switch ( input.LA(1) ) {
                case 128:
                    {
                    int LA150_2 = input.LA(2);

                    if ( (synpred9_InternalSim()) ) {
                        alt150=1;
                    }


                    }
                    break;
                case 63:
                    {
                    int LA150_3 = input.LA(2);

                    if ( (synpred9_InternalSim()) ) {
                        alt150=1;
                    }


                    }
                    break;
                case 83:
                    {
                    int LA150_4 = input.LA(2);

                    if ( (synpred9_InternalSim()) ) {
                        alt150=1;
                    }


                    }
                    break;
                case 129:
                    {
                    int LA150_5 = input.LA(2);

                    if ( (synpred9_InternalSim()) ) {
                        alt150=1;
                    }


                    }
                    break;
                case 130:
                    {
                    int LA150_6 = input.LA(2);

                    if ( (synpred9_InternalSim()) ) {
                        alt150=1;
                    }


                    }
                    break;

                }

                switch (alt150) {
            	case 1 :
            	    // InternalSim.g:7261:4: ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxAdditiveExpression ) )
            	    {
            	    // InternalSim.g:7261:4: ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpOther ) ) ) )
            	    // InternalSim.g:7262:5: ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpOther ) ) )
            	    {
            	    // InternalSim.g:7272:5: ( () ( (lv_operator_2_0= ruleOpOther ) ) )
            	    // InternalSim.g:7273:6: () ( (lv_operator_2_0= ruleOpOther ) )
            	    {
            	    // InternalSim.g:7273:6: ()
            	    // InternalSim.g:7274:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getDmxOtherOperatorExpressionAccess().getDmxBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalSim.g:7280:6: ( (lv_operator_2_0= ruleOpOther ) )
            	    // InternalSim.g:7281:7: (lv_operator_2_0= ruleOpOther )
            	    {
            	    // InternalSim.g:7281:7: (lv_operator_2_0= ruleOpOther )
            	    // InternalSim.g:7282:8: lv_operator_2_0= ruleOpOther
            	    {
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getDmxOtherOperatorExpressionAccess().getOperatorOpOtherEnumRuleCall_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_91);
            	    lv_operator_2_0=ruleOpOther();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElementForParent(grammarAccess.getDmxOtherOperatorExpressionRule());
            	      								}
            	      								set(
            	      									current,
            	      									"operator",
            	      									lv_operator_2_0,
            	      									"com.mimacom.ddd.dm.dmx.Dmx.OpOther");
            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalSim.g:7301:4: ( (lv_rightOperand_3_0= ruleDmxAdditiveExpression ) )
            	    // InternalSim.g:7302:5: (lv_rightOperand_3_0= ruleDmxAdditiveExpression )
            	    {
            	    // InternalSim.g:7302:5: (lv_rightOperand_3_0= ruleDmxAdditiveExpression )
            	    // InternalSim.g:7303:6: lv_rightOperand_3_0= ruleDmxAdditiveExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getDmxOtherOperatorExpressionAccess().getRightOperandDmxAdditiveExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_100);
            	    lv_rightOperand_3_0=ruleDmxAdditiveExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getDmxOtherOperatorExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"com.mimacom.ddd.dm.dmx.Dmx.DmxAdditiveExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop150;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxOtherOperatorExpression"


    // $ANTLR start "entryRuleDmxAdditiveExpression"
    // InternalSim.g:7325:1: entryRuleDmxAdditiveExpression returns [EObject current=null] : iv_ruleDmxAdditiveExpression= ruleDmxAdditiveExpression EOF ;
    public final EObject entryRuleDmxAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxAdditiveExpression = null;


        try {
            // InternalSim.g:7325:62: (iv_ruleDmxAdditiveExpression= ruleDmxAdditiveExpression EOF )
            // InternalSim.g:7326:2: iv_ruleDmxAdditiveExpression= ruleDmxAdditiveExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxAdditiveExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxAdditiveExpression=ruleDmxAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxAdditiveExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxAdditiveExpression"


    // $ANTLR start "ruleDmxAdditiveExpression"
    // InternalSim.g:7332:1: ruleDmxAdditiveExpression returns [EObject current=null] : (this_DmxMultiplicativeExpression_0= ruleDmxMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxMultiplicativeExpression ) ) )* ) ;
    public final EObject ruleDmxAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject this_DmxMultiplicativeExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalSim.g:7338:2: ( (this_DmxMultiplicativeExpression_0= ruleDmxMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxMultiplicativeExpression ) ) )* ) )
            // InternalSim.g:7339:2: (this_DmxMultiplicativeExpression_0= ruleDmxMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxMultiplicativeExpression ) ) )* )
            {
            // InternalSim.g:7339:2: (this_DmxMultiplicativeExpression_0= ruleDmxMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxMultiplicativeExpression ) ) )* )
            // InternalSim.g:7340:3: this_DmxMultiplicativeExpression_0= ruleDmxMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxMultiplicativeExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDmxAdditiveExpressionAccess().getDmxMultiplicativeExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_101);
            this_DmxMultiplicativeExpression_0=ruleDmxMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_DmxMultiplicativeExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSim.g:7348:3: ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxMultiplicativeExpression ) ) )*
            loop151:
            do {
                int alt151=2;
                int LA151_0 = input.LA(1);

                if ( (LA151_0==92) ) {
                    int LA151_2 = input.LA(2);

                    if ( (synpred10_InternalSim()) ) {
                        alt151=1;
                    }


                }
                else if ( (LA151_0==93) ) {
                    int LA151_3 = input.LA(2);

                    if ( (synpred10_InternalSim()) ) {
                        alt151=1;
                    }


                }


                switch (alt151) {
            	case 1 :
            	    // InternalSim.g:7349:4: ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxMultiplicativeExpression ) )
            	    {
            	    // InternalSim.g:7349:4: ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpAdd ) ) ) )
            	    // InternalSim.g:7350:5: ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpAdd ) ) )
            	    {
            	    // InternalSim.g:7360:5: ( () ( (lv_operator_2_0= ruleOpAdd ) ) )
            	    // InternalSim.g:7361:6: () ( (lv_operator_2_0= ruleOpAdd ) )
            	    {
            	    // InternalSim.g:7361:6: ()
            	    // InternalSim.g:7362:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getDmxAdditiveExpressionAccess().getDmxBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalSim.g:7368:6: ( (lv_operator_2_0= ruleOpAdd ) )
            	    // InternalSim.g:7369:7: (lv_operator_2_0= ruleOpAdd )
            	    {
            	    // InternalSim.g:7369:7: (lv_operator_2_0= ruleOpAdd )
            	    // InternalSim.g:7370:8: lv_operator_2_0= ruleOpAdd
            	    {
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getDmxAdditiveExpressionAccess().getOperatorOpAddEnumRuleCall_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_91);
            	    lv_operator_2_0=ruleOpAdd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElementForParent(grammarAccess.getDmxAdditiveExpressionRule());
            	      								}
            	      								set(
            	      									current,
            	      									"operator",
            	      									lv_operator_2_0,
            	      									"com.mimacom.ddd.dm.dmx.Dmx.OpAdd");
            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalSim.g:7389:4: ( (lv_rightOperand_3_0= ruleDmxMultiplicativeExpression ) )
            	    // InternalSim.g:7390:5: (lv_rightOperand_3_0= ruleDmxMultiplicativeExpression )
            	    {
            	    // InternalSim.g:7390:5: (lv_rightOperand_3_0= ruleDmxMultiplicativeExpression )
            	    // InternalSim.g:7391:6: lv_rightOperand_3_0= ruleDmxMultiplicativeExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getDmxAdditiveExpressionAccess().getRightOperandDmxMultiplicativeExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_101);
            	    lv_rightOperand_3_0=ruleDmxMultiplicativeExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getDmxAdditiveExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"com.mimacom.ddd.dm.dmx.Dmx.DmxMultiplicativeExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop151;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxAdditiveExpression"


    // $ANTLR start "entryRuleDmxMultiplicativeExpression"
    // InternalSim.g:7413:1: entryRuleDmxMultiplicativeExpression returns [EObject current=null] : iv_ruleDmxMultiplicativeExpression= ruleDmxMultiplicativeExpression EOF ;
    public final EObject entryRuleDmxMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxMultiplicativeExpression = null;


        try {
            // InternalSim.g:7413:68: (iv_ruleDmxMultiplicativeExpression= ruleDmxMultiplicativeExpression EOF )
            // InternalSim.g:7414:2: iv_ruleDmxMultiplicativeExpression= ruleDmxMultiplicativeExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxMultiplicativeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxMultiplicativeExpression=ruleDmxMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxMultiplicativeExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxMultiplicativeExpression"


    // $ANTLR start "ruleDmxMultiplicativeExpression"
    // InternalSim.g:7420:1: ruleDmxMultiplicativeExpression returns [EObject current=null] : (this_DmxUnaryOperation_0= ruleDmxUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxUnaryOperation ) ) )* ) ;
    public final EObject ruleDmxMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject this_DmxUnaryOperation_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalSim.g:7426:2: ( (this_DmxUnaryOperation_0= ruleDmxUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxUnaryOperation ) ) )* ) )
            // InternalSim.g:7427:2: (this_DmxUnaryOperation_0= ruleDmxUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxUnaryOperation ) ) )* )
            {
            // InternalSim.g:7427:2: (this_DmxUnaryOperation_0= ruleDmxUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxUnaryOperation ) ) )* )
            // InternalSim.g:7428:3: this_DmxUnaryOperation_0= ruleDmxUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxUnaryOperation ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDmxMultiplicativeExpressionAccess().getDmxUnaryOperationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_102);
            this_DmxUnaryOperation_0=ruleDmxUnaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_DmxUnaryOperation_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSim.g:7436:3: ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxUnaryOperation ) ) )*
            loop152:
            do {
                int alt152=2;
                switch ( input.LA(1) ) {
                case 46:
                    {
                    int LA152_2 = input.LA(2);

                    if ( (synpred11_InternalSim()) ) {
                        alt152=1;
                    }


                    }
                    break;
                case 131:
                    {
                    int LA152_3 = input.LA(2);

                    if ( (synpred11_InternalSim()) ) {
                        alt152=1;
                    }


                    }
                    break;
                case 132:
                    {
                    int LA152_4 = input.LA(2);

                    if ( (synpred11_InternalSim()) ) {
                        alt152=1;
                    }


                    }
                    break;
                case 133:
                    {
                    int LA152_5 = input.LA(2);

                    if ( (synpred11_InternalSim()) ) {
                        alt152=1;
                    }


                    }
                    break;

                }

                switch (alt152) {
            	case 1 :
            	    // InternalSim.g:7437:4: ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxUnaryOperation ) )
            	    {
            	    // InternalSim.g:7437:4: ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpMulti ) ) ) )
            	    // InternalSim.g:7438:5: ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpMulti ) ) )
            	    {
            	    // InternalSim.g:7448:5: ( () ( (lv_operator_2_0= ruleOpMulti ) ) )
            	    // InternalSim.g:7449:6: () ( (lv_operator_2_0= ruleOpMulti ) )
            	    {
            	    // InternalSim.g:7449:6: ()
            	    // InternalSim.g:7450:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getDmxMultiplicativeExpressionAccess().getDmxBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalSim.g:7456:6: ( (lv_operator_2_0= ruleOpMulti ) )
            	    // InternalSim.g:7457:7: (lv_operator_2_0= ruleOpMulti )
            	    {
            	    // InternalSim.g:7457:7: (lv_operator_2_0= ruleOpMulti )
            	    // InternalSim.g:7458:8: lv_operator_2_0= ruleOpMulti
            	    {
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getDmxMultiplicativeExpressionAccess().getOperatorOpMultiEnumRuleCall_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_91);
            	    lv_operator_2_0=ruleOpMulti();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElementForParent(grammarAccess.getDmxMultiplicativeExpressionRule());
            	      								}
            	      								set(
            	      									current,
            	      									"operator",
            	      									lv_operator_2_0,
            	      									"com.mimacom.ddd.dm.dmx.Dmx.OpMulti");
            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalSim.g:7477:4: ( (lv_rightOperand_3_0= ruleDmxUnaryOperation ) )
            	    // InternalSim.g:7478:5: (lv_rightOperand_3_0= ruleDmxUnaryOperation )
            	    {
            	    // InternalSim.g:7478:5: (lv_rightOperand_3_0= ruleDmxUnaryOperation )
            	    // InternalSim.g:7479:6: lv_rightOperand_3_0= ruleDmxUnaryOperation
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getDmxMultiplicativeExpressionAccess().getRightOperandDmxUnaryOperationParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_102);
            	    lv_rightOperand_3_0=ruleDmxUnaryOperation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getDmxMultiplicativeExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"com.mimacom.ddd.dm.dmx.Dmx.DmxUnaryOperation");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop152;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxMultiplicativeExpression"


    // $ANTLR start "entryRuleDmxUnaryOperation"
    // InternalSim.g:7501:1: entryRuleDmxUnaryOperation returns [EObject current=null] : iv_ruleDmxUnaryOperation= ruleDmxUnaryOperation EOF ;
    public final EObject entryRuleDmxUnaryOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxUnaryOperation = null;


        try {
            // InternalSim.g:7501:58: (iv_ruleDmxUnaryOperation= ruleDmxUnaryOperation EOF )
            // InternalSim.g:7502:2: iv_ruleDmxUnaryOperation= ruleDmxUnaryOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxUnaryOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxUnaryOperation=ruleDmxUnaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxUnaryOperation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxUnaryOperation"


    // $ANTLR start "ruleDmxUnaryOperation"
    // InternalSim.g:7508:1: ruleDmxUnaryOperation returns [EObject current=null] : ( ( () ( (lv_operator_1_0= ruleOpUnary ) ) ( (lv_operand_2_0= ruleDmxUnaryOperation ) ) ) | this_DmxCastExpression_3= ruleDmxCastExpression ) ;
    public final EObject ruleDmxUnaryOperation() throws RecognitionException {
        EObject current = null;

        Enumerator lv_operator_1_0 = null;

        EObject lv_operand_2_0 = null;

        EObject this_DmxCastExpression_3 = null;



        	enterRule();

        try {
            // InternalSim.g:7514:2: ( ( ( () ( (lv_operator_1_0= ruleOpUnary ) ) ( (lv_operand_2_0= ruleDmxUnaryOperation ) ) ) | this_DmxCastExpression_3= ruleDmxCastExpression ) )
            // InternalSim.g:7515:2: ( ( () ( (lv_operator_1_0= ruleOpUnary ) ) ( (lv_operand_2_0= ruleDmxUnaryOperation ) ) ) | this_DmxCastExpression_3= ruleDmxCastExpression )
            {
            // InternalSim.g:7515:2: ( ( () ( (lv_operator_1_0= ruleOpUnary ) ) ( (lv_operand_2_0= ruleDmxUnaryOperation ) ) ) | this_DmxCastExpression_3= ruleDmxCastExpression )
            int alt153=2;
            int LA153_0 = input.LA(1);

            if ( ((LA153_0>=92 && LA153_0<=93)||(LA153_0>=134 && LA153_0<=136)) ) {
                alt153=1;
            }
            else if ( (LA153_0==RULE_ID||(LA153_0>=RULE_NATURAL && LA153_0<=RULE_STRING)||LA153_0==22||LA153_0==38||LA153_0==41||LA153_0==45||LA153_0==75||LA153_0==79||(LA153_0>=84 && LA153_0<=89)) ) {
                alt153=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 153, 0, input);

                throw nvae;
            }
            switch (alt153) {
                case 1 :
                    // InternalSim.g:7516:3: ( () ( (lv_operator_1_0= ruleOpUnary ) ) ( (lv_operand_2_0= ruleDmxUnaryOperation ) ) )
                    {
                    // InternalSim.g:7516:3: ( () ( (lv_operator_1_0= ruleOpUnary ) ) ( (lv_operand_2_0= ruleDmxUnaryOperation ) ) )
                    // InternalSim.g:7517:4: () ( (lv_operator_1_0= ruleOpUnary ) ) ( (lv_operand_2_0= ruleDmxUnaryOperation ) )
                    {
                    // InternalSim.g:7517:4: ()
                    // InternalSim.g:7518:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getDmxUnaryOperationAccess().getDmxUnaryOperationAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSim.g:7524:4: ( (lv_operator_1_0= ruleOpUnary ) )
                    // InternalSim.g:7525:5: (lv_operator_1_0= ruleOpUnary )
                    {
                    // InternalSim.g:7525:5: (lv_operator_1_0= ruleOpUnary )
                    // InternalSim.g:7526:6: lv_operator_1_0= ruleOpUnary
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDmxUnaryOperationAccess().getOperatorOpUnaryEnumRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_91);
                    lv_operator_1_0=ruleOpUnary();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDmxUnaryOperationRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_1_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.OpUnary");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSim.g:7543:4: ( (lv_operand_2_0= ruleDmxUnaryOperation ) )
                    // InternalSim.g:7544:5: (lv_operand_2_0= ruleDmxUnaryOperation )
                    {
                    // InternalSim.g:7544:5: (lv_operand_2_0= ruleDmxUnaryOperation )
                    // InternalSim.g:7545:6: lv_operand_2_0= ruleDmxUnaryOperation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDmxUnaryOperationAccess().getOperandDmxUnaryOperationParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_operand_2_0=ruleDmxUnaryOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDmxUnaryOperationRule());
                      						}
                      						set(
                      							current,
                      							"operand",
                      							lv_operand_2_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.DmxUnaryOperation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:7564:3: this_DmxCastExpression_3= ruleDmxCastExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDmxUnaryOperationAccess().getDmxCastExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DmxCastExpression_3=ruleDmxCastExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DmxCastExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxUnaryOperation"


    // $ANTLR start "entryRuleDmxCastExpression"
    // InternalSim.g:7576:1: entryRuleDmxCastExpression returns [EObject current=null] : iv_ruleDmxCastExpression= ruleDmxCastExpression EOF ;
    public final EObject entryRuleDmxCastExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxCastExpression = null;


        try {
            // InternalSim.g:7576:58: (iv_ruleDmxCastExpression= ruleDmxCastExpression EOF )
            // InternalSim.g:7577:2: iv_ruleDmxCastExpression= ruleDmxCastExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxCastExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxCastExpression=ruleDmxCastExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxCastExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxCastExpression"


    // $ANTLR start "ruleDmxCastExpression"
    // InternalSim.g:7583:1: ruleDmxCastExpression returns [EObject current=null] : (this_DmxNavigableMemberReference_0= ruleDmxNavigableMemberReference ( ( ( ( () ruleDmxOpCast ) )=> ( () ruleDmxOpCast ) ) ( (otherlv_3= RULE_ID ) ) )? ) ;
    public final EObject ruleDmxCastExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        EObject this_DmxNavigableMemberReference_0 = null;



        	enterRule();

        try {
            // InternalSim.g:7589:2: ( (this_DmxNavigableMemberReference_0= ruleDmxNavigableMemberReference ( ( ( ( () ruleDmxOpCast ) )=> ( () ruleDmxOpCast ) ) ( (otherlv_3= RULE_ID ) ) )? ) )
            // InternalSim.g:7590:2: (this_DmxNavigableMemberReference_0= ruleDmxNavigableMemberReference ( ( ( ( () ruleDmxOpCast ) )=> ( () ruleDmxOpCast ) ) ( (otherlv_3= RULE_ID ) ) )? )
            {
            // InternalSim.g:7590:2: (this_DmxNavigableMemberReference_0= ruleDmxNavigableMemberReference ( ( ( ( () ruleDmxOpCast ) )=> ( () ruleDmxOpCast ) ) ( (otherlv_3= RULE_ID ) ) )? )
            // InternalSim.g:7591:3: this_DmxNavigableMemberReference_0= ruleDmxNavigableMemberReference ( ( ( ( () ruleDmxOpCast ) )=> ( () ruleDmxOpCast ) ) ( (otherlv_3= RULE_ID ) ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDmxCastExpressionAccess().getDmxNavigableMemberReferenceParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_103);
            this_DmxNavigableMemberReference_0=ruleDmxNavigableMemberReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_DmxNavigableMemberReference_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSim.g:7599:3: ( ( ( ( () ruleDmxOpCast ) )=> ( () ruleDmxOpCast ) ) ( (otherlv_3= RULE_ID ) ) )?
            int alt154=2;
            int LA154_0 = input.LA(1);

            if ( (LA154_0==73) ) {
                int LA154_1 = input.LA(2);

                if ( (synpred12_InternalSim()) ) {
                    alt154=1;
                }
            }
            else if ( (LA154_0==24) ) {
                int LA154_2 = input.LA(2);

                if ( (synpred12_InternalSim()) ) {
                    alt154=1;
                }
            }
            switch (alt154) {
                case 1 :
                    // InternalSim.g:7600:4: ( ( ( () ruleDmxOpCast ) )=> ( () ruleDmxOpCast ) ) ( (otherlv_3= RULE_ID ) )
                    {
                    // InternalSim.g:7600:4: ( ( ( () ruleDmxOpCast ) )=> ( () ruleDmxOpCast ) )
                    // InternalSim.g:7601:5: ( ( () ruleDmxOpCast ) )=> ( () ruleDmxOpCast )
                    {
                    // InternalSim.g:7607:5: ( () ruleDmxOpCast )
                    // InternalSim.g:7608:6: () ruleDmxOpCast
                    {
                    // InternalSim.g:7608:6: ()
                    // InternalSim.g:7609:7: 
                    {
                    if ( state.backtracking==0 ) {

                      							current = forceCreateModelElementAndSet(
                      								grammarAccess.getDmxCastExpressionAccess().getDmxCastExpressionTargetAction_1_0_0_0(),
                      								current);
                      						
                    }

                    }

                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDmxCastExpressionAccess().getDmxOpCastParserRuleCall_1_0_0_1());
                      					
                    }
                    pushFollow(FOLLOW_3);
                    ruleDmxOpCast();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSim.g:7624:4: ( (otherlv_3= RULE_ID ) )
                    // InternalSim.g:7625:5: (otherlv_3= RULE_ID )
                    {
                    // InternalSim.g:7625:5: (otherlv_3= RULE_ID )
                    // InternalSim.g:7626:6: otherlv_3= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDmxCastExpressionRule());
                      						}
                      					
                    }
                    otherlv_3=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_3, grammarAccess.getDmxCastExpressionAccess().getTypeDTypeCrossReference_1_1_0());
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxCastExpression"


    // $ANTLR start "entryRuleDmxOpCast"
    // InternalSim.g:7642:1: entryRuleDmxOpCast returns [String current=null] : iv_ruleDmxOpCast= ruleDmxOpCast EOF ;
    public final String entryRuleDmxOpCast() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleDmxOpCast = null;


        try {
            // InternalSim.g:7642:49: (iv_ruleDmxOpCast= ruleDmxOpCast EOF )
            // InternalSim.g:7643:2: iv_ruleDmxOpCast= ruleDmxOpCast EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxOpCastRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxOpCast=ruleDmxOpCast();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxOpCast.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxOpCast"


    // $ANTLR start "ruleDmxOpCast"
    // InternalSim.g:7649:1: ruleDmxOpCast returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'AS' | kw= 'as' ) ;
    public final AntlrDatatypeRuleToken ruleDmxOpCast() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalSim.g:7655:2: ( (kw= 'AS' | kw= 'as' ) )
            // InternalSim.g:7656:2: (kw= 'AS' | kw= 'as' )
            {
            // InternalSim.g:7656:2: (kw= 'AS' | kw= 'as' )
            int alt155=2;
            int LA155_0 = input.LA(1);

            if ( (LA155_0==73) ) {
                alt155=1;
            }
            else if ( (LA155_0==24) ) {
                alt155=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 155, 0, input);

                throw nvae;
            }
            switch (alt155) {
                case 1 :
                    // InternalSim.g:7657:3: kw= 'AS'
                    {
                    kw=(Token)match(input,73,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDmxOpCastAccess().getASKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSim.g:7663:3: kw= 'as'
                    {
                    kw=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDmxOpCastAccess().getAsKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxOpCast"


    // $ANTLR start "entryRuleDmxPrimaryExpression"
    // InternalSim.g:7672:1: entryRuleDmxPrimaryExpression returns [EObject current=null] : iv_ruleDmxPrimaryExpression= ruleDmxPrimaryExpression EOF ;
    public final EObject entryRuleDmxPrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxPrimaryExpression = null;


        try {
            // InternalSim.g:7672:61: (iv_ruleDmxPrimaryExpression= ruleDmxPrimaryExpression EOF )
            // InternalSim.g:7673:2: iv_ruleDmxPrimaryExpression= ruleDmxPrimaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxPrimaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxPrimaryExpression=ruleDmxPrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxPrimaryExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxPrimaryExpression"


    // $ANTLR start "ruleDmxPrimaryExpression"
    // InternalSim.g:7679:1: ruleDmxPrimaryExpression returns [EObject current=null] : (this_DmxLiteralExpression_0= ruleDmxLiteralExpression | this_DmxParenthesizedExpression_1= ruleDmxParenthesizedExpression | this_DmxListExpression_2= ruleDmxListExpression | this_DmxFunctionCall_3= ruleDmxFunctionCall | this_DmxStaticReference_4= ruleDmxStaticReference | this_DmxContextReference_5= ruleDmxContextReference | this_DmxIfExpression_6= ruleDmxIfExpression ) ;
    public final EObject ruleDmxPrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject this_DmxLiteralExpression_0 = null;

        EObject this_DmxParenthesizedExpression_1 = null;

        EObject this_DmxListExpression_2 = null;

        EObject this_DmxFunctionCall_3 = null;

        EObject this_DmxStaticReference_4 = null;

        EObject this_DmxContextReference_5 = null;

        EObject this_DmxIfExpression_6 = null;



        	enterRule();

        try {
            // InternalSim.g:7685:2: ( (this_DmxLiteralExpression_0= ruleDmxLiteralExpression | this_DmxParenthesizedExpression_1= ruleDmxParenthesizedExpression | this_DmxListExpression_2= ruleDmxListExpression | this_DmxFunctionCall_3= ruleDmxFunctionCall | this_DmxStaticReference_4= ruleDmxStaticReference | this_DmxContextReference_5= ruleDmxContextReference | this_DmxIfExpression_6= ruleDmxIfExpression ) )
            // InternalSim.g:7686:2: (this_DmxLiteralExpression_0= ruleDmxLiteralExpression | this_DmxParenthesizedExpression_1= ruleDmxParenthesizedExpression | this_DmxListExpression_2= ruleDmxListExpression | this_DmxFunctionCall_3= ruleDmxFunctionCall | this_DmxStaticReference_4= ruleDmxStaticReference | this_DmxContextReference_5= ruleDmxContextReference | this_DmxIfExpression_6= ruleDmxIfExpression )
            {
            // InternalSim.g:7686:2: (this_DmxLiteralExpression_0= ruleDmxLiteralExpression | this_DmxParenthesizedExpression_1= ruleDmxParenthesizedExpression | this_DmxListExpression_2= ruleDmxListExpression | this_DmxFunctionCall_3= ruleDmxFunctionCall | this_DmxStaticReference_4= ruleDmxStaticReference | this_DmxContextReference_5= ruleDmxContextReference | this_DmxIfExpression_6= ruleDmxIfExpression )
            int alt156=7;
            switch ( input.LA(1) ) {
            case RULE_NATURAL:
            case RULE_STRING:
            case 38:
            case 41:
            case 84:
            case 85:
            case 86:
            case 87:
            case 88:
            case 89:
                {
                alt156=1;
                }
                break;
            case 45:
                {
                alt156=2;
                }
                break;
            case 22:
                {
                alt156=3;
                }
                break;
            case RULE_ID:
                {
                int LA156_4 = input.LA(2);

                if ( (LA156_4==45) ) {
                    alt156=4;
                }
                else if ( (LA156_4==EOF||(LA156_4>=RULE_ID && LA156_4<=RULE_RICH_TEXT_END)||(LA156_4>=23 && LA156_4<=25)||LA156_4==29||(LA156_4>=31 && LA156_4<=36)||(LA156_4>=38 && LA156_4<=41)||(LA156_4>=46 && LA156_4<=48)||(LA156_4>=51 && LA156_4<=52)||LA156_4==55||LA156_4==63||(LA156_4>=68 && LA156_4<=69)||(LA156_4>=71 && LA156_4<=74)||(LA156_4>=80 && LA156_4<=83)||(LA156_4>=92 && LA156_4<=93)||(LA156_4>=100 && LA156_4<=101)||(LA156_4>=115 && LA156_4<=133)) ) {
                    alt156=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 156, 4, input);

                    throw nvae;
                }
                }
                break;
            case 75:
                {
                alt156=5;
                }
                break;
            case 79:
                {
                alt156=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 156, 0, input);

                throw nvae;
            }

            switch (alt156) {
                case 1 :
                    // InternalSim.g:7687:3: this_DmxLiteralExpression_0= ruleDmxLiteralExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDmxPrimaryExpressionAccess().getDmxLiteralExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DmxLiteralExpression_0=ruleDmxLiteralExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DmxLiteralExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSim.g:7696:3: this_DmxParenthesizedExpression_1= ruleDmxParenthesizedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDmxPrimaryExpressionAccess().getDmxParenthesizedExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DmxParenthesizedExpression_1=ruleDmxParenthesizedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DmxParenthesizedExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSim.g:7705:3: this_DmxListExpression_2= ruleDmxListExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDmxPrimaryExpressionAccess().getDmxListExpressionParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DmxListExpression_2=ruleDmxListExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DmxListExpression_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSim.g:7714:3: this_DmxFunctionCall_3= ruleDmxFunctionCall
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDmxPrimaryExpressionAccess().getDmxFunctionCallParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DmxFunctionCall_3=ruleDmxFunctionCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DmxFunctionCall_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalSim.g:7723:3: this_DmxStaticReference_4= ruleDmxStaticReference
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDmxPrimaryExpressionAccess().getDmxStaticReferenceParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DmxStaticReference_4=ruleDmxStaticReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DmxStaticReference_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalSim.g:7732:3: this_DmxContextReference_5= ruleDmxContextReference
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDmxPrimaryExpressionAccess().getDmxContextReferenceParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DmxContextReference_5=ruleDmxContextReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DmxContextReference_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalSim.g:7741:3: this_DmxIfExpression_6= ruleDmxIfExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDmxPrimaryExpressionAccess().getDmxIfExpressionParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DmxIfExpression_6=ruleDmxIfExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DmxIfExpression_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxPrimaryExpression"


    // $ANTLR start "entryRuleDmxLiteralExpression"
    // InternalSim.g:7753:1: entryRuleDmxLiteralExpression returns [EObject current=null] : iv_ruleDmxLiteralExpression= ruleDmxLiteralExpression EOF ;
    public final EObject entryRuleDmxLiteralExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxLiteralExpression = null;


        try {
            // InternalSim.g:7753:61: (iv_ruleDmxLiteralExpression= ruleDmxLiteralExpression EOF )
            // InternalSim.g:7754:2: iv_ruleDmxLiteralExpression= ruleDmxLiteralExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxLiteralExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxLiteralExpression=ruleDmxLiteralExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxLiteralExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxLiteralExpression"


    // $ANTLR start "ruleDmxLiteralExpression"
    // InternalSim.g:7760:1: ruleDmxLiteralExpression returns [EObject current=null] : (this_DmxBooleanLiteral_0= ruleDmxBooleanLiteral | this_DmxStringLiteral_1= ruleDmxStringLiteral | this_DmxNaturalLiteral_2= ruleDmxNaturalLiteral | this_DmxDecimalLiteral_3= ruleDmxDecimalLiteral | this_DmxUndefinedLiteral_4= ruleDmxUndefinedLiteral | this_DmxEntity_5= ruleDmxEntity | this_DmxDetail_6= ruleDmxDetail ) ;
    public final EObject ruleDmxLiteralExpression() throws RecognitionException {
        EObject current = null;

        EObject this_DmxBooleanLiteral_0 = null;

        EObject this_DmxStringLiteral_1 = null;

        EObject this_DmxNaturalLiteral_2 = null;

        EObject this_DmxDecimalLiteral_3 = null;

        EObject this_DmxUndefinedLiteral_4 = null;

        EObject this_DmxEntity_5 = null;

        EObject this_DmxDetail_6 = null;



        	enterRule();

        try {
            // InternalSim.g:7766:2: ( (this_DmxBooleanLiteral_0= ruleDmxBooleanLiteral | this_DmxStringLiteral_1= ruleDmxStringLiteral | this_DmxNaturalLiteral_2= ruleDmxNaturalLiteral | this_DmxDecimalLiteral_3= ruleDmxDecimalLiteral | this_DmxUndefinedLiteral_4= ruleDmxUndefinedLiteral | this_DmxEntity_5= ruleDmxEntity | this_DmxDetail_6= ruleDmxDetail ) )
            // InternalSim.g:7767:2: (this_DmxBooleanLiteral_0= ruleDmxBooleanLiteral | this_DmxStringLiteral_1= ruleDmxStringLiteral | this_DmxNaturalLiteral_2= ruleDmxNaturalLiteral | this_DmxDecimalLiteral_3= ruleDmxDecimalLiteral | this_DmxUndefinedLiteral_4= ruleDmxUndefinedLiteral | this_DmxEntity_5= ruleDmxEntity | this_DmxDetail_6= ruleDmxDetail )
            {
            // InternalSim.g:7767:2: (this_DmxBooleanLiteral_0= ruleDmxBooleanLiteral | this_DmxStringLiteral_1= ruleDmxStringLiteral | this_DmxNaturalLiteral_2= ruleDmxNaturalLiteral | this_DmxDecimalLiteral_3= ruleDmxDecimalLiteral | this_DmxUndefinedLiteral_4= ruleDmxUndefinedLiteral | this_DmxEntity_5= ruleDmxEntity | this_DmxDetail_6= ruleDmxDetail )
            int alt157=7;
            alt157 = dfa157.predict(input);
            switch (alt157) {
                case 1 :
                    // InternalSim.g:7768:3: this_DmxBooleanLiteral_0= ruleDmxBooleanLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDmxLiteralExpressionAccess().getDmxBooleanLiteralParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DmxBooleanLiteral_0=ruleDmxBooleanLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DmxBooleanLiteral_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSim.g:7777:3: this_DmxStringLiteral_1= ruleDmxStringLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDmxLiteralExpressionAccess().getDmxStringLiteralParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DmxStringLiteral_1=ruleDmxStringLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DmxStringLiteral_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSim.g:7786:3: this_DmxNaturalLiteral_2= ruleDmxNaturalLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDmxLiteralExpressionAccess().getDmxNaturalLiteralParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DmxNaturalLiteral_2=ruleDmxNaturalLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DmxNaturalLiteral_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSim.g:7795:3: this_DmxDecimalLiteral_3= ruleDmxDecimalLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDmxLiteralExpressionAccess().getDmxDecimalLiteralParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DmxDecimalLiteral_3=ruleDmxDecimalLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DmxDecimalLiteral_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalSim.g:7804:3: this_DmxUndefinedLiteral_4= ruleDmxUndefinedLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDmxLiteralExpressionAccess().getDmxUndefinedLiteralParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DmxUndefinedLiteral_4=ruleDmxUndefinedLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DmxUndefinedLiteral_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalSim.g:7813:3: this_DmxEntity_5= ruleDmxEntity
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDmxLiteralExpressionAccess().getDmxEntityParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DmxEntity_5=ruleDmxEntity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DmxEntity_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalSim.g:7822:3: this_DmxDetail_6= ruleDmxDetail
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDmxLiteralExpressionAccess().getDmxDetailParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DmxDetail_6=ruleDmxDetail();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DmxDetail_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxLiteralExpression"


    // $ANTLR start "entryRuleDmxParenthesizedExpression"
    // InternalSim.g:7834:1: entryRuleDmxParenthesizedExpression returns [EObject current=null] : iv_ruleDmxParenthesizedExpression= ruleDmxParenthesizedExpression EOF ;
    public final EObject entryRuleDmxParenthesizedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxParenthesizedExpression = null;


        try {
            // InternalSim.g:7834:67: (iv_ruleDmxParenthesizedExpression= ruleDmxParenthesizedExpression EOF )
            // InternalSim.g:7835:2: iv_ruleDmxParenthesizedExpression= ruleDmxParenthesizedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxParenthesizedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxParenthesizedExpression=ruleDmxParenthesizedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxParenthesizedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxParenthesizedExpression"


    // $ANTLR start "ruleDmxParenthesizedExpression"
    // InternalSim.g:7841:1: ruleDmxParenthesizedExpression returns [EObject current=null] : (otherlv_0= '(' this_DExpression_1= ruleDExpression otherlv_2= ')' ) ;
    public final EObject ruleDmxParenthesizedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject this_DExpression_1 = null;



        	enterRule();

        try {
            // InternalSim.g:7847:2: ( (otherlv_0= '(' this_DExpression_1= ruleDExpression otherlv_2= ')' ) )
            // InternalSim.g:7848:2: (otherlv_0= '(' this_DExpression_1= ruleDExpression otherlv_2= ')' )
            {
            // InternalSim.g:7848:2: (otherlv_0= '(' this_DExpression_1= ruleDExpression otherlv_2= ')' )
            // InternalSim.g:7849:3: otherlv_0= '(' this_DExpression_1= ruleDExpression otherlv_2= ')'
            {
            otherlv_0=(Token)match(input,45,FOLLOW_51); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDmxParenthesizedExpressionAccess().getLeftParenthesisKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDmxParenthesizedExpressionAccess().getDExpressionParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_46);
            this_DExpression_1=ruleDExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_DExpression_1;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_2=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getDmxParenthesizedExpressionAccess().getRightParenthesisKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxParenthesizedExpression"


    // $ANTLR start "entryRuleDmxListExpression"
    // InternalSim.g:7869:1: entryRuleDmxListExpression returns [EObject current=null] : iv_ruleDmxListExpression= ruleDmxListExpression EOF ;
    public final EObject entryRuleDmxListExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxListExpression = null;


        try {
            // InternalSim.g:7869:58: (iv_ruleDmxListExpression= ruleDmxListExpression EOF )
            // InternalSim.g:7870:2: iv_ruleDmxListExpression= ruleDmxListExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxListExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxListExpression=ruleDmxListExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxListExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxListExpression"


    // $ANTLR start "ruleDmxListExpression"
    // InternalSim.g:7876:1: ruleDmxListExpression returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_elements_2_0= ruleDExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleDExpression ) ) )* )? otherlv_5= '}' ) ;
    public final EObject ruleDmxListExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_elements_2_0 = null;

        EObject lv_elements_4_0 = null;



        	enterRule();

        try {
            // InternalSim.g:7882:2: ( ( () otherlv_1= '{' ( ( (lv_elements_2_0= ruleDExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleDExpression ) ) )* )? otherlv_5= '}' ) )
            // InternalSim.g:7883:2: ( () otherlv_1= '{' ( ( (lv_elements_2_0= ruleDExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleDExpression ) ) )* )? otherlv_5= '}' )
            {
            // InternalSim.g:7883:2: ( () otherlv_1= '{' ( ( (lv_elements_2_0= ruleDExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleDExpression ) ) )* )? otherlv_5= '}' )
            // InternalSim.g:7884:3: () otherlv_1= '{' ( ( (lv_elements_2_0= ruleDExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleDExpression ) ) )* )? otherlv_5= '}'
            {
            // InternalSim.g:7884:3: ()
            // InternalSim.g:7885:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDmxListExpressionAccess().getDmxListExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,22,FOLLOW_104); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getDmxListExpressionAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalSim.g:7895:3: ( ( (lv_elements_2_0= ruleDExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleDExpression ) ) )* )?
            int alt159=2;
            int LA159_0 = input.LA(1);

            if ( ((LA159_0>=RULE_ID && LA159_0<=RULE_RICH_TEXT_START)||(LA159_0>=RULE_NATURAL && LA159_0<=RULE_STRING)||LA159_0==22||LA159_0==38||LA159_0==41||LA159_0==45||LA159_0==75||LA159_0==79||(LA159_0>=84 && LA159_0<=89)||(LA159_0>=92 && LA159_0<=93)||(LA159_0>=134 && LA159_0<=136)) ) {
                alt159=1;
            }
            switch (alt159) {
                case 1 :
                    // InternalSim.g:7896:4: ( (lv_elements_2_0= ruleDExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleDExpression ) ) )*
                    {
                    // InternalSim.g:7896:4: ( (lv_elements_2_0= ruleDExpression ) )
                    // InternalSim.g:7897:5: (lv_elements_2_0= ruleDExpression )
                    {
                    // InternalSim.g:7897:5: (lv_elements_2_0= ruleDExpression )
                    // InternalSim.g:7898:6: lv_elements_2_0= ruleDExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDmxListExpressionAccess().getElementsDExpressionParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_59);
                    lv_elements_2_0=ruleDExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDmxListExpressionRule());
                      						}
                      						add(
                      							current,
                      							"elements",
                      							lv_elements_2_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.DExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSim.g:7915:4: (otherlv_3= ',' ( (lv_elements_4_0= ruleDExpression ) ) )*
                    loop158:
                    do {
                        int alt158=2;
                        int LA158_0 = input.LA(1);

                        if ( (LA158_0==36) ) {
                            alt158=1;
                        }


                        switch (alt158) {
                    	case 1 :
                    	    // InternalSim.g:7916:5: otherlv_3= ',' ( (lv_elements_4_0= ruleDExpression ) )
                    	    {
                    	    otherlv_3=(Token)match(input,36,FOLLOW_51); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getDmxListExpressionAccess().getCommaKeyword_2_1_0());
                    	      				
                    	    }
                    	    // InternalSim.g:7920:5: ( (lv_elements_4_0= ruleDExpression ) )
                    	    // InternalSim.g:7921:6: (lv_elements_4_0= ruleDExpression )
                    	    {
                    	    // InternalSim.g:7921:6: (lv_elements_4_0= ruleDExpression )
                    	    // InternalSim.g:7922:7: lv_elements_4_0= ruleDExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getDmxListExpressionAccess().getElementsDExpressionParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_59);
                    	    lv_elements_4_0=ruleDExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getDmxListExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"elements",
                    	      								lv_elements_4_0,
                    	      								"com.mimacom.ddd.dm.dmx.Dmx.DExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop158;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,23,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getDmxListExpressionAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxListExpression"


    // $ANTLR start "entryRuleDmxLiteralListExpression"
    // InternalSim.g:7949:1: entryRuleDmxLiteralListExpression returns [EObject current=null] : iv_ruleDmxLiteralListExpression= ruleDmxLiteralListExpression EOF ;
    public final EObject entryRuleDmxLiteralListExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxLiteralListExpression = null;


        try {
            // InternalSim.g:7949:65: (iv_ruleDmxLiteralListExpression= ruleDmxLiteralListExpression EOF )
            // InternalSim.g:7950:2: iv_ruleDmxLiteralListExpression= ruleDmxLiteralListExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxLiteralListExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxLiteralListExpression=ruleDmxLiteralListExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxLiteralListExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxLiteralListExpression"


    // $ANTLR start "ruleDmxLiteralListExpression"
    // InternalSim.g:7956:1: ruleDmxLiteralListExpression returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_elements_2_0= ruleDmxLiteralExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleDmxLiteralExpression ) ) )* )? otherlv_5= '}' ) ;
    public final EObject ruleDmxLiteralListExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_elements_2_0 = null;

        EObject lv_elements_4_0 = null;



        	enterRule();

        try {
            // InternalSim.g:7962:2: ( ( () otherlv_1= '{' ( ( (lv_elements_2_0= ruleDmxLiteralExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleDmxLiteralExpression ) ) )* )? otherlv_5= '}' ) )
            // InternalSim.g:7963:2: ( () otherlv_1= '{' ( ( (lv_elements_2_0= ruleDmxLiteralExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleDmxLiteralExpression ) ) )* )? otherlv_5= '}' )
            {
            // InternalSim.g:7963:2: ( () otherlv_1= '{' ( ( (lv_elements_2_0= ruleDmxLiteralExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleDmxLiteralExpression ) ) )* )? otherlv_5= '}' )
            // InternalSim.g:7964:3: () otherlv_1= '{' ( ( (lv_elements_2_0= ruleDmxLiteralExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleDmxLiteralExpression ) ) )* )? otherlv_5= '}'
            {
            // InternalSim.g:7964:3: ()
            // InternalSim.g:7965:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDmxLiteralListExpressionAccess().getDmxListExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,22,FOLLOW_105); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getDmxLiteralListExpressionAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalSim.g:7975:3: ( ( (lv_elements_2_0= ruleDmxLiteralExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleDmxLiteralExpression ) ) )* )?
            int alt161=2;
            int LA161_0 = input.LA(1);

            if ( ((LA161_0>=RULE_NATURAL && LA161_0<=RULE_STRING)||LA161_0==38||LA161_0==41||(LA161_0>=84 && LA161_0<=89)) ) {
                alt161=1;
            }
            switch (alt161) {
                case 1 :
                    // InternalSim.g:7976:4: ( (lv_elements_2_0= ruleDmxLiteralExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleDmxLiteralExpression ) ) )*
                    {
                    // InternalSim.g:7976:4: ( (lv_elements_2_0= ruleDmxLiteralExpression ) )
                    // InternalSim.g:7977:5: (lv_elements_2_0= ruleDmxLiteralExpression )
                    {
                    // InternalSim.g:7977:5: (lv_elements_2_0= ruleDmxLiteralExpression )
                    // InternalSim.g:7978:6: lv_elements_2_0= ruleDmxLiteralExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDmxLiteralListExpressionAccess().getElementsDmxLiteralExpressionParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_59);
                    lv_elements_2_0=ruleDmxLiteralExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDmxLiteralListExpressionRule());
                      						}
                      						add(
                      							current,
                      							"elements",
                      							lv_elements_2_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.DmxLiteralExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSim.g:7995:4: (otherlv_3= ',' ( (lv_elements_4_0= ruleDmxLiteralExpression ) ) )*
                    loop160:
                    do {
                        int alt160=2;
                        int LA160_0 = input.LA(1);

                        if ( (LA160_0==36) ) {
                            alt160=1;
                        }


                        switch (alt160) {
                    	case 1 :
                    	    // InternalSim.g:7996:5: otherlv_3= ',' ( (lv_elements_4_0= ruleDmxLiteralExpression ) )
                    	    {
                    	    otherlv_3=(Token)match(input,36,FOLLOW_106); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getDmxLiteralListExpressionAccess().getCommaKeyword_2_1_0());
                    	      				
                    	    }
                    	    // InternalSim.g:8000:5: ( (lv_elements_4_0= ruleDmxLiteralExpression ) )
                    	    // InternalSim.g:8001:6: (lv_elements_4_0= ruleDmxLiteralExpression )
                    	    {
                    	    // InternalSim.g:8001:6: (lv_elements_4_0= ruleDmxLiteralExpression )
                    	    // InternalSim.g:8002:7: lv_elements_4_0= ruleDmxLiteralExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getDmxLiteralListExpressionAccess().getElementsDmxLiteralExpressionParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_59);
                    	    lv_elements_4_0=ruleDmxLiteralExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getDmxLiteralListExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"elements",
                    	      								lv_elements_4_0,
                    	      								"com.mimacom.ddd.dm.dmx.Dmx.DmxLiteralExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop160;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,23,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getDmxLiteralListExpressionAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxLiteralListExpression"


    // $ANTLR start "entryRuleDmxFunctionCall"
    // InternalSim.g:8029:1: entryRuleDmxFunctionCall returns [EObject current=null] : iv_ruleDmxFunctionCall= ruleDmxFunctionCall EOF ;
    public final EObject entryRuleDmxFunctionCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxFunctionCall = null;


        try {
            // InternalSim.g:8029:56: (iv_ruleDmxFunctionCall= ruleDmxFunctionCall EOF )
            // InternalSim.g:8030:2: iv_ruleDmxFunctionCall= ruleDmxFunctionCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxFunctionCallRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxFunctionCall=ruleDmxFunctionCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxFunctionCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxFunctionCall"


    // $ANTLR start "ruleDmxFunctionCall"
    // InternalSim.g:8036:1: ruleDmxFunctionCall returns [EObject current=null] : ( () ( (otherlv_1= RULE_ID ) ) otherlv_2= '(' ( (lv_callArguments_3_0= ruleDmxFunctionCallArguments ) ) otherlv_4= ')' ) ;
    public final EObject ruleDmxFunctionCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_callArguments_3_0 = null;



        	enterRule();

        try {
            // InternalSim.g:8042:2: ( ( () ( (otherlv_1= RULE_ID ) ) otherlv_2= '(' ( (lv_callArguments_3_0= ruleDmxFunctionCallArguments ) ) otherlv_4= ')' ) )
            // InternalSim.g:8043:2: ( () ( (otherlv_1= RULE_ID ) ) otherlv_2= '(' ( (lv_callArguments_3_0= ruleDmxFunctionCallArguments ) ) otherlv_4= ')' )
            {
            // InternalSim.g:8043:2: ( () ( (otherlv_1= RULE_ID ) ) otherlv_2= '(' ( (lv_callArguments_3_0= ruleDmxFunctionCallArguments ) ) otherlv_4= ')' )
            // InternalSim.g:8044:3: () ( (otherlv_1= RULE_ID ) ) otherlv_2= '(' ( (lv_callArguments_3_0= ruleDmxFunctionCallArguments ) ) otherlv_4= ')'
            {
            // InternalSim.g:8044:3: ()
            // InternalSim.g:8045:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDmxFunctionCallAccess().getDmxFunctionCallAction_0(),
              					current);
              			
            }

            }

            // InternalSim.g:8051:3: ( (otherlv_1= RULE_ID ) )
            // InternalSim.g:8052:4: (otherlv_1= RULE_ID )
            {
            // InternalSim.g:8052:4: (otherlv_1= RULE_ID )
            // InternalSim.g:8053:5: otherlv_1= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDmxFunctionCallRule());
              					}
              				
            }
            otherlv_1=(Token)match(input,RULE_ID,FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getDmxFunctionCallAccess().getFunctionDmxFilterCrossReference_1_0());
              				
            }

            }


            }

            otherlv_2=(Token)match(input,45,FOLLOW_107); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getDmxFunctionCallAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalSim.g:8068:3: ( (lv_callArguments_3_0= ruleDmxFunctionCallArguments ) )
            // InternalSim.g:8069:4: (lv_callArguments_3_0= ruleDmxFunctionCallArguments )
            {
            // InternalSim.g:8069:4: (lv_callArguments_3_0= ruleDmxFunctionCallArguments )
            // InternalSim.g:8070:5: lv_callArguments_3_0= ruleDmxFunctionCallArguments
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDmxFunctionCallAccess().getCallArgumentsDmxFunctionCallArgumentsParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_46);
            lv_callArguments_3_0=ruleDmxFunctionCallArguments();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDmxFunctionCallRule());
              					}
              					set(
              						current,
              						"callArguments",
              						lv_callArguments_3_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.DmxFunctionCallArguments");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getDmxFunctionCallAccess().getRightParenthesisKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxFunctionCall"


    // $ANTLR start "entryRuleDmxFunctionCallArguments"
    // InternalSim.g:8095:1: entryRuleDmxFunctionCallArguments returns [EObject current=null] : iv_ruleDmxFunctionCallArguments= ruleDmxFunctionCallArguments EOF ;
    public final EObject entryRuleDmxFunctionCallArguments() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxFunctionCallArguments = null;


        try {
            // InternalSim.g:8095:65: (iv_ruleDmxFunctionCallArguments= ruleDmxFunctionCallArguments EOF )
            // InternalSim.g:8096:2: iv_ruleDmxFunctionCallArguments= ruleDmxFunctionCallArguments EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxFunctionCallArgumentsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxFunctionCallArguments=ruleDmxFunctionCallArguments();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxFunctionCallArguments; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxFunctionCallArguments"


    // $ANTLR start "ruleDmxFunctionCallArguments"
    // InternalSim.g:8102:1: ruleDmxFunctionCallArguments returns [EObject current=null] : ( () ( ( (lv_arguments_1_0= ruleDExpression ) ) (otherlv_2= ',' ( (lv_arguments_3_0= ruleDExpression ) ) )* )? ) ;
    public final EObject ruleDmxFunctionCallArguments() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_arguments_1_0 = null;

        EObject lv_arguments_3_0 = null;



        	enterRule();

        try {
            // InternalSim.g:8108:2: ( ( () ( ( (lv_arguments_1_0= ruleDExpression ) ) (otherlv_2= ',' ( (lv_arguments_3_0= ruleDExpression ) ) )* )? ) )
            // InternalSim.g:8109:2: ( () ( ( (lv_arguments_1_0= ruleDExpression ) ) (otherlv_2= ',' ( (lv_arguments_3_0= ruleDExpression ) ) )* )? )
            {
            // InternalSim.g:8109:2: ( () ( ( (lv_arguments_1_0= ruleDExpression ) ) (otherlv_2= ',' ( (lv_arguments_3_0= ruleDExpression ) ) )* )? )
            // InternalSim.g:8110:3: () ( ( (lv_arguments_1_0= ruleDExpression ) ) (otherlv_2= ',' ( (lv_arguments_3_0= ruleDExpression ) ) )* )?
            {
            // InternalSim.g:8110:3: ()
            // InternalSim.g:8111:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDmxFunctionCallArgumentsAccess().getDmxCallArgumentsAction_0(),
              					current);
              			
            }

            }

            // InternalSim.g:8117:3: ( ( (lv_arguments_1_0= ruleDExpression ) ) (otherlv_2= ',' ( (lv_arguments_3_0= ruleDExpression ) ) )* )?
            int alt163=2;
            int LA163_0 = input.LA(1);

            if ( ((LA163_0>=RULE_ID && LA163_0<=RULE_RICH_TEXT_START)||(LA163_0>=RULE_NATURAL && LA163_0<=RULE_STRING)||LA163_0==22||LA163_0==38||LA163_0==41||LA163_0==45||LA163_0==75||LA163_0==79||(LA163_0>=84 && LA163_0<=89)||(LA163_0>=92 && LA163_0<=93)||(LA163_0>=134 && LA163_0<=136)) ) {
                alt163=1;
            }
            switch (alt163) {
                case 1 :
                    // InternalSim.g:8118:4: ( (lv_arguments_1_0= ruleDExpression ) ) (otherlv_2= ',' ( (lv_arguments_3_0= ruleDExpression ) ) )*
                    {
                    // InternalSim.g:8118:4: ( (lv_arguments_1_0= ruleDExpression ) )
                    // InternalSim.g:8119:5: (lv_arguments_1_0= ruleDExpression )
                    {
                    // InternalSim.g:8119:5: (lv_arguments_1_0= ruleDExpression )
                    // InternalSim.g:8120:6: lv_arguments_1_0= ruleDExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDmxFunctionCallArgumentsAccess().getArgumentsDExpressionParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_94);
                    lv_arguments_1_0=ruleDExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDmxFunctionCallArgumentsRule());
                      						}
                      						add(
                      							current,
                      							"arguments",
                      							lv_arguments_1_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.DExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSim.g:8137:4: (otherlv_2= ',' ( (lv_arguments_3_0= ruleDExpression ) ) )*
                    loop162:
                    do {
                        int alt162=2;
                        int LA162_0 = input.LA(1);

                        if ( (LA162_0==36) ) {
                            alt162=1;
                        }


                        switch (alt162) {
                    	case 1 :
                    	    // InternalSim.g:8138:5: otherlv_2= ',' ( (lv_arguments_3_0= ruleDExpression ) )
                    	    {
                    	    otherlv_2=(Token)match(input,36,FOLLOW_51); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_2, grammarAccess.getDmxFunctionCallArgumentsAccess().getCommaKeyword_1_1_0());
                    	      				
                    	    }
                    	    // InternalSim.g:8142:5: ( (lv_arguments_3_0= ruleDExpression ) )
                    	    // InternalSim.g:8143:6: (lv_arguments_3_0= ruleDExpression )
                    	    {
                    	    // InternalSim.g:8143:6: (lv_arguments_3_0= ruleDExpression )
                    	    // InternalSim.g:8144:7: lv_arguments_3_0= ruleDExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getDmxFunctionCallArgumentsAccess().getArgumentsDExpressionParserRuleCall_1_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_94);
                    	    lv_arguments_3_0=ruleDExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getDmxFunctionCallArgumentsRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"arguments",
                    	      								lv_arguments_3_0,
                    	      								"com.mimacom.ddd.dm.dmx.Dmx.DExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop162;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxFunctionCallArguments"


    // $ANTLR start "entryRuleDmxEntity"
    // InternalSim.g:8167:1: entryRuleDmxEntity returns [EObject current=null] : iv_ruleDmxEntity= ruleDmxEntity EOF ;
    public final EObject entryRuleDmxEntity() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxEntity = null;


        try {
            // InternalSim.g:8167:50: (iv_ruleDmxEntity= ruleDmxEntity EOF )
            // InternalSim.g:8168:2: iv_ruleDmxEntity= ruleDmxEntity EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxEntityRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxEntity=ruleDmxEntity();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxEntity; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxEntity"


    // $ANTLR start "ruleDmxEntity"
    // InternalSim.g:8174:1: ruleDmxEntity returns [EObject current=null] : (otherlv_0= 'entity' this_DmxComplexObject_1= ruleDmxComplexObject[$current] ) ;
    public final EObject ruleDmxEntity() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject this_DmxComplexObject_1 = null;



        	enterRule();

        try {
            // InternalSim.g:8180:2: ( (otherlv_0= 'entity' this_DmxComplexObject_1= ruleDmxComplexObject[$current] ) )
            // InternalSim.g:8181:2: (otherlv_0= 'entity' this_DmxComplexObject_1= ruleDmxComplexObject[$current] )
            {
            // InternalSim.g:8181:2: (otherlv_0= 'entity' this_DmxComplexObject_1= ruleDmxComplexObject[$current] )
            // InternalSim.g:8182:3: otherlv_0= 'entity' this_DmxComplexObject_1= ruleDmxComplexObject[$current]
            {
            otherlv_0=(Token)match(input,38,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDmxEntityAccess().getEntityKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getDmxEntityRule());
              			}
              			newCompositeNode(grammarAccess.getDmxEntityAccess().getDmxComplexObjectParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_DmxComplexObject_1=ruleDmxComplexObject(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_DmxComplexObject_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxEntity"


    // $ANTLR start "entryRuleDmxDetail"
    // InternalSim.g:8201:1: entryRuleDmxDetail returns [EObject current=null] : iv_ruleDmxDetail= ruleDmxDetail EOF ;
    public final EObject entryRuleDmxDetail() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxDetail = null;


        try {
            // InternalSim.g:8201:50: (iv_ruleDmxDetail= ruleDmxDetail EOF )
            // InternalSim.g:8202:2: iv_ruleDmxDetail= ruleDmxDetail EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxDetailRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxDetail=ruleDmxDetail();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxDetail; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxDetail"


    // $ANTLR start "ruleDmxDetail"
    // InternalSim.g:8208:1: ruleDmxDetail returns [EObject current=null] : (otherlv_0= 'detail' this_DmxComplexObject_1= ruleDmxComplexObject[$current] ) ;
    public final EObject ruleDmxDetail() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject this_DmxComplexObject_1 = null;



        	enterRule();

        try {
            // InternalSim.g:8214:2: ( (otherlv_0= 'detail' this_DmxComplexObject_1= ruleDmxComplexObject[$current] ) )
            // InternalSim.g:8215:2: (otherlv_0= 'detail' this_DmxComplexObject_1= ruleDmxComplexObject[$current] )
            {
            // InternalSim.g:8215:2: (otherlv_0= 'detail' this_DmxComplexObject_1= ruleDmxComplexObject[$current] )
            // InternalSim.g:8216:3: otherlv_0= 'detail' this_DmxComplexObject_1= ruleDmxComplexObject[$current]
            {
            otherlv_0=(Token)match(input,41,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDmxDetailAccess().getDetailKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getDmxDetailRule());
              			}
              			newCompositeNode(grammarAccess.getDmxDetailAccess().getDmxComplexObjectParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_DmxComplexObject_1=ruleDmxComplexObject(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_DmxComplexObject_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxDetail"


    // $ANTLR start "ruleDmxComplexObject"
    // InternalSim.g:8236:1: ruleDmxComplexObject[EObject in_current] returns [EObject current=in_current] : ( ( (otherlv_0= RULE_ID ) ) ruleDomFieldListStartSymbol ( (lv_fields_2_0= ruleDmxField ) )* otherlv_3= '}' ) ;
    public final EObject ruleDmxComplexObject(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_3=null;
        EObject lv_fields_2_0 = null;



        	enterRule();

        try {
            // InternalSim.g:8242:2: ( ( ( (otherlv_0= RULE_ID ) ) ruleDomFieldListStartSymbol ( (lv_fields_2_0= ruleDmxField ) )* otherlv_3= '}' ) )
            // InternalSim.g:8243:2: ( ( (otherlv_0= RULE_ID ) ) ruleDomFieldListStartSymbol ( (lv_fields_2_0= ruleDmxField ) )* otherlv_3= '}' )
            {
            // InternalSim.g:8243:2: ( ( (otherlv_0= RULE_ID ) ) ruleDomFieldListStartSymbol ( (lv_fields_2_0= ruleDmxField ) )* otherlv_3= '}' )
            // InternalSim.g:8244:3: ( (otherlv_0= RULE_ID ) ) ruleDomFieldListStartSymbol ( (lv_fields_2_0= ruleDmxField ) )* otherlv_3= '}'
            {
            // InternalSim.g:8244:3: ( (otherlv_0= RULE_ID ) )
            // InternalSim.g:8245:4: (otherlv_0= RULE_ID )
            {
            // InternalSim.g:8245:4: (otherlv_0= RULE_ID )
            // InternalSim.g:8246:5: otherlv_0= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDmxComplexObjectRule());
              					}
              				
            }
            otherlv_0=(Token)match(input,RULE_ID,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_0, grammarAccess.getDmxComplexObjectAccess().getTypeDComplexTypeCrossReference_0_0());
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDmxComplexObjectAccess().getDomFieldListStartSymbolParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_108);
            ruleDomFieldListStartSymbol();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSim.g:8264:3: ( (lv_fields_2_0= ruleDmxField ) )*
            loop164:
            do {
                int alt164=2;
                int LA164_0 = input.LA(1);

                if ( (LA164_0==RULE_ID) ) {
                    alt164=1;
                }


                switch (alt164) {
            	case 1 :
            	    // InternalSim.g:8265:4: (lv_fields_2_0= ruleDmxField )
            	    {
            	    // InternalSim.g:8265:4: (lv_fields_2_0= ruleDmxField )
            	    // InternalSim.g:8266:5: lv_fields_2_0= ruleDmxField
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getDmxComplexObjectAccess().getFieldsDmxFieldParserRuleCall_2_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_108);
            	    lv_fields_2_0=ruleDmxField();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getDmxComplexObjectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"fields",
            	      						lv_fields_2_0,
            	      						"com.mimacom.ddd.dm.dmx.Dmx.DmxField");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop164;
                }
            } while (true);

            otherlv_3=(Token)match(input,23,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getDmxComplexObjectAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxComplexObject"


    // $ANTLR start "entryRuleDmxField"
    // InternalSim.g:8291:1: entryRuleDmxField returns [EObject current=null] : iv_ruleDmxField= ruleDmxField EOF ;
    public final EObject entryRuleDmxField() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxField = null;


        try {
            // InternalSim.g:8291:49: (iv_ruleDmxField= ruleDmxField EOF )
            // InternalSim.g:8292:2: iv_ruleDmxField= ruleDmxField EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxFieldRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxField=ruleDmxField();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxField; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxField"


    // $ANTLR start "ruleDmxField"
    // InternalSim.g:8298:1: ruleDmxField returns [EObject current=null] : ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '=' ( (lv_value_2_0= ruleDExpression ) ) ) ;
    public final EObject ruleDmxField() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        EObject lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalSim.g:8304:2: ( ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '=' ( (lv_value_2_0= ruleDExpression ) ) ) )
            // InternalSim.g:8305:2: ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '=' ( (lv_value_2_0= ruleDExpression ) ) )
            {
            // InternalSim.g:8305:2: ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '=' ( (lv_value_2_0= ruleDExpression ) ) )
            // InternalSim.g:8306:3: ( (otherlv_0= RULE_ID ) ) otherlv_1= '=' ( (lv_value_2_0= ruleDExpression ) )
            {
            // InternalSim.g:8306:3: ( (otherlv_0= RULE_ID ) )
            // InternalSim.g:8307:4: (otherlv_0= RULE_ID )
            {
            // InternalSim.g:8307:4: (otherlv_0= RULE_ID )
            // InternalSim.g:8308:5: otherlv_0= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDmxFieldRule());
              					}
              				
            }
            otherlv_0=(Token)match(input,RULE_ID,FOLLOW_109); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_0, grammarAccess.getDmxFieldAccess().getFeatureDFeatureCrossReference_0_0());
              				
            }

            }


            }

            otherlv_1=(Token)match(input,74,FOLLOW_51); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getDmxFieldAccess().getEqualsSignKeyword_1());
              		
            }
            // InternalSim.g:8323:3: ( (lv_value_2_0= ruleDExpression ) )
            // InternalSim.g:8324:4: (lv_value_2_0= ruleDExpression )
            {
            // InternalSim.g:8324:4: (lv_value_2_0= ruleDExpression )
            // InternalSim.g:8325:5: lv_value_2_0= ruleDExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDmxFieldAccess().getValueDExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_2_0=ruleDExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDmxFieldRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_2_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.DExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxField"


    // $ANTLR start "entryRuleDmxStaticReference"
    // InternalSim.g:8346:1: entryRuleDmxStaticReference returns [EObject current=null] : iv_ruleDmxStaticReference= ruleDmxStaticReference EOF ;
    public final EObject entryRuleDmxStaticReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxStaticReference = null;


        try {
            // InternalSim.g:8346:59: (iv_ruleDmxStaticReference= ruleDmxStaticReference EOF )
            // InternalSim.g:8347:2: iv_ruleDmxStaticReference= ruleDmxStaticReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxStaticReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxStaticReference=ruleDmxStaticReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxStaticReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxStaticReference"


    // $ANTLR start "ruleDmxStaticReference"
    // InternalSim.g:8353:1: ruleDmxStaticReference returns [EObject current=null] : ( () otherlv_1= '[' ( ( ruleDQualifiedName ) ) (otherlv_3= '#' ( (otherlv_4= RULE_ID ) ) )? (otherlv_5= '|' ( ( (lv_displayName_6_0= RULE_ID ) ) | ( (lv_plural_7_0= '*' ) ) ) )? ( ( ']' )=>otherlv_8= ']' ) ) ;
    public final EObject ruleDmxStaticReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_displayName_6_0=null;
        Token lv_plural_7_0=null;
        Token otherlv_8=null;


        	enterRule();

        try {
            // InternalSim.g:8359:2: ( ( () otherlv_1= '[' ( ( ruleDQualifiedName ) ) (otherlv_3= '#' ( (otherlv_4= RULE_ID ) ) )? (otherlv_5= '|' ( ( (lv_displayName_6_0= RULE_ID ) ) | ( (lv_plural_7_0= '*' ) ) ) )? ( ( ']' )=>otherlv_8= ']' ) ) )
            // InternalSim.g:8360:2: ( () otherlv_1= '[' ( ( ruleDQualifiedName ) ) (otherlv_3= '#' ( (otherlv_4= RULE_ID ) ) )? (otherlv_5= '|' ( ( (lv_displayName_6_0= RULE_ID ) ) | ( (lv_plural_7_0= '*' ) ) ) )? ( ( ']' )=>otherlv_8= ']' ) )
            {
            // InternalSim.g:8360:2: ( () otherlv_1= '[' ( ( ruleDQualifiedName ) ) (otherlv_3= '#' ( (otherlv_4= RULE_ID ) ) )? (otherlv_5= '|' ( ( (lv_displayName_6_0= RULE_ID ) ) | ( (lv_plural_7_0= '*' ) ) ) )? ( ( ']' )=>otherlv_8= ']' ) )
            // InternalSim.g:8361:3: () otherlv_1= '[' ( ( ruleDQualifiedName ) ) (otherlv_3= '#' ( (otherlv_4= RULE_ID ) ) )? (otherlv_5= '|' ( ( (lv_displayName_6_0= RULE_ID ) ) | ( (lv_plural_7_0= '*' ) ) ) )? ( ( ']' )=>otherlv_8= ']' )
            {
            // InternalSim.g:8361:3: ()
            // InternalSim.g:8362:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDmxStaticReferenceAccess().getDmxStaticReferenceAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,75,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getDmxStaticReferenceAccess().getLeftSquareBracketKeyword_1());
              		
            }
            // InternalSim.g:8372:3: ( ( ruleDQualifiedName ) )
            // InternalSim.g:8373:4: ( ruleDQualifiedName )
            {
            // InternalSim.g:8373:4: ( ruleDQualifiedName )
            // InternalSim.g:8374:5: ruleDQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDmxStaticReferenceRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDmxStaticReferenceAccess().getTargetIStaticReferenceTargetCrossReference_2_0());
              				
            }
            pushFollow(FOLLOW_110);
            ruleDQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSim.g:8388:3: (otherlv_3= '#' ( (otherlv_4= RULE_ID ) ) )?
            int alt165=2;
            int LA165_0 = input.LA(1);

            if ( (LA165_0==76) ) {
                alt165=1;
            }
            switch (alt165) {
                case 1 :
                    // InternalSim.g:8389:4: otherlv_3= '#' ( (otherlv_4= RULE_ID ) )
                    {
                    otherlv_3=(Token)match(input,76,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getDmxStaticReferenceAccess().getNumberSignKeyword_3_0());
                      			
                    }
                    // InternalSim.g:8393:4: ( (otherlv_4= RULE_ID ) )
                    // InternalSim.g:8394:5: (otherlv_4= RULE_ID )
                    {
                    // InternalSim.g:8394:5: (otherlv_4= RULE_ID )
                    // InternalSim.g:8395:6: otherlv_4= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDmxStaticReferenceRule());
                      						}
                      					
                    }
                    otherlv_4=(Token)match(input,RULE_ID,FOLLOW_111); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_4, grammarAccess.getDmxStaticReferenceAccess().getMemberDNavigableMemberCrossReference_3_1_0());
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSim.g:8407:3: (otherlv_5= '|' ( ( (lv_displayName_6_0= RULE_ID ) ) | ( (lv_plural_7_0= '*' ) ) ) )?
            int alt167=2;
            int LA167_0 = input.LA(1);

            if ( (LA167_0==70) ) {
                alt167=1;
            }
            switch (alt167) {
                case 1 :
                    // InternalSim.g:8408:4: otherlv_5= '|' ( ( (lv_displayName_6_0= RULE_ID ) ) | ( (lv_plural_7_0= '*' ) ) )
                    {
                    otherlv_5=(Token)match(input,70,FOLLOW_112); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getDmxStaticReferenceAccess().getVerticalLineKeyword_4_0());
                      			
                    }
                    // InternalSim.g:8412:4: ( ( (lv_displayName_6_0= RULE_ID ) ) | ( (lv_plural_7_0= '*' ) ) )
                    int alt166=2;
                    int LA166_0 = input.LA(1);

                    if ( (LA166_0==RULE_ID) ) {
                        alt166=1;
                    }
                    else if ( (LA166_0==46) ) {
                        alt166=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 166, 0, input);

                        throw nvae;
                    }
                    switch (alt166) {
                        case 1 :
                            // InternalSim.g:8413:5: ( (lv_displayName_6_0= RULE_ID ) )
                            {
                            // InternalSim.g:8413:5: ( (lv_displayName_6_0= RULE_ID ) )
                            // InternalSim.g:8414:6: (lv_displayName_6_0= RULE_ID )
                            {
                            // InternalSim.g:8414:6: (lv_displayName_6_0= RULE_ID )
                            // InternalSim.g:8415:7: lv_displayName_6_0= RULE_ID
                            {
                            lv_displayName_6_0=(Token)match(input,RULE_ID,FOLLOW_113); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_displayName_6_0, grammarAccess.getDmxStaticReferenceAccess().getDisplayNameIDTerminalRuleCall_4_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getDmxStaticReferenceRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"displayName",
                              								lv_displayName_6_0,
                              								"com.mimacom.ddd.dm.dmx.Dmx.ID");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalSim.g:8432:5: ( (lv_plural_7_0= '*' ) )
                            {
                            // InternalSim.g:8432:5: ( (lv_plural_7_0= '*' ) )
                            // InternalSim.g:8433:6: (lv_plural_7_0= '*' )
                            {
                            // InternalSim.g:8433:6: (lv_plural_7_0= '*' )
                            // InternalSim.g:8434:7: lv_plural_7_0= '*'
                            {
                            lv_plural_7_0=(Token)match(input,46,FOLLOW_113); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_plural_7_0, grammarAccess.getDmxStaticReferenceAccess().getPluralAsteriskKeyword_4_1_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getDmxStaticReferenceRule());
                              							}
                              							setWithLastConsumed(current, "plural", true, "*");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalSim.g:8448:3: ( ( ']' )=>otherlv_8= ']' )
            // InternalSim.g:8449:4: ( ']' )=>otherlv_8= ']'
            {
            otherlv_8=(Token)match(input,77,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_8, grammarAccess.getDmxStaticReferenceAccess().getRightSquareBracketKeyword_5());
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxStaticReference"


    // $ANTLR start "entryRuleDmxContextReference"
    // InternalSim.g:8459:1: entryRuleDmxContextReference returns [EObject current=null] : iv_ruleDmxContextReference= ruleDmxContextReference EOF ;
    public final EObject entryRuleDmxContextReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxContextReference = null;


        try {
            // InternalSim.g:8459:60: (iv_ruleDmxContextReference= ruleDmxContextReference EOF )
            // InternalSim.g:8460:2: iv_ruleDmxContextReference= ruleDmxContextReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxContextReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxContextReference=ruleDmxContextReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxContextReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxContextReference"


    // $ANTLR start "ruleDmxContextReference"
    // InternalSim.g:8466:1: ruleDmxContextReference returns [EObject current=null] : ( () ( (otherlv_1= RULE_ID ) ) ( ( (lv_before_2_0= '@before' ) ) | (otherlv_3= '.' ( (lv_all_4_0= 'all' ) ) ) )? ) ;
    public final EObject ruleDmxContextReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_before_2_0=null;
        Token otherlv_3=null;
        Token lv_all_4_0=null;


        	enterRule();

        try {
            // InternalSim.g:8472:2: ( ( () ( (otherlv_1= RULE_ID ) ) ( ( (lv_before_2_0= '@before' ) ) | (otherlv_3= '.' ( (lv_all_4_0= 'all' ) ) ) )? ) )
            // InternalSim.g:8473:2: ( () ( (otherlv_1= RULE_ID ) ) ( ( (lv_before_2_0= '@before' ) ) | (otherlv_3= '.' ( (lv_all_4_0= 'all' ) ) ) )? )
            {
            // InternalSim.g:8473:2: ( () ( (otherlv_1= RULE_ID ) ) ( ( (lv_before_2_0= '@before' ) ) | (otherlv_3= '.' ( (lv_all_4_0= 'all' ) ) ) )? )
            // InternalSim.g:8474:3: () ( (otherlv_1= RULE_ID ) ) ( ( (lv_before_2_0= '@before' ) ) | (otherlv_3= '.' ( (lv_all_4_0= 'all' ) ) ) )?
            {
            // InternalSim.g:8474:3: ()
            // InternalSim.g:8475:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDmxContextReferenceAccess().getDmxContextReferenceAction_0(),
              					current);
              			
            }

            }

            // InternalSim.g:8481:3: ( (otherlv_1= RULE_ID ) )
            // InternalSim.g:8482:4: (otherlv_1= RULE_ID )
            {
            // InternalSim.g:8482:4: (otherlv_1= RULE_ID )
            // InternalSim.g:8483:5: otherlv_1= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDmxContextReferenceRule());
              					}
              				
            }
            otherlv_1=(Token)match(input,RULE_ID,FOLLOW_114); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getDmxContextReferenceAccess().getTargetDNamedElementCrossReference_1_0());
              				
            }

            }


            }

            // InternalSim.g:8494:3: ( ( (lv_before_2_0= '@before' ) ) | (otherlv_3= '.' ( (lv_all_4_0= 'all' ) ) ) )?
            int alt168=3;
            int LA168_0 = input.LA(1);

            if ( (LA168_0==69) ) {
                alt168=1;
            }
            else if ( (LA168_0==68) ) {
                int LA168_2 = input.LA(2);

                if ( (LA168_2==78) ) {
                    alt168=2;
                }
            }
            switch (alt168) {
                case 1 :
                    // InternalSim.g:8495:4: ( (lv_before_2_0= '@before' ) )
                    {
                    // InternalSim.g:8495:4: ( (lv_before_2_0= '@before' ) )
                    // InternalSim.g:8496:5: (lv_before_2_0= '@before' )
                    {
                    // InternalSim.g:8496:5: (lv_before_2_0= '@before' )
                    // InternalSim.g:8497:6: lv_before_2_0= '@before'
                    {
                    lv_before_2_0=(Token)match(input,69,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_before_2_0, grammarAccess.getDmxContextReferenceAccess().getBeforeBeforeKeyword_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDmxContextReferenceRule());
                      						}
                      						setWithLastConsumed(current, "before", true, "@before");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:8510:4: (otherlv_3= '.' ( (lv_all_4_0= 'all' ) ) )
                    {
                    // InternalSim.g:8510:4: (otherlv_3= '.' ( (lv_all_4_0= 'all' ) ) )
                    // InternalSim.g:8511:5: otherlv_3= '.' ( (lv_all_4_0= 'all' ) )
                    {
                    otherlv_3=(Token)match(input,68,FOLLOW_115); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getDmxContextReferenceAccess().getFullStopKeyword_2_1_0());
                      				
                    }
                    // InternalSim.g:8515:5: ( (lv_all_4_0= 'all' ) )
                    // InternalSim.g:8516:6: (lv_all_4_0= 'all' )
                    {
                    // InternalSim.g:8516:6: (lv_all_4_0= 'all' )
                    // InternalSim.g:8517:7: lv_all_4_0= 'all'
                    {
                    lv_all_4_0=(Token)match(input,78,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_all_4_0, grammarAccess.getDmxContextReferenceAccess().getAllAllKeyword_2_1_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getDmxContextReferenceRule());
                      							}
                      							setWithLastConsumed(current, "all", true, "all");
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxContextReference"


    // $ANTLR start "entryRuleDmxIfExpression"
    // InternalSim.g:8535:1: entryRuleDmxIfExpression returns [EObject current=null] : iv_ruleDmxIfExpression= ruleDmxIfExpression EOF ;
    public final EObject entryRuleDmxIfExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxIfExpression = null;


        try {
            // InternalSim.g:8535:56: (iv_ruleDmxIfExpression= ruleDmxIfExpression EOF )
            // InternalSim.g:8536:2: iv_ruleDmxIfExpression= ruleDmxIfExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxIfExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxIfExpression=ruleDmxIfExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxIfExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxIfExpression"


    // $ANTLR start "ruleDmxIfExpression"
    // InternalSim.g:8542:1: ruleDmxIfExpression returns [EObject current=null] : ( () otherlv_1= 'if' ( (lv_if_2_0= ruleDExpression ) ) otherlv_3= 'then' ( (lv_then_4_0= ruleDExpression ) ) ( ( ( 'else' )=>otherlv_5= 'else' ) ( (lv_else_6_0= ruleDExpression ) ) )? otherlv_7= 'end' ) ;
    public final EObject ruleDmxIfExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_if_2_0 = null;

        EObject lv_then_4_0 = null;

        EObject lv_else_6_0 = null;



        	enterRule();

        try {
            // InternalSim.g:8548:2: ( ( () otherlv_1= 'if' ( (lv_if_2_0= ruleDExpression ) ) otherlv_3= 'then' ( (lv_then_4_0= ruleDExpression ) ) ( ( ( 'else' )=>otherlv_5= 'else' ) ( (lv_else_6_0= ruleDExpression ) ) )? otherlv_7= 'end' ) )
            // InternalSim.g:8549:2: ( () otherlv_1= 'if' ( (lv_if_2_0= ruleDExpression ) ) otherlv_3= 'then' ( (lv_then_4_0= ruleDExpression ) ) ( ( ( 'else' )=>otherlv_5= 'else' ) ( (lv_else_6_0= ruleDExpression ) ) )? otherlv_7= 'end' )
            {
            // InternalSim.g:8549:2: ( () otherlv_1= 'if' ( (lv_if_2_0= ruleDExpression ) ) otherlv_3= 'then' ( (lv_then_4_0= ruleDExpression ) ) ( ( ( 'else' )=>otherlv_5= 'else' ) ( (lv_else_6_0= ruleDExpression ) ) )? otherlv_7= 'end' )
            // InternalSim.g:8550:3: () otherlv_1= 'if' ( (lv_if_2_0= ruleDExpression ) ) otherlv_3= 'then' ( (lv_then_4_0= ruleDExpression ) ) ( ( ( 'else' )=>otherlv_5= 'else' ) ( (lv_else_6_0= ruleDExpression ) ) )? otherlv_7= 'end'
            {
            // InternalSim.g:8550:3: ()
            // InternalSim.g:8551:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDmxIfExpressionAccess().getDmxIfExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,79,FOLLOW_51); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getDmxIfExpressionAccess().getIfKeyword_1());
              		
            }
            // InternalSim.g:8561:3: ( (lv_if_2_0= ruleDExpression ) )
            // InternalSim.g:8562:4: (lv_if_2_0= ruleDExpression )
            {
            // InternalSim.g:8562:4: (lv_if_2_0= ruleDExpression )
            // InternalSim.g:8563:5: lv_if_2_0= ruleDExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDmxIfExpressionAccess().getIfDExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_116);
            lv_if_2_0=ruleDExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDmxIfExpressionRule());
              					}
              					set(
              						current,
              						"if",
              						lv_if_2_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.DExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,80,FOLLOW_51); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getDmxIfExpressionAccess().getThenKeyword_3());
              		
            }
            // InternalSim.g:8584:3: ( (lv_then_4_0= ruleDExpression ) )
            // InternalSim.g:8585:4: (lv_then_4_0= ruleDExpression )
            {
            // InternalSim.g:8585:4: (lv_then_4_0= ruleDExpression )
            // InternalSim.g:8586:5: lv_then_4_0= ruleDExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDmxIfExpressionAccess().getThenDExpressionParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_117);
            lv_then_4_0=ruleDExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDmxIfExpressionRule());
              					}
              					set(
              						current,
              						"then",
              						lv_then_4_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.DExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSim.g:8603:3: ( ( ( 'else' )=>otherlv_5= 'else' ) ( (lv_else_6_0= ruleDExpression ) ) )?
            int alt169=2;
            int LA169_0 = input.LA(1);

            if ( (LA169_0==81) && (synpred14_InternalSim())) {
                alt169=1;
            }
            switch (alt169) {
                case 1 :
                    // InternalSim.g:8604:4: ( ( 'else' )=>otherlv_5= 'else' ) ( (lv_else_6_0= ruleDExpression ) )
                    {
                    // InternalSim.g:8604:4: ( ( 'else' )=>otherlv_5= 'else' )
                    // InternalSim.g:8605:5: ( 'else' )=>otherlv_5= 'else'
                    {
                    otherlv_5=(Token)match(input,81,FOLLOW_51); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getDmxIfExpressionAccess().getElseKeyword_5_0());
                      				
                    }

                    }

                    // InternalSim.g:8611:4: ( (lv_else_6_0= ruleDExpression ) )
                    // InternalSim.g:8612:5: (lv_else_6_0= ruleDExpression )
                    {
                    // InternalSim.g:8612:5: (lv_else_6_0= ruleDExpression )
                    // InternalSim.g:8613:6: lv_else_6_0= ruleDExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDmxIfExpressionAccess().getElseDExpressionParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_118);
                    lv_else_6_0=ruleDExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDmxIfExpressionRule());
                      						}
                      						set(
                      							current,
                      							"else",
                      							lv_else_6_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.DExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_7=(Token)match(input,82,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getDmxIfExpressionAccess().getEndKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxIfExpression"


    // $ANTLR start "entryRuleDMultiplicity"
    // InternalSim.g:8639:1: entryRuleDMultiplicity returns [EObject current=null] : iv_ruleDMultiplicity= ruleDMultiplicity EOF ;
    public final EObject entryRuleDMultiplicity() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDMultiplicity = null;


        try {
            // InternalSim.g:8639:54: (iv_ruleDMultiplicity= ruleDMultiplicity EOF )
            // InternalSim.g:8640:2: iv_ruleDMultiplicity= ruleDMultiplicity EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDMultiplicityRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDMultiplicity=ruleDMultiplicity();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDMultiplicity; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDMultiplicity"


    // $ANTLR start "ruleDMultiplicity"
    // InternalSim.g:8646:1: ruleDMultiplicity returns [EObject current=null] : ( ( (lv_shorthand_0_0= ruleDMultiplicityShorthand ) ) | (otherlv_1= '(' ( (lv_minOccurs_2_0= RULE_NATURAL ) ) otherlv_3= '..' ( (lv_maxOccurs_4_0= ruleMULTIPLICITY ) ) otherlv_5= ')' ) ) ;
    public final EObject ruleDMultiplicity() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_minOccurs_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Enumerator lv_shorthand_0_0 = null;

        AntlrDatatypeRuleToken lv_maxOccurs_4_0 = null;



        	enterRule();

        try {
            // InternalSim.g:8652:2: ( ( ( (lv_shorthand_0_0= ruleDMultiplicityShorthand ) ) | (otherlv_1= '(' ( (lv_minOccurs_2_0= RULE_NATURAL ) ) otherlv_3= '..' ( (lv_maxOccurs_4_0= ruleMULTIPLICITY ) ) otherlv_5= ')' ) ) )
            // InternalSim.g:8653:2: ( ( (lv_shorthand_0_0= ruleDMultiplicityShorthand ) ) | (otherlv_1= '(' ( (lv_minOccurs_2_0= RULE_NATURAL ) ) otherlv_3= '..' ( (lv_maxOccurs_4_0= ruleMULTIPLICITY ) ) otherlv_5= ')' ) )
            {
            // InternalSim.g:8653:2: ( ( (lv_shorthand_0_0= ruleDMultiplicityShorthand ) ) | (otherlv_1= '(' ( (lv_minOccurs_2_0= RULE_NATURAL ) ) otherlv_3= '..' ( (lv_maxOccurs_4_0= ruleMULTIPLICITY ) ) otherlv_5= ')' ) )
            int alt170=2;
            int LA170_0 = input.LA(1);

            if ( (LA170_0==46||LA170_0==92||LA170_0==137) ) {
                alt170=1;
            }
            else if ( (LA170_0==45) ) {
                alt170=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 170, 0, input);

                throw nvae;
            }
            switch (alt170) {
                case 1 :
                    // InternalSim.g:8654:3: ( (lv_shorthand_0_0= ruleDMultiplicityShorthand ) )
                    {
                    // InternalSim.g:8654:3: ( (lv_shorthand_0_0= ruleDMultiplicityShorthand ) )
                    // InternalSim.g:8655:4: (lv_shorthand_0_0= ruleDMultiplicityShorthand )
                    {
                    // InternalSim.g:8655:4: (lv_shorthand_0_0= ruleDMultiplicityShorthand )
                    // InternalSim.g:8656:5: lv_shorthand_0_0= ruleDMultiplicityShorthand
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDMultiplicityAccess().getShorthandDMultiplicityShorthandEnumRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_shorthand_0_0=ruleDMultiplicityShorthand();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDMultiplicityRule());
                      					}
                      					set(
                      						current,
                      						"shorthand",
                      						lv_shorthand_0_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DMultiplicityShorthand");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:8674:3: (otherlv_1= '(' ( (lv_minOccurs_2_0= RULE_NATURAL ) ) otherlv_3= '..' ( (lv_maxOccurs_4_0= ruleMULTIPLICITY ) ) otherlv_5= ')' )
                    {
                    // InternalSim.g:8674:3: (otherlv_1= '(' ( (lv_minOccurs_2_0= RULE_NATURAL ) ) otherlv_3= '..' ( (lv_maxOccurs_4_0= ruleMULTIPLICITY ) ) otherlv_5= ')' )
                    // InternalSim.g:8675:4: otherlv_1= '(' ( (lv_minOccurs_2_0= RULE_NATURAL ) ) otherlv_3= '..' ( (lv_maxOccurs_4_0= ruleMULTIPLICITY ) ) otherlv_5= ')'
                    {
                    otherlv_1=(Token)match(input,45,FOLLOW_119); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getDMultiplicityAccess().getLeftParenthesisKeyword_1_0());
                      			
                    }
                    // InternalSim.g:8679:4: ( (lv_minOccurs_2_0= RULE_NATURAL ) )
                    // InternalSim.g:8680:5: (lv_minOccurs_2_0= RULE_NATURAL )
                    {
                    // InternalSim.g:8680:5: (lv_minOccurs_2_0= RULE_NATURAL )
                    // InternalSim.g:8681:6: lv_minOccurs_2_0= RULE_NATURAL
                    {
                    lv_minOccurs_2_0=(Token)match(input,RULE_NATURAL,FOLLOW_120); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_minOccurs_2_0, grammarAccess.getDMultiplicityAccess().getMinOccursNATURALTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDMultiplicityRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"minOccurs",
                      							lv_minOccurs_2_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.NATURAL");
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,83,FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getDMultiplicityAccess().getFullStopFullStopKeyword_1_2());
                      			
                    }
                    // InternalSim.g:8701:4: ( (lv_maxOccurs_4_0= ruleMULTIPLICITY ) )
                    // InternalSim.g:8702:5: (lv_maxOccurs_4_0= ruleMULTIPLICITY )
                    {
                    // InternalSim.g:8702:5: (lv_maxOccurs_4_0= ruleMULTIPLICITY )
                    // InternalSim.g:8703:6: lv_maxOccurs_4_0= ruleMULTIPLICITY
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDMultiplicityAccess().getMaxOccursMULTIPLICITYParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_46);
                    lv_maxOccurs_4_0=ruleMULTIPLICITY();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDMultiplicityRule());
                      						}
                      						set(
                      							current,
                      							"maxOccurs",
                      							lv_maxOccurs_4_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.MULTIPLICITY");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getDMultiplicityAccess().getRightParenthesisKeyword_1_4());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDMultiplicity"


    // $ANTLR start "entryRuleMULTIPLICITY"
    // InternalSim.g:8729:1: entryRuleMULTIPLICITY returns [String current=null] : iv_ruleMULTIPLICITY= ruleMULTIPLICITY EOF ;
    public final String entryRuleMULTIPLICITY() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleMULTIPLICITY = null;


        try {
            // InternalSim.g:8729:52: (iv_ruleMULTIPLICITY= ruleMULTIPLICITY EOF )
            // InternalSim.g:8730:2: iv_ruleMULTIPLICITY= ruleMULTIPLICITY EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMULTIPLICITYRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMULTIPLICITY=ruleMULTIPLICITY();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMULTIPLICITY.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMULTIPLICITY"


    // $ANTLR start "ruleMULTIPLICITY"
    // InternalSim.g:8736:1: ruleMULTIPLICITY returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_NATURAL_0= RULE_NATURAL | kw= '*' ) ;
    public final AntlrDatatypeRuleToken ruleMULTIPLICITY() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_NATURAL_0=null;
        Token kw=null;


        	enterRule();

        try {
            // InternalSim.g:8742:2: ( (this_NATURAL_0= RULE_NATURAL | kw= '*' ) )
            // InternalSim.g:8743:2: (this_NATURAL_0= RULE_NATURAL | kw= '*' )
            {
            // InternalSim.g:8743:2: (this_NATURAL_0= RULE_NATURAL | kw= '*' )
            int alt171=2;
            int LA171_0 = input.LA(1);

            if ( (LA171_0==RULE_NATURAL) ) {
                alt171=1;
            }
            else if ( (LA171_0==46) ) {
                alt171=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 171, 0, input);

                throw nvae;
            }
            switch (alt171) {
                case 1 :
                    // InternalSim.g:8744:3: this_NATURAL_0= RULE_NATURAL
                    {
                    this_NATURAL_0=(Token)match(input,RULE_NATURAL,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_NATURAL_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_NATURAL_0, grammarAccess.getMULTIPLICITYAccess().getNATURALTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSim.g:8752:3: kw= '*'
                    {
                    kw=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMULTIPLICITYAccess().getAsteriskKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMULTIPLICITY"


    // $ANTLR start "entryRuleDmxBooleanLiteral"
    // InternalSim.g:8761:1: entryRuleDmxBooleanLiteral returns [EObject current=null] : iv_ruleDmxBooleanLiteral= ruleDmxBooleanLiteral EOF ;
    public final EObject entryRuleDmxBooleanLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxBooleanLiteral = null;


        try {
            // InternalSim.g:8761:58: (iv_ruleDmxBooleanLiteral= ruleDmxBooleanLiteral EOF )
            // InternalSim.g:8762:2: iv_ruleDmxBooleanLiteral= ruleDmxBooleanLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxBooleanLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxBooleanLiteral=ruleDmxBooleanLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxBooleanLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxBooleanLiteral"


    // $ANTLR start "ruleDmxBooleanLiteral"
    // InternalSim.g:8768:1: ruleDmxBooleanLiteral returns [EObject current=null] : ( () ( ( (lv_value_1_0= 'TRUE' ) ) | ( (lv_value_2_0= 'true' ) ) | otherlv_3= 'FALSE' | otherlv_4= 'false' ) ) ;
    public final EObject ruleDmxBooleanLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_1_0=null;
        Token lv_value_2_0=null;
        Token otherlv_3=null;
        Token otherlv_4=null;


        	enterRule();

        try {
            // InternalSim.g:8774:2: ( ( () ( ( (lv_value_1_0= 'TRUE' ) ) | ( (lv_value_2_0= 'true' ) ) | otherlv_3= 'FALSE' | otherlv_4= 'false' ) ) )
            // InternalSim.g:8775:2: ( () ( ( (lv_value_1_0= 'TRUE' ) ) | ( (lv_value_2_0= 'true' ) ) | otherlv_3= 'FALSE' | otherlv_4= 'false' ) )
            {
            // InternalSim.g:8775:2: ( () ( ( (lv_value_1_0= 'TRUE' ) ) | ( (lv_value_2_0= 'true' ) ) | otherlv_3= 'FALSE' | otherlv_4= 'false' ) )
            // InternalSim.g:8776:3: () ( ( (lv_value_1_0= 'TRUE' ) ) | ( (lv_value_2_0= 'true' ) ) | otherlv_3= 'FALSE' | otherlv_4= 'false' )
            {
            // InternalSim.g:8776:3: ()
            // InternalSim.g:8777:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDmxBooleanLiteralAccess().getDmxBooleanLiteralAction_0(),
              					current);
              			
            }

            }

            // InternalSim.g:8783:3: ( ( (lv_value_1_0= 'TRUE' ) ) | ( (lv_value_2_0= 'true' ) ) | otherlv_3= 'FALSE' | otherlv_4= 'false' )
            int alt172=4;
            switch ( input.LA(1) ) {
            case 84:
                {
                alt172=1;
                }
                break;
            case 85:
                {
                alt172=2;
                }
                break;
            case 86:
                {
                alt172=3;
                }
                break;
            case 87:
                {
                alt172=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 172, 0, input);

                throw nvae;
            }

            switch (alt172) {
                case 1 :
                    // InternalSim.g:8784:4: ( (lv_value_1_0= 'TRUE' ) )
                    {
                    // InternalSim.g:8784:4: ( (lv_value_1_0= 'TRUE' ) )
                    // InternalSim.g:8785:5: (lv_value_1_0= 'TRUE' )
                    {
                    // InternalSim.g:8785:5: (lv_value_1_0= 'TRUE' )
                    // InternalSim.g:8786:6: lv_value_1_0= 'TRUE'
                    {
                    lv_value_1_0=(Token)match(input,84,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_value_1_0, grammarAccess.getDmxBooleanLiteralAccess().getValueTRUEKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDmxBooleanLiteralRule());
                      						}
                      						setWithLastConsumed(current, "value", true, "TRUE");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:8799:4: ( (lv_value_2_0= 'true' ) )
                    {
                    // InternalSim.g:8799:4: ( (lv_value_2_0= 'true' ) )
                    // InternalSim.g:8800:5: (lv_value_2_0= 'true' )
                    {
                    // InternalSim.g:8800:5: (lv_value_2_0= 'true' )
                    // InternalSim.g:8801:6: lv_value_2_0= 'true'
                    {
                    lv_value_2_0=(Token)match(input,85,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_value_2_0, grammarAccess.getDmxBooleanLiteralAccess().getValueTrueKeyword_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDmxBooleanLiteralRule());
                      						}
                      						setWithLastConsumed(current, "value", true, "true");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSim.g:8814:4: otherlv_3= 'FALSE'
                    {
                    otherlv_3=(Token)match(input,86,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getDmxBooleanLiteralAccess().getFALSEKeyword_1_2());
                      			
                    }

                    }
                    break;
                case 4 :
                    // InternalSim.g:8819:4: otherlv_4= 'false'
                    {
                    otherlv_4=(Token)match(input,87,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getDmxBooleanLiteralAccess().getFalseKeyword_1_3());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxBooleanLiteral"


    // $ANTLR start "entryRuleDmxNaturalLiteral"
    // InternalSim.g:8828:1: entryRuleDmxNaturalLiteral returns [EObject current=null] : iv_ruleDmxNaturalLiteral= ruleDmxNaturalLiteral EOF ;
    public final EObject entryRuleDmxNaturalLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxNaturalLiteral = null;


        try {
            // InternalSim.g:8828:58: (iv_ruleDmxNaturalLiteral= ruleDmxNaturalLiteral EOF )
            // InternalSim.g:8829:2: iv_ruleDmxNaturalLiteral= ruleDmxNaturalLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxNaturalLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxNaturalLiteral=ruleDmxNaturalLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxNaturalLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxNaturalLiteral"


    // $ANTLR start "ruleDmxNaturalLiteral"
    // InternalSim.g:8835:1: ruleDmxNaturalLiteral returns [EObject current=null] : ( () ( (lv_value_1_0= RULE_NATURAL ) ) ) ;
    public final EObject ruleDmxNaturalLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_1_0=null;


        	enterRule();

        try {
            // InternalSim.g:8841:2: ( ( () ( (lv_value_1_0= RULE_NATURAL ) ) ) )
            // InternalSim.g:8842:2: ( () ( (lv_value_1_0= RULE_NATURAL ) ) )
            {
            // InternalSim.g:8842:2: ( () ( (lv_value_1_0= RULE_NATURAL ) ) )
            // InternalSim.g:8843:3: () ( (lv_value_1_0= RULE_NATURAL ) )
            {
            // InternalSim.g:8843:3: ()
            // InternalSim.g:8844:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDmxNaturalLiteralAccess().getDmxNaturalLiteralAction_0(),
              					current);
              			
            }

            }

            // InternalSim.g:8850:3: ( (lv_value_1_0= RULE_NATURAL ) )
            // InternalSim.g:8851:4: (lv_value_1_0= RULE_NATURAL )
            {
            // InternalSim.g:8851:4: (lv_value_1_0= RULE_NATURAL )
            // InternalSim.g:8852:5: lv_value_1_0= RULE_NATURAL
            {
            lv_value_1_0=(Token)match(input,RULE_NATURAL,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_value_1_0, grammarAccess.getDmxNaturalLiteralAccess().getValueNATURALTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDmxNaturalLiteralRule());
              					}
              					setWithLastConsumed(
              						current,
              						"value",
              						lv_value_1_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.NATURAL");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxNaturalLiteral"


    // $ANTLR start "entryRuleDmxDecimalLiteral"
    // InternalSim.g:8872:1: entryRuleDmxDecimalLiteral returns [EObject current=null] : iv_ruleDmxDecimalLiteral= ruleDmxDecimalLiteral EOF ;
    public final EObject entryRuleDmxDecimalLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxDecimalLiteral = null;


        try {
            // InternalSim.g:8872:58: (iv_ruleDmxDecimalLiteral= ruleDmxDecimalLiteral EOF )
            // InternalSim.g:8873:2: iv_ruleDmxDecimalLiteral= ruleDmxDecimalLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxDecimalLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxDecimalLiteral=ruleDmxDecimalLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxDecimalLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxDecimalLiteral"


    // $ANTLR start "ruleDmxDecimalLiteral"
    // InternalSim.g:8879:1: ruleDmxDecimalLiteral returns [EObject current=null] : ( () ( (lv_value_1_0= ruleDECIMAL ) ) ) ;
    public final EObject ruleDmxDecimalLiteral() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_value_1_0 = null;



        	enterRule();

        try {
            // InternalSim.g:8885:2: ( ( () ( (lv_value_1_0= ruleDECIMAL ) ) ) )
            // InternalSim.g:8886:2: ( () ( (lv_value_1_0= ruleDECIMAL ) ) )
            {
            // InternalSim.g:8886:2: ( () ( (lv_value_1_0= ruleDECIMAL ) ) )
            // InternalSim.g:8887:3: () ( (lv_value_1_0= ruleDECIMAL ) )
            {
            // InternalSim.g:8887:3: ()
            // InternalSim.g:8888:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDmxDecimalLiteralAccess().getDmxDecimalLiteralAction_0(),
              					current);
              			
            }

            }

            // InternalSim.g:8894:3: ( (lv_value_1_0= ruleDECIMAL ) )
            // InternalSim.g:8895:4: (lv_value_1_0= ruleDECIMAL )
            {
            // InternalSim.g:8895:4: (lv_value_1_0= ruleDECIMAL )
            // InternalSim.g:8896:5: lv_value_1_0= ruleDECIMAL
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDmxDecimalLiteralAccess().getValueDECIMALParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_1_0=ruleDECIMAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDmxDecimalLiteralRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_1_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.DECIMAL");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxDecimalLiteral"


    // $ANTLR start "entryRuleDmxStringLiteral"
    // InternalSim.g:8917:1: entryRuleDmxStringLiteral returns [EObject current=null] : iv_ruleDmxStringLiteral= ruleDmxStringLiteral EOF ;
    public final EObject entryRuleDmxStringLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxStringLiteral = null;


        try {
            // InternalSim.g:8917:57: (iv_ruleDmxStringLiteral= ruleDmxStringLiteral EOF )
            // InternalSim.g:8918:2: iv_ruleDmxStringLiteral= ruleDmxStringLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxStringLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxStringLiteral=ruleDmxStringLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxStringLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxStringLiteral"


    // $ANTLR start "ruleDmxStringLiteral"
    // InternalSim.g:8924:1: ruleDmxStringLiteral returns [EObject current=null] : ( () ( (lv_value_1_0= RULE_STRING ) ) ) ;
    public final EObject ruleDmxStringLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_1_0=null;


        	enterRule();

        try {
            // InternalSim.g:8930:2: ( ( () ( (lv_value_1_0= RULE_STRING ) ) ) )
            // InternalSim.g:8931:2: ( () ( (lv_value_1_0= RULE_STRING ) ) )
            {
            // InternalSim.g:8931:2: ( () ( (lv_value_1_0= RULE_STRING ) ) )
            // InternalSim.g:8932:3: () ( (lv_value_1_0= RULE_STRING ) )
            {
            // InternalSim.g:8932:3: ()
            // InternalSim.g:8933:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDmxStringLiteralAccess().getDmxStringLiteralAction_0(),
              					current);
              			
            }

            }

            // InternalSim.g:8939:3: ( (lv_value_1_0= RULE_STRING ) )
            // InternalSim.g:8940:4: (lv_value_1_0= RULE_STRING )
            {
            // InternalSim.g:8940:4: (lv_value_1_0= RULE_STRING )
            // InternalSim.g:8941:5: lv_value_1_0= RULE_STRING
            {
            lv_value_1_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_value_1_0, grammarAccess.getDmxStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDmxStringLiteralRule());
              					}
              					setWithLastConsumed(
              						current,
              						"value",
              						lv_value_1_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.STRING");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxStringLiteral"


    // $ANTLR start "entryRuleDmxUndefinedLiteral"
    // InternalSim.g:8961:1: entryRuleDmxUndefinedLiteral returns [EObject current=null] : iv_ruleDmxUndefinedLiteral= ruleDmxUndefinedLiteral EOF ;
    public final EObject entryRuleDmxUndefinedLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxUndefinedLiteral = null;


        try {
            // InternalSim.g:8961:60: (iv_ruleDmxUndefinedLiteral= ruleDmxUndefinedLiteral EOF )
            // InternalSim.g:8962:2: iv_ruleDmxUndefinedLiteral= ruleDmxUndefinedLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxUndefinedLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxUndefinedLiteral=ruleDmxUndefinedLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxUndefinedLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxUndefinedLiteral"


    // $ANTLR start "ruleDmxUndefinedLiteral"
    // InternalSim.g:8968:1: ruleDmxUndefinedLiteral returns [EObject current=null] : ( () (otherlv_1= 'UNDEFINED' | otherlv_2= 'undefined' ) ) ;
    public final EObject ruleDmxUndefinedLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;


        	enterRule();

        try {
            // InternalSim.g:8974:2: ( ( () (otherlv_1= 'UNDEFINED' | otherlv_2= 'undefined' ) ) )
            // InternalSim.g:8975:2: ( () (otherlv_1= 'UNDEFINED' | otherlv_2= 'undefined' ) )
            {
            // InternalSim.g:8975:2: ( () (otherlv_1= 'UNDEFINED' | otherlv_2= 'undefined' ) )
            // InternalSim.g:8976:3: () (otherlv_1= 'UNDEFINED' | otherlv_2= 'undefined' )
            {
            // InternalSim.g:8976:3: ()
            // InternalSim.g:8977:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDmxUndefinedLiteralAccess().getDmxUndefinedLiteralAction_0(),
              					current);
              			
            }

            }

            // InternalSim.g:8983:3: (otherlv_1= 'UNDEFINED' | otherlv_2= 'undefined' )
            int alt173=2;
            int LA173_0 = input.LA(1);

            if ( (LA173_0==88) ) {
                alt173=1;
            }
            else if ( (LA173_0==89) ) {
                alt173=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 173, 0, input);

                throw nvae;
            }
            switch (alt173) {
                case 1 :
                    // InternalSim.g:8984:4: otherlv_1= 'UNDEFINED'
                    {
                    otherlv_1=(Token)match(input,88,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getDmxUndefinedLiteralAccess().getUNDEFINEDKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalSim.g:8989:4: otherlv_2= 'undefined'
                    {
                    otherlv_2=(Token)match(input,89,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getDmxUndefinedLiteralAccess().getUndefinedKeyword_1_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxUndefinedLiteral"


    // $ANTLR start "entryRuleDECIMAL"
    // InternalSim.g:8998:1: entryRuleDECIMAL returns [String current=null] : iv_ruleDECIMAL= ruleDECIMAL EOF ;
    public final String entryRuleDECIMAL() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleDECIMAL = null;


        try {
            // InternalSim.g:8998:47: (iv_ruleDECIMAL= ruleDECIMAL EOF )
            // InternalSim.g:8999:2: iv_ruleDECIMAL= ruleDECIMAL EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDECIMALRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDECIMAL=ruleDECIMAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDECIMAL.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDECIMAL"


    // $ANTLR start "ruleDECIMAL"
    // InternalSim.g:9005:1: ruleDECIMAL returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_NATURAL_0= RULE_NATURAL kw= '.' this_NATURAL_2= RULE_NATURAL ( (kw= 'E' | kw= 'e' ) (kw= '+' | kw= '-' )? this_NATURAL_7= RULE_NATURAL )? ) ;
    public final AntlrDatatypeRuleToken ruleDECIMAL() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_NATURAL_0=null;
        Token kw=null;
        Token this_NATURAL_2=null;
        Token this_NATURAL_7=null;


        	enterRule();

        try {
            // InternalSim.g:9011:2: ( (this_NATURAL_0= RULE_NATURAL kw= '.' this_NATURAL_2= RULE_NATURAL ( (kw= 'E' | kw= 'e' ) (kw= '+' | kw= '-' )? this_NATURAL_7= RULE_NATURAL )? ) )
            // InternalSim.g:9012:2: (this_NATURAL_0= RULE_NATURAL kw= '.' this_NATURAL_2= RULE_NATURAL ( (kw= 'E' | kw= 'e' ) (kw= '+' | kw= '-' )? this_NATURAL_7= RULE_NATURAL )? )
            {
            // InternalSim.g:9012:2: (this_NATURAL_0= RULE_NATURAL kw= '.' this_NATURAL_2= RULE_NATURAL ( (kw= 'E' | kw= 'e' ) (kw= '+' | kw= '-' )? this_NATURAL_7= RULE_NATURAL )? )
            // InternalSim.g:9013:3: this_NATURAL_0= RULE_NATURAL kw= '.' this_NATURAL_2= RULE_NATURAL ( (kw= 'E' | kw= 'e' ) (kw= '+' | kw= '-' )? this_NATURAL_7= RULE_NATURAL )?
            {
            this_NATURAL_0=(Token)match(input,RULE_NATURAL,FOLLOW_122); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_NATURAL_0);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_NATURAL_0, grammarAccess.getDECIMALAccess().getNATURALTerminalRuleCall_0());
              		
            }
            kw=(Token)match(input,68,FOLLOW_119); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getDECIMALAccess().getFullStopKeyword_1());
              		
            }
            this_NATURAL_2=(Token)match(input,RULE_NATURAL,FOLLOW_123); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_NATURAL_2);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_NATURAL_2, grammarAccess.getDECIMALAccess().getNATURALTerminalRuleCall_2());
              		
            }
            // InternalSim.g:9032:3: ( (kw= 'E' | kw= 'e' ) (kw= '+' | kw= '-' )? this_NATURAL_7= RULE_NATURAL )?
            int alt176=2;
            int LA176_0 = input.LA(1);

            if ( ((LA176_0>=90 && LA176_0<=91)) ) {
                alt176=1;
            }
            switch (alt176) {
                case 1 :
                    // InternalSim.g:9033:4: (kw= 'E' | kw= 'e' ) (kw= '+' | kw= '-' )? this_NATURAL_7= RULE_NATURAL
                    {
                    // InternalSim.g:9033:4: (kw= 'E' | kw= 'e' )
                    int alt174=2;
                    int LA174_0 = input.LA(1);

                    if ( (LA174_0==90) ) {
                        alt174=1;
                    }
                    else if ( (LA174_0==91) ) {
                        alt174=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 174, 0, input);

                        throw nvae;
                    }
                    switch (alt174) {
                        case 1 :
                            // InternalSim.g:9034:5: kw= 'E'
                            {
                            kw=(Token)match(input,90,FOLLOW_124); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getDECIMALAccess().getEKeyword_3_0_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalSim.g:9040:5: kw= 'e'
                            {
                            kw=(Token)match(input,91,FOLLOW_124); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getDECIMALAccess().getEKeyword_3_0_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalSim.g:9046:4: (kw= '+' | kw= '-' )?
                    int alt175=3;
                    int LA175_0 = input.LA(1);

                    if ( (LA175_0==92) ) {
                        alt175=1;
                    }
                    else if ( (LA175_0==93) ) {
                        alt175=2;
                    }
                    switch (alt175) {
                        case 1 :
                            // InternalSim.g:9047:5: kw= '+'
                            {
                            kw=(Token)match(input,92,FOLLOW_119); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getDECIMALAccess().getPlusSignKeyword_3_1_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalSim.g:9053:5: kw= '-'
                            {
                            kw=(Token)match(input,93,FOLLOW_119); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getDECIMALAccess().getHyphenMinusKeyword_3_1_1());
                              				
                            }

                            }
                            break;

                    }

                    this_NATURAL_7=(Token)match(input,RULE_NATURAL,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_NATURAL_7);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_NATURAL_7, grammarAccess.getDECIMALAccess().getNATURALTerminalRuleCall_3_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDECIMAL"


    // $ANTLR start "entryRuleDomFieldListStartSymbol"
    // InternalSim.g:9071:1: entryRuleDomFieldListStartSymbol returns [String current=null] : iv_ruleDomFieldListStartSymbol= ruleDomFieldListStartSymbol EOF ;
    public final String entryRuleDomFieldListStartSymbol() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleDomFieldListStartSymbol = null;


        try {
            // InternalSim.g:9071:63: (iv_ruleDomFieldListStartSymbol= ruleDomFieldListStartSymbol EOF )
            // InternalSim.g:9072:2: iv_ruleDomFieldListStartSymbol= ruleDomFieldListStartSymbol EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDomFieldListStartSymbolRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDomFieldListStartSymbol=ruleDomFieldListStartSymbol();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDomFieldListStartSymbol.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDomFieldListStartSymbol"


    // $ANTLR start "ruleDomFieldListStartSymbol"
    // InternalSim.g:9078:1: ruleDomFieldListStartSymbol returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '{' ;
    public final AntlrDatatypeRuleToken ruleDomFieldListStartSymbol() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalSim.g:9084:2: (kw= '{' )
            // InternalSim.g:9085:2: kw= '{'
            {
            kw=(Token)match(input,22,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getDomFieldListStartSymbolAccess().getLeftCurlyBracketKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDomFieldListStartSymbol"


    // $ANTLR start "entryRuleDQualifiedNameWithWildcard"
    // InternalSim.g:9093:1: entryRuleDQualifiedNameWithWildcard returns [String current=null] : iv_ruleDQualifiedNameWithWildcard= ruleDQualifiedNameWithWildcard EOF ;
    public final String entryRuleDQualifiedNameWithWildcard() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleDQualifiedNameWithWildcard = null;


        try {
            // InternalSim.g:9093:66: (iv_ruleDQualifiedNameWithWildcard= ruleDQualifiedNameWithWildcard EOF )
            // InternalSim.g:9094:2: iv_ruleDQualifiedNameWithWildcard= ruleDQualifiedNameWithWildcard EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDQualifiedNameWithWildcardRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDQualifiedNameWithWildcard=ruleDQualifiedNameWithWildcard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDQualifiedNameWithWildcard.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDQualifiedNameWithWildcard"


    // $ANTLR start "ruleDQualifiedNameWithWildcard"
    // InternalSim.g:9100:1: ruleDQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_DQualifiedName_0= ruleDQualifiedName (kw= '.*' )? ) ;
    public final AntlrDatatypeRuleToken ruleDQualifiedNameWithWildcard() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_DQualifiedName_0 = null;



        	enterRule();

        try {
            // InternalSim.g:9106:2: ( (this_DQualifiedName_0= ruleDQualifiedName (kw= '.*' )? ) )
            // InternalSim.g:9107:2: (this_DQualifiedName_0= ruleDQualifiedName (kw= '.*' )? )
            {
            // InternalSim.g:9107:2: (this_DQualifiedName_0= ruleDQualifiedName (kw= '.*' )? )
            // InternalSim.g:9108:3: this_DQualifiedName_0= ruleDQualifiedName (kw= '.*' )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDQualifiedNameWithWildcardAccess().getDQualifiedNameParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_125);
            this_DQualifiedName_0=ruleDQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_DQualifiedName_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSim.g:9118:3: (kw= '.*' )?
            int alt177=2;
            int LA177_0 = input.LA(1);

            if ( (LA177_0==94) ) {
                alt177=1;
            }
            switch (alt177) {
                case 1 :
                    // InternalSim.g:9119:4: kw= '.*'
                    {
                    kw=(Token)match(input,94,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getDQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDQualifiedNameWithWildcard"


    // $ANTLR start "entryRuleDQualifiedName"
    // InternalSim.g:9129:1: entryRuleDQualifiedName returns [String current=null] : iv_ruleDQualifiedName= ruleDQualifiedName EOF ;
    public final String entryRuleDQualifiedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleDQualifiedName = null;


        try {
            // InternalSim.g:9129:54: (iv_ruleDQualifiedName= ruleDQualifiedName EOF )
            // InternalSim.g:9130:2: iv_ruleDQualifiedName= ruleDQualifiedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDQualifiedNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDQualifiedName=ruleDQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDQualifiedName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDQualifiedName"


    // $ANTLR start "ruleDQualifiedName"
    // InternalSim.g:9136:1: ruleDQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID (kw= '.' this_ID_2= RULE_ID )* ) ;
    public final AntlrDatatypeRuleToken ruleDQualifiedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token kw=null;
        Token this_ID_2=null;


        	enterRule();

        try {
            // InternalSim.g:9142:2: ( (this_ID_0= RULE_ID (kw= '.' this_ID_2= RULE_ID )* ) )
            // InternalSim.g:9143:2: (this_ID_0= RULE_ID (kw= '.' this_ID_2= RULE_ID )* )
            {
            // InternalSim.g:9143:2: (this_ID_0= RULE_ID (kw= '.' this_ID_2= RULE_ID )* )
            // InternalSim.g:9144:3: this_ID_0= RULE_ID (kw= '.' this_ID_2= RULE_ID )*
            {
            this_ID_0=(Token)match(input,RULE_ID,FOLLOW_89); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_ID_0);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_ID_0, grammarAccess.getDQualifiedNameAccess().getIDTerminalRuleCall_0());
              		
            }
            // InternalSim.g:9151:3: (kw= '.' this_ID_2= RULE_ID )*
            loop178:
            do {
                int alt178=2;
                int LA178_0 = input.LA(1);

                if ( (LA178_0==68) ) {
                    alt178=1;
                }


                switch (alt178) {
            	case 1 :
            	    // InternalSim.g:9152:4: kw= '.' this_ID_2= RULE_ID
            	    {
            	    kw=(Token)match(input,68,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(kw);
            	      				newLeafNode(kw, grammarAccess.getDQualifiedNameAccess().getFullStopKeyword_1_0());
            	      			
            	    }
            	    this_ID_2=(Token)match(input,RULE_ID,FOLLOW_89); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(this_ID_2);
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(this_ID_2, grammarAccess.getDQualifiedNameAccess().getIDTerminalRuleCall_1_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop178;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDQualifiedName"


    // $ANTLR start "ruleSTypeModelKind"
    // InternalSim.g:9169:1: ruleSTypeModelKind returns [Enumerator current=null] : (enumLiteral_0= 'base' ) ;
    public final Enumerator ruleSTypeModelKind() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSim.g:9175:2: ( (enumLiteral_0= 'base' ) )
            // InternalSim.g:9176:2: (enumLiteral_0= 'base' )
            {
            // InternalSim.g:9176:2: (enumLiteral_0= 'base' )
            // InternalSim.g:9177:3: enumLiteral_0= 'base'
            {
            enumLiteral_0=(Token)match(input,95,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getSTypeModelKindAccess().getBASEEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getSTypeModelKindAccess().getBASEEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSTypeModelKind"


    // $ANTLR start "ruleSInformationModelKind"
    // InternalSim.g:9186:1: ruleSInformationModelKind returns [Enumerator current=null] : ( (enumLiteral_0= 'interface' ) | (enumLiteral_1= 'core' ) ) ;
    public final Enumerator ruleSInformationModelKind() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
            // InternalSim.g:9192:2: ( ( (enumLiteral_0= 'interface' ) | (enumLiteral_1= 'core' ) ) )
            // InternalSim.g:9193:2: ( (enumLiteral_0= 'interface' ) | (enumLiteral_1= 'core' ) )
            {
            // InternalSim.g:9193:2: ( (enumLiteral_0= 'interface' ) | (enumLiteral_1= 'core' ) )
            int alt179=2;
            int LA179_0 = input.LA(1);

            if ( (LA179_0==96) ) {
                alt179=1;
            }
            else if ( (LA179_0==97) ) {
                alt179=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 179, 0, input);

                throw nvae;
            }
            switch (alt179) {
                case 1 :
                    // InternalSim.g:9194:3: (enumLiteral_0= 'interface' )
                    {
                    // InternalSim.g:9194:3: (enumLiteral_0= 'interface' )
                    // InternalSim.g:9195:4: enumLiteral_0= 'interface'
                    {
                    enumLiteral_0=(Token)match(input,96,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSInformationModelKindAccess().getINTERFACEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getSInformationModelKindAccess().getINTERFACEEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:9202:3: (enumLiteral_1= 'core' )
                    {
                    // InternalSim.g:9202:3: (enumLiteral_1= 'core' )
                    // InternalSim.g:9203:4: enumLiteral_1= 'core'
                    {
                    enumLiteral_1=(Token)match(input,97,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSInformationModelKindAccess().getCOREEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getSInformationModelKindAccess().getCOREEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSInformationModelKind"


    // $ANTLR start "ruleSimAbstractType"
    // InternalSim.g:9213:1: ruleSimAbstractType returns [Enumerator current=null] : ( (enumLiteral_0= 'nonabstract' ) | (enumLiteral_1= 'abstract' ) ) ;
    public final Enumerator ruleSimAbstractType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
            // InternalSim.g:9219:2: ( ( (enumLiteral_0= 'nonabstract' ) | (enumLiteral_1= 'abstract' ) ) )
            // InternalSim.g:9220:2: ( (enumLiteral_0= 'nonabstract' ) | (enumLiteral_1= 'abstract' ) )
            {
            // InternalSim.g:9220:2: ( (enumLiteral_0= 'nonabstract' ) | (enumLiteral_1= 'abstract' ) )
            int alt180=2;
            int LA180_0 = input.LA(1);

            if ( (LA180_0==98) ) {
                alt180=1;
            }
            else if ( (LA180_0==51) ) {
                alt180=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 180, 0, input);

                throw nvae;
            }
            switch (alt180) {
                case 1 :
                    // InternalSim.g:9221:3: (enumLiteral_0= 'nonabstract' )
                    {
                    // InternalSim.g:9221:3: (enumLiteral_0= 'nonabstract' )
                    // InternalSim.g:9222:4: enumLiteral_0= 'nonabstract'
                    {
                    enumLiteral_0=(Token)match(input,98,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSimAbstractTypeAccess().getFALSEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getSimAbstractTypeAccess().getFALSEEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:9229:3: (enumLiteral_1= 'abstract' )
                    {
                    // InternalSim.g:9229:3: (enumLiteral_1= 'abstract' )
                    // InternalSim.g:9230:4: enumLiteral_1= 'abstract'
                    {
                    enumLiteral_1=(Token)match(input,51,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSimAbstractTypeAccess().getTRUEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getSimAbstractTypeAccess().getTRUEEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimAbstractType"


    // $ANTLR start "ruleSimRootEntity"
    // InternalSim.g:9240:1: ruleSimRootEntity returns [Enumerator current=null] : ( (enumLiteral_0= 'nonroot' ) | (enumLiteral_1= 'root' ) ) ;
    public final Enumerator ruleSimRootEntity() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
            // InternalSim.g:9246:2: ( ( (enumLiteral_0= 'nonroot' ) | (enumLiteral_1= 'root' ) ) )
            // InternalSim.g:9247:2: ( (enumLiteral_0= 'nonroot' ) | (enumLiteral_1= 'root' ) )
            {
            // InternalSim.g:9247:2: ( (enumLiteral_0= 'nonroot' ) | (enumLiteral_1= 'root' ) )
            int alt181=2;
            int LA181_0 = input.LA(1);

            if ( (LA181_0==99) ) {
                alt181=1;
            }
            else if ( (LA181_0==37) ) {
                alt181=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 181, 0, input);

                throw nvae;
            }
            switch (alt181) {
                case 1 :
                    // InternalSim.g:9248:3: (enumLiteral_0= 'nonroot' )
                    {
                    // InternalSim.g:9248:3: (enumLiteral_0= 'nonroot' )
                    // InternalSim.g:9249:4: enumLiteral_0= 'nonroot'
                    {
                    enumLiteral_0=(Token)match(input,99,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSimRootEntityAccess().getFALSEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getSimRootEntityAccess().getFALSEEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:9256:3: (enumLiteral_1= 'root' )
                    {
                    // InternalSim.g:9256:3: (enumLiteral_1= 'root' )
                    // InternalSim.g:9257:4: enumLiteral_1= 'root'
                    {
                    enumLiteral_1=(Token)match(input,37,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSimRootEntityAccess().getTRUEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getSimRootEntityAccess().getTRUEEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimRootEntity"


    // $ANTLR start "ruleSimDetailType"
    // InternalSim.g:9267:1: ruleSimDetailType returns [Enumerator current=null] : (enumLiteral_0= 'detail' ) ;
    public final Enumerator ruleSimDetailType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSim.g:9273:2: ( (enumLiteral_0= 'detail' ) )
            // InternalSim.g:9274:2: (enumLiteral_0= 'detail' )
            {
            // InternalSim.g:9274:2: (enumLiteral_0= 'detail' )
            // InternalSim.g:9275:3: enumLiteral_0= 'detail'
            {
            enumLiteral_0=(Token)match(input,41,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getSimDetailTypeAccess().getTRUEEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getSimDetailTypeAccess().getTRUEEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimDetailType"


    // $ANTLR start "ruleSimEntityType"
    // InternalSim.g:9284:1: ruleSimEntityType returns [Enumerator current=null] : (enumLiteral_0= 'entity' ) ;
    public final Enumerator ruleSimEntityType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSim.g:9290:2: ( (enumLiteral_0= 'entity' ) )
            // InternalSim.g:9291:2: (enumLiteral_0= 'entity' )
            {
            // InternalSim.g:9291:2: (enumLiteral_0= 'entity' )
            // InternalSim.g:9292:3: enumLiteral_0= 'entity'
            {
            enumLiteral_0=(Token)match(input,38,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getSimEntityTypeAccess().getFALSEEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getSimEntityTypeAccess().getFALSEEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimEntityType"


    // $ANTLR start "ruleDEntityNatureAutonomous"
    // InternalSim.g:9301:1: ruleDEntityNatureAutonomous returns [Enumerator current=null] : (enumLiteral_0= 'autonomous' ) ;
    public final Enumerator ruleDEntityNatureAutonomous() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSim.g:9307:2: ( (enumLiteral_0= 'autonomous' ) )
            // InternalSim.g:9308:2: (enumLiteral_0= 'autonomous' )
            {
            // InternalSim.g:9308:2: (enumLiteral_0= 'autonomous' )
            // InternalSim.g:9309:3: enumLiteral_0= 'autonomous'
            {
            enumLiteral_0=(Token)match(input,100,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getDEntityNatureAutonomousAccess().getAUTONOMOUS_ENTITYEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getDEntityNatureAutonomousAccess().getAUTONOMOUS_ENTITYEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDEntityNatureAutonomous"


    // $ANTLR start "ruleDEntityNatureRelationship"
    // InternalSim.g:9318:1: ruleDEntityNatureRelationship returns [Enumerator current=null] : (enumLiteral_0= 'relationship' ) ;
    public final Enumerator ruleDEntityNatureRelationship() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSim.g:9324:2: ( (enumLiteral_0= 'relationship' ) )
            // InternalSim.g:9325:2: (enumLiteral_0= 'relationship' )
            {
            // InternalSim.g:9325:2: (enumLiteral_0= 'relationship' )
            // InternalSim.g:9326:3: enumLiteral_0= 'relationship'
            {
            enumLiteral_0=(Token)match(input,101,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getDEntityNatureRelationshipAccess().getRELATIONSHIPEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getDEntityNatureRelationshipAccess().getRELATIONSHIPEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDEntityNatureRelationship"


    // $ANTLR start "ruleDAssociationKind"
    // InternalSim.g:9335:1: ruleDAssociationKind returns [Enumerator current=null] : ( (enumLiteral_0= 'references' ) | (enumLiteral_1= 'contains' ) ) ;
    public final Enumerator ruleDAssociationKind() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
            // InternalSim.g:9341:2: ( ( (enumLiteral_0= 'references' ) | (enumLiteral_1= 'contains' ) ) )
            // InternalSim.g:9342:2: ( (enumLiteral_0= 'references' ) | (enumLiteral_1= 'contains' ) )
            {
            // InternalSim.g:9342:2: ( (enumLiteral_0= 'references' ) | (enumLiteral_1= 'contains' ) )
            int alt182=2;
            int LA182_0 = input.LA(1);

            if ( (LA182_0==102) ) {
                alt182=1;
            }
            else if ( (LA182_0==56) ) {
                alt182=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 182, 0, input);

                throw nvae;
            }
            switch (alt182) {
                case 1 :
                    // InternalSim.g:9343:3: (enumLiteral_0= 'references' )
                    {
                    // InternalSim.g:9343:3: (enumLiteral_0= 'references' )
                    // InternalSim.g:9344:4: enumLiteral_0= 'references'
                    {
                    enumLiteral_0=(Token)match(input,102,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDAssociationKindAccess().getREFERENCEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getDAssociationKindAccess().getREFERENCEEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:9351:3: (enumLiteral_1= 'contains' )
                    {
                    // InternalSim.g:9351:3: (enumLiteral_1= 'contains' )
                    // InternalSim.g:9352:4: enumLiteral_1= 'contains'
                    {
                    enumLiteral_1=(Token)match(input,56,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDAssociationKindAccess().getCOMPOSITEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getDAssociationKindAccess().getCOMPOSITEEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDAssociationKind"


    // $ANTLR start "ruleDAssociationKindInverse"
    // InternalSim.g:9362:1: ruleDAssociationKindInverse returns [Enumerator current=null] : (enumLiteral_0= 'inverse' ) ;
    public final Enumerator ruleDAssociationKindInverse() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSim.g:9368:2: ( (enumLiteral_0= 'inverse' ) )
            // InternalSim.g:9369:2: (enumLiteral_0= 'inverse' )
            {
            // InternalSim.g:9369:2: (enumLiteral_0= 'inverse' )
            // InternalSim.g:9370:3: enumLiteral_0= 'inverse'
            {
            enumLiteral_0=(Token)match(input,103,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getDAssociationKindInverseAccess().getINVERSE_COMPOSITEEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getDAssociationKindInverseAccess().getINVERSE_COMPOSITEEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDAssociationKindInverse"


    // $ANTLR start "ruleDmxBaseType"
    // InternalSim.g:9379:1: ruleDmxBaseType returns [Enumerator current=null] : ( (enumLiteral_0= 'VOID' ) | (enumLiteral_1= 'BOOLEAN' ) | (enumLiteral_2= 'NUMBER' ) | (enumLiteral_3= 'TEXT' ) | (enumLiteral_4= 'IDENTIFIER' ) | (enumLiteral_5= 'TIMEPOINT' ) | (enumLiteral_6= 'STATE' ) | (enumLiteral_7= 'STATE_EVENT' ) | (enumLiteral_8= 'COMPLEX' ) | (enumLiteral_9= 'NOTIFICATION' ) | (enumLiteral_10= 'SERVICE' ) ) ;
    public final Enumerator ruleDmxBaseType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;
        Token enumLiteral_6=null;
        Token enumLiteral_7=null;
        Token enumLiteral_8=null;
        Token enumLiteral_9=null;
        Token enumLiteral_10=null;


        	enterRule();

        try {
            // InternalSim.g:9385:2: ( ( (enumLiteral_0= 'VOID' ) | (enumLiteral_1= 'BOOLEAN' ) | (enumLiteral_2= 'NUMBER' ) | (enumLiteral_3= 'TEXT' ) | (enumLiteral_4= 'IDENTIFIER' ) | (enumLiteral_5= 'TIMEPOINT' ) | (enumLiteral_6= 'STATE' ) | (enumLiteral_7= 'STATE_EVENT' ) | (enumLiteral_8= 'COMPLEX' ) | (enumLiteral_9= 'NOTIFICATION' ) | (enumLiteral_10= 'SERVICE' ) ) )
            // InternalSim.g:9386:2: ( (enumLiteral_0= 'VOID' ) | (enumLiteral_1= 'BOOLEAN' ) | (enumLiteral_2= 'NUMBER' ) | (enumLiteral_3= 'TEXT' ) | (enumLiteral_4= 'IDENTIFIER' ) | (enumLiteral_5= 'TIMEPOINT' ) | (enumLiteral_6= 'STATE' ) | (enumLiteral_7= 'STATE_EVENT' ) | (enumLiteral_8= 'COMPLEX' ) | (enumLiteral_9= 'NOTIFICATION' ) | (enumLiteral_10= 'SERVICE' ) )
            {
            // InternalSim.g:9386:2: ( (enumLiteral_0= 'VOID' ) | (enumLiteral_1= 'BOOLEAN' ) | (enumLiteral_2= 'NUMBER' ) | (enumLiteral_3= 'TEXT' ) | (enumLiteral_4= 'IDENTIFIER' ) | (enumLiteral_5= 'TIMEPOINT' ) | (enumLiteral_6= 'STATE' ) | (enumLiteral_7= 'STATE_EVENT' ) | (enumLiteral_8= 'COMPLEX' ) | (enumLiteral_9= 'NOTIFICATION' ) | (enumLiteral_10= 'SERVICE' ) )
            int alt183=11;
            switch ( input.LA(1) ) {
            case 104:
                {
                alt183=1;
                }
                break;
            case 105:
                {
                alt183=2;
                }
                break;
            case 106:
                {
                alt183=3;
                }
                break;
            case 107:
                {
                alt183=4;
                }
                break;
            case 108:
                {
                alt183=5;
                }
                break;
            case 109:
                {
                alt183=6;
                }
                break;
            case 110:
                {
                alt183=7;
                }
                break;
            case 111:
                {
                alt183=8;
                }
                break;
            case 112:
                {
                alt183=9;
                }
                break;
            case 113:
                {
                alt183=10;
                }
                break;
            case 114:
                {
                alt183=11;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 183, 0, input);

                throw nvae;
            }

            switch (alt183) {
                case 1 :
                    // InternalSim.g:9387:3: (enumLiteral_0= 'VOID' )
                    {
                    // InternalSim.g:9387:3: (enumLiteral_0= 'VOID' )
                    // InternalSim.g:9388:4: enumLiteral_0= 'VOID'
                    {
                    enumLiteral_0=(Token)match(input,104,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDmxBaseTypeAccess().getVOIDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getDmxBaseTypeAccess().getVOIDEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:9395:3: (enumLiteral_1= 'BOOLEAN' )
                    {
                    // InternalSim.g:9395:3: (enumLiteral_1= 'BOOLEAN' )
                    // InternalSim.g:9396:4: enumLiteral_1= 'BOOLEAN'
                    {
                    enumLiteral_1=(Token)match(input,105,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDmxBaseTypeAccess().getBOOLEANEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getDmxBaseTypeAccess().getBOOLEANEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSim.g:9403:3: (enumLiteral_2= 'NUMBER' )
                    {
                    // InternalSim.g:9403:3: (enumLiteral_2= 'NUMBER' )
                    // InternalSim.g:9404:4: enumLiteral_2= 'NUMBER'
                    {
                    enumLiteral_2=(Token)match(input,106,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDmxBaseTypeAccess().getNUMBEREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getDmxBaseTypeAccess().getNUMBEREnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSim.g:9411:3: (enumLiteral_3= 'TEXT' )
                    {
                    // InternalSim.g:9411:3: (enumLiteral_3= 'TEXT' )
                    // InternalSim.g:9412:4: enumLiteral_3= 'TEXT'
                    {
                    enumLiteral_3=(Token)match(input,107,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDmxBaseTypeAccess().getTEXTEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getDmxBaseTypeAccess().getTEXTEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSim.g:9419:3: (enumLiteral_4= 'IDENTIFIER' )
                    {
                    // InternalSim.g:9419:3: (enumLiteral_4= 'IDENTIFIER' )
                    // InternalSim.g:9420:4: enumLiteral_4= 'IDENTIFIER'
                    {
                    enumLiteral_4=(Token)match(input,108,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDmxBaseTypeAccess().getIDENTIFIEREnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getDmxBaseTypeAccess().getIDENTIFIEREnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSim.g:9427:3: (enumLiteral_5= 'TIMEPOINT' )
                    {
                    // InternalSim.g:9427:3: (enumLiteral_5= 'TIMEPOINT' )
                    // InternalSim.g:9428:4: enumLiteral_5= 'TIMEPOINT'
                    {
                    enumLiteral_5=(Token)match(input,109,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDmxBaseTypeAccess().getTIMEPOINTEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_5, grammarAccess.getDmxBaseTypeAccess().getTIMEPOINTEnumLiteralDeclaration_5());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSim.g:9435:3: (enumLiteral_6= 'STATE' )
                    {
                    // InternalSim.g:9435:3: (enumLiteral_6= 'STATE' )
                    // InternalSim.g:9436:4: enumLiteral_6= 'STATE'
                    {
                    enumLiteral_6=(Token)match(input,110,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDmxBaseTypeAccess().getSTATEEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_6, grammarAccess.getDmxBaseTypeAccess().getSTATEEnumLiteralDeclaration_6());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSim.g:9443:3: (enumLiteral_7= 'STATE_EVENT' )
                    {
                    // InternalSim.g:9443:3: (enumLiteral_7= 'STATE_EVENT' )
                    // InternalSim.g:9444:4: enumLiteral_7= 'STATE_EVENT'
                    {
                    enumLiteral_7=(Token)match(input,111,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDmxBaseTypeAccess().getSTATE_EVENTEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_7, grammarAccess.getDmxBaseTypeAccess().getSTATE_EVENTEnumLiteralDeclaration_7());
                      			
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalSim.g:9451:3: (enumLiteral_8= 'COMPLEX' )
                    {
                    // InternalSim.g:9451:3: (enumLiteral_8= 'COMPLEX' )
                    // InternalSim.g:9452:4: enumLiteral_8= 'COMPLEX'
                    {
                    enumLiteral_8=(Token)match(input,112,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDmxBaseTypeAccess().getCOMPLEXEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_8, grammarAccess.getDmxBaseTypeAccess().getCOMPLEXEnumLiteralDeclaration_8());
                      			
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalSim.g:9459:3: (enumLiteral_9= 'NOTIFICATION' )
                    {
                    // InternalSim.g:9459:3: (enumLiteral_9= 'NOTIFICATION' )
                    // InternalSim.g:9460:4: enumLiteral_9= 'NOTIFICATION'
                    {
                    enumLiteral_9=(Token)match(input,113,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDmxBaseTypeAccess().getNOTIFICATIONEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_9, grammarAccess.getDmxBaseTypeAccess().getNOTIFICATIONEnumLiteralDeclaration_9());
                      			
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalSim.g:9467:3: (enumLiteral_10= 'SERVICE' )
                    {
                    // InternalSim.g:9467:3: (enumLiteral_10= 'SERVICE' )
                    // InternalSim.g:9468:4: enumLiteral_10= 'SERVICE'
                    {
                    enumLiteral_10=(Token)match(input,114,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDmxBaseTypeAccess().getSERVICEEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_10, grammarAccess.getDmxBaseTypeAccess().getSERVICEEnumLiteralDeclaration_10());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxBaseType"


    // $ANTLR start "ruleDmxOpOr"
    // InternalSim.g:9478:1: ruleDmxOpOr returns [Enumerator current=null] : ( (enumLiteral_0= 'OR' ) | (enumLiteral_1= 'or' ) | (enumLiteral_2= 'XOR' ) | (enumLiteral_3= 'xor' ) ) ;
    public final Enumerator ruleDmxOpOr() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;


        	enterRule();

        try {
            // InternalSim.g:9484:2: ( ( (enumLiteral_0= 'OR' ) | (enumLiteral_1= 'or' ) | (enumLiteral_2= 'XOR' ) | (enumLiteral_3= 'xor' ) ) )
            // InternalSim.g:9485:2: ( (enumLiteral_0= 'OR' ) | (enumLiteral_1= 'or' ) | (enumLiteral_2= 'XOR' ) | (enumLiteral_3= 'xor' ) )
            {
            // InternalSim.g:9485:2: ( (enumLiteral_0= 'OR' ) | (enumLiteral_1= 'or' ) | (enumLiteral_2= 'XOR' ) | (enumLiteral_3= 'xor' ) )
            int alt184=4;
            switch ( input.LA(1) ) {
            case 115:
                {
                alt184=1;
                }
                break;
            case 116:
                {
                alt184=2;
                }
                break;
            case 117:
                {
                alt184=3;
                }
                break;
            case 118:
                {
                alt184=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 184, 0, input);

                throw nvae;
            }

            switch (alt184) {
                case 1 :
                    // InternalSim.g:9486:3: (enumLiteral_0= 'OR' )
                    {
                    // InternalSim.g:9486:3: (enumLiteral_0= 'OR' )
                    // InternalSim.g:9487:4: enumLiteral_0= 'OR'
                    {
                    enumLiteral_0=(Token)match(input,115,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDmxOpOrAccess().getOREnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getDmxOpOrAccess().getOREnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:9494:3: (enumLiteral_1= 'or' )
                    {
                    // InternalSim.g:9494:3: (enumLiteral_1= 'or' )
                    // InternalSim.g:9495:4: enumLiteral_1= 'or'
                    {
                    enumLiteral_1=(Token)match(input,116,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDmxOpOrAccess().getOREnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getDmxOpOrAccess().getOREnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSim.g:9502:3: (enumLiteral_2= 'XOR' )
                    {
                    // InternalSim.g:9502:3: (enumLiteral_2= 'XOR' )
                    // InternalSim.g:9503:4: enumLiteral_2= 'XOR'
                    {
                    enumLiteral_2=(Token)match(input,117,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDmxOpOrAccess().getXOREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getDmxOpOrAccess().getXOREnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSim.g:9510:3: (enumLiteral_3= 'xor' )
                    {
                    // InternalSim.g:9510:3: (enumLiteral_3= 'xor' )
                    // InternalSim.g:9511:4: enumLiteral_3= 'xor'
                    {
                    enumLiteral_3=(Token)match(input,118,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDmxOpOrAccess().getXOREnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getDmxOpOrAccess().getXOREnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxOpOr"


    // $ANTLR start "ruleDmxOpAnd"
    // InternalSim.g:9521:1: ruleDmxOpAnd returns [Enumerator current=null] : ( (enumLiteral_0= 'AND' ) | (enumLiteral_1= 'and' ) ) ;
    public final Enumerator ruleDmxOpAnd() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
            // InternalSim.g:9527:2: ( ( (enumLiteral_0= 'AND' ) | (enumLiteral_1= 'and' ) ) )
            // InternalSim.g:9528:2: ( (enumLiteral_0= 'AND' ) | (enumLiteral_1= 'and' ) )
            {
            // InternalSim.g:9528:2: ( (enumLiteral_0= 'AND' ) | (enumLiteral_1= 'and' ) )
            int alt185=2;
            int LA185_0 = input.LA(1);

            if ( (LA185_0==119) ) {
                alt185=1;
            }
            else if ( (LA185_0==25) ) {
                alt185=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 185, 0, input);

                throw nvae;
            }
            switch (alt185) {
                case 1 :
                    // InternalSim.g:9529:3: (enumLiteral_0= 'AND' )
                    {
                    // InternalSim.g:9529:3: (enumLiteral_0= 'AND' )
                    // InternalSim.g:9530:4: enumLiteral_0= 'AND'
                    {
                    enumLiteral_0=(Token)match(input,119,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDmxOpAndAccess().getANDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getDmxOpAndAccess().getANDEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:9537:3: (enumLiteral_1= 'and' )
                    {
                    // InternalSim.g:9537:3: (enumLiteral_1= 'and' )
                    // InternalSim.g:9538:4: enumLiteral_1= 'and'
                    {
                    enumLiteral_1=(Token)match(input,25,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDmxOpAndAccess().getANDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getDmxOpAndAccess().getANDEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxOpAnd"


    // $ANTLR start "ruleDmxOpEquality"
    // InternalSim.g:9548:1: ruleDmxOpEquality returns [Enumerator current=null] : ( (enumLiteral_0= '=' ) | (enumLiteral_1= '!=' ) | (enumLiteral_2= '<>' ) ) ;
    public final Enumerator ruleDmxOpEquality() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;


        	enterRule();

        try {
            // InternalSim.g:9554:2: ( ( (enumLiteral_0= '=' ) | (enumLiteral_1= '!=' ) | (enumLiteral_2= '<>' ) ) )
            // InternalSim.g:9555:2: ( (enumLiteral_0= '=' ) | (enumLiteral_1= '!=' ) | (enumLiteral_2= '<>' ) )
            {
            // InternalSim.g:9555:2: ( (enumLiteral_0= '=' ) | (enumLiteral_1= '!=' ) | (enumLiteral_2= '<>' ) )
            int alt186=3;
            switch ( input.LA(1) ) {
            case 74:
                {
                alt186=1;
                }
                break;
            case 120:
                {
                alt186=2;
                }
                break;
            case 121:
                {
                alt186=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 186, 0, input);

                throw nvae;
            }

            switch (alt186) {
                case 1 :
                    // InternalSim.g:9556:3: (enumLiteral_0= '=' )
                    {
                    // InternalSim.g:9556:3: (enumLiteral_0= '=' )
                    // InternalSim.g:9557:4: enumLiteral_0= '='
                    {
                    enumLiteral_0=(Token)match(input,74,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDmxOpEqualityAccess().getEQUALEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getDmxOpEqualityAccess().getEQUALEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:9564:3: (enumLiteral_1= '!=' )
                    {
                    // InternalSim.g:9564:3: (enumLiteral_1= '!=' )
                    // InternalSim.g:9565:4: enumLiteral_1= '!='
                    {
                    enumLiteral_1=(Token)match(input,120,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDmxOpEqualityAccess().getNOT_EQUALEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getDmxOpEqualityAccess().getNOT_EQUALEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSim.g:9572:3: (enumLiteral_2= '<>' )
                    {
                    // InternalSim.g:9572:3: (enumLiteral_2= '<>' )
                    // InternalSim.g:9573:4: enumLiteral_2= '<>'
                    {
                    enumLiteral_2=(Token)match(input,121,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDmxOpEqualityAccess().getNOT_EQUALEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getDmxOpEqualityAccess().getNOT_EQUALEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxOpEquality"


    // $ANTLR start "ruleOpCompare"
    // InternalSim.g:9583:1: ruleOpCompare returns [Enumerator current=null] : ( (enumLiteral_0= '<' ) | (enumLiteral_1= '<=' ) | (enumLiteral_2= '\\u2264' ) | (enumLiteral_3= '>=' ) | (enumLiteral_4= '\\u2265' ) | (enumLiteral_5= '>' ) ) ;
    public final Enumerator ruleOpCompare() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;


        	enterRule();

        try {
            // InternalSim.g:9589:2: ( ( (enumLiteral_0= '<' ) | (enumLiteral_1= '<=' ) | (enumLiteral_2= '\\u2264' ) | (enumLiteral_3= '>=' ) | (enumLiteral_4= '\\u2265' ) | (enumLiteral_5= '>' ) ) )
            // InternalSim.g:9590:2: ( (enumLiteral_0= '<' ) | (enumLiteral_1= '<=' ) | (enumLiteral_2= '\\u2264' ) | (enumLiteral_3= '>=' ) | (enumLiteral_4= '\\u2265' ) | (enumLiteral_5= '>' ) )
            {
            // InternalSim.g:9590:2: ( (enumLiteral_0= '<' ) | (enumLiteral_1= '<=' ) | (enumLiteral_2= '\\u2264' ) | (enumLiteral_3= '>=' ) | (enumLiteral_4= '\\u2265' ) | (enumLiteral_5= '>' ) )
            int alt187=6;
            switch ( input.LA(1) ) {
            case 122:
                {
                alt187=1;
                }
                break;
            case 123:
                {
                alt187=2;
                }
                break;
            case 124:
                {
                alt187=3;
                }
                break;
            case 125:
                {
                alt187=4;
                }
                break;
            case 126:
                {
                alt187=5;
                }
                break;
            case 127:
                {
                alt187=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 187, 0, input);

                throw nvae;
            }

            switch (alt187) {
                case 1 :
                    // InternalSim.g:9591:3: (enumLiteral_0= '<' )
                    {
                    // InternalSim.g:9591:3: (enumLiteral_0= '<' )
                    // InternalSim.g:9592:4: enumLiteral_0= '<'
                    {
                    enumLiteral_0=(Token)match(input,122,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getOpCompareAccess().getLESSEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getOpCompareAccess().getLESSEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:9599:3: (enumLiteral_1= '<=' )
                    {
                    // InternalSim.g:9599:3: (enumLiteral_1= '<=' )
                    // InternalSim.g:9600:4: enumLiteral_1= '<='
                    {
                    enumLiteral_1=(Token)match(input,123,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getOpCompareAccess().getLESS_OR_EQUALEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getOpCompareAccess().getLESS_OR_EQUALEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSim.g:9607:3: (enumLiteral_2= '\\u2264' )
                    {
                    // InternalSim.g:9607:3: (enumLiteral_2= '\\u2264' )
                    // InternalSim.g:9608:4: enumLiteral_2= '\\u2264'
                    {
                    enumLiteral_2=(Token)match(input,124,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getOpCompareAccess().getLESS_OR_EQUALEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getOpCompareAccess().getLESS_OR_EQUALEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSim.g:9615:3: (enumLiteral_3= '>=' )
                    {
                    // InternalSim.g:9615:3: (enumLiteral_3= '>=' )
                    // InternalSim.g:9616:4: enumLiteral_3= '>='
                    {
                    enumLiteral_3=(Token)match(input,125,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getOpCompareAccess().getGREATER_OR_EQUALEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getOpCompareAccess().getGREATER_OR_EQUALEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSim.g:9623:3: (enumLiteral_4= '\\u2265' )
                    {
                    // InternalSim.g:9623:3: (enumLiteral_4= '\\u2265' )
                    // InternalSim.g:9624:4: enumLiteral_4= '\\u2265'
                    {
                    enumLiteral_4=(Token)match(input,126,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getOpCompareAccess().getGREATER_OR_EQUALEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getOpCompareAccess().getGREATER_OR_EQUALEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSim.g:9631:3: (enumLiteral_5= '>' )
                    {
                    // InternalSim.g:9631:3: (enumLiteral_5= '>' )
                    // InternalSim.g:9632:4: enumLiteral_5= '>'
                    {
                    enumLiteral_5=(Token)match(input,127,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getOpCompareAccess().getGREATEREnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_5, grammarAccess.getOpCompareAccess().getGREATEREnumLiteralDeclaration_5());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpCompare"


    // $ANTLR start "ruleOpOther"
    // InternalSim.g:9642:1: ruleOpOther returns [Enumerator current=null] : ( (enumLiteral_0= 'IN' ) | (enumLiteral_1= 'in' ) | (enumLiteral_2= '..' ) | (enumLiteral_3= '->' ) | (enumLiteral_4= '=>' ) ) ;
    public final Enumerator ruleOpOther() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;


        	enterRule();

        try {
            // InternalSim.g:9648:2: ( ( (enumLiteral_0= 'IN' ) | (enumLiteral_1= 'in' ) | (enumLiteral_2= '..' ) | (enumLiteral_3= '->' ) | (enumLiteral_4= '=>' ) ) )
            // InternalSim.g:9649:2: ( (enumLiteral_0= 'IN' ) | (enumLiteral_1= 'in' ) | (enumLiteral_2= '..' ) | (enumLiteral_3= '->' ) | (enumLiteral_4= '=>' ) )
            {
            // InternalSim.g:9649:2: ( (enumLiteral_0= 'IN' ) | (enumLiteral_1= 'in' ) | (enumLiteral_2= '..' ) | (enumLiteral_3= '->' ) | (enumLiteral_4= '=>' ) )
            int alt188=5;
            switch ( input.LA(1) ) {
            case 128:
                {
                alt188=1;
                }
                break;
            case 63:
                {
                alt188=2;
                }
                break;
            case 83:
                {
                alt188=3;
                }
                break;
            case 129:
                {
                alt188=4;
                }
                break;
            case 130:
                {
                alt188=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 188, 0, input);

                throw nvae;
            }

            switch (alt188) {
                case 1 :
                    // InternalSim.g:9650:3: (enumLiteral_0= 'IN' )
                    {
                    // InternalSim.g:9650:3: (enumLiteral_0= 'IN' )
                    // InternalSim.g:9651:4: enumLiteral_0= 'IN'
                    {
                    enumLiteral_0=(Token)match(input,128,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getOpOtherAccess().getINEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getOpOtherAccess().getINEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:9658:3: (enumLiteral_1= 'in' )
                    {
                    // InternalSim.g:9658:3: (enumLiteral_1= 'in' )
                    // InternalSim.g:9659:4: enumLiteral_1= 'in'
                    {
                    enumLiteral_1=(Token)match(input,63,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getOpOtherAccess().getINEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getOpOtherAccess().getINEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSim.g:9666:3: (enumLiteral_2= '..' )
                    {
                    // InternalSim.g:9666:3: (enumLiteral_2= '..' )
                    // InternalSim.g:9667:4: enumLiteral_2= '..'
                    {
                    enumLiteral_2=(Token)match(input,83,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getOpOtherAccess().getUNTILEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getOpOtherAccess().getUNTILEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSim.g:9674:3: (enumLiteral_3= '->' )
                    {
                    // InternalSim.g:9674:3: (enumLiteral_3= '->' )
                    // InternalSim.g:9675:4: enumLiteral_3= '->'
                    {
                    enumLiteral_3=(Token)match(input,129,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getOpOtherAccess().getSINGLE_ARROWEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getOpOtherAccess().getSINGLE_ARROWEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSim.g:9682:3: (enumLiteral_4= '=>' )
                    {
                    // InternalSim.g:9682:3: (enumLiteral_4= '=>' )
                    // InternalSim.g:9683:4: enumLiteral_4= '=>'
                    {
                    enumLiteral_4=(Token)match(input,130,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getOpOtherAccess().getDOUBLE_ARROWEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getOpOtherAccess().getDOUBLE_ARROWEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpOther"


    // $ANTLR start "ruleOpAdd"
    // InternalSim.g:9693:1: ruleOpAdd returns [Enumerator current=null] : ( (enumLiteral_0= '+' ) | (enumLiteral_1= '-' ) ) ;
    public final Enumerator ruleOpAdd() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
            // InternalSim.g:9699:2: ( ( (enumLiteral_0= '+' ) | (enumLiteral_1= '-' ) ) )
            // InternalSim.g:9700:2: ( (enumLiteral_0= '+' ) | (enumLiteral_1= '-' ) )
            {
            // InternalSim.g:9700:2: ( (enumLiteral_0= '+' ) | (enumLiteral_1= '-' ) )
            int alt189=2;
            int LA189_0 = input.LA(1);

            if ( (LA189_0==92) ) {
                alt189=1;
            }
            else if ( (LA189_0==93) ) {
                alt189=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 189, 0, input);

                throw nvae;
            }
            switch (alt189) {
                case 1 :
                    // InternalSim.g:9701:3: (enumLiteral_0= '+' )
                    {
                    // InternalSim.g:9701:3: (enumLiteral_0= '+' )
                    // InternalSim.g:9702:4: enumLiteral_0= '+'
                    {
                    enumLiteral_0=(Token)match(input,92,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getOpAddAccess().getADDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getOpAddAccess().getADDEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:9709:3: (enumLiteral_1= '-' )
                    {
                    // InternalSim.g:9709:3: (enumLiteral_1= '-' )
                    // InternalSim.g:9710:4: enumLiteral_1= '-'
                    {
                    enumLiteral_1=(Token)match(input,93,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getOpAddAccess().getSUBTRACTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getOpAddAccess().getSUBTRACTEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpAdd"


    // $ANTLR start "ruleOpMulti"
    // InternalSim.g:9720:1: ruleOpMulti returns [Enumerator current=null] : ( (enumLiteral_0= '*' ) | (enumLiteral_1= '/' ) | (enumLiteral_2= '**' ) | (enumLiteral_3= '%' ) ) ;
    public final Enumerator ruleOpMulti() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;


        	enterRule();

        try {
            // InternalSim.g:9726:2: ( ( (enumLiteral_0= '*' ) | (enumLiteral_1= '/' ) | (enumLiteral_2= '**' ) | (enumLiteral_3= '%' ) ) )
            // InternalSim.g:9727:2: ( (enumLiteral_0= '*' ) | (enumLiteral_1= '/' ) | (enumLiteral_2= '**' ) | (enumLiteral_3= '%' ) )
            {
            // InternalSim.g:9727:2: ( (enumLiteral_0= '*' ) | (enumLiteral_1= '/' ) | (enumLiteral_2= '**' ) | (enumLiteral_3= '%' ) )
            int alt190=4;
            switch ( input.LA(1) ) {
            case 46:
                {
                alt190=1;
                }
                break;
            case 131:
                {
                alt190=2;
                }
                break;
            case 132:
                {
                alt190=3;
                }
                break;
            case 133:
                {
                alt190=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 190, 0, input);

                throw nvae;
            }

            switch (alt190) {
                case 1 :
                    // InternalSim.g:9728:3: (enumLiteral_0= '*' )
                    {
                    // InternalSim.g:9728:3: (enumLiteral_0= '*' )
                    // InternalSim.g:9729:4: enumLiteral_0= '*'
                    {
                    enumLiteral_0=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getOpMultiAccess().getMULTIPLYEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getOpMultiAccess().getMULTIPLYEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:9736:3: (enumLiteral_1= '/' )
                    {
                    // InternalSim.g:9736:3: (enumLiteral_1= '/' )
                    // InternalSim.g:9737:4: enumLiteral_1= '/'
                    {
                    enumLiteral_1=(Token)match(input,131,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getOpMultiAccess().getDIVIDEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getOpMultiAccess().getDIVIDEEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSim.g:9744:3: (enumLiteral_2= '**' )
                    {
                    // InternalSim.g:9744:3: (enumLiteral_2= '**' )
                    // InternalSim.g:9745:4: enumLiteral_2= '**'
                    {
                    enumLiteral_2=(Token)match(input,132,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getOpMultiAccess().getPOWEREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getOpMultiAccess().getPOWEREnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSim.g:9752:3: (enumLiteral_3= '%' )
                    {
                    // InternalSim.g:9752:3: (enumLiteral_3= '%' )
                    // InternalSim.g:9753:4: enumLiteral_3= '%'
                    {
                    enumLiteral_3=(Token)match(input,133,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getOpMultiAccess().getMODULOEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getOpMultiAccess().getMODULOEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpMulti"


    // $ANTLR start "ruleOpUnary"
    // InternalSim.g:9763:1: ruleOpUnary returns [Enumerator current=null] : ( (enumLiteral_0= '+' ) | (enumLiteral_1= '-' ) | (enumLiteral_2= '!' ) | (enumLiteral_3= 'NOT' ) | (enumLiteral_4= 'not' ) ) ;
    public final Enumerator ruleOpUnary() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;


        	enterRule();

        try {
            // InternalSim.g:9769:2: ( ( (enumLiteral_0= '+' ) | (enumLiteral_1= '-' ) | (enumLiteral_2= '!' ) | (enumLiteral_3= 'NOT' ) | (enumLiteral_4= 'not' ) ) )
            // InternalSim.g:9770:2: ( (enumLiteral_0= '+' ) | (enumLiteral_1= '-' ) | (enumLiteral_2= '!' ) | (enumLiteral_3= 'NOT' ) | (enumLiteral_4= 'not' ) )
            {
            // InternalSim.g:9770:2: ( (enumLiteral_0= '+' ) | (enumLiteral_1= '-' ) | (enumLiteral_2= '!' ) | (enumLiteral_3= 'NOT' ) | (enumLiteral_4= 'not' ) )
            int alt191=5;
            switch ( input.LA(1) ) {
            case 92:
                {
                alt191=1;
                }
                break;
            case 93:
                {
                alt191=2;
                }
                break;
            case 134:
                {
                alt191=3;
                }
                break;
            case 135:
                {
                alt191=4;
                }
                break;
            case 136:
                {
                alt191=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 191, 0, input);

                throw nvae;
            }

            switch (alt191) {
                case 1 :
                    // InternalSim.g:9771:3: (enumLiteral_0= '+' )
                    {
                    // InternalSim.g:9771:3: (enumLiteral_0= '+' )
                    // InternalSim.g:9772:4: enumLiteral_0= '+'
                    {
                    enumLiteral_0=(Token)match(input,92,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getOpUnaryAccess().getPLUSEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getOpUnaryAccess().getPLUSEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:9779:3: (enumLiteral_1= '-' )
                    {
                    // InternalSim.g:9779:3: (enumLiteral_1= '-' )
                    // InternalSim.g:9780:4: enumLiteral_1= '-'
                    {
                    enumLiteral_1=(Token)match(input,93,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getOpUnaryAccess().getMINUSEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getOpUnaryAccess().getMINUSEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSim.g:9787:3: (enumLiteral_2= '!' )
                    {
                    // InternalSim.g:9787:3: (enumLiteral_2= '!' )
                    // InternalSim.g:9788:4: enumLiteral_2= '!'
                    {
                    enumLiteral_2=(Token)match(input,134,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getOpUnaryAccess().getNOTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getOpUnaryAccess().getNOTEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSim.g:9795:3: (enumLiteral_3= 'NOT' )
                    {
                    // InternalSim.g:9795:3: (enumLiteral_3= 'NOT' )
                    // InternalSim.g:9796:4: enumLiteral_3= 'NOT'
                    {
                    enumLiteral_3=(Token)match(input,135,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getOpUnaryAccess().getNOTEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getOpUnaryAccess().getNOTEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSim.g:9803:3: (enumLiteral_4= 'not' )
                    {
                    // InternalSim.g:9803:3: (enumLiteral_4= 'not' )
                    // InternalSim.g:9804:4: enumLiteral_4= 'not'
                    {
                    enumLiteral_4=(Token)match(input,136,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getOpUnaryAccess().getNOTEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getOpUnaryAccess().getNOTEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpUnary"


    // $ANTLR start "ruleDMultiplicityShorthand"
    // InternalSim.g:9814:1: ruleDMultiplicityShorthand returns [Enumerator current=null] : ( (enumLiteral_0= '?' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) ) ;
    public final Enumerator ruleDMultiplicityShorthand() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;


        	enterRule();

        try {
            // InternalSim.g:9820:2: ( ( (enumLiteral_0= '?' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) ) )
            // InternalSim.g:9821:2: ( (enumLiteral_0= '?' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) )
            {
            // InternalSim.g:9821:2: ( (enumLiteral_0= '?' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) )
            int alt192=3;
            switch ( input.LA(1) ) {
            case 137:
                {
                alt192=1;
                }
                break;
            case 92:
                {
                alt192=2;
                }
                break;
            case 46:
                {
                alt192=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 192, 0, input);

                throw nvae;
            }

            switch (alt192) {
                case 1 :
                    // InternalSim.g:9822:3: (enumLiteral_0= '?' )
                    {
                    // InternalSim.g:9822:3: (enumLiteral_0= '?' )
                    // InternalSim.g:9823:4: enumLiteral_0= '?'
                    {
                    enumLiteral_0=(Token)match(input,137,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDMultiplicityShorthandAccess().getZERO_OR_ONEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getDMultiplicityShorthandAccess().getZERO_OR_ONEEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:9830:3: (enumLiteral_1= '+' )
                    {
                    // InternalSim.g:9830:3: (enumLiteral_1= '+' )
                    // InternalSim.g:9831:4: enumLiteral_1= '+'
                    {
                    enumLiteral_1=(Token)match(input,92,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDMultiplicityShorthandAccess().getONE_OR_MOREEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getDMultiplicityShorthandAccess().getONE_OR_MOREEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSim.g:9838:3: (enumLiteral_2= '*' )
                    {
                    // InternalSim.g:9838:3: (enumLiteral_2= '*' )
                    // InternalSim.g:9839:4: enumLiteral_2= '*'
                    {
                    enumLiteral_2=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDMultiplicityShorthandAccess().getZERO_OR_MOREEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getDMultiplicityShorthandAccess().getZERO_OR_MOREEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDMultiplicityShorthand"

    // $ANTLR start synpred1_InternalSim
    public final void synpred1_InternalSim_fragment() throws RecognitionException {   
        // InternalSim.g:6372:6: ( ( () '.' ( ( RULE_ID ) ) ruleDmxOpSingleAssign ) )
        // InternalSim.g:6372:7: ( () '.' ( ( RULE_ID ) ) ruleDmxOpSingleAssign )
        {
        // InternalSim.g:6372:7: ( () '.' ( ( RULE_ID ) ) ruleDmxOpSingleAssign )
        // InternalSim.g:6373:7: () '.' ( ( RULE_ID ) ) ruleDmxOpSingleAssign
        {
        // InternalSim.g:6373:7: ()
        // InternalSim.g:6374:7: 
        {
        }

        match(input,68,FOLLOW_3); if (state.failed) return ;
        // InternalSim.g:6376:7: ( ( RULE_ID ) )
        // InternalSim.g:6377:8: ( RULE_ID )
        {
        // InternalSim.g:6377:8: ( RULE_ID )
        // InternalSim.g:6378:9: RULE_ID
        {
        match(input,RULE_ID,FOLLOW_90); if (state.failed) return ;

        }


        }

        pushFollow(FOLLOW_2);
        ruleDmxOpSingleAssign();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred1_InternalSim

    // $ANTLR start synpred2_InternalSim
    public final void synpred2_InternalSim_fragment() throws RecognitionException {   
        // InternalSim.g:6441:6: ( ( () '.' ) )
        // InternalSim.g:6441:7: ( () '.' )
        {
        // InternalSim.g:6441:7: ( () '.' )
        // InternalSim.g:6442:7: () '.'
        {
        // InternalSim.g:6442:7: ()
        // InternalSim.g:6443:7: 
        {
        }

        match(input,68,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred2_InternalSim

    // $ANTLR start synpred3_InternalSim
    public final void synpred3_InternalSim_fragment() throws RecognitionException {   
        // InternalSim.g:6477:8: ( ( '(' ) )
        // InternalSim.g:6477:9: ( '(' )
        {
        // InternalSim.g:6477:9: ( '(' )
        // InternalSim.g:6478:9: '('
        {
        match(input,45,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred3_InternalSim

    // $ANTLR start synpred4_InternalSim
    public final void synpred4_InternalSim_fragment() throws RecognitionException {   
        // InternalSim.g:6838:5: ( ( () ( ( ruleDmxOpOr ) ) ) )
        // InternalSim.g:6838:6: ( () ( ( ruleDmxOpOr ) ) )
        {
        // InternalSim.g:6838:6: ( () ( ( ruleDmxOpOr ) ) )
        // InternalSim.g:6839:6: () ( ( ruleDmxOpOr ) )
        {
        // InternalSim.g:6839:6: ()
        // InternalSim.g:6840:6: 
        {
        }

        // InternalSim.g:6841:6: ( ( ruleDmxOpOr ) )
        // InternalSim.g:6842:7: ( ruleDmxOpOr )
        {
        // InternalSim.g:6842:7: ( ruleDmxOpOr )
        // InternalSim.g:6843:8: ruleDmxOpOr
        {
        pushFollow(FOLLOW_2);
        ruleDmxOpOr();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred4_InternalSim

    // $ANTLR start synpred5_InternalSim
    public final void synpred5_InternalSim_fragment() throws RecognitionException {   
        // InternalSim.g:6926:5: ( ( () ( ( ruleDmxOpAnd ) ) ) )
        // InternalSim.g:6926:6: ( () ( ( ruleDmxOpAnd ) ) )
        {
        // InternalSim.g:6926:6: ( () ( ( ruleDmxOpAnd ) ) )
        // InternalSim.g:6927:6: () ( ( ruleDmxOpAnd ) )
        {
        // InternalSim.g:6927:6: ()
        // InternalSim.g:6928:6: 
        {
        }

        // InternalSim.g:6929:6: ( ( ruleDmxOpAnd ) )
        // InternalSim.g:6930:7: ( ruleDmxOpAnd )
        {
        // InternalSim.g:6930:7: ( ruleDmxOpAnd )
        // InternalSim.g:6931:8: ruleDmxOpAnd
        {
        pushFollow(FOLLOW_2);
        ruleDmxOpAnd();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred5_InternalSim

    // $ANTLR start synpred6_InternalSim
    public final void synpred6_InternalSim_fragment() throws RecognitionException {   
        // InternalSim.g:7014:5: ( ( () ( ( ruleDmxOpEquality ) ) ) )
        // InternalSim.g:7014:6: ( () ( ( ruleDmxOpEquality ) ) )
        {
        // InternalSim.g:7014:6: ( () ( ( ruleDmxOpEquality ) ) )
        // InternalSim.g:7015:6: () ( ( ruleDmxOpEquality ) )
        {
        // InternalSim.g:7015:6: ()
        // InternalSim.g:7016:6: 
        {
        }

        // InternalSim.g:7017:6: ( ( ruleDmxOpEquality ) )
        // InternalSim.g:7018:7: ( ruleDmxOpEquality )
        {
        // InternalSim.g:7018:7: ( ruleDmxOpEquality )
        // InternalSim.g:7019:8: ruleDmxOpEquality
        {
        pushFollow(FOLLOW_2);
        ruleDmxOpEquality();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred6_InternalSim

    // $ANTLR start synpred7_InternalSim
    public final void synpred7_InternalSim_fragment() throws RecognitionException {   
        // InternalSim.g:7103:6: ( ( () ruleDmxOpInstanceOf ) )
        // InternalSim.g:7103:7: ( () ruleDmxOpInstanceOf )
        {
        // InternalSim.g:7103:7: ( () ruleDmxOpInstanceOf )
        // InternalSim.g:7104:7: () ruleDmxOpInstanceOf
        {
        // InternalSim.g:7104:7: ()
        // InternalSim.g:7105:7: 
        {
        }

        pushFollow(FOLLOW_2);
        ruleDmxOpInstanceOf();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred7_InternalSim

    // $ANTLR start synpred8_InternalSim
    public final void synpred8_InternalSim_fragment() throws RecognitionException {   
        // InternalSim.g:7143:6: ( ( () ( ( ruleOpCompare ) ) ) )
        // InternalSim.g:7143:7: ( () ( ( ruleOpCompare ) ) )
        {
        // InternalSim.g:7143:7: ( () ( ( ruleOpCompare ) ) )
        // InternalSim.g:7144:7: () ( ( ruleOpCompare ) )
        {
        // InternalSim.g:7144:7: ()
        // InternalSim.g:7145:7: 
        {
        }

        // InternalSim.g:7146:7: ( ( ruleOpCompare ) )
        // InternalSim.g:7147:8: ( ruleOpCompare )
        {
        // InternalSim.g:7147:8: ( ruleOpCompare )
        // InternalSim.g:7148:9: ruleOpCompare
        {
        pushFollow(FOLLOW_2);
        ruleOpCompare();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred8_InternalSim

    // $ANTLR start synpred9_InternalSim
    public final void synpred9_InternalSim_fragment() throws RecognitionException {   
        // InternalSim.g:7262:5: ( ( () ( ( ruleOpOther ) ) ) )
        // InternalSim.g:7262:6: ( () ( ( ruleOpOther ) ) )
        {
        // InternalSim.g:7262:6: ( () ( ( ruleOpOther ) ) )
        // InternalSim.g:7263:6: () ( ( ruleOpOther ) )
        {
        // InternalSim.g:7263:6: ()
        // InternalSim.g:7264:6: 
        {
        }

        // InternalSim.g:7265:6: ( ( ruleOpOther ) )
        // InternalSim.g:7266:7: ( ruleOpOther )
        {
        // InternalSim.g:7266:7: ( ruleOpOther )
        // InternalSim.g:7267:8: ruleOpOther
        {
        pushFollow(FOLLOW_2);
        ruleOpOther();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred9_InternalSim

    // $ANTLR start synpred10_InternalSim
    public final void synpred10_InternalSim_fragment() throws RecognitionException {   
        // InternalSim.g:7350:5: ( ( () ( ( ruleOpAdd ) ) ) )
        // InternalSim.g:7350:6: ( () ( ( ruleOpAdd ) ) )
        {
        // InternalSim.g:7350:6: ( () ( ( ruleOpAdd ) ) )
        // InternalSim.g:7351:6: () ( ( ruleOpAdd ) )
        {
        // InternalSim.g:7351:6: ()
        // InternalSim.g:7352:6: 
        {
        }

        // InternalSim.g:7353:6: ( ( ruleOpAdd ) )
        // InternalSim.g:7354:7: ( ruleOpAdd )
        {
        // InternalSim.g:7354:7: ( ruleOpAdd )
        // InternalSim.g:7355:8: ruleOpAdd
        {
        pushFollow(FOLLOW_2);
        ruleOpAdd();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred10_InternalSim

    // $ANTLR start synpred11_InternalSim
    public final void synpred11_InternalSim_fragment() throws RecognitionException {   
        // InternalSim.g:7438:5: ( ( () ( ( ruleOpMulti ) ) ) )
        // InternalSim.g:7438:6: ( () ( ( ruleOpMulti ) ) )
        {
        // InternalSim.g:7438:6: ( () ( ( ruleOpMulti ) ) )
        // InternalSim.g:7439:6: () ( ( ruleOpMulti ) )
        {
        // InternalSim.g:7439:6: ()
        // InternalSim.g:7440:6: 
        {
        }

        // InternalSim.g:7441:6: ( ( ruleOpMulti ) )
        // InternalSim.g:7442:7: ( ruleOpMulti )
        {
        // InternalSim.g:7442:7: ( ruleOpMulti )
        // InternalSim.g:7443:8: ruleOpMulti
        {
        pushFollow(FOLLOW_2);
        ruleOpMulti();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred11_InternalSim

    // $ANTLR start synpred12_InternalSim
    public final void synpred12_InternalSim_fragment() throws RecognitionException {   
        // InternalSim.g:7601:5: ( ( () ruleDmxOpCast ) )
        // InternalSim.g:7601:6: ( () ruleDmxOpCast )
        {
        // InternalSim.g:7601:6: ( () ruleDmxOpCast )
        // InternalSim.g:7602:6: () ruleDmxOpCast
        {
        // InternalSim.g:7602:6: ()
        // InternalSim.g:7603:6: 
        {
        }

        pushFollow(FOLLOW_2);
        ruleDmxOpCast();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred12_InternalSim

    // $ANTLR start synpred13_InternalSim
    public final void synpred13_InternalSim_fragment() throws RecognitionException {   
        // InternalSim.g:8449:4: ( ']' )
        // InternalSim.g:8449:5: ']'
        {
        match(input,77,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred13_InternalSim

    // $ANTLR start synpred14_InternalSim
    public final void synpred14_InternalSim_fragment() throws RecognitionException {   
        // InternalSim.g:8605:5: ( 'else' )
        // InternalSim.g:8605:6: 'else'
        {
        match(input,81,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred14_InternalSim

    // Delegated rules

    public final boolean synpred14_InternalSim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred14_InternalSim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred13_InternalSim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_InternalSim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred3_InternalSim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_InternalSim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred1_InternalSim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_InternalSim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred9_InternalSim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred9_InternalSim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_InternalSim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalSim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_InternalSim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_InternalSim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred7_InternalSim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_InternalSim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_InternalSim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_InternalSim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred8_InternalSim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_InternalSim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_InternalSim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_InternalSim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred12_InternalSim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_InternalSim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_InternalSim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_InternalSim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred11_InternalSim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_InternalSim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA28 dfa28 = new DFA28(this);
    protected DFA29 dfa29 = new DFA29(this);
    protected DFA54 dfa54 = new DFA54(this);
    protected DFA102 dfa102 = new DFA102(this);
    protected DFA148 dfa148 = new DFA148(this);
    protected DFA157 dfa157 = new DFA157(this);
    static final String dfa_1s = "\16\uffff";
    static final String dfa_2s = "\1\35\2\41\2\uffff\2\45\1\46\6\uffff";
    static final String dfa_3s = "\1\145\2\51\2\uffff\2\51\1\145\6\uffff";
    static final String dfa_4s = "\3\uffff\1\2\1\4\3\uffff\1\6\1\10\1\5\1\3\1\7\1\1";
    static final String dfa_5s = "\16\uffff}>";
    static final String[] dfa_6s = {
            "\1\1\3\uffff\1\3\1\2\1\4\2\uffff\1\10\1\5\1\6\1\11\11\uffff\1\7\1\10\57\uffff\2\10",
            "\1\15\1\uffff\1\13\1\uffff\2\12\2\uffff\1\14",
            "\1\15\1\uffff\1\13\1\uffff\2\12\2\uffff\1\14",
            "",
            "",
            "\2\12\2\uffff\1\14",
            "\2\12\2\uffff\1\14",
            "\1\10\2\uffff\1\11\12\uffff\1\10\57\uffff\2\10",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA28 extends DFA {

        public DFA28(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 28;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "1575:2: (this_SimPrimitiveTransposition_0= ruleSimPrimitiveTransposition | this_DPrimitive_1= ruleDPrimitive | this_SimEnumerationTransposition_2= ruleSimEnumerationTransposition | this_DEnumeration_3= ruleDEnumeration | this_SimEntityTypeTransposition_4= ruleSimEntityTypeTransposition | this_DEntityType_5= ruleDEntityType | this_SimDetailTypeTransposition_6= ruleSimDetailTypeTransposition | this_DDetailType_7= ruleDDetailType )";
        }
    }
    static final String dfa_7s = "\17\uffff";
    static final String dfa_8s = "\1\35\3\41\2\45\4\uffff\1\46\4\uffff";
    static final String dfa_9s = "\1\50\2\51\1\145\2\51\4\uffff\1\145\4\uffff";
    static final String dfa_10s = "\6\uffff\1\1\1\3\1\7\1\5\1\uffff\1\6\1\10\1\2\1\4";
    static final String dfa_11s = "\17\uffff}>";
    static final String[] dfa_12s = {
            "\1\1\1\uffff\1\3\2\uffff\1\2\4\uffff\1\4\1\5",
            "\1\6\1\uffff\1\7\1\uffff\2\11\2\uffff\1\10",
            "\1\6\1\uffff\1\7\1\uffff\2\11\2\uffff\1\10",
            "\1\15\1\uffff\1\16\2\uffff\1\13\2\uffff\1\14\11\uffff\1\12\1\13\57\uffff\2\13",
            "\2\11\2\uffff\1\10",
            "\2\11\2\uffff\1\10",
            "",
            "",
            "",
            "",
            "\1\13\2\uffff\1\14\12\uffff\1\13\57\uffff\2\13",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final char[] dfa_8 = DFA.unpackEncodedStringToUnsignedChars(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final short[] dfa_10 = DFA.unpackEncodedString(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[][] dfa_12 = unpackEncodedStringArray(dfa_12s);

    class DFA29 extends DFA {

        public DFA29(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 29;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "1665:2: (this_SimPrimitiveTransposition_0= ruleSimPrimitiveTransposition | (otherlv_1= 'add' this_DPrimitive_2= ruleDPrimitive ) | this_SimEnumerationTransposition_3= ruleSimEnumerationTransposition | (otherlv_4= 'add' this_DEnumeration_5= ruleDEnumeration ) | this_SimEntityTypeTransposition_6= ruleSimEntityTypeTransposition | (otherlv_7= 'add' this_DEntityType_8= ruleDEntityType ) | this_SimDetailTypeTransposition_9= ruleSimDetailTypeTransposition | (otherlv_10= 'add' this_DDetailType_11= ruleDDetailType ) )";
        }
    }
    static final String dfa_13s = "\1\35\4\4\4\uffff\1\34\1\uffff\1\4\1\uffff\1\34";
    static final String dfa_14s = "\1\47\3\54\1\67\4\uffff\1\147\1\uffff\1\4\1\uffff\1\147";
    static final String dfa_15s = "\5\uffff\1\5\1\3\1\1\1\2\1\uffff\1\4\1\uffff\1\6\1\uffff";
    static final String[] dfa_16s = {
            "\1\1\1\uffff\1\4\2\uffff\1\3\4\uffff\1\2",
            "\1\6\33\uffff\1\5\10\uffff\1\6\2\7\1\6",
            "\1\6\33\uffff\1\5\10\uffff\1\6\2\7\1\6",
            "\1\6\33\uffff\1\5\10\uffff\1\6\2\7\1\6",
            "\1\11\44\uffff\1\12\15\uffff\1\10",
            "",
            "",
            "",
            "",
            "\1\12\20\uffff\1\14\3\uffff\1\13\6\uffff\1\10\55\uffff\2\10",
            "",
            "\1\15",
            "",
            "\1\12\20\uffff\1\14\3\uffff\1\13\6\uffff\1\10\55\uffff\2\10"
    };
    static final char[] dfa_13 = DFA.unpackEncodedStringToUnsignedChars(dfa_13s);
    static final char[] dfa_14 = DFA.unpackEncodedStringToUnsignedChars(dfa_14s);
    static final short[] dfa_15 = DFA.unpackEncodedString(dfa_15s);
    static final short[][] dfa_16 = unpackEncodedStringArray(dfa_16s);

    class DFA54 extends DFA {

        public DFA54(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 54;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_13;
            this.max = dfa_14;
            this.accept = dfa_15;
            this.special = dfa_5;
            this.transition = dfa_16;
        }
        public String getDescription() {
            return "2729:2: (this_SimAssociationTransposition_0= ruleSimAssociationTransposition | (otherlv_1= 'add' this_DAssociation_2= ruleDAssociation ) | this_SimAttributeTransposition_3= ruleSimAttributeTransposition | (otherlv_4= 'add' this_DAttribute_5= ruleDAttribute ) | this_SimQueryTransposition_6= ruleSimQueryTransposition | (otherlv_7= 'add' this_DQuery_8= ruleDQuery ) )";
        }
    }
    static final String dfa_17s = "\7\uffff";
    static final String dfa_18s = "\1\4\1\uffff\1\34\1\uffff\1\4\1\uffff\1\34";
    static final String dfa_19s = "\1\67\1\uffff\1\147\1\uffff\1\4\1\uffff\1\147";
    static final String dfa_20s = "\1\uffff\1\1\1\uffff\1\2\1\uffff\1\3\1\uffff";
    static final String dfa_21s = "\7\uffff}>";
    static final String[] dfa_22s = {
            "\1\2\44\uffff\1\3\15\uffff\1\1",
            "",
            "\1\3\20\uffff\1\5\3\uffff\1\4\6\uffff\1\1\55\uffff\2\1",
            "",
            "\1\6",
            "",
            "\1\3\20\uffff\1\5\3\uffff\1\4\6\uffff\1\1\55\uffff\2\1"
    };

    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final char[] dfa_18 = DFA.unpackEncodedStringToUnsignedChars(dfa_18s);
    static final char[] dfa_19 = DFA.unpackEncodedStringToUnsignedChars(dfa_19s);
    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final short[] dfa_21 = DFA.unpackEncodedString(dfa_21s);
    static final short[][] dfa_22 = unpackEncodedStringArray(dfa_22s);

    class DFA102 extends DFA {

        public DFA102(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 102;
            this.eot = dfa_17;
            this.eof = dfa_17;
            this.min = dfa_18;
            this.max = dfa_19;
            this.accept = dfa_20;
            this.special = dfa_21;
            this.transition = dfa_22;
        }
        public String getDescription() {
            return "4661:2: (this_DAssociation_0= ruleDAssociation | this_DAttribute_1= ruleDAttribute | this_DQuery_2= ruleDQuery )";
        }
    }
    static final String dfa_23s = "\14\uffff";
    static final String dfa_24s = "\1\1\13\uffff";
    static final String dfa_25s = "\1\4\1\uffff\10\0\2\uffff";
    static final String dfa_26s = "\1\u0085\1\uffff\10\0\2\uffff";
    static final String dfa_27s = "\1\uffff\1\3\10\uffff\1\1\1\2";
    static final String dfa_28s = "\2\uffff\1\4\1\5\1\6\1\2\1\1\1\0\1\7\1\3\2\uffff}>";
    static final String[] dfa_29s = {
            "\5\1\16\uffff\3\1\3\uffff\1\1\1\uffff\6\1\1\uffff\4\1\4\uffff\3\1\2\uffff\2\1\2\uffff\1\1\7\uffff\1\1\4\uffff\1\1\2\uffff\1\2\1\3\2\1\5\uffff\4\1\10\uffff\2\1\6\uffff\2\1\15\uffff\7\1\1\4\1\5\1\6\1\7\1\10\1\11\6\1",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final char[] dfa_25 = DFA.unpackEncodedStringToUnsignedChars(dfa_25s);
    static final char[] dfa_26 = DFA.unpackEncodedStringToUnsignedChars(dfa_26s);
    static final short[] dfa_27 = DFA.unpackEncodedString(dfa_27s);
    static final short[] dfa_28 = DFA.unpackEncodedString(dfa_28s);
    static final short[][] dfa_29 = unpackEncodedStringArray(dfa_29s);

    class DFA148 extends DFA {

        public DFA148(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 148;
            this.eot = dfa_23;
            this.eof = dfa_24;
            this.min = dfa_25;
            this.max = dfa_26;
            this.accept = dfa_27;
            this.special = dfa_28;
            this.transition = dfa_29;
        }
        public String getDescription() {
            return "()* loopback of 7100:3: ( ( ( ( ( () ruleDmxOpInstanceOf ) )=> ( () ruleDmxOpInstanceOf ) ) ( (otherlv_3= RULE_ID ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( (lv_operator_5_0= ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleDmxOtherOperatorExpression ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA148_7 = input.LA(1);

                         
                        int index148_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred8_InternalSim()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index148_7);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA148_6 = input.LA(1);

                         
                        int index148_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred8_InternalSim()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index148_6);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA148_5 = input.LA(1);

                         
                        int index148_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred8_InternalSim()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index148_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA148_9 = input.LA(1);

                         
                        int index148_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred8_InternalSim()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index148_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA148_2 = input.LA(1);

                         
                        int index148_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalSim()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index148_2);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA148_3 = input.LA(1);

                         
                        int index148_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalSim()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index148_3);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA148_4 = input.LA(1);

                         
                        int index148_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred8_InternalSim()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index148_4);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA148_8 = input.LA(1);

                         
                        int index148_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred8_InternalSim()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index148_8);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 148, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_30s = "\12\uffff";
    static final String dfa_31s = "\3\uffff\1\7\6\uffff";
    static final String dfa_32s = "\1\11\2\uffff\1\4\4\uffff\1\4\1\uffff";
    static final String dfa_33s = "\1\131\2\uffff\1\u0085\4\uffff\1\11\1\uffff";
    static final String dfa_34s = "\1\uffff\1\1\1\2\1\uffff\1\5\1\6\1\7\1\3\1\uffff\1\4";
    static final String dfa_35s = "\12\uffff}>";
    static final String[] dfa_36s = {
            "\1\3\1\2\33\uffff\1\5\2\uffff\1\6\52\uffff\4\1\2\4",
            "",
            "",
            "\5\7\15\uffff\4\7\3\uffff\1\7\1\uffff\6\7\1\uffff\4\7\4\uffff\3\7\2\uffff\2\7\2\uffff\1\7\7\uffff\1\7\4\uffff\1\10\2\uffff\4\7\5\uffff\4\7\10\uffff\2\7\6\uffff\2\7\15\uffff\23\7",
            "",
            "",
            "",
            "",
            "\1\7\4\uffff\1\11",
            ""
    };

    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final char[] dfa_32 = DFA.unpackEncodedStringToUnsignedChars(dfa_32s);
    static final char[] dfa_33 = DFA.unpackEncodedStringToUnsignedChars(dfa_33s);
    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final short[] dfa_35 = DFA.unpackEncodedString(dfa_35s);
    static final short[][] dfa_36 = unpackEncodedStringArray(dfa_36s);

    class DFA157 extends DFA {

        public DFA157(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 157;
            this.eot = dfa_30;
            this.eof = dfa_31;
            this.min = dfa_32;
            this.max = dfa_33;
            this.accept = dfa_34;
            this.special = dfa_35;
            this.transition = dfa_36;
        }
        public String getDescription() {
            return "7767:2: (this_DmxBooleanLiteral_0= ruleDmxBooleanLiteral | this_DmxStringLiteral_1= ruleDmxStringLiteral | this_DmxNaturalLiteral_2= ruleDmxNaturalLiteral | this_DmxDecimalLiteral_3= ruleDmxDecimalLiteral | this_DmxUndefinedLiteral_4= ruleDmxUndefinedLiteral | this_DmxEntity_5= ruleDmxEntity | this_DmxDetail_6= ruleDmxDetail )";
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0800000000000000L,0x0000000380000000L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000600060L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000400060L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000400000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x00000184E0800000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000001000002L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000006000000L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0008026000000000L,0x0000000C00000000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000008000012L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000008000002L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000600000000002L,0x0000000010000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000040000000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000000400062L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000000400002L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x00000184A0800000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0018004000000000L,0x0000003000000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0008020000000000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000080800000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x00000004A0800000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000001080800000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x00000004A0000000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000000000062L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000006000000000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x00000084A0800000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0080000000000010L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000020000000010L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x00000C0000000000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000120000000010L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x00004084A0000000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000800000000000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000801000000000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x001803CF20800000L,0x0000003000000000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x001803CE20800000L,0x0000003000000000L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0002000010000000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000224000400670L,0x0000000033F08800L,0x00000000000001C0L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0006000000000000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0001000000800000L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0002000000400060L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0001000000800010L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0001001000800000L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0002000000000062L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x00A1020000800010L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000001000800000L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x00C1020000800010L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0081020000800010L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0002000008000062L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0102000000000000L,0x000000C000000000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000600000000072L,0x0000000010000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000600000000062L,0x0000000010000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0200600000000072L,0x0000000010000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0200600000000062L,0x0000000010000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0200000000000062L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0002200000000000L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000800000000010L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0400600000000072L,0x0000000010000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0400600000000062L,0x0000000010000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0400000000000062L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x2000000000400000L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000001000400000L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x4000600000000002L,0x0000000010000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x4000000000000002L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000024000400600L,0x0000000003F00000L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000000000000000L,0x0007FF0000000000L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000000000000010L,0x0007FF0000000000L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000008L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000400000000002L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000000000180L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000010L});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x4000000000000000L});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000224000400610L,0x0000000033F08800L,0x00000000000001C0L});
    public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0000200000000002L,0x0000000000000030L});
    public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0000A24000400610L,0x0000000033F08800L,0x00000000000001C0L});
    public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0000001000000002L});
    public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000000000000002L,0x0078000000000000L});
    public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0000000002000002L,0x0080000000000000L});
    public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0000000000000002L,0x0300000000000400L});
    public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0000000000000002L,0xFC00000000000180L});
    public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x8000000000000002L,0x0000000000080000L,0x0000000000000007L});
    public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x0000000000000002L,0x0000000030000000L});
    public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x0000400000000002L,0x0000000000000000L,0x0000000000000038L});
    public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0000000001000002L,0x0000000000000200L});
    public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000224000C00670L,0x0000000033F08800L,0x00000000000001C0L});
    public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x0000024000800600L,0x0000000003F00000L});
    public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0000024000000600L,0x0000000003F00000L});
    public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x0000A24000400670L,0x0000000033F08800L,0x00000000000001C0L});
    public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x0000000000800010L});
    public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x0000000000000000L,0x0000000000003040L});
    public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002040L});
    public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x0000400000000010L});
    public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000030L});
    public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x0000000000000000L,0x0000000000004000L});
    public static final BitSet FOLLOW_116 = new BitSet(new long[]{0x0000000000000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x0000000000000000L,0x0000000000060000L});
    public static final BitSet FOLLOW_118 = new BitSet(new long[]{0x0000000000000000L,0x0000000000040000L});
    public static final BitSet FOLLOW_119 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_120 = new BitSet(new long[]{0x0000000000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_121 = new BitSet(new long[]{0x0000400000000200L});
    public static final BitSet FOLLOW_122 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_123 = new BitSet(new long[]{0x0000000000000002L,0x000000000C000000L});
    public static final BitSet FOLLOW_124 = new BitSet(new long[]{0x0000000000000200L,0x0000000030000000L});
    public static final BitSet FOLLOW_125 = new BitSet(new long[]{0x0000000000000002L,0x0000000040000000L});

}