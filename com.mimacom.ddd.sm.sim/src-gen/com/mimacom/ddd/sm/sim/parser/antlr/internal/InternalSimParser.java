package com.mimacom.ddd.sm.sim.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.mimacom.ddd.sm.sim.services.SimGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalSimParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_ID", "RULE_PLAIN_TEXT_ONLY", "RULE_RICH_TEXT_START", "RULE_RICH_TEXT_MIDDLE", "RULE_RICH_TEXT_END", "RULE_NATURAL", "RULE_STRING", "RULE_LETTER", "RULE_PLAIN_TEXT", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'system'", "'type'", "'model'", "'information'", "'alias'", "'generate'", "'{'", "'}'", "'as'", "'and'", "'to'", "'extends'", "':'", "'grab'", "'aggregate'", "'add'", "'query'", "'primitive'", "'ditch'", "'enumeration'", "','", "'root'", "'entity'", "'morph'", "'fuse'", "'detail'", "'reference'", "'composite'", "'attribute'", "'('", "'*'", "')'", "'constraint'", "'redefines'", "'abstract'", "'main'", "'states'", "'events'", "'derived'", "'contains'", "'key'", "'returns'", "'NOTE'", "'import'", "'test'", "'context'", "':='", "'in'", "'archetype'", "'is'", "'filter'", "'with'", "'.'", "'@before'", "'|'", "'ISA'", "'isa'", "'AS'", "'='", "'['", "'#'", "']'", "'all'", "'if'", "'then'", "'else'", "'end'", "'..'", "'TRUE'", "'true'", "'FALSE'", "'false'", "'UNDEFINED'", "'undefined'", "'E'", "'e'", "'+'", "'-'", "'.*'", "'base'", "'interface'", "'core'", "'nonabstract'", "'nonroot'", "'autonomous'", "'relationship'", "'references'", "'inverse'", "'white'", "'red'", "'orange'", "'yellow'", "'green'", "'blue'", "'pink'", "'grey'", "'VOID'", "'BOOLEAN'", "'NUMBER'", "'TEXT'", "'IDENTIFIER'", "'TIMEPOINT'", "'STATE'", "'STATE_EVENT'", "'COMPLEX'", "'NOTIFICATION'", "'SERVICE'", "'OR'", "'or'", "'XOR'", "'xor'", "'AND'", "'!='", "'<>'", "'<'", "'<='", "'\\u2264'", "'>='", "'\\u2265'", "'>'", "'IN'", "'->'", "'=>'", "'/'", "'**'", "'%'", "'!'", "'NOT'", "'not'", "'?'"
    };
    public static final int T__144=144;
    public static final int T__143=143;
    public static final int T__146=146;
    public static final int T__50=50;
    public static final int T__145=145;
    public static final int T__140=140;
    public static final int T__142=142;
    public static final int T__141=141;
    public static final int RULE_PLAIN_TEXT_ONLY=5;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__137=137;
    public static final int T__52=52;
    public static final int T__136=136;
    public static final int T__53=53;
    public static final int T__139=139;
    public static final int T__54=54;
    public static final int T__138=138;
    public static final int T__133=133;
    public static final int T__132=132;
    public static final int T__60=60;
    public static final int T__135=135;
    public static final int T__61=61;
    public static final int T__134=134;
    public static final int RULE_ID=4;
    public static final int T__131=131;
    public static final int T__130=130;
    public static final int RULE_RICH_TEXT_START=6;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=13;
    public static final int T__67=67;
    public static final int T__129=129;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__126=126;
    public static final int T__63=63;
    public static final int T__125=125;
    public static final int T__64=64;
    public static final int T__128=128;
    public static final int T__65=65;
    public static final int T__127=127;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int RULE_LETTER=11;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__91=91;
    public static final int T__100=100;
    public static final int T__92=92;
    public static final int T__93=93;
    public static final int T__102=102;
    public static final int T__94=94;
    public static final int T__101=101;
    public static final int T__90=90;
    public static final int T__19=19;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__99=99;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int RULE_NATURAL=9;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int T__122=122;
    public static final int T__70=70;
    public static final int T__121=121;
    public static final int T__71=71;
    public static final int T__124=124;
    public static final int T__72=72;
    public static final int T__123=123;
    public static final int T__120=120;
    public static final int RULE_STRING=10;
    public static final int RULE_SL_COMMENT=14;
    public static final int T__77=77;
    public static final int T__119=119;
    public static final int T__78=78;
    public static final int T__118=118;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int T__115=115;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int T__114=114;
    public static final int T__75=75;
    public static final int T__117=117;
    public static final int T__76=76;
    public static final int T__116=116;
    public static final int T__80=80;
    public static final int T__111=111;
    public static final int RULE_PLAIN_TEXT=12;
    public static final int T__81=81;
    public static final int T__110=110;
    public static final int T__82=82;
    public static final int T__113=113;
    public static final int T__83=83;
    public static final int T__112=112;
    public static final int RULE_WS=15;
    public static final int RULE_RICH_TEXT_END=8;
    public static final int RULE_RICH_TEXT_MIDDLE=7;
    public static final int RULE_ANY_OTHER=16;
    public static final int T__88=88;
    public static final int T__108=108;
    public static final int T__89=89;
    public static final int T__107=107;
    public static final int T__109=109;
    public static final int T__84=84;
    public static final int T__104=104;
    public static final int T__85=85;
    public static final int T__103=103;
    public static final int T__86=86;
    public static final int T__106=106;
    public static final int T__87=87;
    public static final int T__105=105;

    // delegates
    // delegators


        public InternalSimParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalSimParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalSimParser.tokenNames; }
    public String getGrammarFileName() { return "InternalSim.g"; }



     	private SimGrammarAccess grammarAccess;

        public InternalSimParser(TokenStream input, SimGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "DNamespace";
       	}

       	@Override
       	protected SimGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleDNamespace"
    // InternalSim.g:65:1: entryRuleDNamespace returns [EObject current=null] : iv_ruleDNamespace= ruleDNamespace EOF ;
    public final EObject entryRuleDNamespace() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDNamespace = null;


        try {
            // InternalSim.g:65:51: (iv_ruleDNamespace= ruleDNamespace EOF )
            // InternalSim.g:66:2: iv_ruleDNamespace= ruleDNamespace EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDNamespaceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDNamespace=ruleDNamespace();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDNamespace; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDNamespace"


    // $ANTLR start "ruleDNamespace"
    // InternalSim.g:72:1: ruleDNamespace returns [EObject current=null] : (otherlv_0= 'system' ( (lv_name_1_0= ruleDQualifiedName ) ) ( (lv_imports_2_0= ruleDImport ) )* ( (lv_model_3_0= ruleSystemInformationModel ) ) ) ;
    public final EObject ruleDNamespace() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_imports_2_0 = null;

        EObject lv_model_3_0 = null;



        	enterRule();

        try {
            // InternalSim.g:78:2: ( (otherlv_0= 'system' ( (lv_name_1_0= ruleDQualifiedName ) ) ( (lv_imports_2_0= ruleDImport ) )* ( (lv_model_3_0= ruleSystemInformationModel ) ) ) )
            // InternalSim.g:79:2: (otherlv_0= 'system' ( (lv_name_1_0= ruleDQualifiedName ) ) ( (lv_imports_2_0= ruleDImport ) )* ( (lv_model_3_0= ruleSystemInformationModel ) ) )
            {
            // InternalSim.g:79:2: (otherlv_0= 'system' ( (lv_name_1_0= ruleDQualifiedName ) ) ( (lv_imports_2_0= ruleDImport ) )* ( (lv_model_3_0= ruleSystemInformationModel ) ) )
            // InternalSim.g:80:3: otherlv_0= 'system' ( (lv_name_1_0= ruleDQualifiedName ) ) ( (lv_imports_2_0= ruleDImport ) )* ( (lv_model_3_0= ruleSystemInformationModel ) )
            {
            otherlv_0=(Token)match(input,17,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDNamespaceAccess().getSystemKeyword_0());
              		
            }
            // InternalSim.g:84:3: ( (lv_name_1_0= ruleDQualifiedName ) )
            // InternalSim.g:85:4: (lv_name_1_0= ruleDQualifiedName )
            {
            // InternalSim.g:85:4: (lv_name_1_0= ruleDQualifiedName )
            // InternalSim.g:86:5: lv_name_1_0= ruleDQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDNamespaceAccess().getNameDQualifiedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_4);
            lv_name_1_0=ruleDQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDNamespaceRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.DQualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSim.g:103:3: ( (lv_imports_2_0= ruleDImport ) )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==60) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // InternalSim.g:104:4: (lv_imports_2_0= ruleDImport )
            	    {
            	    // InternalSim.g:104:4: (lv_imports_2_0= ruleDImport )
            	    // InternalSim.g:105:5: lv_imports_2_0= ruleDImport
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getDNamespaceAccess().getImportsDImportParserRuleCall_2_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_4);
            	    lv_imports_2_0=ruleDImport();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getDNamespaceRule());
            	      					}
            	      					add(
            	      						current,
            	      						"imports",
            	      						lv_imports_2_0,
            	      						"com.mimacom.ddd.dm.dmx.Dmx.DImport");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            // InternalSim.g:122:3: ( (lv_model_3_0= ruleSystemInformationModel ) )
            // InternalSim.g:123:4: (lv_model_3_0= ruleSystemInformationModel )
            {
            // InternalSim.g:123:4: (lv_model_3_0= ruleSystemInformationModel )
            // InternalSim.g:124:5: lv_model_3_0= ruleSystemInformationModel
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDNamespaceAccess().getModelSystemInformationModelParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_model_3_0=ruleSystemInformationModel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDNamespaceRule());
              					}
              					set(
              						current,
              						"model",
              						lv_model_3_0,
              						"com.mimacom.ddd.sm.sim.Sim.SystemInformationModel");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDNamespace"


    // $ANTLR start "entryRuleSystemInformationModel"
    // InternalSim.g:145:1: entryRuleSystemInformationModel returns [EObject current=null] : iv_ruleSystemInformationModel= ruleSystemInformationModel EOF ;
    public final EObject entryRuleSystemInformationModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSystemInformationModel = null;


        try {
            // InternalSim.g:145:63: (iv_ruleSystemInformationModel= ruleSystemInformationModel EOF )
            // InternalSim.g:146:2: iv_ruleSystemInformationModel= ruleSystemInformationModel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSystemInformationModelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSystemInformationModel=ruleSystemInformationModel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSystemInformationModel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSystemInformationModel"


    // $ANTLR start "ruleSystemInformationModel"
    // InternalSim.g:152:1: ruleSystemInformationModel returns [EObject current=null] : ( ( ( ( (lv_kind_0_0= ruleSTypeModelKind ) ) otherlv_1= 'type' otherlv_2= 'model' ) | ( ( (lv_kind_3_0= ruleSystemInformationModelKind ) ) otherlv_4= 'information' otherlv_5= 'model' ) ) ( (lv_name_6_0= RULE_ID ) ) (otherlv_7= 'alias' ( (lv_alias_8_0= RULE_ID ) ) )? ( (lv_generate_9_0= 'generate' ) )? ( (lv_description_10_0= ruleDRichText ) )? ( (lv_notes_11_0= ruleDNote ) )* otherlv_12= '{' ( ( (lv_types_13_0= ruleSimType ) ) | ( (lv_aggregates_14_0= ruleSimAggregate ) ) )* otherlv_15= '}' ) ;
    public final EObject ruleSystemInformationModel() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_name_6_0=null;
        Token otherlv_7=null;
        Token lv_alias_8_0=null;
        Token lv_generate_9_0=null;
        Token otherlv_12=null;
        Token otherlv_15=null;
        Enumerator lv_kind_0_0 = null;

        Enumerator lv_kind_3_0 = null;

        EObject lv_description_10_0 = null;

        EObject lv_notes_11_0 = null;

        EObject lv_types_13_0 = null;

        EObject lv_aggregates_14_0 = null;



        	enterRule();

        try {
            // InternalSim.g:158:2: ( ( ( ( ( (lv_kind_0_0= ruleSTypeModelKind ) ) otherlv_1= 'type' otherlv_2= 'model' ) | ( ( (lv_kind_3_0= ruleSystemInformationModelKind ) ) otherlv_4= 'information' otherlv_5= 'model' ) ) ( (lv_name_6_0= RULE_ID ) ) (otherlv_7= 'alias' ( (lv_alias_8_0= RULE_ID ) ) )? ( (lv_generate_9_0= 'generate' ) )? ( (lv_description_10_0= ruleDRichText ) )? ( (lv_notes_11_0= ruleDNote ) )* otherlv_12= '{' ( ( (lv_types_13_0= ruleSimType ) ) | ( (lv_aggregates_14_0= ruleSimAggregate ) ) )* otherlv_15= '}' ) )
            // InternalSim.g:159:2: ( ( ( ( (lv_kind_0_0= ruleSTypeModelKind ) ) otherlv_1= 'type' otherlv_2= 'model' ) | ( ( (lv_kind_3_0= ruleSystemInformationModelKind ) ) otherlv_4= 'information' otherlv_5= 'model' ) ) ( (lv_name_6_0= RULE_ID ) ) (otherlv_7= 'alias' ( (lv_alias_8_0= RULE_ID ) ) )? ( (lv_generate_9_0= 'generate' ) )? ( (lv_description_10_0= ruleDRichText ) )? ( (lv_notes_11_0= ruleDNote ) )* otherlv_12= '{' ( ( (lv_types_13_0= ruleSimType ) ) | ( (lv_aggregates_14_0= ruleSimAggregate ) ) )* otherlv_15= '}' )
            {
            // InternalSim.g:159:2: ( ( ( ( (lv_kind_0_0= ruleSTypeModelKind ) ) otherlv_1= 'type' otherlv_2= 'model' ) | ( ( (lv_kind_3_0= ruleSystemInformationModelKind ) ) otherlv_4= 'information' otherlv_5= 'model' ) ) ( (lv_name_6_0= RULE_ID ) ) (otherlv_7= 'alias' ( (lv_alias_8_0= RULE_ID ) ) )? ( (lv_generate_9_0= 'generate' ) )? ( (lv_description_10_0= ruleDRichText ) )? ( (lv_notes_11_0= ruleDNote ) )* otherlv_12= '{' ( ( (lv_types_13_0= ruleSimType ) ) | ( (lv_aggregates_14_0= ruleSimAggregate ) ) )* otherlv_15= '}' )
            // InternalSim.g:160:3: ( ( ( (lv_kind_0_0= ruleSTypeModelKind ) ) otherlv_1= 'type' otherlv_2= 'model' ) | ( ( (lv_kind_3_0= ruleSystemInformationModelKind ) ) otherlv_4= 'information' otherlv_5= 'model' ) ) ( (lv_name_6_0= RULE_ID ) ) (otherlv_7= 'alias' ( (lv_alias_8_0= RULE_ID ) ) )? ( (lv_generate_9_0= 'generate' ) )? ( (lv_description_10_0= ruleDRichText ) )? ( (lv_notes_11_0= ruleDNote ) )* otherlv_12= '{' ( ( (lv_types_13_0= ruleSimType ) ) | ( (lv_aggregates_14_0= ruleSimAggregate ) ) )* otherlv_15= '}'
            {
            // InternalSim.g:160:3: ( ( ( (lv_kind_0_0= ruleSTypeModelKind ) ) otherlv_1= 'type' otherlv_2= 'model' ) | ( ( (lv_kind_3_0= ruleSystemInformationModelKind ) ) otherlv_4= 'information' otherlv_5= 'model' ) )
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==96) ) {
                alt2=1;
            }
            else if ( ((LA2_0>=97 && LA2_0<=98)) ) {
                alt2=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 2, 0, input);

                throw nvae;
            }
            switch (alt2) {
                case 1 :
                    // InternalSim.g:161:4: ( ( (lv_kind_0_0= ruleSTypeModelKind ) ) otherlv_1= 'type' otherlv_2= 'model' )
                    {
                    // InternalSim.g:161:4: ( ( (lv_kind_0_0= ruleSTypeModelKind ) ) otherlv_1= 'type' otherlv_2= 'model' )
                    // InternalSim.g:162:5: ( (lv_kind_0_0= ruleSTypeModelKind ) ) otherlv_1= 'type' otherlv_2= 'model'
                    {
                    // InternalSim.g:162:5: ( (lv_kind_0_0= ruleSTypeModelKind ) )
                    // InternalSim.g:163:6: (lv_kind_0_0= ruleSTypeModelKind )
                    {
                    // InternalSim.g:163:6: (lv_kind_0_0= ruleSTypeModelKind )
                    // InternalSim.g:164:7: lv_kind_0_0= ruleSTypeModelKind
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSystemInformationModelAccess().getKindSTypeModelKindEnumRuleCall_0_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_5);
                    lv_kind_0_0=ruleSTypeModelKind();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSystemInformationModelRule());
                      							}
                      							set(
                      								current,
                      								"kind",
                      								lv_kind_0_0,
                      								"com.mimacom.ddd.sm.sim.Sim.STypeModelKind");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,18,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getSystemInformationModelAccess().getTypeKeyword_0_0_1());
                      				
                    }
                    otherlv_2=(Token)match(input,19,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getSystemInformationModelAccess().getModelKeyword_0_0_2());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:191:4: ( ( (lv_kind_3_0= ruleSystemInformationModelKind ) ) otherlv_4= 'information' otherlv_5= 'model' )
                    {
                    // InternalSim.g:191:4: ( ( (lv_kind_3_0= ruleSystemInformationModelKind ) ) otherlv_4= 'information' otherlv_5= 'model' )
                    // InternalSim.g:192:5: ( (lv_kind_3_0= ruleSystemInformationModelKind ) ) otherlv_4= 'information' otherlv_5= 'model'
                    {
                    // InternalSim.g:192:5: ( (lv_kind_3_0= ruleSystemInformationModelKind ) )
                    // InternalSim.g:193:6: (lv_kind_3_0= ruleSystemInformationModelKind )
                    {
                    // InternalSim.g:193:6: (lv_kind_3_0= ruleSystemInformationModelKind )
                    // InternalSim.g:194:7: lv_kind_3_0= ruleSystemInformationModelKind
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSystemInformationModelAccess().getKindSystemInformationModelKindEnumRuleCall_0_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_7);
                    lv_kind_3_0=ruleSystemInformationModelKind();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSystemInformationModelRule());
                      							}
                      							set(
                      								current,
                      								"kind",
                      								lv_kind_3_0,
                      								"com.mimacom.ddd.sm.sim.Sim.SystemInformationModelKind");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,20,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getSystemInformationModelAccess().getInformationKeyword_0_1_1());
                      				
                    }
                    otherlv_5=(Token)match(input,19,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getSystemInformationModelAccess().getModelKeyword_0_1_2());
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:221:3: ( (lv_name_6_0= RULE_ID ) )
            // InternalSim.g:222:4: (lv_name_6_0= RULE_ID )
            {
            // InternalSim.g:222:4: (lv_name_6_0= RULE_ID )
            // InternalSim.g:223:5: lv_name_6_0= RULE_ID
            {
            lv_name_6_0=(Token)match(input,RULE_ID,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_6_0, grammarAccess.getSystemInformationModelAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSystemInformationModelRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_6_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.ID");
              				
            }

            }


            }

            // InternalSim.g:239:3: (otherlv_7= 'alias' ( (lv_alias_8_0= RULE_ID ) ) )?
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==21) ) {
                alt3=1;
            }
            switch (alt3) {
                case 1 :
                    // InternalSim.g:240:4: otherlv_7= 'alias' ( (lv_alias_8_0= RULE_ID ) )
                    {
                    otherlv_7=(Token)match(input,21,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getSystemInformationModelAccess().getAliasKeyword_2_0());
                      			
                    }
                    // InternalSim.g:244:4: ( (lv_alias_8_0= RULE_ID ) )
                    // InternalSim.g:245:5: (lv_alias_8_0= RULE_ID )
                    {
                    // InternalSim.g:245:5: (lv_alias_8_0= RULE_ID )
                    // InternalSim.g:246:6: lv_alias_8_0= RULE_ID
                    {
                    lv_alias_8_0=(Token)match(input,RULE_ID,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_alias_8_0, grammarAccess.getSystemInformationModelAccess().getAliasIDTerminalRuleCall_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSystemInformationModelRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"alias",
                      							lv_alias_8_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.ID");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSim.g:263:3: ( (lv_generate_9_0= 'generate' ) )?
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==22) ) {
                alt4=1;
            }
            switch (alt4) {
                case 1 :
                    // InternalSim.g:264:4: (lv_generate_9_0= 'generate' )
                    {
                    // InternalSim.g:264:4: (lv_generate_9_0= 'generate' )
                    // InternalSim.g:265:5: lv_generate_9_0= 'generate'
                    {
                    lv_generate_9_0=(Token)match(input,22,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_generate_9_0, grammarAccess.getSystemInformationModelAccess().getGenerateGenerateKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSystemInformationModelRule());
                      					}
                      					setWithLastConsumed(current, "generate", true, "generate");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:277:3: ( (lv_description_10_0= ruleDRichText ) )?
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( ((LA5_0>=RULE_PLAIN_TEXT_ONLY && LA5_0<=RULE_RICH_TEXT_START)) ) {
                alt5=1;
            }
            switch (alt5) {
                case 1 :
                    // InternalSim.g:278:4: (lv_description_10_0= ruleDRichText )
                    {
                    // InternalSim.g:278:4: (lv_description_10_0= ruleDRichText )
                    // InternalSim.g:279:5: lv_description_10_0= ruleDRichText
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSystemInformationModelAccess().getDescriptionDRichTextParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_11);
                    lv_description_10_0=ruleDRichText();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSystemInformationModelRule());
                      					}
                      					set(
                      						current,
                      						"description",
                      						lv_description_10_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:296:3: ( (lv_notes_11_0= ruleDNote ) )*
            loop6:
            do {
                int alt6=2;
                int LA6_0 = input.LA(1);

                if ( (LA6_0==59) ) {
                    alt6=1;
                }


                switch (alt6) {
            	case 1 :
            	    // InternalSim.g:297:4: (lv_notes_11_0= ruleDNote )
            	    {
            	    // InternalSim.g:297:4: (lv_notes_11_0= ruleDNote )
            	    // InternalSim.g:298:5: lv_notes_11_0= ruleDNote
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSystemInformationModelAccess().getNotesDNoteParserRuleCall_5_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_notes_11_0=ruleDNote();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSystemInformationModelRule());
            	      					}
            	      					add(
            	      						current,
            	      						"notes",
            	      						lv_notes_11_0,
            	      						"com.mimacom.ddd.dm.dmx.Dmx.DNote");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop6;
                }
            } while (true);

            otherlv_12=(Token)match(input,23,FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getSystemInformationModelAccess().getLeftCurlyBracketKeyword_6());
              		
            }
            // InternalSim.g:319:3: ( ( (lv_types_13_0= ruleSimType ) ) | ( (lv_aggregates_14_0= ruleSimAggregate ) ) )*
            loop7:
            do {
                int alt7=3;
                switch ( input.LA(1) ) {
                case 30:
                    {
                    int LA7_2 = input.LA(2);

                    if ( (LA7_2==34||LA7_2==36||(LA7_2>=38 && LA7_2<=39)||LA7_2==42) ) {
                        alt7=1;
                    }
                    else if ( (LA7_2==31) ) {
                        alt7=2;
                    }


                    }
                    break;
                case 32:
                case 35:
                case 40:
                case 41:
                    {
                    alt7=1;
                    }
                    break;
                case 31:
                    {
                    alt7=2;
                    }
                    break;

                }

                switch (alt7) {
            	case 1 :
            	    // InternalSim.g:320:4: ( (lv_types_13_0= ruleSimType ) )
            	    {
            	    // InternalSim.g:320:4: ( (lv_types_13_0= ruleSimType ) )
            	    // InternalSim.g:321:5: (lv_types_13_0= ruleSimType )
            	    {
            	    // InternalSim.g:321:5: (lv_types_13_0= ruleSimType )
            	    // InternalSim.g:322:6: lv_types_13_0= ruleSimType
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getSystemInformationModelAccess().getTypesSimTypeParserRuleCall_7_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_12);
            	    lv_types_13_0=ruleSimType();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getSystemInformationModelRule());
            	      						}
            	      						add(
            	      							current,
            	      							"types",
            	      							lv_types_13_0,
            	      							"com.mimacom.ddd.sm.sim.Sim.SimType");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalSim.g:340:4: ( (lv_aggregates_14_0= ruleSimAggregate ) )
            	    {
            	    // InternalSim.g:340:4: ( (lv_aggregates_14_0= ruleSimAggregate ) )
            	    // InternalSim.g:341:5: (lv_aggregates_14_0= ruleSimAggregate )
            	    {
            	    // InternalSim.g:341:5: (lv_aggregates_14_0= ruleSimAggregate )
            	    // InternalSim.g:342:6: lv_aggregates_14_0= ruleSimAggregate
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getSystemInformationModelAccess().getAggregatesSimAggregateParserRuleCall_7_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_12);
            	    lv_aggregates_14_0=ruleSimAggregate();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getSystemInformationModelRule());
            	      						}
            	      						add(
            	      							current,
            	      							"aggregates",
            	      							lv_aggregates_14_0,
            	      							"com.mimacom.ddd.sm.sim.Sim.SimAggregate");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop7;
                }
            } while (true);

            otherlv_15=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_15, grammarAccess.getSystemInformationModelAccess().getRightCurlyBracketKeyword_8());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSystemInformationModel"


    // $ANTLR start "entryRuleSimGrabAggregateRule"
    // InternalSim.g:368:1: entryRuleSimGrabAggregateRule returns [EObject current=null] : iv_ruleSimGrabAggregateRule= ruleSimGrabAggregateRule EOF ;
    public final EObject entryRuleSimGrabAggregateRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimGrabAggregateRule = null;


        try {
            // InternalSim.g:368:61: (iv_ruleSimGrabAggregateRule= ruleSimGrabAggregateRule EOF )
            // InternalSim.g:369:2: iv_ruleSimGrabAggregateRule= ruleSimGrabAggregateRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimGrabAggregateRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimGrabAggregateRule=ruleSimGrabAggregateRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimGrabAggregateRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimGrabAggregateRule"


    // $ANTLR start "ruleSimGrabAggregateRule"
    // InternalSim.g:375:1: ruleSimGrabAggregateRule returns [EObject current=null] : ( ( ( ruleDQualifiedName ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? ) ;
    public final EObject ruleSimGrabAggregateRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_renameTo_2_0=null;


        	enterRule();

        try {
            // InternalSim.g:381:2: ( ( ( ( ruleDQualifiedName ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? ) )
            // InternalSim.g:382:2: ( ( ( ruleDQualifiedName ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? )
            {
            // InternalSim.g:382:2: ( ( ( ruleDQualifiedName ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? )
            // InternalSim.g:383:3: ( ( ruleDQualifiedName ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )?
            {
            // InternalSim.g:383:3: ( ( ruleDQualifiedName ) )
            // InternalSim.g:384:4: ( ruleDQualifiedName )
            {
            // InternalSim.g:384:4: ( ruleDQualifiedName )
            // InternalSim.g:385:5: ruleDQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSimGrabAggregateRuleRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSimGrabAggregateRuleAccess().getSourceDimAggregateCrossReference_0_0());
              				
            }
            pushFollow(FOLLOW_13);
            ruleDQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSim.g:399:3: (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )?
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==25) ) {
                alt8=1;
            }
            switch (alt8) {
                case 1 :
                    // InternalSim.g:400:4: otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) )
                    {
                    otherlv_1=(Token)match(input,25,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSimGrabAggregateRuleAccess().getAsKeyword_1_0());
                      			
                    }
                    // InternalSim.g:404:4: ( (lv_renameTo_2_0= RULE_ID ) )
                    // InternalSim.g:405:5: (lv_renameTo_2_0= RULE_ID )
                    {
                    // InternalSim.g:405:5: (lv_renameTo_2_0= RULE_ID )
                    // InternalSim.g:406:6: lv_renameTo_2_0= RULE_ID
                    {
                    lv_renameTo_2_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_renameTo_2_0, grammarAccess.getSimGrabAggregateRuleAccess().getRenameToIDTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSimGrabAggregateRuleRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"renameTo",
                      							lv_renameTo_2_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.ID");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimGrabAggregateRule"


    // $ANTLR start "entryRuleSimGrabPrimitiveRule"
    // InternalSim.g:427:1: entryRuleSimGrabPrimitiveRule returns [EObject current=null] : iv_ruleSimGrabPrimitiveRule= ruleSimGrabPrimitiveRule EOF ;
    public final EObject entryRuleSimGrabPrimitiveRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimGrabPrimitiveRule = null;


        try {
            // InternalSim.g:427:61: (iv_ruleSimGrabPrimitiveRule= ruleSimGrabPrimitiveRule EOF )
            // InternalSim.g:428:2: iv_ruleSimGrabPrimitiveRule= ruleSimGrabPrimitiveRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimGrabPrimitiveRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimGrabPrimitiveRule=ruleSimGrabPrimitiveRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimGrabPrimitiveRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimGrabPrimitiveRule"


    // $ANTLR start "ruleSimGrabPrimitiveRule"
    // InternalSim.g:434:1: ruleSimGrabPrimitiveRule returns [EObject current=null] : ( ( ( ruleDQualifiedName ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? ) ;
    public final EObject ruleSimGrabPrimitiveRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_renameTo_2_0=null;


        	enterRule();

        try {
            // InternalSim.g:440:2: ( ( ( ( ruleDQualifiedName ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? ) )
            // InternalSim.g:441:2: ( ( ( ruleDQualifiedName ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? )
            {
            // InternalSim.g:441:2: ( ( ( ruleDQualifiedName ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? )
            // InternalSim.g:442:3: ( ( ruleDQualifiedName ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )?
            {
            // InternalSim.g:442:3: ( ( ruleDQualifiedName ) )
            // InternalSim.g:443:4: ( ruleDQualifiedName )
            {
            // InternalSim.g:443:4: ( ruleDQualifiedName )
            // InternalSim.g:444:5: ruleDQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSimGrabPrimitiveRuleRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSimGrabPrimitiveRuleAccess().getSourceDimPrimitiveCrossReference_0_0());
              				
            }
            pushFollow(FOLLOW_13);
            ruleDQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSim.g:458:3: (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )?
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==25) ) {
                alt9=1;
            }
            switch (alt9) {
                case 1 :
                    // InternalSim.g:459:4: otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) )
                    {
                    otherlv_1=(Token)match(input,25,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSimGrabPrimitiveRuleAccess().getAsKeyword_1_0());
                      			
                    }
                    // InternalSim.g:463:4: ( (lv_renameTo_2_0= RULE_ID ) )
                    // InternalSim.g:464:5: (lv_renameTo_2_0= RULE_ID )
                    {
                    // InternalSim.g:464:5: (lv_renameTo_2_0= RULE_ID )
                    // InternalSim.g:465:6: lv_renameTo_2_0= RULE_ID
                    {
                    lv_renameTo_2_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_renameTo_2_0, grammarAccess.getSimGrabPrimitiveRuleAccess().getRenameToIDTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSimGrabPrimitiveRuleRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"renameTo",
                      							lv_renameTo_2_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.ID");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimGrabPrimitiveRule"


    // $ANTLR start "entryRuleSimDitchPrimitiveRule"
    // InternalSim.g:486:1: entryRuleSimDitchPrimitiveRule returns [EObject current=null] : iv_ruleSimDitchPrimitiveRule= ruleSimDitchPrimitiveRule EOF ;
    public final EObject entryRuleSimDitchPrimitiveRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimDitchPrimitiveRule = null;


        try {
            // InternalSim.g:486:62: (iv_ruleSimDitchPrimitiveRule= ruleSimDitchPrimitiveRule EOF )
            // InternalSim.g:487:2: iv_ruleSimDitchPrimitiveRule= ruleSimDitchPrimitiveRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimDitchPrimitiveRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimDitchPrimitiveRule=ruleSimDitchPrimitiveRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimDitchPrimitiveRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimDitchPrimitiveRule"


    // $ANTLR start "ruleSimDitchPrimitiveRule"
    // InternalSim.g:493:1: ruleSimDitchPrimitiveRule returns [EObject current=null] : ( ( ruleDQualifiedName ) ) ;
    public final EObject ruleSimDitchPrimitiveRule() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
            // InternalSim.g:499:2: ( ( ( ruleDQualifiedName ) ) )
            // InternalSim.g:500:2: ( ( ruleDQualifiedName ) )
            {
            // InternalSim.g:500:2: ( ( ruleDQualifiedName ) )
            // InternalSim.g:501:3: ( ruleDQualifiedName )
            {
            // InternalSim.g:501:3: ( ruleDQualifiedName )
            // InternalSim.g:502:4: ruleDQualifiedName
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getSimDitchPrimitiveRuleRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getSimDitchPrimitiveRuleAccess().getSourceDimPrimitiveCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleDQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimDitchPrimitiveRule"


    // $ANTLR start "entryRuleSimGrabEnumerationRule"
    // InternalSim.g:519:1: entryRuleSimGrabEnumerationRule returns [EObject current=null] : iv_ruleSimGrabEnumerationRule= ruleSimGrabEnumerationRule EOF ;
    public final EObject entryRuleSimGrabEnumerationRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimGrabEnumerationRule = null;


        try {
            // InternalSim.g:519:63: (iv_ruleSimGrabEnumerationRule= ruleSimGrabEnumerationRule EOF )
            // InternalSim.g:520:2: iv_ruleSimGrabEnumerationRule= ruleSimGrabEnumerationRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimGrabEnumerationRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimGrabEnumerationRule=ruleSimGrabEnumerationRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimGrabEnumerationRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimGrabEnumerationRule"


    // $ANTLR start "ruleSimGrabEnumerationRule"
    // InternalSim.g:526:1: ruleSimGrabEnumerationRule returns [EObject current=null] : ( ( ( ruleDQualifiedName ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? ) ;
    public final EObject ruleSimGrabEnumerationRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_renameTo_2_0=null;


        	enterRule();

        try {
            // InternalSim.g:532:2: ( ( ( ( ruleDQualifiedName ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? ) )
            // InternalSim.g:533:2: ( ( ( ruleDQualifiedName ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? )
            {
            // InternalSim.g:533:2: ( ( ( ruleDQualifiedName ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? )
            // InternalSim.g:534:3: ( ( ruleDQualifiedName ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )?
            {
            // InternalSim.g:534:3: ( ( ruleDQualifiedName ) )
            // InternalSim.g:535:4: ( ruleDQualifiedName )
            {
            // InternalSim.g:535:4: ( ruleDQualifiedName )
            // InternalSim.g:536:5: ruleDQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSimGrabEnumerationRuleRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSimGrabEnumerationRuleAccess().getSourceDimEnumerationCrossReference_0_0());
              				
            }
            pushFollow(FOLLOW_13);
            ruleDQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSim.g:550:3: (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )?
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==25) ) {
                alt10=1;
            }
            switch (alt10) {
                case 1 :
                    // InternalSim.g:551:4: otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) )
                    {
                    otherlv_1=(Token)match(input,25,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSimGrabEnumerationRuleAccess().getAsKeyword_1_0());
                      			
                    }
                    // InternalSim.g:555:4: ( (lv_renameTo_2_0= RULE_ID ) )
                    // InternalSim.g:556:5: (lv_renameTo_2_0= RULE_ID )
                    {
                    // InternalSim.g:556:5: (lv_renameTo_2_0= RULE_ID )
                    // InternalSim.g:557:6: lv_renameTo_2_0= RULE_ID
                    {
                    lv_renameTo_2_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_renameTo_2_0, grammarAccess.getSimGrabEnumerationRuleAccess().getRenameToIDTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSimGrabEnumerationRuleRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"renameTo",
                      							lv_renameTo_2_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.ID");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimGrabEnumerationRule"


    // $ANTLR start "entryRuleSimDitchEnumerationRule"
    // InternalSim.g:578:1: entryRuleSimDitchEnumerationRule returns [EObject current=null] : iv_ruleSimDitchEnumerationRule= ruleSimDitchEnumerationRule EOF ;
    public final EObject entryRuleSimDitchEnumerationRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimDitchEnumerationRule = null;


        try {
            // InternalSim.g:578:64: (iv_ruleSimDitchEnumerationRule= ruleSimDitchEnumerationRule EOF )
            // InternalSim.g:579:2: iv_ruleSimDitchEnumerationRule= ruleSimDitchEnumerationRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimDitchEnumerationRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimDitchEnumerationRule=ruleSimDitchEnumerationRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimDitchEnumerationRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimDitchEnumerationRule"


    // $ANTLR start "ruleSimDitchEnumerationRule"
    // InternalSim.g:585:1: ruleSimDitchEnumerationRule returns [EObject current=null] : ( ( ruleDQualifiedName ) ) ;
    public final EObject ruleSimDitchEnumerationRule() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
            // InternalSim.g:591:2: ( ( ( ruleDQualifiedName ) ) )
            // InternalSim.g:592:2: ( ( ruleDQualifiedName ) )
            {
            // InternalSim.g:592:2: ( ( ruleDQualifiedName ) )
            // InternalSim.g:593:3: ( ruleDQualifiedName )
            {
            // InternalSim.g:593:3: ( ruleDQualifiedName )
            // InternalSim.g:594:4: ruleDQualifiedName
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getSimDitchEnumerationRuleRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getSimDitchEnumerationRuleAccess().getSourceDimEnumerationCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleDQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimDitchEnumerationRule"


    // $ANTLR start "entryRuleSimGrabEnumerationLiteralRule"
    // InternalSim.g:611:1: entryRuleSimGrabEnumerationLiteralRule returns [EObject current=null] : iv_ruleSimGrabEnumerationLiteralRule= ruleSimGrabEnumerationLiteralRule EOF ;
    public final EObject entryRuleSimGrabEnumerationLiteralRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimGrabEnumerationLiteralRule = null;


        try {
            // InternalSim.g:611:70: (iv_ruleSimGrabEnumerationLiteralRule= ruleSimGrabEnumerationLiteralRule EOF )
            // InternalSim.g:612:2: iv_ruleSimGrabEnumerationLiteralRule= ruleSimGrabEnumerationLiteralRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimGrabEnumerationLiteralRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimGrabEnumerationLiteralRule=ruleSimGrabEnumerationLiteralRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimGrabEnumerationLiteralRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimGrabEnumerationLiteralRule"


    // $ANTLR start "ruleSimGrabEnumerationLiteralRule"
    // InternalSim.g:618:1: ruleSimGrabEnumerationLiteralRule returns [EObject current=null] : ( ( (otherlv_0= RULE_ID ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? ) ;
    public final EObject ruleSimGrabEnumerationLiteralRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_renameTo_2_0=null;


        	enterRule();

        try {
            // InternalSim.g:624:2: ( ( ( (otherlv_0= RULE_ID ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? ) )
            // InternalSim.g:625:2: ( ( (otherlv_0= RULE_ID ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? )
            {
            // InternalSim.g:625:2: ( ( (otherlv_0= RULE_ID ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? )
            // InternalSim.g:626:3: ( (otherlv_0= RULE_ID ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )?
            {
            // InternalSim.g:626:3: ( (otherlv_0= RULE_ID ) )
            // InternalSim.g:627:4: (otherlv_0= RULE_ID )
            {
            // InternalSim.g:627:4: (otherlv_0= RULE_ID )
            // InternalSim.g:628:5: otherlv_0= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSimGrabEnumerationLiteralRuleRule());
              					}
              				
            }
            otherlv_0=(Token)match(input,RULE_ID,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_0, grammarAccess.getSimGrabEnumerationLiteralRuleAccess().getSourceDimLiteralCrossReference_0_0());
              				
            }

            }


            }

            // InternalSim.g:639:3: (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )?
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==25) ) {
                alt11=1;
            }
            switch (alt11) {
                case 1 :
                    // InternalSim.g:640:4: otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) )
                    {
                    otherlv_1=(Token)match(input,25,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSimGrabEnumerationLiteralRuleAccess().getAsKeyword_1_0());
                      			
                    }
                    // InternalSim.g:644:4: ( (lv_renameTo_2_0= RULE_ID ) )
                    // InternalSim.g:645:5: (lv_renameTo_2_0= RULE_ID )
                    {
                    // InternalSim.g:645:5: (lv_renameTo_2_0= RULE_ID )
                    // InternalSim.g:646:6: lv_renameTo_2_0= RULE_ID
                    {
                    lv_renameTo_2_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_renameTo_2_0, grammarAccess.getSimGrabEnumerationLiteralRuleAccess().getRenameToIDTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSimGrabEnumerationLiteralRuleRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"renameTo",
                      							lv_renameTo_2_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.ID");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimGrabEnumerationLiteralRule"


    // $ANTLR start "entryRuleSimDitchEnumerationLiteralRule"
    // InternalSim.g:667:1: entryRuleSimDitchEnumerationLiteralRule returns [EObject current=null] : iv_ruleSimDitchEnumerationLiteralRule= ruleSimDitchEnumerationLiteralRule EOF ;
    public final EObject entryRuleSimDitchEnumerationLiteralRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimDitchEnumerationLiteralRule = null;


        try {
            // InternalSim.g:667:71: (iv_ruleSimDitchEnumerationLiteralRule= ruleSimDitchEnumerationLiteralRule EOF )
            // InternalSim.g:668:2: iv_ruleSimDitchEnumerationLiteralRule= ruleSimDitchEnumerationLiteralRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimDitchEnumerationLiteralRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimDitchEnumerationLiteralRule=ruleSimDitchEnumerationLiteralRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimDitchEnumerationLiteralRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimDitchEnumerationLiteralRule"


    // $ANTLR start "ruleSimDitchEnumerationLiteralRule"
    // InternalSim.g:674:1: ruleSimDitchEnumerationLiteralRule returns [EObject current=null] : ( (otherlv_0= RULE_ID ) ) ;
    public final EObject ruleSimDitchEnumerationLiteralRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;


        	enterRule();

        try {
            // InternalSim.g:680:2: ( ( (otherlv_0= RULE_ID ) ) )
            // InternalSim.g:681:2: ( (otherlv_0= RULE_ID ) )
            {
            // InternalSim.g:681:2: ( (otherlv_0= RULE_ID ) )
            // InternalSim.g:682:3: (otherlv_0= RULE_ID )
            {
            // InternalSim.g:682:3: (otherlv_0= RULE_ID )
            // InternalSim.g:683:4: otherlv_0= RULE_ID
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getSimDitchEnumerationLiteralRuleRule());
              				}
              			
            }
            otherlv_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_0, grammarAccess.getSimDitchEnumerationLiteralRuleAccess().getSourceDimLiteralCrossReference_0());
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimDitchEnumerationLiteralRule"


    // $ANTLR start "entryRuleSimGrabComplexTypeRule"
    // InternalSim.g:697:1: entryRuleSimGrabComplexTypeRule returns [EObject current=null] : iv_ruleSimGrabComplexTypeRule= ruleSimGrabComplexTypeRule EOF ;
    public final EObject entryRuleSimGrabComplexTypeRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimGrabComplexTypeRule = null;


        try {
            // InternalSim.g:697:63: (iv_ruleSimGrabComplexTypeRule= ruleSimGrabComplexTypeRule EOF )
            // InternalSim.g:698:2: iv_ruleSimGrabComplexTypeRule= ruleSimGrabComplexTypeRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimGrabComplexTypeRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimGrabComplexTypeRule=ruleSimGrabComplexTypeRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimGrabComplexTypeRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimGrabComplexTypeRule"


    // $ANTLR start "ruleSimGrabComplexTypeRule"
    // InternalSim.g:704:1: ruleSimGrabComplexTypeRule returns [EObject current=null] : ( ( ( ruleDQualifiedName ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? ) ;
    public final EObject ruleSimGrabComplexTypeRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_renameTo_2_0=null;


        	enterRule();

        try {
            // InternalSim.g:710:2: ( ( ( ( ruleDQualifiedName ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? ) )
            // InternalSim.g:711:2: ( ( ( ruleDQualifiedName ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? )
            {
            // InternalSim.g:711:2: ( ( ( ruleDQualifiedName ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? )
            // InternalSim.g:712:3: ( ( ruleDQualifiedName ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )?
            {
            // InternalSim.g:712:3: ( ( ruleDQualifiedName ) )
            // InternalSim.g:713:4: ( ruleDQualifiedName )
            {
            // InternalSim.g:713:4: ( ruleDQualifiedName )
            // InternalSim.g:714:5: ruleDQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSimGrabComplexTypeRuleRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSimGrabComplexTypeRuleAccess().getSourceDimComplexTypeCrossReference_0_0());
              				
            }
            pushFollow(FOLLOW_13);
            ruleDQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSim.g:728:3: (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==25) ) {
                alt12=1;
            }
            switch (alt12) {
                case 1 :
                    // InternalSim.g:729:4: otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) )
                    {
                    otherlv_1=(Token)match(input,25,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSimGrabComplexTypeRuleAccess().getAsKeyword_1_0());
                      			
                    }
                    // InternalSim.g:733:4: ( (lv_renameTo_2_0= RULE_ID ) )
                    // InternalSim.g:734:5: (lv_renameTo_2_0= RULE_ID )
                    {
                    // InternalSim.g:734:5: (lv_renameTo_2_0= RULE_ID )
                    // InternalSim.g:735:6: lv_renameTo_2_0= RULE_ID
                    {
                    lv_renameTo_2_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_renameTo_2_0, grammarAccess.getSimGrabComplexTypeRuleAccess().getRenameToIDTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSimGrabComplexTypeRuleRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"renameTo",
                      							lv_renameTo_2_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.ID");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimGrabComplexTypeRule"


    // $ANTLR start "entryRuleSimDitchComplexTypeRule"
    // InternalSim.g:756:1: entryRuleSimDitchComplexTypeRule returns [EObject current=null] : iv_ruleSimDitchComplexTypeRule= ruleSimDitchComplexTypeRule EOF ;
    public final EObject entryRuleSimDitchComplexTypeRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimDitchComplexTypeRule = null;


        try {
            // InternalSim.g:756:64: (iv_ruleSimDitchComplexTypeRule= ruleSimDitchComplexTypeRule EOF )
            // InternalSim.g:757:2: iv_ruleSimDitchComplexTypeRule= ruleSimDitchComplexTypeRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimDitchComplexTypeRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimDitchComplexTypeRule=ruleSimDitchComplexTypeRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimDitchComplexTypeRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimDitchComplexTypeRule"


    // $ANTLR start "ruleSimDitchComplexTypeRule"
    // InternalSim.g:763:1: ruleSimDitchComplexTypeRule returns [EObject current=null] : ( ( ruleDQualifiedName ) ) ;
    public final EObject ruleSimDitchComplexTypeRule() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
            // InternalSim.g:769:2: ( ( ( ruleDQualifiedName ) ) )
            // InternalSim.g:770:2: ( ( ruleDQualifiedName ) )
            {
            // InternalSim.g:770:2: ( ( ruleDQualifiedName ) )
            // InternalSim.g:771:3: ( ruleDQualifiedName )
            {
            // InternalSim.g:771:3: ( ruleDQualifiedName )
            // InternalSim.g:772:4: ruleDQualifiedName
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getSimDitchComplexTypeRuleRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getSimDitchComplexTypeRuleAccess().getSourceDimComplexTypeCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleDQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimDitchComplexTypeRule"


    // $ANTLR start "entryRuleSimMorphComplexTypeRule"
    // InternalSim.g:789:1: entryRuleSimMorphComplexTypeRule returns [EObject current=null] : iv_ruleSimMorphComplexTypeRule= ruleSimMorphComplexTypeRule EOF ;
    public final EObject entryRuleSimMorphComplexTypeRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimMorphComplexTypeRule = null;


        try {
            // InternalSim.g:789:64: (iv_ruleSimMorphComplexTypeRule= ruleSimMorphComplexTypeRule EOF )
            // InternalSim.g:790:2: iv_ruleSimMorphComplexTypeRule= ruleSimMorphComplexTypeRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimMorphComplexTypeRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimMorphComplexTypeRule=ruleSimMorphComplexTypeRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimMorphComplexTypeRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimMorphComplexTypeRule"


    // $ANTLR start "ruleSimMorphComplexTypeRule"
    // InternalSim.g:796:1: ruleSimMorphComplexTypeRule returns [EObject current=null] : ( ( ( ruleDQualifiedName ) ) this_ChangeComplexType_1= ruleChangeComplexType[$current] ) ;
    public final EObject ruleSimMorphComplexTypeRule() throws RecognitionException {
        EObject current = null;

        EObject this_ChangeComplexType_1 = null;



        	enterRule();

        try {
            // InternalSim.g:802:2: ( ( ( ( ruleDQualifiedName ) ) this_ChangeComplexType_1= ruleChangeComplexType[$current] ) )
            // InternalSim.g:803:2: ( ( ( ruleDQualifiedName ) ) this_ChangeComplexType_1= ruleChangeComplexType[$current] )
            {
            // InternalSim.g:803:2: ( ( ( ruleDQualifiedName ) ) this_ChangeComplexType_1= ruleChangeComplexType[$current] )
            // InternalSim.g:804:3: ( ( ruleDQualifiedName ) ) this_ChangeComplexType_1= ruleChangeComplexType[$current]
            {
            // InternalSim.g:804:3: ( ( ruleDQualifiedName ) )
            // InternalSim.g:805:4: ( ruleDQualifiedName )
            {
            // InternalSim.g:805:4: ( ruleDQualifiedName )
            // InternalSim.g:806:5: ruleDQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSimMorphComplexTypeRuleRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSimMorphComplexTypeRuleAccess().getSourceDimComplexTypeCrossReference_0_0());
              				
            }
            pushFollow(FOLLOW_14);
            ruleDQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getSimMorphComplexTypeRuleRule());
              			}
              			newCompositeNode(grammarAccess.getSimMorphComplexTypeRuleAccess().getChangeComplexTypeParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_ChangeComplexType_1=ruleChangeComplexType(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ChangeComplexType_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimMorphComplexTypeRule"


    // $ANTLR start "entryRuleSimFuseComplexTypeRule"
    // InternalSim.g:835:1: entryRuleSimFuseComplexTypeRule returns [EObject current=null] : iv_ruleSimFuseComplexTypeRule= ruleSimFuseComplexTypeRule EOF ;
    public final EObject entryRuleSimFuseComplexTypeRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimFuseComplexTypeRule = null;


        try {
            // InternalSim.g:835:63: (iv_ruleSimFuseComplexTypeRule= ruleSimFuseComplexTypeRule EOF )
            // InternalSim.g:836:2: iv_ruleSimFuseComplexTypeRule= ruleSimFuseComplexTypeRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimFuseComplexTypeRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimFuseComplexTypeRule=ruleSimFuseComplexTypeRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimFuseComplexTypeRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimFuseComplexTypeRule"


    // $ANTLR start "ruleSimFuseComplexTypeRule"
    // InternalSim.g:842:1: ruleSimFuseComplexTypeRule returns [EObject current=null] : ( ( ( ruleDQualifiedName ) ) (otherlv_1= 'and' ( ( ruleDQualifiedName ) ) )+ this_ChangeComplexType_3= ruleChangeComplexType[$current] ) ;
    public final EObject ruleSimFuseComplexTypeRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_ChangeComplexType_3 = null;



        	enterRule();

        try {
            // InternalSim.g:848:2: ( ( ( ( ruleDQualifiedName ) ) (otherlv_1= 'and' ( ( ruleDQualifiedName ) ) )+ this_ChangeComplexType_3= ruleChangeComplexType[$current] ) )
            // InternalSim.g:849:2: ( ( ( ruleDQualifiedName ) ) (otherlv_1= 'and' ( ( ruleDQualifiedName ) ) )+ this_ChangeComplexType_3= ruleChangeComplexType[$current] )
            {
            // InternalSim.g:849:2: ( ( ( ruleDQualifiedName ) ) (otherlv_1= 'and' ( ( ruleDQualifiedName ) ) )+ this_ChangeComplexType_3= ruleChangeComplexType[$current] )
            // InternalSim.g:850:3: ( ( ruleDQualifiedName ) ) (otherlv_1= 'and' ( ( ruleDQualifiedName ) ) )+ this_ChangeComplexType_3= ruleChangeComplexType[$current]
            {
            // InternalSim.g:850:3: ( ( ruleDQualifiedName ) )
            // InternalSim.g:851:4: ( ruleDQualifiedName )
            {
            // InternalSim.g:851:4: ( ruleDQualifiedName )
            // InternalSim.g:852:5: ruleDQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSimFuseComplexTypeRuleRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSimFuseComplexTypeRuleAccess().getSourceDimComplexTypeCrossReference_0_0());
              				
            }
            pushFollow(FOLLOW_15);
            ruleDQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSim.g:866:3: (otherlv_1= 'and' ( ( ruleDQualifiedName ) ) )+
            int cnt13=0;
            loop13:
            do {
                int alt13=2;
                int LA13_0 = input.LA(1);

                if ( (LA13_0==26) ) {
                    alt13=1;
                }


                switch (alt13) {
            	case 1 :
            	    // InternalSim.g:867:4: otherlv_1= 'and' ( ( ruleDQualifiedName ) )
            	    {
            	    otherlv_1=(Token)match(input,26,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getSimFuseComplexTypeRuleAccess().getAndKeyword_1_0());
            	      			
            	    }
            	    // InternalSim.g:871:4: ( ( ruleDQualifiedName ) )
            	    // InternalSim.g:872:5: ( ruleDQualifiedName )
            	    {
            	    // InternalSim.g:872:5: ( ruleDQualifiedName )
            	    // InternalSim.g:873:6: ruleDQualifiedName
            	    {
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getSimFuseComplexTypeRuleRule());
            	      						}
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getSimFuseComplexTypeRuleAccess().getOtherSourcesDComplexTypeCrossReference_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_16);
            	    ruleDQualifiedName();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt13 >= 1 ) break loop13;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(13, input);
                        throw eee;
                }
                cnt13++;
            } while (true);

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getSimFuseComplexTypeRuleRule());
              			}
              			newCompositeNode(grammarAccess.getSimFuseComplexTypeRuleAccess().getChangeComplexTypeParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_2);
            this_ChangeComplexType_3=ruleChangeComplexType(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ChangeComplexType_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimFuseComplexTypeRule"


    // $ANTLR start "ruleChangeComplexType"
    // InternalSim.g:904:1: ruleChangeComplexType[EObject in_current] returns [EObject current=in_current] : (otherlv_0= 'to' ( (lv_abstract_1_0= ruleSimAbstractType ) )? ( ( (lv_detail_2_0= ruleSimDetailType ) ) | ( ( (lv_rootEntity_3_0= ruleSimRootEntity ) )? ( (lv_detail_4_0= ruleSimEntityType ) ) ) ) ( (lv_renameTo_5_0= RULE_ID ) )? (otherlv_6= 'extends' ( (otherlv_7= RULE_ID ) ) )? ) ;
    public final EObject ruleChangeComplexType(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token lv_renameTo_5_0=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Enumerator lv_abstract_1_0 = null;

        Enumerator lv_detail_2_0 = null;

        Enumerator lv_rootEntity_3_0 = null;

        Enumerator lv_detail_4_0 = null;



        	enterRule();

        try {
            // InternalSim.g:910:2: ( (otherlv_0= 'to' ( (lv_abstract_1_0= ruleSimAbstractType ) )? ( ( (lv_detail_2_0= ruleSimDetailType ) ) | ( ( (lv_rootEntity_3_0= ruleSimRootEntity ) )? ( (lv_detail_4_0= ruleSimEntityType ) ) ) ) ( (lv_renameTo_5_0= RULE_ID ) )? (otherlv_6= 'extends' ( (otherlv_7= RULE_ID ) ) )? ) )
            // InternalSim.g:911:2: (otherlv_0= 'to' ( (lv_abstract_1_0= ruleSimAbstractType ) )? ( ( (lv_detail_2_0= ruleSimDetailType ) ) | ( ( (lv_rootEntity_3_0= ruleSimRootEntity ) )? ( (lv_detail_4_0= ruleSimEntityType ) ) ) ) ( (lv_renameTo_5_0= RULE_ID ) )? (otherlv_6= 'extends' ( (otherlv_7= RULE_ID ) ) )? )
            {
            // InternalSim.g:911:2: (otherlv_0= 'to' ( (lv_abstract_1_0= ruleSimAbstractType ) )? ( ( (lv_detail_2_0= ruleSimDetailType ) ) | ( ( (lv_rootEntity_3_0= ruleSimRootEntity ) )? ( (lv_detail_4_0= ruleSimEntityType ) ) ) ) ( (lv_renameTo_5_0= RULE_ID ) )? (otherlv_6= 'extends' ( (otherlv_7= RULE_ID ) ) )? )
            // InternalSim.g:912:3: otherlv_0= 'to' ( (lv_abstract_1_0= ruleSimAbstractType ) )? ( ( (lv_detail_2_0= ruleSimDetailType ) ) | ( ( (lv_rootEntity_3_0= ruleSimRootEntity ) )? ( (lv_detail_4_0= ruleSimEntityType ) ) ) ) ( (lv_renameTo_5_0= RULE_ID ) )? (otherlv_6= 'extends' ( (otherlv_7= RULE_ID ) ) )?
            {
            otherlv_0=(Token)match(input,27,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getChangeComplexTypeAccess().getToKeyword_0());
              		
            }
            // InternalSim.g:916:3: ( (lv_abstract_1_0= ruleSimAbstractType ) )?
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==51||LA14_0==99) ) {
                alt14=1;
            }
            switch (alt14) {
                case 1 :
                    // InternalSim.g:917:4: (lv_abstract_1_0= ruleSimAbstractType )
                    {
                    // InternalSim.g:917:4: (lv_abstract_1_0= ruleSimAbstractType )
                    // InternalSim.g:918:5: lv_abstract_1_0= ruleSimAbstractType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getChangeComplexTypeAccess().getAbstractSimAbstractTypeEnumRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_17);
                    lv_abstract_1_0=ruleSimAbstractType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getChangeComplexTypeRule());
                      					}
                      					set(
                      						current,
                      						"abstract",
                      						lv_abstract_1_0,
                      						"com.mimacom.ddd.sm.sim.Sim.SimAbstractType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:935:3: ( ( (lv_detail_2_0= ruleSimDetailType ) ) | ( ( (lv_rootEntity_3_0= ruleSimRootEntity ) )? ( (lv_detail_4_0= ruleSimEntityType ) ) ) )
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==42) ) {
                alt16=1;
            }
            else if ( ((LA16_0>=38 && LA16_0<=39)||LA16_0==100) ) {
                alt16=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }
            switch (alt16) {
                case 1 :
                    // InternalSim.g:936:4: ( (lv_detail_2_0= ruleSimDetailType ) )
                    {
                    // InternalSim.g:936:4: ( (lv_detail_2_0= ruleSimDetailType ) )
                    // InternalSim.g:937:5: (lv_detail_2_0= ruleSimDetailType )
                    {
                    // InternalSim.g:937:5: (lv_detail_2_0= ruleSimDetailType )
                    // InternalSim.g:938:6: lv_detail_2_0= ruleSimDetailType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getChangeComplexTypeAccess().getDetailSimDetailTypeEnumRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_18);
                    lv_detail_2_0=ruleSimDetailType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getChangeComplexTypeRule());
                      						}
                      						set(
                      							current,
                      							"detail",
                      							lv_detail_2_0,
                      							"com.mimacom.ddd.sm.sim.Sim.SimDetailType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:956:4: ( ( (lv_rootEntity_3_0= ruleSimRootEntity ) )? ( (lv_detail_4_0= ruleSimEntityType ) ) )
                    {
                    // InternalSim.g:956:4: ( ( (lv_rootEntity_3_0= ruleSimRootEntity ) )? ( (lv_detail_4_0= ruleSimEntityType ) ) )
                    // InternalSim.g:957:5: ( (lv_rootEntity_3_0= ruleSimRootEntity ) )? ( (lv_detail_4_0= ruleSimEntityType ) )
                    {
                    // InternalSim.g:957:5: ( (lv_rootEntity_3_0= ruleSimRootEntity ) )?
                    int alt15=2;
                    int LA15_0 = input.LA(1);

                    if ( (LA15_0==38||LA15_0==100) ) {
                        alt15=1;
                    }
                    switch (alt15) {
                        case 1 :
                            // InternalSim.g:958:6: (lv_rootEntity_3_0= ruleSimRootEntity )
                            {
                            // InternalSim.g:958:6: (lv_rootEntity_3_0= ruleSimRootEntity )
                            // InternalSim.g:959:7: lv_rootEntity_3_0= ruleSimRootEntity
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getChangeComplexTypeAccess().getRootEntitySimRootEntityEnumRuleCall_2_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_17);
                            lv_rootEntity_3_0=ruleSimRootEntity();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getChangeComplexTypeRule());
                              							}
                              							set(
                              								current,
                              								"rootEntity",
                              								lv_rootEntity_3_0,
                              								"com.mimacom.ddd.sm.sim.Sim.SimRootEntity");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalSim.g:976:5: ( (lv_detail_4_0= ruleSimEntityType ) )
                    // InternalSim.g:977:6: (lv_detail_4_0= ruleSimEntityType )
                    {
                    // InternalSim.g:977:6: (lv_detail_4_0= ruleSimEntityType )
                    // InternalSim.g:978:7: lv_detail_4_0= ruleSimEntityType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getChangeComplexTypeAccess().getDetailSimEntityTypeEnumRuleCall_2_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_18);
                    lv_detail_4_0=ruleSimEntityType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getChangeComplexTypeRule());
                      							}
                      							set(
                      								current,
                      								"detail",
                      								lv_detail_4_0,
                      								"com.mimacom.ddd.sm.sim.Sim.SimEntityType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalSim.g:997:3: ( (lv_renameTo_5_0= RULE_ID ) )?
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==RULE_ID) ) {
                alt17=1;
            }
            switch (alt17) {
                case 1 :
                    // InternalSim.g:998:4: (lv_renameTo_5_0= RULE_ID )
                    {
                    // InternalSim.g:998:4: (lv_renameTo_5_0= RULE_ID )
                    // InternalSim.g:999:5: lv_renameTo_5_0= RULE_ID
                    {
                    lv_renameTo_5_0=(Token)match(input,RULE_ID,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_renameTo_5_0, grammarAccess.getChangeComplexTypeAccess().getRenameToIDTerminalRuleCall_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getChangeComplexTypeRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"renameTo",
                      						lv_renameTo_5_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.ID");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:1015:3: (otherlv_6= 'extends' ( (otherlv_7= RULE_ID ) ) )?
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==28) ) {
                alt18=1;
            }
            switch (alt18) {
                case 1 :
                    // InternalSim.g:1016:4: otherlv_6= 'extends' ( (otherlv_7= RULE_ID ) )
                    {
                    otherlv_6=(Token)match(input,28,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getChangeComplexTypeAccess().getExtendsKeyword_4_0());
                      			
                    }
                    // InternalSim.g:1020:4: ( (otherlv_7= RULE_ID ) )
                    // InternalSim.g:1021:5: (otherlv_7= RULE_ID )
                    {
                    // InternalSim.g:1021:5: (otherlv_7= RULE_ID )
                    // InternalSim.g:1022:6: otherlv_7= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getChangeComplexTypeRule());
                      						}
                      					
                    }
                    otherlv_7=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_7, grammarAccess.getChangeComplexTypeAccess().getExtendFromDComplexTypeCrossReference_4_1_0());
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChangeComplexType"


    // $ANTLR start "entryRuleSimGrabFeatureRule"
    // InternalSim.g:1038:1: entryRuleSimGrabFeatureRule returns [EObject current=null] : iv_ruleSimGrabFeatureRule= ruleSimGrabFeatureRule EOF ;
    public final EObject entryRuleSimGrabFeatureRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimGrabFeatureRule = null;


        try {
            // InternalSim.g:1038:59: (iv_ruleSimGrabFeatureRule= ruleSimGrabFeatureRule EOF )
            // InternalSim.g:1039:2: iv_ruleSimGrabFeatureRule= ruleSimGrabFeatureRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimGrabFeatureRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimGrabFeatureRule=ruleSimGrabFeatureRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimGrabFeatureRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimGrabFeatureRule"


    // $ANTLR start "ruleSimGrabFeatureRule"
    // InternalSim.g:1045:1: ruleSimGrabFeatureRule returns [EObject current=null] : ( ( (otherlv_0= RULE_ID ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? ) ;
    public final EObject ruleSimGrabFeatureRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_renameTo_2_0=null;


        	enterRule();

        try {
            // InternalSim.g:1051:2: ( ( ( (otherlv_0= RULE_ID ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? ) )
            // InternalSim.g:1052:2: ( ( (otherlv_0= RULE_ID ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? )
            {
            // InternalSim.g:1052:2: ( ( (otherlv_0= RULE_ID ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? )
            // InternalSim.g:1053:3: ( (otherlv_0= RULE_ID ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )?
            {
            // InternalSim.g:1053:3: ( (otherlv_0= RULE_ID ) )
            // InternalSim.g:1054:4: (otherlv_0= RULE_ID )
            {
            // InternalSim.g:1054:4: (otherlv_0= RULE_ID )
            // InternalSim.g:1055:5: otherlv_0= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSimGrabFeatureRuleRule());
              					}
              				
            }
            otherlv_0=(Token)match(input,RULE_ID,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_0, grammarAccess.getSimGrabFeatureRuleAccess().getSourceDimFeatureCrossReference_0_0());
              				
            }

            }


            }

            // InternalSim.g:1066:3: (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )?
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==25) ) {
                alt19=1;
            }
            switch (alt19) {
                case 1 :
                    // InternalSim.g:1067:4: otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) )
                    {
                    otherlv_1=(Token)match(input,25,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSimGrabFeatureRuleAccess().getAsKeyword_1_0());
                      			
                    }
                    // InternalSim.g:1071:4: ( (lv_renameTo_2_0= RULE_ID ) )
                    // InternalSim.g:1072:5: (lv_renameTo_2_0= RULE_ID )
                    {
                    // InternalSim.g:1072:5: (lv_renameTo_2_0= RULE_ID )
                    // InternalSim.g:1073:6: lv_renameTo_2_0= RULE_ID
                    {
                    lv_renameTo_2_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_renameTo_2_0, grammarAccess.getSimGrabFeatureRuleAccess().getRenameToIDTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSimGrabFeatureRuleRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"renameTo",
                      							lv_renameTo_2_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.ID");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimGrabFeatureRule"


    // $ANTLR start "entryRuleSimMorphFeatureRule"
    // InternalSim.g:1094:1: entryRuleSimMorphFeatureRule returns [EObject current=null] : iv_ruleSimMorphFeatureRule= ruleSimMorphFeatureRule EOF ;
    public final EObject entryRuleSimMorphFeatureRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimMorphFeatureRule = null;


        try {
            // InternalSim.g:1094:60: (iv_ruleSimMorphFeatureRule= ruleSimMorphFeatureRule EOF )
            // InternalSim.g:1095:2: iv_ruleSimMorphFeatureRule= ruleSimMorphFeatureRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimMorphFeatureRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimMorphFeatureRule=ruleSimMorphFeatureRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimMorphFeatureRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimMorphFeatureRule"


    // $ANTLR start "ruleSimMorphFeatureRule"
    // InternalSim.g:1101:1: ruleSimMorphFeatureRule returns [EObject current=null] : ( ( (otherlv_0= RULE_ID ) ) otherlv_1= 'to' ( ( (lv_renameTo_2_0= RULE_ID ) ) otherlv_3= ':' )? ( (otherlv_4= RULE_ID ) ) ( (lv_remultiplyTo_5_0= ruleDMultiplicity ) )? ) ;
    public final EObject ruleSimMorphFeatureRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_renameTo_2_0=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_remultiplyTo_5_0 = null;



        	enterRule();

        try {
            // InternalSim.g:1107:2: ( ( ( (otherlv_0= RULE_ID ) ) otherlv_1= 'to' ( ( (lv_renameTo_2_0= RULE_ID ) ) otherlv_3= ':' )? ( (otherlv_4= RULE_ID ) ) ( (lv_remultiplyTo_5_0= ruleDMultiplicity ) )? ) )
            // InternalSim.g:1108:2: ( ( (otherlv_0= RULE_ID ) ) otherlv_1= 'to' ( ( (lv_renameTo_2_0= RULE_ID ) ) otherlv_3= ':' )? ( (otherlv_4= RULE_ID ) ) ( (lv_remultiplyTo_5_0= ruleDMultiplicity ) )? )
            {
            // InternalSim.g:1108:2: ( ( (otherlv_0= RULE_ID ) ) otherlv_1= 'to' ( ( (lv_renameTo_2_0= RULE_ID ) ) otherlv_3= ':' )? ( (otherlv_4= RULE_ID ) ) ( (lv_remultiplyTo_5_0= ruleDMultiplicity ) )? )
            // InternalSim.g:1109:3: ( (otherlv_0= RULE_ID ) ) otherlv_1= 'to' ( ( (lv_renameTo_2_0= RULE_ID ) ) otherlv_3= ':' )? ( (otherlv_4= RULE_ID ) ) ( (lv_remultiplyTo_5_0= ruleDMultiplicity ) )?
            {
            // InternalSim.g:1109:3: ( (otherlv_0= RULE_ID ) )
            // InternalSim.g:1110:4: (otherlv_0= RULE_ID )
            {
            // InternalSim.g:1110:4: (otherlv_0= RULE_ID )
            // InternalSim.g:1111:5: otherlv_0= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSimMorphFeatureRuleRule());
              					}
              				
            }
            otherlv_0=(Token)match(input,RULE_ID,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_0, grammarAccess.getSimMorphFeatureRuleAccess().getSourceDimFeatureCrossReference_0_0());
              				
            }

            }


            }

            otherlv_1=(Token)match(input,27,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSimMorphFeatureRuleAccess().getToKeyword_1());
              		
            }
            // InternalSim.g:1126:3: ( ( (lv_renameTo_2_0= RULE_ID ) ) otherlv_3= ':' )?
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==RULE_ID) ) {
                int LA20_1 = input.LA(2);

                if ( (LA20_1==29) ) {
                    alt20=1;
                }
            }
            switch (alt20) {
                case 1 :
                    // InternalSim.g:1127:4: ( (lv_renameTo_2_0= RULE_ID ) ) otherlv_3= ':'
                    {
                    // InternalSim.g:1127:4: ( (lv_renameTo_2_0= RULE_ID ) )
                    // InternalSim.g:1128:5: (lv_renameTo_2_0= RULE_ID )
                    {
                    // InternalSim.g:1128:5: (lv_renameTo_2_0= RULE_ID )
                    // InternalSim.g:1129:6: lv_renameTo_2_0= RULE_ID
                    {
                    lv_renameTo_2_0=(Token)match(input,RULE_ID,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_renameTo_2_0, grammarAccess.getSimMorphFeatureRuleAccess().getRenameToIDTerminalRuleCall_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSimMorphFeatureRuleRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"renameTo",
                      							lv_renameTo_2_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.ID");
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,29,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getSimMorphFeatureRuleAccess().getColonKeyword_2_1());
                      			
                    }

                    }
                    break;

            }

            // InternalSim.g:1150:3: ( (otherlv_4= RULE_ID ) )
            // InternalSim.g:1151:4: (otherlv_4= RULE_ID )
            {
            // InternalSim.g:1151:4: (otherlv_4= RULE_ID )
            // InternalSim.g:1152:5: otherlv_4= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSimMorphFeatureRuleRule());
              					}
              				
            }
            otherlv_4=(Token)match(input,RULE_ID,FOLLOW_21); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_4, grammarAccess.getSimMorphFeatureRuleAccess().getRetypeToDTypeCrossReference_3_0());
              				
            }

            }


            }

            // InternalSim.g:1163:3: ( (lv_remultiplyTo_5_0= ruleDMultiplicity ) )?
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==47||LA21_0==93||LA21_0==146) ) {
                alt21=1;
            }
            else if ( (LA21_0==46) ) {
                int LA21_2 = input.LA(2);

                if ( (LA21_2==RULE_NATURAL) ) {
                    alt21=1;
                }
            }
            switch (alt21) {
                case 1 :
                    // InternalSim.g:1164:4: (lv_remultiplyTo_5_0= ruleDMultiplicity )
                    {
                    // InternalSim.g:1164:4: (lv_remultiplyTo_5_0= ruleDMultiplicity )
                    // InternalSim.g:1165:5: lv_remultiplyTo_5_0= ruleDMultiplicity
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimMorphFeatureRuleAccess().getRemultiplyToDMultiplicityParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_remultiplyTo_5_0=ruleDMultiplicity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimMorphFeatureRuleRule());
                      					}
                      					set(
                      						current,
                      						"remultiplyTo",
                      						lv_remultiplyTo_5_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DMultiplicity");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimMorphFeatureRule"


    // $ANTLR start "entryRuleSimDitchFeatureRule"
    // InternalSim.g:1186:1: entryRuleSimDitchFeatureRule returns [EObject current=null] : iv_ruleSimDitchFeatureRule= ruleSimDitchFeatureRule EOF ;
    public final EObject entryRuleSimDitchFeatureRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimDitchFeatureRule = null;


        try {
            // InternalSim.g:1186:60: (iv_ruleSimDitchFeatureRule= ruleSimDitchFeatureRule EOF )
            // InternalSim.g:1187:2: iv_ruleSimDitchFeatureRule= ruleSimDitchFeatureRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimDitchFeatureRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimDitchFeatureRule=ruleSimDitchFeatureRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimDitchFeatureRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimDitchFeatureRule"


    // $ANTLR start "ruleSimDitchFeatureRule"
    // InternalSim.g:1193:1: ruleSimDitchFeatureRule returns [EObject current=null] : ( (otherlv_0= RULE_ID ) ) ;
    public final EObject ruleSimDitchFeatureRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;


        	enterRule();

        try {
            // InternalSim.g:1199:2: ( ( (otherlv_0= RULE_ID ) ) )
            // InternalSim.g:1200:2: ( (otherlv_0= RULE_ID ) )
            {
            // InternalSim.g:1200:2: ( (otherlv_0= RULE_ID ) )
            // InternalSim.g:1201:3: (otherlv_0= RULE_ID )
            {
            // InternalSim.g:1201:3: (otherlv_0= RULE_ID )
            // InternalSim.g:1202:4: otherlv_0= RULE_ID
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getSimDitchFeatureRuleRule());
              				}
              			
            }
            otherlv_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_0, grammarAccess.getSimDitchFeatureRuleAccess().getSourceDimFeatureCrossReference_0());
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimDitchFeatureRule"


    // $ANTLR start "entryRuleSimGrabQueryParameterRule"
    // InternalSim.g:1216:1: entryRuleSimGrabQueryParameterRule returns [EObject current=null] : iv_ruleSimGrabQueryParameterRule= ruleSimGrabQueryParameterRule EOF ;
    public final EObject entryRuleSimGrabQueryParameterRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimGrabQueryParameterRule = null;


        try {
            // InternalSim.g:1216:66: (iv_ruleSimGrabQueryParameterRule= ruleSimGrabQueryParameterRule EOF )
            // InternalSim.g:1217:2: iv_ruleSimGrabQueryParameterRule= ruleSimGrabQueryParameterRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimGrabQueryParameterRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimGrabQueryParameterRule=ruleSimGrabQueryParameterRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimGrabQueryParameterRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimGrabQueryParameterRule"


    // $ANTLR start "ruleSimGrabQueryParameterRule"
    // InternalSim.g:1223:1: ruleSimGrabQueryParameterRule returns [EObject current=null] : ( ( (otherlv_0= RULE_ID ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? ) ;
    public final EObject ruleSimGrabQueryParameterRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_renameTo_2_0=null;


        	enterRule();

        try {
            // InternalSim.g:1229:2: ( ( ( (otherlv_0= RULE_ID ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? ) )
            // InternalSim.g:1230:2: ( ( (otherlv_0= RULE_ID ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? )
            {
            // InternalSim.g:1230:2: ( ( (otherlv_0= RULE_ID ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )? )
            // InternalSim.g:1231:3: ( (otherlv_0= RULE_ID ) ) (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )?
            {
            // InternalSim.g:1231:3: ( (otherlv_0= RULE_ID ) )
            // InternalSim.g:1232:4: (otherlv_0= RULE_ID )
            {
            // InternalSim.g:1232:4: (otherlv_0= RULE_ID )
            // InternalSim.g:1233:5: otherlv_0= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSimGrabQueryParameterRuleRule());
              					}
              				
            }
            otherlv_0=(Token)match(input,RULE_ID,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_0, grammarAccess.getSimGrabQueryParameterRuleAccess().getSourceDimQueryParameterCrossReference_0_0());
              				
            }

            }


            }

            // InternalSim.g:1244:3: (otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) ) )?
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==25) ) {
                alt22=1;
            }
            switch (alt22) {
                case 1 :
                    // InternalSim.g:1245:4: otherlv_1= 'as' ( (lv_renameTo_2_0= RULE_ID ) )
                    {
                    otherlv_1=(Token)match(input,25,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSimGrabQueryParameterRuleAccess().getAsKeyword_1_0());
                      			
                    }
                    // InternalSim.g:1249:4: ( (lv_renameTo_2_0= RULE_ID ) )
                    // InternalSim.g:1250:5: (lv_renameTo_2_0= RULE_ID )
                    {
                    // InternalSim.g:1250:5: (lv_renameTo_2_0= RULE_ID )
                    // InternalSim.g:1251:6: lv_renameTo_2_0= RULE_ID
                    {
                    lv_renameTo_2_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_renameTo_2_0, grammarAccess.getSimGrabQueryParameterRuleAccess().getRenameToIDTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSimGrabQueryParameterRuleRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"renameTo",
                      							lv_renameTo_2_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.ID");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimGrabQueryParameterRule"


    // $ANTLR start "entryRuleSimMorphQueryParameterRule"
    // InternalSim.g:1272:1: entryRuleSimMorphQueryParameterRule returns [EObject current=null] : iv_ruleSimMorphQueryParameterRule= ruleSimMorphQueryParameterRule EOF ;
    public final EObject entryRuleSimMorphQueryParameterRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimMorphQueryParameterRule = null;


        try {
            // InternalSim.g:1272:67: (iv_ruleSimMorphQueryParameterRule= ruleSimMorphQueryParameterRule EOF )
            // InternalSim.g:1273:2: iv_ruleSimMorphQueryParameterRule= ruleSimMorphQueryParameterRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimMorphQueryParameterRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimMorphQueryParameterRule=ruleSimMorphQueryParameterRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimMorphQueryParameterRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimMorphQueryParameterRule"


    // $ANTLR start "ruleSimMorphQueryParameterRule"
    // InternalSim.g:1279:1: ruleSimMorphQueryParameterRule returns [EObject current=null] : ( ( (otherlv_0= RULE_ID ) ) otherlv_1= 'to' ( ( (lv_renameTo_2_0= RULE_ID ) ) otherlv_3= ':' )? ( (otherlv_4= RULE_ID ) ) ( (lv_remultiplyTo_5_0= ruleDMultiplicity ) )? ) ;
    public final EObject ruleSimMorphQueryParameterRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_renameTo_2_0=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_remultiplyTo_5_0 = null;



        	enterRule();

        try {
            // InternalSim.g:1285:2: ( ( ( (otherlv_0= RULE_ID ) ) otherlv_1= 'to' ( ( (lv_renameTo_2_0= RULE_ID ) ) otherlv_3= ':' )? ( (otherlv_4= RULE_ID ) ) ( (lv_remultiplyTo_5_0= ruleDMultiplicity ) )? ) )
            // InternalSim.g:1286:2: ( ( (otherlv_0= RULE_ID ) ) otherlv_1= 'to' ( ( (lv_renameTo_2_0= RULE_ID ) ) otherlv_3= ':' )? ( (otherlv_4= RULE_ID ) ) ( (lv_remultiplyTo_5_0= ruleDMultiplicity ) )? )
            {
            // InternalSim.g:1286:2: ( ( (otherlv_0= RULE_ID ) ) otherlv_1= 'to' ( ( (lv_renameTo_2_0= RULE_ID ) ) otherlv_3= ':' )? ( (otherlv_4= RULE_ID ) ) ( (lv_remultiplyTo_5_0= ruleDMultiplicity ) )? )
            // InternalSim.g:1287:3: ( (otherlv_0= RULE_ID ) ) otherlv_1= 'to' ( ( (lv_renameTo_2_0= RULE_ID ) ) otherlv_3= ':' )? ( (otherlv_4= RULE_ID ) ) ( (lv_remultiplyTo_5_0= ruleDMultiplicity ) )?
            {
            // InternalSim.g:1287:3: ( (otherlv_0= RULE_ID ) )
            // InternalSim.g:1288:4: (otherlv_0= RULE_ID )
            {
            // InternalSim.g:1288:4: (otherlv_0= RULE_ID )
            // InternalSim.g:1289:5: otherlv_0= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSimMorphQueryParameterRuleRule());
              					}
              				
            }
            otherlv_0=(Token)match(input,RULE_ID,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_0, grammarAccess.getSimMorphQueryParameterRuleAccess().getSourceDimQueryParameterCrossReference_0_0());
              				
            }

            }


            }

            otherlv_1=(Token)match(input,27,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSimMorphQueryParameterRuleAccess().getToKeyword_1());
              		
            }
            // InternalSim.g:1304:3: ( ( (lv_renameTo_2_0= RULE_ID ) ) otherlv_3= ':' )?
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==RULE_ID) ) {
                int LA23_1 = input.LA(2);

                if ( (LA23_1==29) ) {
                    alt23=1;
                }
            }
            switch (alt23) {
                case 1 :
                    // InternalSim.g:1305:4: ( (lv_renameTo_2_0= RULE_ID ) ) otherlv_3= ':'
                    {
                    // InternalSim.g:1305:4: ( (lv_renameTo_2_0= RULE_ID ) )
                    // InternalSim.g:1306:5: (lv_renameTo_2_0= RULE_ID )
                    {
                    // InternalSim.g:1306:5: (lv_renameTo_2_0= RULE_ID )
                    // InternalSim.g:1307:6: lv_renameTo_2_0= RULE_ID
                    {
                    lv_renameTo_2_0=(Token)match(input,RULE_ID,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_renameTo_2_0, grammarAccess.getSimMorphQueryParameterRuleAccess().getRenameToIDTerminalRuleCall_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSimMorphQueryParameterRuleRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"renameTo",
                      							lv_renameTo_2_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.ID");
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,29,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getSimMorphQueryParameterRuleAccess().getColonKeyword_2_1());
                      			
                    }

                    }
                    break;

            }

            // InternalSim.g:1328:3: ( (otherlv_4= RULE_ID ) )
            // InternalSim.g:1329:4: (otherlv_4= RULE_ID )
            {
            // InternalSim.g:1329:4: (otherlv_4= RULE_ID )
            // InternalSim.g:1330:5: otherlv_4= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSimMorphQueryParameterRuleRule());
              					}
              				
            }
            otherlv_4=(Token)match(input,RULE_ID,FOLLOW_21); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_4, grammarAccess.getSimMorphQueryParameterRuleAccess().getRetypeToDTypeCrossReference_3_0());
              				
            }

            }


            }

            // InternalSim.g:1341:3: ( (lv_remultiplyTo_5_0= ruleDMultiplicity ) )?
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( ((LA24_0>=46 && LA24_0<=47)||LA24_0==93||LA24_0==146) ) {
                alt24=1;
            }
            switch (alt24) {
                case 1 :
                    // InternalSim.g:1342:4: (lv_remultiplyTo_5_0= ruleDMultiplicity )
                    {
                    // InternalSim.g:1342:4: (lv_remultiplyTo_5_0= ruleDMultiplicity )
                    // InternalSim.g:1343:5: lv_remultiplyTo_5_0= ruleDMultiplicity
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimMorphQueryParameterRuleAccess().getRemultiplyToDMultiplicityParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_remultiplyTo_5_0=ruleDMultiplicity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimMorphQueryParameterRuleRule());
                      					}
                      					set(
                      						current,
                      						"remultiplyTo",
                      						lv_remultiplyTo_5_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DMultiplicity");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimMorphQueryParameterRule"


    // $ANTLR start "entryRuleSimDitchQueryParameterRule"
    // InternalSim.g:1364:1: entryRuleSimDitchQueryParameterRule returns [EObject current=null] : iv_ruleSimDitchQueryParameterRule= ruleSimDitchQueryParameterRule EOF ;
    public final EObject entryRuleSimDitchQueryParameterRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimDitchQueryParameterRule = null;


        try {
            // InternalSim.g:1364:67: (iv_ruleSimDitchQueryParameterRule= ruleSimDitchQueryParameterRule EOF )
            // InternalSim.g:1365:2: iv_ruleSimDitchQueryParameterRule= ruleSimDitchQueryParameterRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimDitchQueryParameterRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimDitchQueryParameterRule=ruleSimDitchQueryParameterRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimDitchQueryParameterRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimDitchQueryParameterRule"


    // $ANTLR start "ruleSimDitchQueryParameterRule"
    // InternalSim.g:1371:1: ruleSimDitchQueryParameterRule returns [EObject current=null] : ( (otherlv_0= RULE_ID ) ) ;
    public final EObject ruleSimDitchQueryParameterRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;


        	enterRule();

        try {
            // InternalSim.g:1377:2: ( ( (otherlv_0= RULE_ID ) ) )
            // InternalSim.g:1378:2: ( (otherlv_0= RULE_ID ) )
            {
            // InternalSim.g:1378:2: ( (otherlv_0= RULE_ID ) )
            // InternalSim.g:1379:3: (otherlv_0= RULE_ID )
            {
            // InternalSim.g:1379:3: (otherlv_0= RULE_ID )
            // InternalSim.g:1380:4: otherlv_0= RULE_ID
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getSimDitchQueryParameterRuleRule());
              				}
              			
            }
            otherlv_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_0, grammarAccess.getSimDitchQueryParameterRuleAccess().getSourceDimQueryParameterCrossReference_0());
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimDitchQueryParameterRule"


    // $ANTLR start "entryRuleSimAggregate"
    // InternalSim.g:1394:1: entryRuleSimAggregate returns [EObject current=null] : iv_ruleSimAggregate= ruleSimAggregate EOF ;
    public final EObject entryRuleSimAggregate() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimAggregate = null;


        try {
            // InternalSim.g:1394:53: (iv_ruleSimAggregate= ruleSimAggregate EOF )
            // InternalSim.g:1395:2: iv_ruleSimAggregate= ruleSimAggregate EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimAggregateRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimAggregate=ruleSimAggregate();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimAggregate; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimAggregate"


    // $ANTLR start "ruleSimAggregate"
    // InternalSim.g:1401:1: ruleSimAggregate returns [EObject current=null] : (this_SimAggregateTransposition_0= ruleSimAggregateTransposition | this_DimAggregate_1= ruleDimAggregate ) ;
    public final EObject ruleSimAggregate() throws RecognitionException {
        EObject current = null;

        EObject this_SimAggregateTransposition_0 = null;

        EObject this_DimAggregate_1 = null;



        	enterRule();

        try {
            // InternalSim.g:1407:2: ( (this_SimAggregateTransposition_0= ruleSimAggregateTransposition | this_DimAggregate_1= ruleDimAggregate ) )
            // InternalSim.g:1408:2: (this_SimAggregateTransposition_0= ruleSimAggregateTransposition | this_DimAggregate_1= ruleDimAggregate )
            {
            // InternalSim.g:1408:2: (this_SimAggregateTransposition_0= ruleSimAggregateTransposition | this_DimAggregate_1= ruleDimAggregate )
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==30) ) {
                alt25=1;
            }
            else if ( (LA25_0==31) ) {
                alt25=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;
            }
            switch (alt25) {
                case 1 :
                    // InternalSim.g:1409:3: this_SimAggregateTransposition_0= ruleSimAggregateTransposition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSimAggregateAccess().getSimAggregateTranspositionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SimAggregateTransposition_0=ruleSimAggregateTransposition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SimAggregateTransposition_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSim.g:1418:3: this_DimAggregate_1= ruleDimAggregate
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSimAggregateAccess().getDimAggregateParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DimAggregate_1=ruleDimAggregate();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DimAggregate_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimAggregate"


    // $ANTLR start "entryRuleSimAggregateTransposition"
    // InternalSim.g:1430:1: entryRuleSimAggregateTransposition returns [EObject current=null] : iv_ruleSimAggregateTransposition= ruleSimAggregateTransposition EOF ;
    public final EObject entryRuleSimAggregateTransposition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimAggregateTransposition = null;


        try {
            // InternalSim.g:1430:66: (iv_ruleSimAggregateTransposition= ruleSimAggregateTransposition EOF )
            // InternalSim.g:1431:2: iv_ruleSimAggregateTransposition= ruleSimAggregateTransposition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimAggregateTranspositionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimAggregateTransposition=ruleSimAggregateTransposition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimAggregateTransposition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimAggregateTransposition"


    // $ANTLR start "ruleSimAggregateTransposition"
    // InternalSim.g:1437:1: ruleSimAggregateTransposition returns [EObject current=null] : ( () otherlv_1= 'grab' otherlv_2= 'aggregate' ( (lv_rule_3_0= ruleSimGrabAggregateRule ) ) ( (lv_description_4_0= ruleDRichText ) )? (otherlv_5= '{' ( ( (lv_features_6_0= ruleSimQueryTransposition ) ) | (otherlv_7= 'add' otherlv_8= 'query' ( (lv_features_9_0= ruleDimQuery ) ) ) )* ( (lv_types_10_0= ruleSimType ) )* otherlv_11= '}' )? ) ;
    public final EObject ruleSimAggregateTransposition() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_11=null;
        EObject lv_rule_3_0 = null;

        EObject lv_description_4_0 = null;

        EObject lv_features_6_0 = null;

        EObject lv_features_9_0 = null;

        EObject lv_types_10_0 = null;



        	enterRule();

        try {
            // InternalSim.g:1443:2: ( ( () otherlv_1= 'grab' otherlv_2= 'aggregate' ( (lv_rule_3_0= ruleSimGrabAggregateRule ) ) ( (lv_description_4_0= ruleDRichText ) )? (otherlv_5= '{' ( ( (lv_features_6_0= ruleSimQueryTransposition ) ) | (otherlv_7= 'add' otherlv_8= 'query' ( (lv_features_9_0= ruleDimQuery ) ) ) )* ( (lv_types_10_0= ruleSimType ) )* otherlv_11= '}' )? ) )
            // InternalSim.g:1444:2: ( () otherlv_1= 'grab' otherlv_2= 'aggregate' ( (lv_rule_3_0= ruleSimGrabAggregateRule ) ) ( (lv_description_4_0= ruleDRichText ) )? (otherlv_5= '{' ( ( (lv_features_6_0= ruleSimQueryTransposition ) ) | (otherlv_7= 'add' otherlv_8= 'query' ( (lv_features_9_0= ruleDimQuery ) ) ) )* ( (lv_types_10_0= ruleSimType ) )* otherlv_11= '}' )? )
            {
            // InternalSim.g:1444:2: ( () otherlv_1= 'grab' otherlv_2= 'aggregate' ( (lv_rule_3_0= ruleSimGrabAggregateRule ) ) ( (lv_description_4_0= ruleDRichText ) )? (otherlv_5= '{' ( ( (lv_features_6_0= ruleSimQueryTransposition ) ) | (otherlv_7= 'add' otherlv_8= 'query' ( (lv_features_9_0= ruleDimQuery ) ) ) )* ( (lv_types_10_0= ruleSimType ) )* otherlv_11= '}' )? )
            // InternalSim.g:1445:3: () otherlv_1= 'grab' otherlv_2= 'aggregate' ( (lv_rule_3_0= ruleSimGrabAggregateRule ) ) ( (lv_description_4_0= ruleDRichText ) )? (otherlv_5= '{' ( ( (lv_features_6_0= ruleSimQueryTransposition ) ) | (otherlv_7= 'add' otherlv_8= 'query' ( (lv_features_9_0= ruleDimQuery ) ) ) )* ( (lv_types_10_0= ruleSimType ) )* otherlv_11= '}' )?
            {
            // InternalSim.g:1445:3: ()
            // InternalSim.g:1446:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSimAggregateTranspositionAccess().getTAggregateTranspositionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,30,FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSimAggregateTranspositionAccess().getGrabKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,31,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getSimAggregateTranspositionAccess().getAggregateKeyword_2());
              		
            }
            // InternalSim.g:1460:3: ( (lv_rule_3_0= ruleSimGrabAggregateRule ) )
            // InternalSim.g:1461:4: (lv_rule_3_0= ruleSimGrabAggregateRule )
            {
            // InternalSim.g:1461:4: (lv_rule_3_0= ruleSimGrabAggregateRule )
            // InternalSim.g:1462:5: lv_rule_3_0= ruleSimGrabAggregateRule
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSimAggregateTranspositionAccess().getRuleSimGrabAggregateRuleParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_23);
            lv_rule_3_0=ruleSimGrabAggregateRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSimAggregateTranspositionRule());
              					}
              					set(
              						current,
              						"rule",
              						lv_rule_3_0,
              						"com.mimacom.ddd.sm.sim.Sim.SimGrabAggregateRule");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSim.g:1479:3: ( (lv_description_4_0= ruleDRichText ) )?
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( ((LA26_0>=RULE_PLAIN_TEXT_ONLY && LA26_0<=RULE_RICH_TEXT_START)) ) {
                alt26=1;
            }
            switch (alt26) {
                case 1 :
                    // InternalSim.g:1480:4: (lv_description_4_0= ruleDRichText )
                    {
                    // InternalSim.g:1480:4: (lv_description_4_0= ruleDRichText )
                    // InternalSim.g:1481:5: lv_description_4_0= ruleDRichText
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimAggregateTranspositionAccess().getDescriptionDRichTextParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_24);
                    lv_description_4_0=ruleDRichText();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimAggregateTranspositionRule());
                      					}
                      					set(
                      						current,
                      						"description",
                      						lv_description_4_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:1498:3: (otherlv_5= '{' ( ( (lv_features_6_0= ruleSimQueryTransposition ) ) | (otherlv_7= 'add' otherlv_8= 'query' ( (lv_features_9_0= ruleDimQuery ) ) ) )* ( (lv_types_10_0= ruleSimType ) )* otherlv_11= '}' )?
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==23) ) {
                alt29=1;
            }
            switch (alt29) {
                case 1 :
                    // InternalSim.g:1499:4: otherlv_5= '{' ( ( (lv_features_6_0= ruleSimQueryTransposition ) ) | (otherlv_7= 'add' otherlv_8= 'query' ( (lv_features_9_0= ruleDimQuery ) ) ) )* ( (lv_types_10_0= ruleSimType ) )* otherlv_11= '}'
                    {
                    otherlv_5=(Token)match(input,23,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getSimAggregateTranspositionAccess().getLeftCurlyBracketKeyword_5_0());
                      			
                    }
                    // InternalSim.g:1503:4: ( ( (lv_features_6_0= ruleSimQueryTransposition ) ) | (otherlv_7= 'add' otherlv_8= 'query' ( (lv_features_9_0= ruleDimQuery ) ) ) )*
                    loop27:
                    do {
                        int alt27=3;
                        switch ( input.LA(1) ) {
                        case 30:
                            {
                            int LA27_1 = input.LA(2);

                            if ( (LA27_1==33) ) {
                                alt27=1;
                            }


                            }
                            break;
                        case 35:
                            {
                            int LA27_2 = input.LA(2);

                            if ( (LA27_2==33) ) {
                                alt27=1;
                            }


                            }
                            break;
                        case 32:
                            {
                            int LA27_3 = input.LA(2);

                            if ( (LA27_3==33) ) {
                                alt27=2;
                            }


                            }
                            break;
                        case 40:
                            {
                            int LA27_4 = input.LA(2);

                            if ( (LA27_4==33) ) {
                                alt27=1;
                            }


                            }
                            break;

                        }

                        switch (alt27) {
                    	case 1 :
                    	    // InternalSim.g:1504:5: ( (lv_features_6_0= ruleSimQueryTransposition ) )
                    	    {
                    	    // InternalSim.g:1504:5: ( (lv_features_6_0= ruleSimQueryTransposition ) )
                    	    // InternalSim.g:1505:6: (lv_features_6_0= ruleSimQueryTransposition )
                    	    {
                    	    // InternalSim.g:1505:6: (lv_features_6_0= ruleSimQueryTransposition )
                    	    // InternalSim.g:1506:7: lv_features_6_0= ruleSimQueryTransposition
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getSimAggregateTranspositionAccess().getFeaturesSimQueryTranspositionParserRuleCall_5_1_0_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_25);
                    	    lv_features_6_0=ruleSimQueryTransposition();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getSimAggregateTranspositionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"features",
                    	      								lv_features_6_0,
                    	      								"com.mimacom.ddd.sm.sim.Sim.SimQueryTransposition");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalSim.g:1524:5: (otherlv_7= 'add' otherlv_8= 'query' ( (lv_features_9_0= ruleDimQuery ) ) )
                    	    {
                    	    // InternalSim.g:1524:5: (otherlv_7= 'add' otherlv_8= 'query' ( (lv_features_9_0= ruleDimQuery ) ) )
                    	    // InternalSim.g:1525:6: otherlv_7= 'add' otherlv_8= 'query' ( (lv_features_9_0= ruleDimQuery ) )
                    	    {
                    	    otherlv_7=(Token)match(input,32,FOLLOW_26); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_7, grammarAccess.getSimAggregateTranspositionAccess().getAddKeyword_5_1_1_0());
                    	      					
                    	    }
                    	    otherlv_8=(Token)match(input,33,FOLLOW_3); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_8, grammarAccess.getSimAggregateTranspositionAccess().getQueryKeyword_5_1_1_1());
                    	      					
                    	    }
                    	    // InternalSim.g:1533:6: ( (lv_features_9_0= ruleDimQuery ) )
                    	    // InternalSim.g:1534:7: (lv_features_9_0= ruleDimQuery )
                    	    {
                    	    // InternalSim.g:1534:7: (lv_features_9_0= ruleDimQuery )
                    	    // InternalSim.g:1535:8: lv_features_9_0= ruleDimQuery
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getSimAggregateTranspositionAccess().getFeaturesDimQueryParserRuleCall_5_1_1_2_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_25);
                    	    lv_features_9_0=ruleDimQuery();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getSimAggregateTranspositionRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"features",
                    	      									lv_features_9_0,
                    	      									"com.mimacom.ddd.dm.dim.Dim.DimQuery");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop27;
                        }
                    } while (true);

                    // InternalSim.g:1554:4: ( (lv_types_10_0= ruleSimType ) )*
                    loop28:
                    do {
                        int alt28=2;
                        int LA28_0 = input.LA(1);

                        if ( (LA28_0==30||LA28_0==32||LA28_0==35||(LA28_0>=40 && LA28_0<=41)) ) {
                            alt28=1;
                        }


                        switch (alt28) {
                    	case 1 :
                    	    // InternalSim.g:1555:5: (lv_types_10_0= ruleSimType )
                    	    {
                    	    // InternalSim.g:1555:5: (lv_types_10_0= ruleSimType )
                    	    // InternalSim.g:1556:6: lv_types_10_0= ruleSimType
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getSimAggregateTranspositionAccess().getTypesSimTypeParserRuleCall_5_2_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_25);
                    	    lv_types_10_0=ruleSimType();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getSimAggregateTranspositionRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"types",
                    	      							lv_types_10_0,
                    	      							"com.mimacom.ddd.sm.sim.Sim.SimType");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop28;
                        }
                    } while (true);

                    otherlv_11=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getSimAggregateTranspositionAccess().getRightCurlyBracketKeyword_5_3());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimAggregateTransposition"


    // $ANTLR start "entryRuleDAggregateKeyword"
    // InternalSim.g:1582:1: entryRuleDAggregateKeyword returns [String current=null] : iv_ruleDAggregateKeyword= ruleDAggregateKeyword EOF ;
    public final String entryRuleDAggregateKeyword() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleDAggregateKeyword = null;


        try {
            // InternalSim.g:1582:57: (iv_ruleDAggregateKeyword= ruleDAggregateKeyword EOF )
            // InternalSim.g:1583:2: iv_ruleDAggregateKeyword= ruleDAggregateKeyword EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDAggregateKeywordRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDAggregateKeyword=ruleDAggregateKeyword();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDAggregateKeyword.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDAggregateKeyword"


    // $ANTLR start "ruleDAggregateKeyword"
    // InternalSim.g:1589:1: ruleDAggregateKeyword returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= 'aggregate' ;
    public final AntlrDatatypeRuleToken ruleDAggregateKeyword() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalSim.g:1595:2: (kw= 'aggregate' )
            // InternalSim.g:1596:2: kw= 'aggregate'
            {
            kw=(Token)match(input,31,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getDAggregateKeywordAccess().getAggregateKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDAggregateKeyword"


    // $ANTLR start "entryRuleDimType"
    // InternalSim.g:1604:1: entryRuleDimType returns [EObject current=null] : iv_ruleDimType= ruleDimType EOF ;
    public final EObject entryRuleDimType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDimType = null;


        try {
            // InternalSim.g:1604:48: (iv_ruleDimType= ruleDimType EOF )
            // InternalSim.g:1605:2: iv_ruleDimType= ruleDimType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDimTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDimType=ruleDimType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDimType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDimType"


    // $ANTLR start "ruleDimType"
    // InternalSim.g:1611:1: ruleDimType returns [EObject current=null] : (this_SimPrimitiveTransposition_0= ruleSimPrimitiveTransposition | this_DimPrimitive_1= ruleDimPrimitive | this_SimEnumerationTransposition_2= ruleSimEnumerationTransposition | this_DimEnumeration_3= ruleDimEnumeration | this_SimEntityTypeTransposition_4= ruleSimEntityTypeTransposition | this_DimEntityType_5= ruleDimEntityType | this_SimDetailTypeTransposition_6= ruleSimDetailTypeTransposition | this_DimDetailType_7= ruleDimDetailType ) ;
    public final EObject ruleDimType() throws RecognitionException {
        EObject current = null;

        EObject this_SimPrimitiveTransposition_0 = null;

        EObject this_DimPrimitive_1 = null;

        EObject this_SimEnumerationTransposition_2 = null;

        EObject this_DimEnumeration_3 = null;

        EObject this_SimEntityTypeTransposition_4 = null;

        EObject this_DimEntityType_5 = null;

        EObject this_SimDetailTypeTransposition_6 = null;

        EObject this_DimDetailType_7 = null;



        	enterRule();

        try {
            // InternalSim.g:1617:2: ( (this_SimPrimitiveTransposition_0= ruleSimPrimitiveTransposition | this_DimPrimitive_1= ruleDimPrimitive | this_SimEnumerationTransposition_2= ruleSimEnumerationTransposition | this_DimEnumeration_3= ruleDimEnumeration | this_SimEntityTypeTransposition_4= ruleSimEntityTypeTransposition | this_DimEntityType_5= ruleDimEntityType | this_SimDetailTypeTransposition_6= ruleSimDetailTypeTransposition | this_DimDetailType_7= ruleDimDetailType ) )
            // InternalSim.g:1618:2: (this_SimPrimitiveTransposition_0= ruleSimPrimitiveTransposition | this_DimPrimitive_1= ruleDimPrimitive | this_SimEnumerationTransposition_2= ruleSimEnumerationTransposition | this_DimEnumeration_3= ruleDimEnumeration | this_SimEntityTypeTransposition_4= ruleSimEntityTypeTransposition | this_DimEntityType_5= ruleDimEntityType | this_SimDetailTypeTransposition_6= ruleSimDetailTypeTransposition | this_DimDetailType_7= ruleDimDetailType )
            {
            // InternalSim.g:1618:2: (this_SimPrimitiveTransposition_0= ruleSimPrimitiveTransposition | this_DimPrimitive_1= ruleDimPrimitive | this_SimEnumerationTransposition_2= ruleSimEnumerationTransposition | this_DimEnumeration_3= ruleDimEnumeration | this_SimEntityTypeTransposition_4= ruleSimEntityTypeTransposition | this_DimEntityType_5= ruleDimEntityType | this_SimDetailTypeTransposition_6= ruleSimDetailTypeTransposition | this_DimDetailType_7= ruleDimDetailType )
            int alt30=8;
            alt30 = dfa30.predict(input);
            switch (alt30) {
                case 1 :
                    // InternalSim.g:1619:3: this_SimPrimitiveTransposition_0= ruleSimPrimitiveTransposition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDimTypeAccess().getSimPrimitiveTranspositionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SimPrimitiveTransposition_0=ruleSimPrimitiveTransposition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SimPrimitiveTransposition_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSim.g:1628:3: this_DimPrimitive_1= ruleDimPrimitive
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDimTypeAccess().getDimPrimitiveParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DimPrimitive_1=ruleDimPrimitive();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DimPrimitive_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSim.g:1637:3: this_SimEnumerationTransposition_2= ruleSimEnumerationTransposition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDimTypeAccess().getSimEnumerationTranspositionParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SimEnumerationTransposition_2=ruleSimEnumerationTransposition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SimEnumerationTransposition_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSim.g:1646:3: this_DimEnumeration_3= ruleDimEnumeration
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDimTypeAccess().getDimEnumerationParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DimEnumeration_3=ruleDimEnumeration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DimEnumeration_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalSim.g:1655:3: this_SimEntityTypeTransposition_4= ruleSimEntityTypeTransposition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDimTypeAccess().getSimEntityTypeTranspositionParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SimEntityTypeTransposition_4=ruleSimEntityTypeTransposition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SimEntityTypeTransposition_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalSim.g:1664:3: this_DimEntityType_5= ruleDimEntityType
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDimTypeAccess().getDimEntityTypeParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DimEntityType_5=ruleDimEntityType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DimEntityType_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalSim.g:1673:3: this_SimDetailTypeTransposition_6= ruleSimDetailTypeTransposition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDimTypeAccess().getSimDetailTypeTranspositionParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SimDetailTypeTransposition_6=ruleSimDetailTypeTransposition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SimDetailTypeTransposition_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalSim.g:1682:3: this_DimDetailType_7= ruleDimDetailType
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDimTypeAccess().getDimDetailTypeParserRuleCall_7());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DimDetailType_7=ruleDimDetailType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DimDetailType_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDimType"


    // $ANTLR start "entryRuleSimType"
    // InternalSim.g:1694:1: entryRuleSimType returns [EObject current=null] : iv_ruleSimType= ruleSimType EOF ;
    public final EObject entryRuleSimType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimType = null;


        try {
            // InternalSim.g:1694:48: (iv_ruleSimType= ruleSimType EOF )
            // InternalSim.g:1695:2: iv_ruleSimType= ruleSimType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimType=ruleSimType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimType"


    // $ANTLR start "ruleSimType"
    // InternalSim.g:1701:1: ruleSimType returns [EObject current=null] : (this_SimPrimitiveTransposition_0= ruleSimPrimitiveTransposition | (otherlv_1= 'add' this_DimPrimitive_2= ruleDimPrimitive ) | this_SimEnumerationTransposition_3= ruleSimEnumerationTransposition | (otherlv_4= 'add' this_DimEnumeration_5= ruleDimEnumeration ) | this_SimEntityTypeTransposition_6= ruleSimEntityTypeTransposition | (otherlv_7= 'add' this_DimEntityType_8= ruleDimEntityType ) | this_SimDetailTypeTransposition_9= ruleSimDetailTypeTransposition | (otherlv_10= 'add' this_DimDetailType_11= ruleDimDetailType ) ) ;
    public final EObject ruleSimType() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_7=null;
        Token otherlv_10=null;
        EObject this_SimPrimitiveTransposition_0 = null;

        EObject this_DimPrimitive_2 = null;

        EObject this_SimEnumerationTransposition_3 = null;

        EObject this_DimEnumeration_5 = null;

        EObject this_SimEntityTypeTransposition_6 = null;

        EObject this_DimEntityType_8 = null;

        EObject this_SimDetailTypeTransposition_9 = null;

        EObject this_DimDetailType_11 = null;



        	enterRule();

        try {
            // InternalSim.g:1707:2: ( (this_SimPrimitiveTransposition_0= ruleSimPrimitiveTransposition | (otherlv_1= 'add' this_DimPrimitive_2= ruleDimPrimitive ) | this_SimEnumerationTransposition_3= ruleSimEnumerationTransposition | (otherlv_4= 'add' this_DimEnumeration_5= ruleDimEnumeration ) | this_SimEntityTypeTransposition_6= ruleSimEntityTypeTransposition | (otherlv_7= 'add' this_DimEntityType_8= ruleDimEntityType ) | this_SimDetailTypeTransposition_9= ruleSimDetailTypeTransposition | (otherlv_10= 'add' this_DimDetailType_11= ruleDimDetailType ) ) )
            // InternalSim.g:1708:2: (this_SimPrimitiveTransposition_0= ruleSimPrimitiveTransposition | (otherlv_1= 'add' this_DimPrimitive_2= ruleDimPrimitive ) | this_SimEnumerationTransposition_3= ruleSimEnumerationTransposition | (otherlv_4= 'add' this_DimEnumeration_5= ruleDimEnumeration ) | this_SimEntityTypeTransposition_6= ruleSimEntityTypeTransposition | (otherlv_7= 'add' this_DimEntityType_8= ruleDimEntityType ) | this_SimDetailTypeTransposition_9= ruleSimDetailTypeTransposition | (otherlv_10= 'add' this_DimDetailType_11= ruleDimDetailType ) )
            {
            // InternalSim.g:1708:2: (this_SimPrimitiveTransposition_0= ruleSimPrimitiveTransposition | (otherlv_1= 'add' this_DimPrimitive_2= ruleDimPrimitive ) | this_SimEnumerationTransposition_3= ruleSimEnumerationTransposition | (otherlv_4= 'add' this_DimEnumeration_5= ruleDimEnumeration ) | this_SimEntityTypeTransposition_6= ruleSimEntityTypeTransposition | (otherlv_7= 'add' this_DimEntityType_8= ruleDimEntityType ) | this_SimDetailTypeTransposition_9= ruleSimDetailTypeTransposition | (otherlv_10= 'add' this_DimDetailType_11= ruleDimDetailType ) )
            int alt31=8;
            alt31 = dfa31.predict(input);
            switch (alt31) {
                case 1 :
                    // InternalSim.g:1709:3: this_SimPrimitiveTransposition_0= ruleSimPrimitiveTransposition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSimTypeAccess().getSimPrimitiveTranspositionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SimPrimitiveTransposition_0=ruleSimPrimitiveTransposition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SimPrimitiveTransposition_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSim.g:1718:3: (otherlv_1= 'add' this_DimPrimitive_2= ruleDimPrimitive )
                    {
                    // InternalSim.g:1718:3: (otherlv_1= 'add' this_DimPrimitive_2= ruleDimPrimitive )
                    // InternalSim.g:1719:4: otherlv_1= 'add' this_DimPrimitive_2= ruleDimPrimitive
                    {
                    otherlv_1=(Token)match(input,32,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSimTypeAccess().getAddKeyword_1_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSimTypeAccess().getDimPrimitiveParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_DimPrimitive_2=ruleDimPrimitive();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_DimPrimitive_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSim.g:1733:3: this_SimEnumerationTransposition_3= ruleSimEnumerationTransposition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSimTypeAccess().getSimEnumerationTranspositionParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SimEnumerationTransposition_3=ruleSimEnumerationTransposition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SimEnumerationTransposition_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSim.g:1742:3: (otherlv_4= 'add' this_DimEnumeration_5= ruleDimEnumeration )
                    {
                    // InternalSim.g:1742:3: (otherlv_4= 'add' this_DimEnumeration_5= ruleDimEnumeration )
                    // InternalSim.g:1743:4: otherlv_4= 'add' this_DimEnumeration_5= ruleDimEnumeration
                    {
                    otherlv_4=(Token)match(input,32,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getSimTypeAccess().getAddKeyword_3_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSimTypeAccess().getDimEnumerationParserRuleCall_3_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_DimEnumeration_5=ruleDimEnumeration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_DimEnumeration_5;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSim.g:1757:3: this_SimEntityTypeTransposition_6= ruleSimEntityTypeTransposition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSimTypeAccess().getSimEntityTypeTranspositionParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SimEntityTypeTransposition_6=ruleSimEntityTypeTransposition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SimEntityTypeTransposition_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalSim.g:1766:3: (otherlv_7= 'add' this_DimEntityType_8= ruleDimEntityType )
                    {
                    // InternalSim.g:1766:3: (otherlv_7= 'add' this_DimEntityType_8= ruleDimEntityType )
                    // InternalSim.g:1767:4: otherlv_7= 'add' this_DimEntityType_8= ruleDimEntityType
                    {
                    otherlv_7=(Token)match(input,32,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getSimTypeAccess().getAddKeyword_5_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSimTypeAccess().getDimEntityTypeParserRuleCall_5_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_DimEntityType_8=ruleDimEntityType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_DimEntityType_8;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSim.g:1781:3: this_SimDetailTypeTransposition_9= ruleSimDetailTypeTransposition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSimTypeAccess().getSimDetailTypeTranspositionParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SimDetailTypeTransposition_9=ruleSimDetailTypeTransposition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SimDetailTypeTransposition_9;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalSim.g:1790:3: (otherlv_10= 'add' this_DimDetailType_11= ruleDimDetailType )
                    {
                    // InternalSim.g:1790:3: (otherlv_10= 'add' this_DimDetailType_11= ruleDimDetailType )
                    // InternalSim.g:1791:4: otherlv_10= 'add' this_DimDetailType_11= ruleDimDetailType
                    {
                    otherlv_10=(Token)match(input,32,FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getSimTypeAccess().getAddKeyword_7_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSimTypeAccess().getDimDetailTypeParserRuleCall_7_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_DimDetailType_11=ruleDimDetailType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_DimDetailType_11;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimType"


    // $ANTLR start "entryRuleSimPrimitiveTransposition"
    // InternalSim.g:1808:1: entryRuleSimPrimitiveTransposition returns [EObject current=null] : iv_ruleSimPrimitiveTransposition= ruleSimPrimitiveTransposition EOF ;
    public final EObject entryRuleSimPrimitiveTransposition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimPrimitiveTransposition = null;


        try {
            // InternalSim.g:1808:66: (iv_ruleSimPrimitiveTransposition= ruleSimPrimitiveTransposition EOF )
            // InternalSim.g:1809:2: iv_ruleSimPrimitiveTransposition= ruleSimPrimitiveTransposition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimPrimitiveTranspositionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimPrimitiveTransposition=ruleSimPrimitiveTransposition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimPrimitiveTransposition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimPrimitiveTransposition"


    // $ANTLR start "ruleSimPrimitiveTransposition"
    // InternalSim.g:1815:1: ruleSimPrimitiveTransposition returns [EObject current=null] : ( () ( (otherlv_1= 'grab' otherlv_2= 'primitive' ( (lv_rule_3_0= ruleSimGrabPrimitiveRule ) ) ) | (otherlv_4= 'ditch' otherlv_5= 'primitive' ( (lv_rule_6_0= ruleSimDitchPrimitiveRule ) ) ) ) ( (lv_description_7_0= ruleDRichText ) )? ( (lv_notes_8_0= ruleDNote ) )* (otherlv_9= '{' (otherlv_10= 'add' ( (lv_constraints_11_0= ruleDConstraint ) ) )* otherlv_12= '}' )? ) ;
    public final EObject ruleSimPrimitiveTransposition() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_rule_3_0 = null;

        EObject lv_rule_6_0 = null;

        EObject lv_description_7_0 = null;

        EObject lv_notes_8_0 = null;

        EObject lv_constraints_11_0 = null;



        	enterRule();

        try {
            // InternalSim.g:1821:2: ( ( () ( (otherlv_1= 'grab' otherlv_2= 'primitive' ( (lv_rule_3_0= ruleSimGrabPrimitiveRule ) ) ) | (otherlv_4= 'ditch' otherlv_5= 'primitive' ( (lv_rule_6_0= ruleSimDitchPrimitiveRule ) ) ) ) ( (lv_description_7_0= ruleDRichText ) )? ( (lv_notes_8_0= ruleDNote ) )* (otherlv_9= '{' (otherlv_10= 'add' ( (lv_constraints_11_0= ruleDConstraint ) ) )* otherlv_12= '}' )? ) )
            // InternalSim.g:1822:2: ( () ( (otherlv_1= 'grab' otherlv_2= 'primitive' ( (lv_rule_3_0= ruleSimGrabPrimitiveRule ) ) ) | (otherlv_4= 'ditch' otherlv_5= 'primitive' ( (lv_rule_6_0= ruleSimDitchPrimitiveRule ) ) ) ) ( (lv_description_7_0= ruleDRichText ) )? ( (lv_notes_8_0= ruleDNote ) )* (otherlv_9= '{' (otherlv_10= 'add' ( (lv_constraints_11_0= ruleDConstraint ) ) )* otherlv_12= '}' )? )
            {
            // InternalSim.g:1822:2: ( () ( (otherlv_1= 'grab' otherlv_2= 'primitive' ( (lv_rule_3_0= ruleSimGrabPrimitiveRule ) ) ) | (otherlv_4= 'ditch' otherlv_5= 'primitive' ( (lv_rule_6_0= ruleSimDitchPrimitiveRule ) ) ) ) ( (lv_description_7_0= ruleDRichText ) )? ( (lv_notes_8_0= ruleDNote ) )* (otherlv_9= '{' (otherlv_10= 'add' ( (lv_constraints_11_0= ruleDConstraint ) ) )* otherlv_12= '}' )? )
            // InternalSim.g:1823:3: () ( (otherlv_1= 'grab' otherlv_2= 'primitive' ( (lv_rule_3_0= ruleSimGrabPrimitiveRule ) ) ) | (otherlv_4= 'ditch' otherlv_5= 'primitive' ( (lv_rule_6_0= ruleSimDitchPrimitiveRule ) ) ) ) ( (lv_description_7_0= ruleDRichText ) )? ( (lv_notes_8_0= ruleDNote ) )* (otherlv_9= '{' (otherlv_10= 'add' ( (lv_constraints_11_0= ruleDConstraint ) ) )* otherlv_12= '}' )?
            {
            // InternalSim.g:1823:3: ()
            // InternalSim.g:1824:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSimPrimitiveTranspositionAccess().getTPrimitiveTranspositionAction_0(),
              					current);
              			
            }

            }

            // InternalSim.g:1830:3: ( (otherlv_1= 'grab' otherlv_2= 'primitive' ( (lv_rule_3_0= ruleSimGrabPrimitiveRule ) ) ) | (otherlv_4= 'ditch' otherlv_5= 'primitive' ( (lv_rule_6_0= ruleSimDitchPrimitiveRule ) ) ) )
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==30) ) {
                alt32=1;
            }
            else if ( (LA32_0==35) ) {
                alt32=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;
            }
            switch (alt32) {
                case 1 :
                    // InternalSim.g:1831:4: (otherlv_1= 'grab' otherlv_2= 'primitive' ( (lv_rule_3_0= ruleSimGrabPrimitiveRule ) ) )
                    {
                    // InternalSim.g:1831:4: (otherlv_1= 'grab' otherlv_2= 'primitive' ( (lv_rule_3_0= ruleSimGrabPrimitiveRule ) ) )
                    // InternalSim.g:1832:5: otherlv_1= 'grab' otherlv_2= 'primitive' ( (lv_rule_3_0= ruleSimGrabPrimitiveRule ) )
                    {
                    otherlv_1=(Token)match(input,30,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getSimPrimitiveTranspositionAccess().getGrabKeyword_1_0_0());
                      				
                    }
                    otherlv_2=(Token)match(input,34,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getSimPrimitiveTranspositionAccess().getPrimitiveKeyword_1_0_1());
                      				
                    }
                    // InternalSim.g:1840:5: ( (lv_rule_3_0= ruleSimGrabPrimitiveRule ) )
                    // InternalSim.g:1841:6: (lv_rule_3_0= ruleSimGrabPrimitiveRule )
                    {
                    // InternalSim.g:1841:6: (lv_rule_3_0= ruleSimGrabPrimitiveRule )
                    // InternalSim.g:1842:7: lv_rule_3_0= ruleSimGrabPrimitiveRule
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSimPrimitiveTranspositionAccess().getRuleSimGrabPrimitiveRuleParserRuleCall_1_0_2_0());
                      						
                    }
                    pushFollow(FOLLOW_31);
                    lv_rule_3_0=ruleSimGrabPrimitiveRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSimPrimitiveTranspositionRule());
                      							}
                      							set(
                      								current,
                      								"rule",
                      								lv_rule_3_0,
                      								"com.mimacom.ddd.sm.sim.Sim.SimGrabPrimitiveRule");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:1861:4: (otherlv_4= 'ditch' otherlv_5= 'primitive' ( (lv_rule_6_0= ruleSimDitchPrimitiveRule ) ) )
                    {
                    // InternalSim.g:1861:4: (otherlv_4= 'ditch' otherlv_5= 'primitive' ( (lv_rule_6_0= ruleSimDitchPrimitiveRule ) ) )
                    // InternalSim.g:1862:5: otherlv_4= 'ditch' otherlv_5= 'primitive' ( (lv_rule_6_0= ruleSimDitchPrimitiveRule ) )
                    {
                    otherlv_4=(Token)match(input,35,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getSimPrimitiveTranspositionAccess().getDitchKeyword_1_1_0());
                      				
                    }
                    otherlv_5=(Token)match(input,34,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getSimPrimitiveTranspositionAccess().getPrimitiveKeyword_1_1_1());
                      				
                    }
                    // InternalSim.g:1870:5: ( (lv_rule_6_0= ruleSimDitchPrimitiveRule ) )
                    // InternalSim.g:1871:6: (lv_rule_6_0= ruleSimDitchPrimitiveRule )
                    {
                    // InternalSim.g:1871:6: (lv_rule_6_0= ruleSimDitchPrimitiveRule )
                    // InternalSim.g:1872:7: lv_rule_6_0= ruleSimDitchPrimitiveRule
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSimPrimitiveTranspositionAccess().getRuleSimDitchPrimitiveRuleParserRuleCall_1_1_2_0());
                      						
                    }
                    pushFollow(FOLLOW_31);
                    lv_rule_6_0=ruleSimDitchPrimitiveRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSimPrimitiveTranspositionRule());
                      							}
                      							set(
                      								current,
                      								"rule",
                      								lv_rule_6_0,
                      								"com.mimacom.ddd.sm.sim.Sim.SimDitchPrimitiveRule");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalSim.g:1891:3: ( (lv_description_7_0= ruleDRichText ) )?
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( ((LA33_0>=RULE_PLAIN_TEXT_ONLY && LA33_0<=RULE_RICH_TEXT_START)) ) {
                alt33=1;
            }
            switch (alt33) {
                case 1 :
                    // InternalSim.g:1892:4: (lv_description_7_0= ruleDRichText )
                    {
                    // InternalSim.g:1892:4: (lv_description_7_0= ruleDRichText )
                    // InternalSim.g:1893:5: lv_description_7_0= ruleDRichText
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimPrimitiveTranspositionAccess().getDescriptionDRichTextParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_32);
                    lv_description_7_0=ruleDRichText();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimPrimitiveTranspositionRule());
                      					}
                      					set(
                      						current,
                      						"description",
                      						lv_description_7_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:1910:3: ( (lv_notes_8_0= ruleDNote ) )*
            loop34:
            do {
                int alt34=2;
                int LA34_0 = input.LA(1);

                if ( (LA34_0==59) ) {
                    alt34=1;
                }


                switch (alt34) {
            	case 1 :
            	    // InternalSim.g:1911:4: (lv_notes_8_0= ruleDNote )
            	    {
            	    // InternalSim.g:1911:4: (lv_notes_8_0= ruleDNote )
            	    // InternalSim.g:1912:5: lv_notes_8_0= ruleDNote
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSimPrimitiveTranspositionAccess().getNotesDNoteParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_32);
            	    lv_notes_8_0=ruleDNote();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSimPrimitiveTranspositionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"notes",
            	      						lv_notes_8_0,
            	      						"com.mimacom.ddd.dm.dmx.Dmx.DNote");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop34;
                }
            } while (true);

            // InternalSim.g:1929:3: (otherlv_9= '{' (otherlv_10= 'add' ( (lv_constraints_11_0= ruleDConstraint ) ) )* otherlv_12= '}' )?
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==23) ) {
                alt36=1;
            }
            switch (alt36) {
                case 1 :
                    // InternalSim.g:1930:4: otherlv_9= '{' (otherlv_10= 'add' ( (lv_constraints_11_0= ruleDConstraint ) ) )* otherlv_12= '}'
                    {
                    otherlv_9=(Token)match(input,23,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getSimPrimitiveTranspositionAccess().getLeftCurlyBracketKeyword_4_0());
                      			
                    }
                    // InternalSim.g:1934:4: (otherlv_10= 'add' ( (lv_constraints_11_0= ruleDConstraint ) ) )*
                    loop35:
                    do {
                        int alt35=2;
                        int LA35_0 = input.LA(1);

                        if ( (LA35_0==32) ) {
                            alt35=1;
                        }


                        switch (alt35) {
                    	case 1 :
                    	    // InternalSim.g:1935:5: otherlv_10= 'add' ( (lv_constraints_11_0= ruleDConstraint ) )
                    	    {
                    	    otherlv_10=(Token)match(input,32,FOLLOW_34); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_10, grammarAccess.getSimPrimitiveTranspositionAccess().getAddKeyword_4_1_0());
                    	      				
                    	    }
                    	    // InternalSim.g:1939:5: ( (lv_constraints_11_0= ruleDConstraint ) )
                    	    // InternalSim.g:1940:6: (lv_constraints_11_0= ruleDConstraint )
                    	    {
                    	    // InternalSim.g:1940:6: (lv_constraints_11_0= ruleDConstraint )
                    	    // InternalSim.g:1941:7: lv_constraints_11_0= ruleDConstraint
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getSimPrimitiveTranspositionAccess().getConstraintsDConstraintParserRuleCall_4_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_33);
                    	    lv_constraints_11_0=ruleDConstraint();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getSimPrimitiveTranspositionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"constraints",
                    	      								lv_constraints_11_0,
                    	      								"com.mimacom.ddd.dm.dim.Dim.DConstraint");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop35;
                        }
                    } while (true);

                    otherlv_12=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getSimPrimitiveTranspositionAccess().getRightCurlyBracketKeyword_4_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimPrimitiveTransposition"


    // $ANTLR start "entryRuleSimEnumerationTransposition"
    // InternalSim.g:1968:1: entryRuleSimEnumerationTransposition returns [EObject current=null] : iv_ruleSimEnumerationTransposition= ruleSimEnumerationTransposition EOF ;
    public final EObject entryRuleSimEnumerationTransposition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimEnumerationTransposition = null;


        try {
            // InternalSim.g:1968:68: (iv_ruleSimEnumerationTransposition= ruleSimEnumerationTransposition EOF )
            // InternalSim.g:1969:2: iv_ruleSimEnumerationTransposition= ruleSimEnumerationTransposition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimEnumerationTranspositionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimEnumerationTransposition=ruleSimEnumerationTransposition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimEnumerationTransposition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimEnumerationTransposition"


    // $ANTLR start "ruleSimEnumerationTransposition"
    // InternalSim.g:1975:1: ruleSimEnumerationTransposition returns [EObject current=null] : ( () ( (otherlv_1= 'grab' otherlv_2= 'enumeration' ( (lv_rule_3_0= ruleSimGrabEnumerationRule ) ) ) | (otherlv_4= 'ditch' otherlv_5= 'enumeration' ( (lv_rule_6_0= ruleSimDitchEnumerationRule ) ) ) ) ( (lv_description_7_0= ruleDRichText ) )? ( (lv_notes_8_0= ruleDNote ) )* (otherlv_9= '{' ( ( (lv_literals_10_0= ruleSimLiteral ) ) (otherlv_11= ',' ( (lv_literals_12_0= ruleSimLiteral ) ) )* )? (otherlv_13= 'add' ( (lv_constraints_14_0= ruleDConstraint ) ) )* otherlv_15= '}' )? ) ;
    public final EObject ruleSimEnumerationTransposition() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        EObject lv_rule_3_0 = null;

        EObject lv_rule_6_0 = null;

        EObject lv_description_7_0 = null;

        EObject lv_notes_8_0 = null;

        EObject lv_literals_10_0 = null;

        EObject lv_literals_12_0 = null;

        EObject lv_constraints_14_0 = null;



        	enterRule();

        try {
            // InternalSim.g:1981:2: ( ( () ( (otherlv_1= 'grab' otherlv_2= 'enumeration' ( (lv_rule_3_0= ruleSimGrabEnumerationRule ) ) ) | (otherlv_4= 'ditch' otherlv_5= 'enumeration' ( (lv_rule_6_0= ruleSimDitchEnumerationRule ) ) ) ) ( (lv_description_7_0= ruleDRichText ) )? ( (lv_notes_8_0= ruleDNote ) )* (otherlv_9= '{' ( ( (lv_literals_10_0= ruleSimLiteral ) ) (otherlv_11= ',' ( (lv_literals_12_0= ruleSimLiteral ) ) )* )? (otherlv_13= 'add' ( (lv_constraints_14_0= ruleDConstraint ) ) )* otherlv_15= '}' )? ) )
            // InternalSim.g:1982:2: ( () ( (otherlv_1= 'grab' otherlv_2= 'enumeration' ( (lv_rule_3_0= ruleSimGrabEnumerationRule ) ) ) | (otherlv_4= 'ditch' otherlv_5= 'enumeration' ( (lv_rule_6_0= ruleSimDitchEnumerationRule ) ) ) ) ( (lv_description_7_0= ruleDRichText ) )? ( (lv_notes_8_0= ruleDNote ) )* (otherlv_9= '{' ( ( (lv_literals_10_0= ruleSimLiteral ) ) (otherlv_11= ',' ( (lv_literals_12_0= ruleSimLiteral ) ) )* )? (otherlv_13= 'add' ( (lv_constraints_14_0= ruleDConstraint ) ) )* otherlv_15= '}' )? )
            {
            // InternalSim.g:1982:2: ( () ( (otherlv_1= 'grab' otherlv_2= 'enumeration' ( (lv_rule_3_0= ruleSimGrabEnumerationRule ) ) ) | (otherlv_4= 'ditch' otherlv_5= 'enumeration' ( (lv_rule_6_0= ruleSimDitchEnumerationRule ) ) ) ) ( (lv_description_7_0= ruleDRichText ) )? ( (lv_notes_8_0= ruleDNote ) )* (otherlv_9= '{' ( ( (lv_literals_10_0= ruleSimLiteral ) ) (otherlv_11= ',' ( (lv_literals_12_0= ruleSimLiteral ) ) )* )? (otherlv_13= 'add' ( (lv_constraints_14_0= ruleDConstraint ) ) )* otherlv_15= '}' )? )
            // InternalSim.g:1983:3: () ( (otherlv_1= 'grab' otherlv_2= 'enumeration' ( (lv_rule_3_0= ruleSimGrabEnumerationRule ) ) ) | (otherlv_4= 'ditch' otherlv_5= 'enumeration' ( (lv_rule_6_0= ruleSimDitchEnumerationRule ) ) ) ) ( (lv_description_7_0= ruleDRichText ) )? ( (lv_notes_8_0= ruleDNote ) )* (otherlv_9= '{' ( ( (lv_literals_10_0= ruleSimLiteral ) ) (otherlv_11= ',' ( (lv_literals_12_0= ruleSimLiteral ) ) )* )? (otherlv_13= 'add' ( (lv_constraints_14_0= ruleDConstraint ) ) )* otherlv_15= '}' )?
            {
            // InternalSim.g:1983:3: ()
            // InternalSim.g:1984:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSimEnumerationTranspositionAccess().getTEnumerationTranspositionAction_0(),
              					current);
              			
            }

            }

            // InternalSim.g:1990:3: ( (otherlv_1= 'grab' otherlv_2= 'enumeration' ( (lv_rule_3_0= ruleSimGrabEnumerationRule ) ) ) | (otherlv_4= 'ditch' otherlv_5= 'enumeration' ( (lv_rule_6_0= ruleSimDitchEnumerationRule ) ) ) )
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==30) ) {
                alt37=1;
            }
            else if ( (LA37_0==35) ) {
                alt37=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 37, 0, input);

                throw nvae;
            }
            switch (alt37) {
                case 1 :
                    // InternalSim.g:1991:4: (otherlv_1= 'grab' otherlv_2= 'enumeration' ( (lv_rule_3_0= ruleSimGrabEnumerationRule ) ) )
                    {
                    // InternalSim.g:1991:4: (otherlv_1= 'grab' otherlv_2= 'enumeration' ( (lv_rule_3_0= ruleSimGrabEnumerationRule ) ) )
                    // InternalSim.g:1992:5: otherlv_1= 'grab' otherlv_2= 'enumeration' ( (lv_rule_3_0= ruleSimGrabEnumerationRule ) )
                    {
                    otherlv_1=(Token)match(input,30,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getSimEnumerationTranspositionAccess().getGrabKeyword_1_0_0());
                      				
                    }
                    otherlv_2=(Token)match(input,36,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getSimEnumerationTranspositionAccess().getEnumerationKeyword_1_0_1());
                      				
                    }
                    // InternalSim.g:2000:5: ( (lv_rule_3_0= ruleSimGrabEnumerationRule ) )
                    // InternalSim.g:2001:6: (lv_rule_3_0= ruleSimGrabEnumerationRule )
                    {
                    // InternalSim.g:2001:6: (lv_rule_3_0= ruleSimGrabEnumerationRule )
                    // InternalSim.g:2002:7: lv_rule_3_0= ruleSimGrabEnumerationRule
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSimEnumerationTranspositionAccess().getRuleSimGrabEnumerationRuleParserRuleCall_1_0_2_0());
                      						
                    }
                    pushFollow(FOLLOW_31);
                    lv_rule_3_0=ruleSimGrabEnumerationRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSimEnumerationTranspositionRule());
                      							}
                      							set(
                      								current,
                      								"rule",
                      								lv_rule_3_0,
                      								"com.mimacom.ddd.sm.sim.Sim.SimGrabEnumerationRule");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:2021:4: (otherlv_4= 'ditch' otherlv_5= 'enumeration' ( (lv_rule_6_0= ruleSimDitchEnumerationRule ) ) )
                    {
                    // InternalSim.g:2021:4: (otherlv_4= 'ditch' otherlv_5= 'enumeration' ( (lv_rule_6_0= ruleSimDitchEnumerationRule ) ) )
                    // InternalSim.g:2022:5: otherlv_4= 'ditch' otherlv_5= 'enumeration' ( (lv_rule_6_0= ruleSimDitchEnumerationRule ) )
                    {
                    otherlv_4=(Token)match(input,35,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getSimEnumerationTranspositionAccess().getDitchKeyword_1_1_0());
                      				
                    }
                    otherlv_5=(Token)match(input,36,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getSimEnumerationTranspositionAccess().getEnumerationKeyword_1_1_1());
                      				
                    }
                    // InternalSim.g:2030:5: ( (lv_rule_6_0= ruleSimDitchEnumerationRule ) )
                    // InternalSim.g:2031:6: (lv_rule_6_0= ruleSimDitchEnumerationRule )
                    {
                    // InternalSim.g:2031:6: (lv_rule_6_0= ruleSimDitchEnumerationRule )
                    // InternalSim.g:2032:7: lv_rule_6_0= ruleSimDitchEnumerationRule
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSimEnumerationTranspositionAccess().getRuleSimDitchEnumerationRuleParserRuleCall_1_1_2_0());
                      						
                    }
                    pushFollow(FOLLOW_31);
                    lv_rule_6_0=ruleSimDitchEnumerationRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSimEnumerationTranspositionRule());
                      							}
                      							set(
                      								current,
                      								"rule",
                      								lv_rule_6_0,
                      								"com.mimacom.ddd.sm.sim.Sim.SimDitchEnumerationRule");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalSim.g:2051:3: ( (lv_description_7_0= ruleDRichText ) )?
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( ((LA38_0>=RULE_PLAIN_TEXT_ONLY && LA38_0<=RULE_RICH_TEXT_START)) ) {
                alt38=1;
            }
            switch (alt38) {
                case 1 :
                    // InternalSim.g:2052:4: (lv_description_7_0= ruleDRichText )
                    {
                    // InternalSim.g:2052:4: (lv_description_7_0= ruleDRichText )
                    // InternalSim.g:2053:5: lv_description_7_0= ruleDRichText
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimEnumerationTranspositionAccess().getDescriptionDRichTextParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_32);
                    lv_description_7_0=ruleDRichText();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimEnumerationTranspositionRule());
                      					}
                      					set(
                      						current,
                      						"description",
                      						lv_description_7_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:2070:3: ( (lv_notes_8_0= ruleDNote ) )*
            loop39:
            do {
                int alt39=2;
                int LA39_0 = input.LA(1);

                if ( (LA39_0==59) ) {
                    alt39=1;
                }


                switch (alt39) {
            	case 1 :
            	    // InternalSim.g:2071:4: (lv_notes_8_0= ruleDNote )
            	    {
            	    // InternalSim.g:2071:4: (lv_notes_8_0= ruleDNote )
            	    // InternalSim.g:2072:5: lv_notes_8_0= ruleDNote
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSimEnumerationTranspositionAccess().getNotesDNoteParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_32);
            	    lv_notes_8_0=ruleDNote();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSimEnumerationTranspositionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"notes",
            	      						lv_notes_8_0,
            	      						"com.mimacom.ddd.dm.dmx.Dmx.DNote");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop39;
                }
            } while (true);

            // InternalSim.g:2089:3: (otherlv_9= '{' ( ( (lv_literals_10_0= ruleSimLiteral ) ) (otherlv_11= ',' ( (lv_literals_12_0= ruleSimLiteral ) ) )* )? (otherlv_13= 'add' ( (lv_constraints_14_0= ruleDConstraint ) ) )* otherlv_15= '}' )?
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==23) ) {
                alt43=1;
            }
            switch (alt43) {
                case 1 :
                    // InternalSim.g:2090:4: otherlv_9= '{' ( ( (lv_literals_10_0= ruleSimLiteral ) ) (otherlv_11= ',' ( (lv_literals_12_0= ruleSimLiteral ) ) )* )? (otherlv_13= 'add' ( (lv_constraints_14_0= ruleDConstraint ) ) )* otherlv_15= '}'
                    {
                    otherlv_9=(Token)match(input,23,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getSimEnumerationTranspositionAccess().getLeftCurlyBracketKeyword_4_0());
                      			
                    }
                    // InternalSim.g:2094:4: ( ( (lv_literals_10_0= ruleSimLiteral ) ) (otherlv_11= ',' ( (lv_literals_12_0= ruleSimLiteral ) ) )* )?
                    int alt41=2;
                    int LA41_0 = input.LA(1);

                    if ( (LA41_0==30||LA41_0==35) ) {
                        alt41=1;
                    }
                    else if ( (LA41_0==32) ) {
                        int LA41_2 = input.LA(2);

                        if ( (LA41_2==RULE_ID) ) {
                            alt41=1;
                        }
                    }
                    switch (alt41) {
                        case 1 :
                            // InternalSim.g:2095:5: ( (lv_literals_10_0= ruleSimLiteral ) ) (otherlv_11= ',' ( (lv_literals_12_0= ruleSimLiteral ) ) )*
                            {
                            // InternalSim.g:2095:5: ( (lv_literals_10_0= ruleSimLiteral ) )
                            // InternalSim.g:2096:6: (lv_literals_10_0= ruleSimLiteral )
                            {
                            // InternalSim.g:2096:6: (lv_literals_10_0= ruleSimLiteral )
                            // InternalSim.g:2097:7: lv_literals_10_0= ruleSimLiteral
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getSimEnumerationTranspositionAccess().getLiteralsSimLiteralParserRuleCall_4_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_36);
                            lv_literals_10_0=ruleSimLiteral();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getSimEnumerationTranspositionRule());
                              							}
                              							add(
                              								current,
                              								"literals",
                              								lv_literals_10_0,
                              								"com.mimacom.ddd.sm.sim.Sim.SimLiteral");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalSim.g:2114:5: (otherlv_11= ',' ( (lv_literals_12_0= ruleSimLiteral ) ) )*
                            loop40:
                            do {
                                int alt40=2;
                                int LA40_0 = input.LA(1);

                                if ( (LA40_0==37) ) {
                                    alt40=1;
                                }


                                switch (alt40) {
                            	case 1 :
                            	    // InternalSim.g:2115:6: otherlv_11= ',' ( (lv_literals_12_0= ruleSimLiteral ) )
                            	    {
                            	    otherlv_11=(Token)match(input,37,FOLLOW_37); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_11, grammarAccess.getSimEnumerationTranspositionAccess().getCommaKeyword_4_1_1_0());
                            	      					
                            	    }
                            	    // InternalSim.g:2119:6: ( (lv_literals_12_0= ruleSimLiteral ) )
                            	    // InternalSim.g:2120:7: (lv_literals_12_0= ruleSimLiteral )
                            	    {
                            	    // InternalSim.g:2120:7: (lv_literals_12_0= ruleSimLiteral )
                            	    // InternalSim.g:2121:8: lv_literals_12_0= ruleSimLiteral
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getSimEnumerationTranspositionAccess().getLiteralsSimLiteralParserRuleCall_4_1_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_36);
                            	    lv_literals_12_0=ruleSimLiteral();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getSimEnumerationTranspositionRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"literals",
                            	      									lv_literals_12_0,
                            	      									"com.mimacom.ddd.sm.sim.Sim.SimLiteral");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop40;
                                }
                            } while (true);


                            }
                            break;

                    }

                    // InternalSim.g:2140:4: (otherlv_13= 'add' ( (lv_constraints_14_0= ruleDConstraint ) ) )*
                    loop42:
                    do {
                        int alt42=2;
                        int LA42_0 = input.LA(1);

                        if ( (LA42_0==32) ) {
                            alt42=1;
                        }


                        switch (alt42) {
                    	case 1 :
                    	    // InternalSim.g:2141:5: otherlv_13= 'add' ( (lv_constraints_14_0= ruleDConstraint ) )
                    	    {
                    	    otherlv_13=(Token)match(input,32,FOLLOW_34); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_13, grammarAccess.getSimEnumerationTranspositionAccess().getAddKeyword_4_2_0());
                    	      				
                    	    }
                    	    // InternalSim.g:2145:5: ( (lv_constraints_14_0= ruleDConstraint ) )
                    	    // InternalSim.g:2146:6: (lv_constraints_14_0= ruleDConstraint )
                    	    {
                    	    // InternalSim.g:2146:6: (lv_constraints_14_0= ruleDConstraint )
                    	    // InternalSim.g:2147:7: lv_constraints_14_0= ruleDConstraint
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getSimEnumerationTranspositionAccess().getConstraintsDConstraintParserRuleCall_4_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_33);
                    	    lv_constraints_14_0=ruleDConstraint();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getSimEnumerationTranspositionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"constraints",
                    	      								lv_constraints_14_0,
                    	      								"com.mimacom.ddd.dm.dim.Dim.DConstraint");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop42;
                        }
                    } while (true);

                    otherlv_15=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_15, grammarAccess.getSimEnumerationTranspositionAccess().getRightCurlyBracketKeyword_4_3());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimEnumerationTransposition"


    // $ANTLR start "entryRuleSimLiteral"
    // InternalSim.g:2174:1: entryRuleSimLiteral returns [EObject current=null] : iv_ruleSimLiteral= ruleSimLiteral EOF ;
    public final EObject entryRuleSimLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimLiteral = null;


        try {
            // InternalSim.g:2174:51: (iv_ruleSimLiteral= ruleSimLiteral EOF )
            // InternalSim.g:2175:2: iv_ruleSimLiteral= ruleSimLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimLiteral=ruleSimLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimLiteral"


    // $ANTLR start "ruleSimLiteral"
    // InternalSim.g:2181:1: ruleSimLiteral returns [EObject current=null] : (this_SimLiteralTransposition_0= ruleSimLiteralTransposition | (otherlv_1= 'add' this_DimLiteral_2= ruleDimLiteral ) ) ;
    public final EObject ruleSimLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_SimLiteralTransposition_0 = null;

        EObject this_DimLiteral_2 = null;



        	enterRule();

        try {
            // InternalSim.g:2187:2: ( (this_SimLiteralTransposition_0= ruleSimLiteralTransposition | (otherlv_1= 'add' this_DimLiteral_2= ruleDimLiteral ) ) )
            // InternalSim.g:2188:2: (this_SimLiteralTransposition_0= ruleSimLiteralTransposition | (otherlv_1= 'add' this_DimLiteral_2= ruleDimLiteral ) )
            {
            // InternalSim.g:2188:2: (this_SimLiteralTransposition_0= ruleSimLiteralTransposition | (otherlv_1= 'add' this_DimLiteral_2= ruleDimLiteral ) )
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==30||LA44_0==35) ) {
                alt44=1;
            }
            else if ( (LA44_0==32) ) {
                alt44=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 44, 0, input);

                throw nvae;
            }
            switch (alt44) {
                case 1 :
                    // InternalSim.g:2189:3: this_SimLiteralTransposition_0= ruleSimLiteralTransposition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSimLiteralAccess().getSimLiteralTranspositionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SimLiteralTransposition_0=ruleSimLiteralTransposition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SimLiteralTransposition_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSim.g:2198:3: (otherlv_1= 'add' this_DimLiteral_2= ruleDimLiteral )
                    {
                    // InternalSim.g:2198:3: (otherlv_1= 'add' this_DimLiteral_2= ruleDimLiteral )
                    // InternalSim.g:2199:4: otherlv_1= 'add' this_DimLiteral_2= ruleDimLiteral
                    {
                    otherlv_1=(Token)match(input,32,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSimLiteralAccess().getAddKeyword_1_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSimLiteralAccess().getDimLiteralParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_DimLiteral_2=ruleDimLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_DimLiteral_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimLiteral"


    // $ANTLR start "entryRuleSimLiteralTransposition"
    // InternalSim.g:2216:1: entryRuleSimLiteralTransposition returns [EObject current=null] : iv_ruleSimLiteralTransposition= ruleSimLiteralTransposition EOF ;
    public final EObject entryRuleSimLiteralTransposition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimLiteralTransposition = null;


        try {
            // InternalSim.g:2216:64: (iv_ruleSimLiteralTransposition= ruleSimLiteralTransposition EOF )
            // InternalSim.g:2217:2: iv_ruleSimLiteralTransposition= ruleSimLiteralTransposition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimLiteralTranspositionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimLiteralTransposition=ruleSimLiteralTransposition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimLiteralTransposition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimLiteralTransposition"


    // $ANTLR start "ruleSimLiteralTransposition"
    // InternalSim.g:2223:1: ruleSimLiteralTransposition returns [EObject current=null] : ( () ( (otherlv_1= 'grab' ( (lv_rule_2_0= ruleSimGrabEnumerationLiteralRule ) ) ) | (otherlv_3= 'ditch' ( (lv_rule_4_0= ruleSimDitchEnumerationLiteralRule ) ) ) ) ( (lv_description_5_0= ruleDRichText ) )? ( (lv_notes_6_0= ruleDNote ) )* ) ;
    public final EObject ruleSimLiteralTransposition() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_rule_2_0 = null;

        EObject lv_rule_4_0 = null;

        EObject lv_description_5_0 = null;

        EObject lv_notes_6_0 = null;



        	enterRule();

        try {
            // InternalSim.g:2229:2: ( ( () ( (otherlv_1= 'grab' ( (lv_rule_2_0= ruleSimGrabEnumerationLiteralRule ) ) ) | (otherlv_3= 'ditch' ( (lv_rule_4_0= ruleSimDitchEnumerationLiteralRule ) ) ) ) ( (lv_description_5_0= ruleDRichText ) )? ( (lv_notes_6_0= ruleDNote ) )* ) )
            // InternalSim.g:2230:2: ( () ( (otherlv_1= 'grab' ( (lv_rule_2_0= ruleSimGrabEnumerationLiteralRule ) ) ) | (otherlv_3= 'ditch' ( (lv_rule_4_0= ruleSimDitchEnumerationLiteralRule ) ) ) ) ( (lv_description_5_0= ruleDRichText ) )? ( (lv_notes_6_0= ruleDNote ) )* )
            {
            // InternalSim.g:2230:2: ( () ( (otherlv_1= 'grab' ( (lv_rule_2_0= ruleSimGrabEnumerationLiteralRule ) ) ) | (otherlv_3= 'ditch' ( (lv_rule_4_0= ruleSimDitchEnumerationLiteralRule ) ) ) ) ( (lv_description_5_0= ruleDRichText ) )? ( (lv_notes_6_0= ruleDNote ) )* )
            // InternalSim.g:2231:3: () ( (otherlv_1= 'grab' ( (lv_rule_2_0= ruleSimGrabEnumerationLiteralRule ) ) ) | (otherlv_3= 'ditch' ( (lv_rule_4_0= ruleSimDitchEnumerationLiteralRule ) ) ) ) ( (lv_description_5_0= ruleDRichText ) )? ( (lv_notes_6_0= ruleDNote ) )*
            {
            // InternalSim.g:2231:3: ()
            // InternalSim.g:2232:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSimLiteralTranspositionAccess().getTLiteralTranspositionAction_0(),
              					current);
              			
            }

            }

            // InternalSim.g:2238:3: ( (otherlv_1= 'grab' ( (lv_rule_2_0= ruleSimGrabEnumerationLiteralRule ) ) ) | (otherlv_3= 'ditch' ( (lv_rule_4_0= ruleSimDitchEnumerationLiteralRule ) ) ) )
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==30) ) {
                alt45=1;
            }
            else if ( (LA45_0==35) ) {
                alt45=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 45, 0, input);

                throw nvae;
            }
            switch (alt45) {
                case 1 :
                    // InternalSim.g:2239:4: (otherlv_1= 'grab' ( (lv_rule_2_0= ruleSimGrabEnumerationLiteralRule ) ) )
                    {
                    // InternalSim.g:2239:4: (otherlv_1= 'grab' ( (lv_rule_2_0= ruleSimGrabEnumerationLiteralRule ) ) )
                    // InternalSim.g:2240:5: otherlv_1= 'grab' ( (lv_rule_2_0= ruleSimGrabEnumerationLiteralRule ) )
                    {
                    otherlv_1=(Token)match(input,30,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getSimLiteralTranspositionAccess().getGrabKeyword_1_0_0());
                      				
                    }
                    // InternalSim.g:2244:5: ( (lv_rule_2_0= ruleSimGrabEnumerationLiteralRule ) )
                    // InternalSim.g:2245:6: (lv_rule_2_0= ruleSimGrabEnumerationLiteralRule )
                    {
                    // InternalSim.g:2245:6: (lv_rule_2_0= ruleSimGrabEnumerationLiteralRule )
                    // InternalSim.g:2246:7: lv_rule_2_0= ruleSimGrabEnumerationLiteralRule
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSimLiteralTranspositionAccess().getRuleSimGrabEnumerationLiteralRuleParserRuleCall_1_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_38);
                    lv_rule_2_0=ruleSimGrabEnumerationLiteralRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSimLiteralTranspositionRule());
                      							}
                      							set(
                      								current,
                      								"rule",
                      								lv_rule_2_0,
                      								"com.mimacom.ddd.sm.sim.Sim.SimGrabEnumerationLiteralRule");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:2265:4: (otherlv_3= 'ditch' ( (lv_rule_4_0= ruleSimDitchEnumerationLiteralRule ) ) )
                    {
                    // InternalSim.g:2265:4: (otherlv_3= 'ditch' ( (lv_rule_4_0= ruleSimDitchEnumerationLiteralRule ) ) )
                    // InternalSim.g:2266:5: otherlv_3= 'ditch' ( (lv_rule_4_0= ruleSimDitchEnumerationLiteralRule ) )
                    {
                    otherlv_3=(Token)match(input,35,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getSimLiteralTranspositionAccess().getDitchKeyword_1_1_0());
                      				
                    }
                    // InternalSim.g:2270:5: ( (lv_rule_4_0= ruleSimDitchEnumerationLiteralRule ) )
                    // InternalSim.g:2271:6: (lv_rule_4_0= ruleSimDitchEnumerationLiteralRule )
                    {
                    // InternalSim.g:2271:6: (lv_rule_4_0= ruleSimDitchEnumerationLiteralRule )
                    // InternalSim.g:2272:7: lv_rule_4_0= ruleSimDitchEnumerationLiteralRule
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSimLiteralTranspositionAccess().getRuleSimDitchEnumerationLiteralRuleParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_38);
                    lv_rule_4_0=ruleSimDitchEnumerationLiteralRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSimLiteralTranspositionRule());
                      							}
                      							set(
                      								current,
                      								"rule",
                      								lv_rule_4_0,
                      								"com.mimacom.ddd.sm.sim.Sim.SimDitchEnumerationLiteralRule");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalSim.g:2291:3: ( (lv_description_5_0= ruleDRichText ) )?
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( ((LA46_0>=RULE_PLAIN_TEXT_ONLY && LA46_0<=RULE_RICH_TEXT_START)) ) {
                alt46=1;
            }
            switch (alt46) {
                case 1 :
                    // InternalSim.g:2292:4: (lv_description_5_0= ruleDRichText )
                    {
                    // InternalSim.g:2292:4: (lv_description_5_0= ruleDRichText )
                    // InternalSim.g:2293:5: lv_description_5_0= ruleDRichText
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimLiteralTranspositionAccess().getDescriptionDRichTextParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_39);
                    lv_description_5_0=ruleDRichText();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimLiteralTranspositionRule());
                      					}
                      					set(
                      						current,
                      						"description",
                      						lv_description_5_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:2310:3: ( (lv_notes_6_0= ruleDNote ) )*
            loop47:
            do {
                int alt47=2;
                int LA47_0 = input.LA(1);

                if ( (LA47_0==59) ) {
                    alt47=1;
                }


                switch (alt47) {
            	case 1 :
            	    // InternalSim.g:2311:4: (lv_notes_6_0= ruleDNote )
            	    {
            	    // InternalSim.g:2311:4: (lv_notes_6_0= ruleDNote )
            	    // InternalSim.g:2312:5: lv_notes_6_0= ruleDNote
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSimLiteralTranspositionAccess().getNotesDNoteParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_39);
            	    lv_notes_6_0=ruleDNote();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSimLiteralTranspositionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"notes",
            	      						lv_notes_6_0,
            	      						"com.mimacom.ddd.dm.dmx.Dmx.DNote");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop47;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimLiteralTransposition"


    // $ANTLR start "entryRuleSimEntityTypeTransposition"
    // InternalSim.g:2333:1: entryRuleSimEntityTypeTransposition returns [EObject current=null] : iv_ruleSimEntityTypeTransposition= ruleSimEntityTypeTransposition EOF ;
    public final EObject entryRuleSimEntityTypeTransposition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimEntityTypeTransposition = null;


        try {
            // InternalSim.g:2333:67: (iv_ruleSimEntityTypeTransposition= ruleSimEntityTypeTransposition EOF )
            // InternalSim.g:2334:2: iv_ruleSimEntityTypeTransposition= ruleSimEntityTypeTransposition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimEntityTypeTranspositionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimEntityTypeTransposition=ruleSimEntityTypeTransposition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimEntityTypeTransposition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimEntityTypeTransposition"


    // $ANTLR start "ruleSimEntityTypeTransposition"
    // InternalSim.g:2340:1: ruleSimEntityTypeTransposition returns [EObject current=null] : ( () ( (otherlv_1= 'grab' ( (lv_root_2_0= 'root' ) )? otherlv_3= 'entity' ( (lv_rule_4_0= ruleSimGrabComplexTypeRule ) ) ) | (otherlv_5= 'ditch' ( (lv_root_6_0= 'root' ) )? otherlv_7= 'entity' ( (lv_rule_8_0= ruleSimDitchComplexTypeRule ) ) ) | (otherlv_9= 'morph' ( (lv_root_10_0= 'root' ) )? otherlv_11= 'entity' ( (lv_rule_12_0= ruleSimMorphComplexTypeRule ) ) ) | (otherlv_13= 'fuse' ( (lv_root_14_0= 'root' ) )? otherlv_15= 'entity' ( (lv_rule_16_0= ruleSimFuseComplexTypeRule ) ) ) ) ( (lv_description_17_0= ruleDRichText ) )? ( (lv_notes_18_0= ruleDNote ) )* (this_TComplexTypeFeatures_19= ruleTComplexTypeFeatures[$current] )? ) ;
    public final EObject ruleSimEntityTypeTransposition() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_root_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token lv_root_6_0=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token lv_root_10_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token lv_root_14_0=null;
        Token otherlv_15=null;
        EObject lv_rule_4_0 = null;

        EObject lv_rule_8_0 = null;

        EObject lv_rule_12_0 = null;

        EObject lv_rule_16_0 = null;

        EObject lv_description_17_0 = null;

        EObject lv_notes_18_0 = null;

        EObject this_TComplexTypeFeatures_19 = null;



        	enterRule();

        try {
            // InternalSim.g:2346:2: ( ( () ( (otherlv_1= 'grab' ( (lv_root_2_0= 'root' ) )? otherlv_3= 'entity' ( (lv_rule_4_0= ruleSimGrabComplexTypeRule ) ) ) | (otherlv_5= 'ditch' ( (lv_root_6_0= 'root' ) )? otherlv_7= 'entity' ( (lv_rule_8_0= ruleSimDitchComplexTypeRule ) ) ) | (otherlv_9= 'morph' ( (lv_root_10_0= 'root' ) )? otherlv_11= 'entity' ( (lv_rule_12_0= ruleSimMorphComplexTypeRule ) ) ) | (otherlv_13= 'fuse' ( (lv_root_14_0= 'root' ) )? otherlv_15= 'entity' ( (lv_rule_16_0= ruleSimFuseComplexTypeRule ) ) ) ) ( (lv_description_17_0= ruleDRichText ) )? ( (lv_notes_18_0= ruleDNote ) )* (this_TComplexTypeFeatures_19= ruleTComplexTypeFeatures[$current] )? ) )
            // InternalSim.g:2347:2: ( () ( (otherlv_1= 'grab' ( (lv_root_2_0= 'root' ) )? otherlv_3= 'entity' ( (lv_rule_4_0= ruleSimGrabComplexTypeRule ) ) ) | (otherlv_5= 'ditch' ( (lv_root_6_0= 'root' ) )? otherlv_7= 'entity' ( (lv_rule_8_0= ruleSimDitchComplexTypeRule ) ) ) | (otherlv_9= 'morph' ( (lv_root_10_0= 'root' ) )? otherlv_11= 'entity' ( (lv_rule_12_0= ruleSimMorphComplexTypeRule ) ) ) | (otherlv_13= 'fuse' ( (lv_root_14_0= 'root' ) )? otherlv_15= 'entity' ( (lv_rule_16_0= ruleSimFuseComplexTypeRule ) ) ) ) ( (lv_description_17_0= ruleDRichText ) )? ( (lv_notes_18_0= ruleDNote ) )* (this_TComplexTypeFeatures_19= ruleTComplexTypeFeatures[$current] )? )
            {
            // InternalSim.g:2347:2: ( () ( (otherlv_1= 'grab' ( (lv_root_2_0= 'root' ) )? otherlv_3= 'entity' ( (lv_rule_4_0= ruleSimGrabComplexTypeRule ) ) ) | (otherlv_5= 'ditch' ( (lv_root_6_0= 'root' ) )? otherlv_7= 'entity' ( (lv_rule_8_0= ruleSimDitchComplexTypeRule ) ) ) | (otherlv_9= 'morph' ( (lv_root_10_0= 'root' ) )? otherlv_11= 'entity' ( (lv_rule_12_0= ruleSimMorphComplexTypeRule ) ) ) | (otherlv_13= 'fuse' ( (lv_root_14_0= 'root' ) )? otherlv_15= 'entity' ( (lv_rule_16_0= ruleSimFuseComplexTypeRule ) ) ) ) ( (lv_description_17_0= ruleDRichText ) )? ( (lv_notes_18_0= ruleDNote ) )* (this_TComplexTypeFeatures_19= ruleTComplexTypeFeatures[$current] )? )
            // InternalSim.g:2348:3: () ( (otherlv_1= 'grab' ( (lv_root_2_0= 'root' ) )? otherlv_3= 'entity' ( (lv_rule_4_0= ruleSimGrabComplexTypeRule ) ) ) | (otherlv_5= 'ditch' ( (lv_root_6_0= 'root' ) )? otherlv_7= 'entity' ( (lv_rule_8_0= ruleSimDitchComplexTypeRule ) ) ) | (otherlv_9= 'morph' ( (lv_root_10_0= 'root' ) )? otherlv_11= 'entity' ( (lv_rule_12_0= ruleSimMorphComplexTypeRule ) ) ) | (otherlv_13= 'fuse' ( (lv_root_14_0= 'root' ) )? otherlv_15= 'entity' ( (lv_rule_16_0= ruleSimFuseComplexTypeRule ) ) ) ) ( (lv_description_17_0= ruleDRichText ) )? ( (lv_notes_18_0= ruleDNote ) )* (this_TComplexTypeFeatures_19= ruleTComplexTypeFeatures[$current] )?
            {
            // InternalSim.g:2348:3: ()
            // InternalSim.g:2349:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSimEntityTypeTranspositionAccess().getTEntityTypeTranspositionAction_0(),
              					current);
              			
            }

            }

            // InternalSim.g:2355:3: ( (otherlv_1= 'grab' ( (lv_root_2_0= 'root' ) )? otherlv_3= 'entity' ( (lv_rule_4_0= ruleSimGrabComplexTypeRule ) ) ) | (otherlv_5= 'ditch' ( (lv_root_6_0= 'root' ) )? otherlv_7= 'entity' ( (lv_rule_8_0= ruleSimDitchComplexTypeRule ) ) ) | (otherlv_9= 'morph' ( (lv_root_10_0= 'root' ) )? otherlv_11= 'entity' ( (lv_rule_12_0= ruleSimMorphComplexTypeRule ) ) ) | (otherlv_13= 'fuse' ( (lv_root_14_0= 'root' ) )? otherlv_15= 'entity' ( (lv_rule_16_0= ruleSimFuseComplexTypeRule ) ) ) )
            int alt52=4;
            switch ( input.LA(1) ) {
            case 30:
                {
                alt52=1;
                }
                break;
            case 35:
                {
                alt52=2;
                }
                break;
            case 40:
                {
                alt52=3;
                }
                break;
            case 41:
                {
                alt52=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 52, 0, input);

                throw nvae;
            }

            switch (alt52) {
                case 1 :
                    // InternalSim.g:2356:4: (otherlv_1= 'grab' ( (lv_root_2_0= 'root' ) )? otherlv_3= 'entity' ( (lv_rule_4_0= ruleSimGrabComplexTypeRule ) ) )
                    {
                    // InternalSim.g:2356:4: (otherlv_1= 'grab' ( (lv_root_2_0= 'root' ) )? otherlv_3= 'entity' ( (lv_rule_4_0= ruleSimGrabComplexTypeRule ) ) )
                    // InternalSim.g:2357:5: otherlv_1= 'grab' ( (lv_root_2_0= 'root' ) )? otherlv_3= 'entity' ( (lv_rule_4_0= ruleSimGrabComplexTypeRule ) )
                    {
                    otherlv_1=(Token)match(input,30,FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getSimEntityTypeTranspositionAccess().getGrabKeyword_1_0_0());
                      				
                    }
                    // InternalSim.g:2361:5: ( (lv_root_2_0= 'root' ) )?
                    int alt48=2;
                    int LA48_0 = input.LA(1);

                    if ( (LA48_0==38) ) {
                        alt48=1;
                    }
                    switch (alt48) {
                        case 1 :
                            // InternalSim.g:2362:6: (lv_root_2_0= 'root' )
                            {
                            // InternalSim.g:2362:6: (lv_root_2_0= 'root' )
                            // InternalSim.g:2363:7: lv_root_2_0= 'root'
                            {
                            lv_root_2_0=(Token)match(input,38,FOLLOW_41); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_root_2_0, grammarAccess.getSimEntityTypeTranspositionAccess().getRootRootKeyword_1_0_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSimEntityTypeTranspositionRule());
                              							}
                              							setWithLastConsumed(current, "root", true, "root");
                              						
                            }

                            }


                            }
                            break;

                    }

                    otherlv_3=(Token)match(input,39,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getSimEntityTypeTranspositionAccess().getEntityKeyword_1_0_2());
                      				
                    }
                    // InternalSim.g:2379:5: ( (lv_rule_4_0= ruleSimGrabComplexTypeRule ) )
                    // InternalSim.g:2380:6: (lv_rule_4_0= ruleSimGrabComplexTypeRule )
                    {
                    // InternalSim.g:2380:6: (lv_rule_4_0= ruleSimGrabComplexTypeRule )
                    // InternalSim.g:2381:7: lv_rule_4_0= ruleSimGrabComplexTypeRule
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSimEntityTypeTranspositionAccess().getRuleSimGrabComplexTypeRuleParserRuleCall_1_0_3_0());
                      						
                    }
                    pushFollow(FOLLOW_31);
                    lv_rule_4_0=ruleSimGrabComplexTypeRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSimEntityTypeTranspositionRule());
                      							}
                      							set(
                      								current,
                      								"rule",
                      								lv_rule_4_0,
                      								"com.mimacom.ddd.sm.sim.Sim.SimGrabComplexTypeRule");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:2400:4: (otherlv_5= 'ditch' ( (lv_root_6_0= 'root' ) )? otherlv_7= 'entity' ( (lv_rule_8_0= ruleSimDitchComplexTypeRule ) ) )
                    {
                    // InternalSim.g:2400:4: (otherlv_5= 'ditch' ( (lv_root_6_0= 'root' ) )? otherlv_7= 'entity' ( (lv_rule_8_0= ruleSimDitchComplexTypeRule ) ) )
                    // InternalSim.g:2401:5: otherlv_5= 'ditch' ( (lv_root_6_0= 'root' ) )? otherlv_7= 'entity' ( (lv_rule_8_0= ruleSimDitchComplexTypeRule ) )
                    {
                    otherlv_5=(Token)match(input,35,FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getSimEntityTypeTranspositionAccess().getDitchKeyword_1_1_0());
                      				
                    }
                    // InternalSim.g:2405:5: ( (lv_root_6_0= 'root' ) )?
                    int alt49=2;
                    int LA49_0 = input.LA(1);

                    if ( (LA49_0==38) ) {
                        alt49=1;
                    }
                    switch (alt49) {
                        case 1 :
                            // InternalSim.g:2406:6: (lv_root_6_0= 'root' )
                            {
                            // InternalSim.g:2406:6: (lv_root_6_0= 'root' )
                            // InternalSim.g:2407:7: lv_root_6_0= 'root'
                            {
                            lv_root_6_0=(Token)match(input,38,FOLLOW_41); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_root_6_0, grammarAccess.getSimEntityTypeTranspositionAccess().getRootRootKeyword_1_1_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSimEntityTypeTranspositionRule());
                              							}
                              							setWithLastConsumed(current, "root", true, "root");
                              						
                            }

                            }


                            }
                            break;

                    }

                    otherlv_7=(Token)match(input,39,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getSimEntityTypeTranspositionAccess().getEntityKeyword_1_1_2());
                      				
                    }
                    // InternalSim.g:2423:5: ( (lv_rule_8_0= ruleSimDitchComplexTypeRule ) )
                    // InternalSim.g:2424:6: (lv_rule_8_0= ruleSimDitchComplexTypeRule )
                    {
                    // InternalSim.g:2424:6: (lv_rule_8_0= ruleSimDitchComplexTypeRule )
                    // InternalSim.g:2425:7: lv_rule_8_0= ruleSimDitchComplexTypeRule
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSimEntityTypeTranspositionAccess().getRuleSimDitchComplexTypeRuleParserRuleCall_1_1_3_0());
                      						
                    }
                    pushFollow(FOLLOW_31);
                    lv_rule_8_0=ruleSimDitchComplexTypeRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSimEntityTypeTranspositionRule());
                      							}
                      							set(
                      								current,
                      								"rule",
                      								lv_rule_8_0,
                      								"com.mimacom.ddd.sm.sim.Sim.SimDitchComplexTypeRule");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSim.g:2444:4: (otherlv_9= 'morph' ( (lv_root_10_0= 'root' ) )? otherlv_11= 'entity' ( (lv_rule_12_0= ruleSimMorphComplexTypeRule ) ) )
                    {
                    // InternalSim.g:2444:4: (otherlv_9= 'morph' ( (lv_root_10_0= 'root' ) )? otherlv_11= 'entity' ( (lv_rule_12_0= ruleSimMorphComplexTypeRule ) ) )
                    // InternalSim.g:2445:5: otherlv_9= 'morph' ( (lv_root_10_0= 'root' ) )? otherlv_11= 'entity' ( (lv_rule_12_0= ruleSimMorphComplexTypeRule ) )
                    {
                    otherlv_9=(Token)match(input,40,FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getSimEntityTypeTranspositionAccess().getMorphKeyword_1_2_0());
                      				
                    }
                    // InternalSim.g:2449:5: ( (lv_root_10_0= 'root' ) )?
                    int alt50=2;
                    int LA50_0 = input.LA(1);

                    if ( (LA50_0==38) ) {
                        alt50=1;
                    }
                    switch (alt50) {
                        case 1 :
                            // InternalSim.g:2450:6: (lv_root_10_0= 'root' )
                            {
                            // InternalSim.g:2450:6: (lv_root_10_0= 'root' )
                            // InternalSim.g:2451:7: lv_root_10_0= 'root'
                            {
                            lv_root_10_0=(Token)match(input,38,FOLLOW_41); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_root_10_0, grammarAccess.getSimEntityTypeTranspositionAccess().getRootRootKeyword_1_2_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSimEntityTypeTranspositionRule());
                              							}
                              							setWithLastConsumed(current, "root", true, "root");
                              						
                            }

                            }


                            }
                            break;

                    }

                    otherlv_11=(Token)match(input,39,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_11, grammarAccess.getSimEntityTypeTranspositionAccess().getEntityKeyword_1_2_2());
                      				
                    }
                    // InternalSim.g:2467:5: ( (lv_rule_12_0= ruleSimMorphComplexTypeRule ) )
                    // InternalSim.g:2468:6: (lv_rule_12_0= ruleSimMorphComplexTypeRule )
                    {
                    // InternalSim.g:2468:6: (lv_rule_12_0= ruleSimMorphComplexTypeRule )
                    // InternalSim.g:2469:7: lv_rule_12_0= ruleSimMorphComplexTypeRule
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSimEntityTypeTranspositionAccess().getRuleSimMorphComplexTypeRuleParserRuleCall_1_2_3_0());
                      						
                    }
                    pushFollow(FOLLOW_31);
                    lv_rule_12_0=ruleSimMorphComplexTypeRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSimEntityTypeTranspositionRule());
                      							}
                      							set(
                      								current,
                      								"rule",
                      								lv_rule_12_0,
                      								"com.mimacom.ddd.sm.sim.Sim.SimMorphComplexTypeRule");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalSim.g:2488:4: (otherlv_13= 'fuse' ( (lv_root_14_0= 'root' ) )? otherlv_15= 'entity' ( (lv_rule_16_0= ruleSimFuseComplexTypeRule ) ) )
                    {
                    // InternalSim.g:2488:4: (otherlv_13= 'fuse' ( (lv_root_14_0= 'root' ) )? otherlv_15= 'entity' ( (lv_rule_16_0= ruleSimFuseComplexTypeRule ) ) )
                    // InternalSim.g:2489:5: otherlv_13= 'fuse' ( (lv_root_14_0= 'root' ) )? otherlv_15= 'entity' ( (lv_rule_16_0= ruleSimFuseComplexTypeRule ) )
                    {
                    otherlv_13=(Token)match(input,41,FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_13, grammarAccess.getSimEntityTypeTranspositionAccess().getFuseKeyword_1_3_0());
                      				
                    }
                    // InternalSim.g:2493:5: ( (lv_root_14_0= 'root' ) )?
                    int alt51=2;
                    int LA51_0 = input.LA(1);

                    if ( (LA51_0==38) ) {
                        alt51=1;
                    }
                    switch (alt51) {
                        case 1 :
                            // InternalSim.g:2494:6: (lv_root_14_0= 'root' )
                            {
                            // InternalSim.g:2494:6: (lv_root_14_0= 'root' )
                            // InternalSim.g:2495:7: lv_root_14_0= 'root'
                            {
                            lv_root_14_0=(Token)match(input,38,FOLLOW_41); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_root_14_0, grammarAccess.getSimEntityTypeTranspositionAccess().getRootRootKeyword_1_3_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSimEntityTypeTranspositionRule());
                              							}
                              							setWithLastConsumed(current, "root", true, "root");
                              						
                            }

                            }


                            }
                            break;

                    }

                    otherlv_15=(Token)match(input,39,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_15, grammarAccess.getSimEntityTypeTranspositionAccess().getEntityKeyword_1_3_2());
                      				
                    }
                    // InternalSim.g:2511:5: ( (lv_rule_16_0= ruleSimFuseComplexTypeRule ) )
                    // InternalSim.g:2512:6: (lv_rule_16_0= ruleSimFuseComplexTypeRule )
                    {
                    // InternalSim.g:2512:6: (lv_rule_16_0= ruleSimFuseComplexTypeRule )
                    // InternalSim.g:2513:7: lv_rule_16_0= ruleSimFuseComplexTypeRule
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSimEntityTypeTranspositionAccess().getRuleSimFuseComplexTypeRuleParserRuleCall_1_3_3_0());
                      						
                    }
                    pushFollow(FOLLOW_31);
                    lv_rule_16_0=ruleSimFuseComplexTypeRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSimEntityTypeTranspositionRule());
                      							}
                      							set(
                      								current,
                      								"rule",
                      								lv_rule_16_0,
                      								"com.mimacom.ddd.sm.sim.Sim.SimFuseComplexTypeRule");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalSim.g:2532:3: ( (lv_description_17_0= ruleDRichText ) )?
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( ((LA53_0>=RULE_PLAIN_TEXT_ONLY && LA53_0<=RULE_RICH_TEXT_START)) ) {
                alt53=1;
            }
            switch (alt53) {
                case 1 :
                    // InternalSim.g:2533:4: (lv_description_17_0= ruleDRichText )
                    {
                    // InternalSim.g:2533:4: (lv_description_17_0= ruleDRichText )
                    // InternalSim.g:2534:5: lv_description_17_0= ruleDRichText
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimEntityTypeTranspositionAccess().getDescriptionDRichTextParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_32);
                    lv_description_17_0=ruleDRichText();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimEntityTypeTranspositionRule());
                      					}
                      					set(
                      						current,
                      						"description",
                      						lv_description_17_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:2551:3: ( (lv_notes_18_0= ruleDNote ) )*
            loop54:
            do {
                int alt54=2;
                int LA54_0 = input.LA(1);

                if ( (LA54_0==59) ) {
                    alt54=1;
                }


                switch (alt54) {
            	case 1 :
            	    // InternalSim.g:2552:4: (lv_notes_18_0= ruleDNote )
            	    {
            	    // InternalSim.g:2552:4: (lv_notes_18_0= ruleDNote )
            	    // InternalSim.g:2553:5: lv_notes_18_0= ruleDNote
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSimEntityTypeTranspositionAccess().getNotesDNoteParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_32);
            	    lv_notes_18_0=ruleDNote();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSimEntityTypeTranspositionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"notes",
            	      						lv_notes_18_0,
            	      						"com.mimacom.ddd.dm.dmx.Dmx.DNote");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop54;
                }
            } while (true);

            // InternalSim.g:2570:3: (this_TComplexTypeFeatures_19= ruleTComplexTypeFeatures[$current] )?
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==23) ) {
                alt55=1;
            }
            switch (alt55) {
                case 1 :
                    // InternalSim.g:2571:4: this_TComplexTypeFeatures_19= ruleTComplexTypeFeatures[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getSimEntityTypeTranspositionRule());
                      				}
                      				newCompositeNode(grammarAccess.getSimEntityTypeTranspositionAccess().getTComplexTypeFeaturesParserRuleCall_4());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_TComplexTypeFeatures_19=ruleTComplexTypeFeatures(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_TComplexTypeFeatures_19;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimEntityTypeTransposition"


    // $ANTLR start "entryRuleSimDetailTypeTransposition"
    // InternalSim.g:2587:1: entryRuleSimDetailTypeTransposition returns [EObject current=null] : iv_ruleSimDetailTypeTransposition= ruleSimDetailTypeTransposition EOF ;
    public final EObject entryRuleSimDetailTypeTransposition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimDetailTypeTransposition = null;


        try {
            // InternalSim.g:2587:67: (iv_ruleSimDetailTypeTransposition= ruleSimDetailTypeTransposition EOF )
            // InternalSim.g:2588:2: iv_ruleSimDetailTypeTransposition= ruleSimDetailTypeTransposition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimDetailTypeTranspositionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimDetailTypeTransposition=ruleSimDetailTypeTransposition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimDetailTypeTransposition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimDetailTypeTransposition"


    // $ANTLR start "ruleSimDetailTypeTransposition"
    // InternalSim.g:2594:1: ruleSimDetailTypeTransposition returns [EObject current=null] : ( () ( (otherlv_1= 'grab' otherlv_2= 'detail' ( (lv_rule_3_0= ruleSimGrabComplexTypeRule ) ) ) | (otherlv_4= 'ditch' otherlv_5= 'detail' ( (lv_rule_6_0= ruleSimDitchComplexTypeRule ) ) ) | (otherlv_7= 'morph' otherlv_8= 'detail' ( (lv_rule_9_0= ruleSimMorphComplexTypeRule ) ) ) | (otherlv_10= 'fuse' otherlv_11= 'detail' ( (lv_rule_12_0= ruleSimFuseComplexTypeRule ) ) ) ) ( (lv_description_13_0= ruleDRichText ) )? ( (lv_notes_14_0= ruleDNote ) )* (this_TComplexTypeFeatures_15= ruleTComplexTypeFeatures[$current] )? ) ;
    public final EObject ruleSimDetailTypeTransposition() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        EObject lv_rule_3_0 = null;

        EObject lv_rule_6_0 = null;

        EObject lv_rule_9_0 = null;

        EObject lv_rule_12_0 = null;

        EObject lv_description_13_0 = null;

        EObject lv_notes_14_0 = null;

        EObject this_TComplexTypeFeatures_15 = null;



        	enterRule();

        try {
            // InternalSim.g:2600:2: ( ( () ( (otherlv_1= 'grab' otherlv_2= 'detail' ( (lv_rule_3_0= ruleSimGrabComplexTypeRule ) ) ) | (otherlv_4= 'ditch' otherlv_5= 'detail' ( (lv_rule_6_0= ruleSimDitchComplexTypeRule ) ) ) | (otherlv_7= 'morph' otherlv_8= 'detail' ( (lv_rule_9_0= ruleSimMorphComplexTypeRule ) ) ) | (otherlv_10= 'fuse' otherlv_11= 'detail' ( (lv_rule_12_0= ruleSimFuseComplexTypeRule ) ) ) ) ( (lv_description_13_0= ruleDRichText ) )? ( (lv_notes_14_0= ruleDNote ) )* (this_TComplexTypeFeatures_15= ruleTComplexTypeFeatures[$current] )? ) )
            // InternalSim.g:2601:2: ( () ( (otherlv_1= 'grab' otherlv_2= 'detail' ( (lv_rule_3_0= ruleSimGrabComplexTypeRule ) ) ) | (otherlv_4= 'ditch' otherlv_5= 'detail' ( (lv_rule_6_0= ruleSimDitchComplexTypeRule ) ) ) | (otherlv_7= 'morph' otherlv_8= 'detail' ( (lv_rule_9_0= ruleSimMorphComplexTypeRule ) ) ) | (otherlv_10= 'fuse' otherlv_11= 'detail' ( (lv_rule_12_0= ruleSimFuseComplexTypeRule ) ) ) ) ( (lv_description_13_0= ruleDRichText ) )? ( (lv_notes_14_0= ruleDNote ) )* (this_TComplexTypeFeatures_15= ruleTComplexTypeFeatures[$current] )? )
            {
            // InternalSim.g:2601:2: ( () ( (otherlv_1= 'grab' otherlv_2= 'detail' ( (lv_rule_3_0= ruleSimGrabComplexTypeRule ) ) ) | (otherlv_4= 'ditch' otherlv_5= 'detail' ( (lv_rule_6_0= ruleSimDitchComplexTypeRule ) ) ) | (otherlv_7= 'morph' otherlv_8= 'detail' ( (lv_rule_9_0= ruleSimMorphComplexTypeRule ) ) ) | (otherlv_10= 'fuse' otherlv_11= 'detail' ( (lv_rule_12_0= ruleSimFuseComplexTypeRule ) ) ) ) ( (lv_description_13_0= ruleDRichText ) )? ( (lv_notes_14_0= ruleDNote ) )* (this_TComplexTypeFeatures_15= ruleTComplexTypeFeatures[$current] )? )
            // InternalSim.g:2602:3: () ( (otherlv_1= 'grab' otherlv_2= 'detail' ( (lv_rule_3_0= ruleSimGrabComplexTypeRule ) ) ) | (otherlv_4= 'ditch' otherlv_5= 'detail' ( (lv_rule_6_0= ruleSimDitchComplexTypeRule ) ) ) | (otherlv_7= 'morph' otherlv_8= 'detail' ( (lv_rule_9_0= ruleSimMorphComplexTypeRule ) ) ) | (otherlv_10= 'fuse' otherlv_11= 'detail' ( (lv_rule_12_0= ruleSimFuseComplexTypeRule ) ) ) ) ( (lv_description_13_0= ruleDRichText ) )? ( (lv_notes_14_0= ruleDNote ) )* (this_TComplexTypeFeatures_15= ruleTComplexTypeFeatures[$current] )?
            {
            // InternalSim.g:2602:3: ()
            // InternalSim.g:2603:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSimDetailTypeTranspositionAccess().getTDetailTypeTranspositionAction_0(),
              					current);
              			
            }

            }

            // InternalSim.g:2609:3: ( (otherlv_1= 'grab' otherlv_2= 'detail' ( (lv_rule_3_0= ruleSimGrabComplexTypeRule ) ) ) | (otherlv_4= 'ditch' otherlv_5= 'detail' ( (lv_rule_6_0= ruleSimDitchComplexTypeRule ) ) ) | (otherlv_7= 'morph' otherlv_8= 'detail' ( (lv_rule_9_0= ruleSimMorphComplexTypeRule ) ) ) | (otherlv_10= 'fuse' otherlv_11= 'detail' ( (lv_rule_12_0= ruleSimFuseComplexTypeRule ) ) ) )
            int alt56=4;
            switch ( input.LA(1) ) {
            case 30:
                {
                alt56=1;
                }
                break;
            case 35:
                {
                alt56=2;
                }
                break;
            case 40:
                {
                alt56=3;
                }
                break;
            case 41:
                {
                alt56=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 56, 0, input);

                throw nvae;
            }

            switch (alt56) {
                case 1 :
                    // InternalSim.g:2610:4: (otherlv_1= 'grab' otherlv_2= 'detail' ( (lv_rule_3_0= ruleSimGrabComplexTypeRule ) ) )
                    {
                    // InternalSim.g:2610:4: (otherlv_1= 'grab' otherlv_2= 'detail' ( (lv_rule_3_0= ruleSimGrabComplexTypeRule ) ) )
                    // InternalSim.g:2611:5: otherlv_1= 'grab' otherlv_2= 'detail' ( (lv_rule_3_0= ruleSimGrabComplexTypeRule ) )
                    {
                    otherlv_1=(Token)match(input,30,FOLLOW_42); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getSimDetailTypeTranspositionAccess().getGrabKeyword_1_0_0());
                      				
                    }
                    otherlv_2=(Token)match(input,42,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getSimDetailTypeTranspositionAccess().getDetailKeyword_1_0_1());
                      				
                    }
                    // InternalSim.g:2619:5: ( (lv_rule_3_0= ruleSimGrabComplexTypeRule ) )
                    // InternalSim.g:2620:6: (lv_rule_3_0= ruleSimGrabComplexTypeRule )
                    {
                    // InternalSim.g:2620:6: (lv_rule_3_0= ruleSimGrabComplexTypeRule )
                    // InternalSim.g:2621:7: lv_rule_3_0= ruleSimGrabComplexTypeRule
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSimDetailTypeTranspositionAccess().getRuleSimGrabComplexTypeRuleParserRuleCall_1_0_2_0());
                      						
                    }
                    pushFollow(FOLLOW_31);
                    lv_rule_3_0=ruleSimGrabComplexTypeRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSimDetailTypeTranspositionRule());
                      							}
                      							set(
                      								current,
                      								"rule",
                      								lv_rule_3_0,
                      								"com.mimacom.ddd.sm.sim.Sim.SimGrabComplexTypeRule");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:2640:4: (otherlv_4= 'ditch' otherlv_5= 'detail' ( (lv_rule_6_0= ruleSimDitchComplexTypeRule ) ) )
                    {
                    // InternalSim.g:2640:4: (otherlv_4= 'ditch' otherlv_5= 'detail' ( (lv_rule_6_0= ruleSimDitchComplexTypeRule ) ) )
                    // InternalSim.g:2641:5: otherlv_4= 'ditch' otherlv_5= 'detail' ( (lv_rule_6_0= ruleSimDitchComplexTypeRule ) )
                    {
                    otherlv_4=(Token)match(input,35,FOLLOW_42); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getSimDetailTypeTranspositionAccess().getDitchKeyword_1_1_0());
                      				
                    }
                    otherlv_5=(Token)match(input,42,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getSimDetailTypeTranspositionAccess().getDetailKeyword_1_1_1());
                      				
                    }
                    // InternalSim.g:2649:5: ( (lv_rule_6_0= ruleSimDitchComplexTypeRule ) )
                    // InternalSim.g:2650:6: (lv_rule_6_0= ruleSimDitchComplexTypeRule )
                    {
                    // InternalSim.g:2650:6: (lv_rule_6_0= ruleSimDitchComplexTypeRule )
                    // InternalSim.g:2651:7: lv_rule_6_0= ruleSimDitchComplexTypeRule
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSimDetailTypeTranspositionAccess().getRuleSimDitchComplexTypeRuleParserRuleCall_1_1_2_0());
                      						
                    }
                    pushFollow(FOLLOW_31);
                    lv_rule_6_0=ruleSimDitchComplexTypeRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSimDetailTypeTranspositionRule());
                      							}
                      							set(
                      								current,
                      								"rule",
                      								lv_rule_6_0,
                      								"com.mimacom.ddd.sm.sim.Sim.SimDitchComplexTypeRule");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSim.g:2670:4: (otherlv_7= 'morph' otherlv_8= 'detail' ( (lv_rule_9_0= ruleSimMorphComplexTypeRule ) ) )
                    {
                    // InternalSim.g:2670:4: (otherlv_7= 'morph' otherlv_8= 'detail' ( (lv_rule_9_0= ruleSimMorphComplexTypeRule ) ) )
                    // InternalSim.g:2671:5: otherlv_7= 'morph' otherlv_8= 'detail' ( (lv_rule_9_0= ruleSimMorphComplexTypeRule ) )
                    {
                    otherlv_7=(Token)match(input,40,FOLLOW_42); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getSimDetailTypeTranspositionAccess().getMorphKeyword_1_2_0());
                      				
                    }
                    otherlv_8=(Token)match(input,42,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_8, grammarAccess.getSimDetailTypeTranspositionAccess().getDetailKeyword_1_2_1());
                      				
                    }
                    // InternalSim.g:2679:5: ( (lv_rule_9_0= ruleSimMorphComplexTypeRule ) )
                    // InternalSim.g:2680:6: (lv_rule_9_0= ruleSimMorphComplexTypeRule )
                    {
                    // InternalSim.g:2680:6: (lv_rule_9_0= ruleSimMorphComplexTypeRule )
                    // InternalSim.g:2681:7: lv_rule_9_0= ruleSimMorphComplexTypeRule
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSimDetailTypeTranspositionAccess().getRuleSimMorphComplexTypeRuleParserRuleCall_1_2_2_0());
                      						
                    }
                    pushFollow(FOLLOW_31);
                    lv_rule_9_0=ruleSimMorphComplexTypeRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSimDetailTypeTranspositionRule());
                      							}
                      							set(
                      								current,
                      								"rule",
                      								lv_rule_9_0,
                      								"com.mimacom.ddd.sm.sim.Sim.SimMorphComplexTypeRule");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalSim.g:2700:4: (otherlv_10= 'fuse' otherlv_11= 'detail' ( (lv_rule_12_0= ruleSimFuseComplexTypeRule ) ) )
                    {
                    // InternalSim.g:2700:4: (otherlv_10= 'fuse' otherlv_11= 'detail' ( (lv_rule_12_0= ruleSimFuseComplexTypeRule ) ) )
                    // InternalSim.g:2701:5: otherlv_10= 'fuse' otherlv_11= 'detail' ( (lv_rule_12_0= ruleSimFuseComplexTypeRule ) )
                    {
                    otherlv_10=(Token)match(input,41,FOLLOW_42); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_10, grammarAccess.getSimDetailTypeTranspositionAccess().getFuseKeyword_1_3_0());
                      				
                    }
                    otherlv_11=(Token)match(input,42,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_11, grammarAccess.getSimDetailTypeTranspositionAccess().getDetailKeyword_1_3_1());
                      				
                    }
                    // InternalSim.g:2709:5: ( (lv_rule_12_0= ruleSimFuseComplexTypeRule ) )
                    // InternalSim.g:2710:6: (lv_rule_12_0= ruleSimFuseComplexTypeRule )
                    {
                    // InternalSim.g:2710:6: (lv_rule_12_0= ruleSimFuseComplexTypeRule )
                    // InternalSim.g:2711:7: lv_rule_12_0= ruleSimFuseComplexTypeRule
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSimDetailTypeTranspositionAccess().getRuleSimFuseComplexTypeRuleParserRuleCall_1_3_2_0());
                      						
                    }
                    pushFollow(FOLLOW_31);
                    lv_rule_12_0=ruleSimFuseComplexTypeRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSimDetailTypeTranspositionRule());
                      							}
                      							set(
                      								current,
                      								"rule",
                      								lv_rule_12_0,
                      								"com.mimacom.ddd.sm.sim.Sim.SimFuseComplexTypeRule");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalSim.g:2730:3: ( (lv_description_13_0= ruleDRichText ) )?
            int alt57=2;
            int LA57_0 = input.LA(1);

            if ( ((LA57_0>=RULE_PLAIN_TEXT_ONLY && LA57_0<=RULE_RICH_TEXT_START)) ) {
                alt57=1;
            }
            switch (alt57) {
                case 1 :
                    // InternalSim.g:2731:4: (lv_description_13_0= ruleDRichText )
                    {
                    // InternalSim.g:2731:4: (lv_description_13_0= ruleDRichText )
                    // InternalSim.g:2732:5: lv_description_13_0= ruleDRichText
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimDetailTypeTranspositionAccess().getDescriptionDRichTextParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_32);
                    lv_description_13_0=ruleDRichText();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimDetailTypeTranspositionRule());
                      					}
                      					set(
                      						current,
                      						"description",
                      						lv_description_13_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:2749:3: ( (lv_notes_14_0= ruleDNote ) )*
            loop58:
            do {
                int alt58=2;
                int LA58_0 = input.LA(1);

                if ( (LA58_0==59) ) {
                    alt58=1;
                }


                switch (alt58) {
            	case 1 :
            	    // InternalSim.g:2750:4: (lv_notes_14_0= ruleDNote )
            	    {
            	    // InternalSim.g:2750:4: (lv_notes_14_0= ruleDNote )
            	    // InternalSim.g:2751:5: lv_notes_14_0= ruleDNote
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSimDetailTypeTranspositionAccess().getNotesDNoteParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_32);
            	    lv_notes_14_0=ruleDNote();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSimDetailTypeTranspositionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"notes",
            	      						lv_notes_14_0,
            	      						"com.mimacom.ddd.dm.dmx.Dmx.DNote");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop58;
                }
            } while (true);

            // InternalSim.g:2768:3: (this_TComplexTypeFeatures_15= ruleTComplexTypeFeatures[$current] )?
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==23) ) {
                alt59=1;
            }
            switch (alt59) {
                case 1 :
                    // InternalSim.g:2769:4: this_TComplexTypeFeatures_15= ruleTComplexTypeFeatures[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getSimDetailTypeTranspositionRule());
                      				}
                      				newCompositeNode(grammarAccess.getSimDetailTypeTranspositionAccess().getTComplexTypeFeaturesParserRuleCall_4());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_TComplexTypeFeatures_15=ruleTComplexTypeFeatures(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_TComplexTypeFeatures_15;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimDetailTypeTransposition"


    // $ANTLR start "ruleTComplexTypeFeatures"
    // InternalSim.g:2786:1: ruleTComplexTypeFeatures[EObject in_current] returns [EObject current=in_current] : (otherlv_0= '{' ( ( (lv_features_1_0= ruleSimFeature ) ) | (otherlv_2= 'add' ( (lv_constraints_3_0= ruleDConstraint ) ) ) )* otherlv_4= '}' ) ;
    public final EObject ruleTComplexTypeFeatures(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_features_1_0 = null;

        EObject lv_constraints_3_0 = null;



        	enterRule();

        try {
            // InternalSim.g:2792:2: ( (otherlv_0= '{' ( ( (lv_features_1_0= ruleSimFeature ) ) | (otherlv_2= 'add' ( (lv_constraints_3_0= ruleDConstraint ) ) ) )* otherlv_4= '}' ) )
            // InternalSim.g:2793:2: (otherlv_0= '{' ( ( (lv_features_1_0= ruleSimFeature ) ) | (otherlv_2= 'add' ( (lv_constraints_3_0= ruleDConstraint ) ) ) )* otherlv_4= '}' )
            {
            // InternalSim.g:2793:2: (otherlv_0= '{' ( ( (lv_features_1_0= ruleSimFeature ) ) | (otherlv_2= 'add' ( (lv_constraints_3_0= ruleDConstraint ) ) ) )* otherlv_4= '}' )
            // InternalSim.g:2794:3: otherlv_0= '{' ( ( (lv_features_1_0= ruleSimFeature ) ) | (otherlv_2= 'add' ( (lv_constraints_3_0= ruleDConstraint ) ) ) )* otherlv_4= '}'
            {
            otherlv_0=(Token)match(input,23,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTComplexTypeFeaturesAccess().getLeftCurlyBracketKeyword_0());
              		
            }
            // InternalSim.g:2798:3: ( ( (lv_features_1_0= ruleSimFeature ) ) | (otherlv_2= 'add' ( (lv_constraints_3_0= ruleDConstraint ) ) ) )*
            loop60:
            do {
                int alt60=3;
                int LA60_0 = input.LA(1);

                if ( (LA60_0==30||LA60_0==35||LA60_0==40) ) {
                    alt60=1;
                }
                else if ( (LA60_0==32) ) {
                    int LA60_3 = input.LA(2);

                    if ( (LA60_3==49) ) {
                        alt60=2;
                    }
                    else if ( (LA60_3==RULE_ID||LA60_3==42||LA60_3==55) ) {
                        alt60=1;
                    }


                }


                switch (alt60) {
            	case 1 :
            	    // InternalSim.g:2799:4: ( (lv_features_1_0= ruleSimFeature ) )
            	    {
            	    // InternalSim.g:2799:4: ( (lv_features_1_0= ruleSimFeature ) )
            	    // InternalSim.g:2800:5: (lv_features_1_0= ruleSimFeature )
            	    {
            	    // InternalSim.g:2800:5: (lv_features_1_0= ruleSimFeature )
            	    // InternalSim.g:2801:6: lv_features_1_0= ruleSimFeature
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTComplexTypeFeaturesAccess().getFeaturesSimFeatureParserRuleCall_1_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_43);
            	    lv_features_1_0=ruleSimFeature();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTComplexTypeFeaturesRule());
            	      						}
            	      						add(
            	      							current,
            	      							"features",
            	      							lv_features_1_0,
            	      							"com.mimacom.ddd.sm.sim.Sim.SimFeature");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalSim.g:2819:4: (otherlv_2= 'add' ( (lv_constraints_3_0= ruleDConstraint ) ) )
            	    {
            	    // InternalSim.g:2819:4: (otherlv_2= 'add' ( (lv_constraints_3_0= ruleDConstraint ) ) )
            	    // InternalSim.g:2820:5: otherlv_2= 'add' ( (lv_constraints_3_0= ruleDConstraint ) )
            	    {
            	    otherlv_2=(Token)match(input,32,FOLLOW_34); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_2, grammarAccess.getTComplexTypeFeaturesAccess().getAddKeyword_1_1_0());
            	      				
            	    }
            	    // InternalSim.g:2824:5: ( (lv_constraints_3_0= ruleDConstraint ) )
            	    // InternalSim.g:2825:6: (lv_constraints_3_0= ruleDConstraint )
            	    {
            	    // InternalSim.g:2825:6: (lv_constraints_3_0= ruleDConstraint )
            	    // InternalSim.g:2826:7: lv_constraints_3_0= ruleDConstraint
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getTComplexTypeFeaturesAccess().getConstraintsDConstraintParserRuleCall_1_1_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_43);
            	    lv_constraints_3_0=ruleDConstraint();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getTComplexTypeFeaturesRule());
            	      							}
            	      							add(
            	      								current,
            	      								"constraints",
            	      								lv_constraints_3_0,
            	      								"com.mimacom.ddd.dm.dim.Dim.DConstraint");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop60;
                }
            } while (true);

            otherlv_4=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getTComplexTypeFeaturesAccess().getRightCurlyBracketKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTComplexTypeFeatures"


    // $ANTLR start "entryRuleSimFeature"
    // InternalSim.g:2853:1: entryRuleSimFeature returns [EObject current=null] : iv_ruleSimFeature= ruleSimFeature EOF ;
    public final EObject entryRuleSimFeature() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimFeature = null;


        try {
            // InternalSim.g:2853:51: (iv_ruleSimFeature= ruleSimFeature EOF )
            // InternalSim.g:2854:2: iv_ruleSimFeature= ruleSimFeature EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimFeatureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimFeature=ruleSimFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimFeature; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimFeature"


    // $ANTLR start "ruleSimFeature"
    // InternalSim.g:2860:1: ruleSimFeature returns [EObject current=null] : (this_SimAssociationTransposition_0= ruleSimAssociationTransposition | (otherlv_1= 'add' this_DimAssociation_2= ruleDimAssociation ) | this_SimAttributeTransposition_3= ruleSimAttributeTransposition | (otherlv_4= 'add' this_DimAttribute_5= ruleDimAttribute ) | this_SimQueryTransposition_6= ruleSimQueryTransposition | (otherlv_7= 'add' this_DimQuery_8= ruleDimQuery ) ) ;
    public final EObject ruleSimFeature() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_7=null;
        EObject this_SimAssociationTransposition_0 = null;

        EObject this_DimAssociation_2 = null;

        EObject this_SimAttributeTransposition_3 = null;

        EObject this_DimAttribute_5 = null;

        EObject this_SimQueryTransposition_6 = null;

        EObject this_DimQuery_8 = null;



        	enterRule();

        try {
            // InternalSim.g:2866:2: ( (this_SimAssociationTransposition_0= ruleSimAssociationTransposition | (otherlv_1= 'add' this_DimAssociation_2= ruleDimAssociation ) | this_SimAttributeTransposition_3= ruleSimAttributeTransposition | (otherlv_4= 'add' this_DimAttribute_5= ruleDimAttribute ) | this_SimQueryTransposition_6= ruleSimQueryTransposition | (otherlv_7= 'add' this_DimQuery_8= ruleDimQuery ) ) )
            // InternalSim.g:2867:2: (this_SimAssociationTransposition_0= ruleSimAssociationTransposition | (otherlv_1= 'add' this_DimAssociation_2= ruleDimAssociation ) | this_SimAttributeTransposition_3= ruleSimAttributeTransposition | (otherlv_4= 'add' this_DimAttribute_5= ruleDimAttribute ) | this_SimQueryTransposition_6= ruleSimQueryTransposition | (otherlv_7= 'add' this_DimQuery_8= ruleDimQuery ) )
            {
            // InternalSim.g:2867:2: (this_SimAssociationTransposition_0= ruleSimAssociationTransposition | (otherlv_1= 'add' this_DimAssociation_2= ruleDimAssociation ) | this_SimAttributeTransposition_3= ruleSimAttributeTransposition | (otherlv_4= 'add' this_DimAttribute_5= ruleDimAttribute ) | this_SimQueryTransposition_6= ruleSimQueryTransposition | (otherlv_7= 'add' this_DimQuery_8= ruleDimQuery ) )
            int alt61=6;
            alt61 = dfa61.predict(input);
            switch (alt61) {
                case 1 :
                    // InternalSim.g:2868:3: this_SimAssociationTransposition_0= ruleSimAssociationTransposition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSimFeatureAccess().getSimAssociationTranspositionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SimAssociationTransposition_0=ruleSimAssociationTransposition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SimAssociationTransposition_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSim.g:2877:3: (otherlv_1= 'add' this_DimAssociation_2= ruleDimAssociation )
                    {
                    // InternalSim.g:2877:3: (otherlv_1= 'add' this_DimAssociation_2= ruleDimAssociation )
                    // InternalSim.g:2878:4: otherlv_1= 'add' this_DimAssociation_2= ruleDimAssociation
                    {
                    otherlv_1=(Token)match(input,32,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSimFeatureAccess().getAddKeyword_1_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSimFeatureAccess().getDimAssociationParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_DimAssociation_2=ruleDimAssociation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_DimAssociation_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSim.g:2892:3: this_SimAttributeTransposition_3= ruleSimAttributeTransposition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSimFeatureAccess().getSimAttributeTranspositionParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SimAttributeTransposition_3=ruleSimAttributeTransposition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SimAttributeTransposition_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSim.g:2901:3: (otherlv_4= 'add' this_DimAttribute_5= ruleDimAttribute )
                    {
                    // InternalSim.g:2901:3: (otherlv_4= 'add' this_DimAttribute_5= ruleDimAttribute )
                    // InternalSim.g:2902:4: otherlv_4= 'add' this_DimAttribute_5= ruleDimAttribute
                    {
                    otherlv_4=(Token)match(input,32,FOLLOW_45); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getSimFeatureAccess().getAddKeyword_3_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSimFeatureAccess().getDimAttributeParserRuleCall_3_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_DimAttribute_5=ruleDimAttribute();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_DimAttribute_5;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSim.g:2916:3: this_SimQueryTransposition_6= ruleSimQueryTransposition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSimFeatureAccess().getSimQueryTranspositionParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SimQueryTransposition_6=ruleSimQueryTransposition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SimQueryTransposition_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalSim.g:2925:3: (otherlv_7= 'add' this_DimQuery_8= ruleDimQuery )
                    {
                    // InternalSim.g:2925:3: (otherlv_7= 'add' this_DimQuery_8= ruleDimQuery )
                    // InternalSim.g:2926:4: otherlv_7= 'add' this_DimQuery_8= ruleDimQuery
                    {
                    otherlv_7=(Token)match(input,32,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getSimFeatureAccess().getAddKeyword_5_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSimFeatureAccess().getDimQueryParserRuleCall_5_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_DimQuery_8=ruleDimQuery();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_DimQuery_8;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimFeature"


    // $ANTLR start "entryRuleSimAssociationTransposition"
    // InternalSim.g:2943:1: entryRuleSimAssociationTransposition returns [EObject current=null] : iv_ruleSimAssociationTransposition= ruleSimAssociationTransposition EOF ;
    public final EObject entryRuleSimAssociationTransposition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimAssociationTransposition = null;


        try {
            // InternalSim.g:2943:68: (iv_ruleSimAssociationTransposition= ruleSimAssociationTransposition EOF )
            // InternalSim.g:2944:2: iv_ruleSimAssociationTransposition= ruleSimAssociationTransposition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimAssociationTranspositionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimAssociationTransposition=ruleSimAssociationTransposition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimAssociationTransposition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimAssociationTransposition"


    // $ANTLR start "ruleSimAssociationTransposition"
    // InternalSim.g:2950:1: ruleSimAssociationTransposition returns [EObject current=null] : ( () ( (otherlv_1= 'grab' (otherlv_2= 'reference' | otherlv_3= 'composite' ) ( (lv_rule_4_0= ruleSimGrabFeatureRule ) ) ) | (otherlv_5= 'morph' (otherlv_6= 'reference' | otherlv_7= 'composite' ) ( (lv_rule_8_0= ruleSimMorphFeatureRule ) ) ) | (otherlv_9= 'ditch' (otherlv_10= 'reference' | otherlv_11= 'composite' ) ( (lv_rule_12_0= ruleSimDitchFeatureRule ) ) ) ) ( (lv_description_13_0= ruleDRichText ) )? ) ;
    public final EObject ruleSimAssociationTransposition() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        EObject lv_rule_4_0 = null;

        EObject lv_rule_8_0 = null;

        EObject lv_rule_12_0 = null;

        EObject lv_description_13_0 = null;



        	enterRule();

        try {
            // InternalSim.g:2956:2: ( ( () ( (otherlv_1= 'grab' (otherlv_2= 'reference' | otherlv_3= 'composite' ) ( (lv_rule_4_0= ruleSimGrabFeatureRule ) ) ) | (otherlv_5= 'morph' (otherlv_6= 'reference' | otherlv_7= 'composite' ) ( (lv_rule_8_0= ruleSimMorphFeatureRule ) ) ) | (otherlv_9= 'ditch' (otherlv_10= 'reference' | otherlv_11= 'composite' ) ( (lv_rule_12_0= ruleSimDitchFeatureRule ) ) ) ) ( (lv_description_13_0= ruleDRichText ) )? ) )
            // InternalSim.g:2957:2: ( () ( (otherlv_1= 'grab' (otherlv_2= 'reference' | otherlv_3= 'composite' ) ( (lv_rule_4_0= ruleSimGrabFeatureRule ) ) ) | (otherlv_5= 'morph' (otherlv_6= 'reference' | otherlv_7= 'composite' ) ( (lv_rule_8_0= ruleSimMorphFeatureRule ) ) ) | (otherlv_9= 'ditch' (otherlv_10= 'reference' | otherlv_11= 'composite' ) ( (lv_rule_12_0= ruleSimDitchFeatureRule ) ) ) ) ( (lv_description_13_0= ruleDRichText ) )? )
            {
            // InternalSim.g:2957:2: ( () ( (otherlv_1= 'grab' (otherlv_2= 'reference' | otherlv_3= 'composite' ) ( (lv_rule_4_0= ruleSimGrabFeatureRule ) ) ) | (otherlv_5= 'morph' (otherlv_6= 'reference' | otherlv_7= 'composite' ) ( (lv_rule_8_0= ruleSimMorphFeatureRule ) ) ) | (otherlv_9= 'ditch' (otherlv_10= 'reference' | otherlv_11= 'composite' ) ( (lv_rule_12_0= ruleSimDitchFeatureRule ) ) ) ) ( (lv_description_13_0= ruleDRichText ) )? )
            // InternalSim.g:2958:3: () ( (otherlv_1= 'grab' (otherlv_2= 'reference' | otherlv_3= 'composite' ) ( (lv_rule_4_0= ruleSimGrabFeatureRule ) ) ) | (otherlv_5= 'morph' (otherlv_6= 'reference' | otherlv_7= 'composite' ) ( (lv_rule_8_0= ruleSimMorphFeatureRule ) ) ) | (otherlv_9= 'ditch' (otherlv_10= 'reference' | otherlv_11= 'composite' ) ( (lv_rule_12_0= ruleSimDitchFeatureRule ) ) ) ) ( (lv_description_13_0= ruleDRichText ) )?
            {
            // InternalSim.g:2958:3: ()
            // InternalSim.g:2959:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSimAssociationTranspositionAccess().getTAssociationTranspositionAction_0(),
              					current);
              			
            }

            }

            // InternalSim.g:2965:3: ( (otherlv_1= 'grab' (otherlv_2= 'reference' | otherlv_3= 'composite' ) ( (lv_rule_4_0= ruleSimGrabFeatureRule ) ) ) | (otherlv_5= 'morph' (otherlv_6= 'reference' | otherlv_7= 'composite' ) ( (lv_rule_8_0= ruleSimMorphFeatureRule ) ) ) | (otherlv_9= 'ditch' (otherlv_10= 'reference' | otherlv_11= 'composite' ) ( (lv_rule_12_0= ruleSimDitchFeatureRule ) ) ) )
            int alt65=3;
            switch ( input.LA(1) ) {
            case 30:
                {
                alt65=1;
                }
                break;
            case 40:
                {
                alt65=2;
                }
                break;
            case 35:
                {
                alt65=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 65, 0, input);

                throw nvae;
            }

            switch (alt65) {
                case 1 :
                    // InternalSim.g:2966:4: (otherlv_1= 'grab' (otherlv_2= 'reference' | otherlv_3= 'composite' ) ( (lv_rule_4_0= ruleSimGrabFeatureRule ) ) )
                    {
                    // InternalSim.g:2966:4: (otherlv_1= 'grab' (otherlv_2= 'reference' | otherlv_3= 'composite' ) ( (lv_rule_4_0= ruleSimGrabFeatureRule ) ) )
                    // InternalSim.g:2967:5: otherlv_1= 'grab' (otherlv_2= 'reference' | otherlv_3= 'composite' ) ( (lv_rule_4_0= ruleSimGrabFeatureRule ) )
                    {
                    otherlv_1=(Token)match(input,30,FOLLOW_46); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getSimAssociationTranspositionAccess().getGrabKeyword_1_0_0());
                      				
                    }
                    // InternalSim.g:2971:5: (otherlv_2= 'reference' | otherlv_3= 'composite' )
                    int alt62=2;
                    int LA62_0 = input.LA(1);

                    if ( (LA62_0==43) ) {
                        alt62=1;
                    }
                    else if ( (LA62_0==44) ) {
                        alt62=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 62, 0, input);

                        throw nvae;
                    }
                    switch (alt62) {
                        case 1 :
                            // InternalSim.g:2972:6: otherlv_2= 'reference'
                            {
                            otherlv_2=(Token)match(input,43,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_2, grammarAccess.getSimAssociationTranspositionAccess().getReferenceKeyword_1_0_1_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalSim.g:2977:6: otherlv_3= 'composite'
                            {
                            otherlv_3=(Token)match(input,44,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_3, grammarAccess.getSimAssociationTranspositionAccess().getCompositeKeyword_1_0_1_1());
                              					
                            }

                            }
                            break;

                    }

                    // InternalSim.g:2982:5: ( (lv_rule_4_0= ruleSimGrabFeatureRule ) )
                    // InternalSim.g:2983:6: (lv_rule_4_0= ruleSimGrabFeatureRule )
                    {
                    // InternalSim.g:2983:6: (lv_rule_4_0= ruleSimGrabFeatureRule )
                    // InternalSim.g:2984:7: lv_rule_4_0= ruleSimGrabFeatureRule
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSimAssociationTranspositionAccess().getRuleSimGrabFeatureRuleParserRuleCall_1_0_2_0());
                      						
                    }
                    pushFollow(FOLLOW_47);
                    lv_rule_4_0=ruleSimGrabFeatureRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSimAssociationTranspositionRule());
                      							}
                      							set(
                      								current,
                      								"rule",
                      								lv_rule_4_0,
                      								"com.mimacom.ddd.sm.sim.Sim.SimGrabFeatureRule");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:3003:4: (otherlv_5= 'morph' (otherlv_6= 'reference' | otherlv_7= 'composite' ) ( (lv_rule_8_0= ruleSimMorphFeatureRule ) ) )
                    {
                    // InternalSim.g:3003:4: (otherlv_5= 'morph' (otherlv_6= 'reference' | otherlv_7= 'composite' ) ( (lv_rule_8_0= ruleSimMorphFeatureRule ) ) )
                    // InternalSim.g:3004:5: otherlv_5= 'morph' (otherlv_6= 'reference' | otherlv_7= 'composite' ) ( (lv_rule_8_0= ruleSimMorphFeatureRule ) )
                    {
                    otherlv_5=(Token)match(input,40,FOLLOW_46); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getSimAssociationTranspositionAccess().getMorphKeyword_1_1_0());
                      				
                    }
                    // InternalSim.g:3008:5: (otherlv_6= 'reference' | otherlv_7= 'composite' )
                    int alt63=2;
                    int LA63_0 = input.LA(1);

                    if ( (LA63_0==43) ) {
                        alt63=1;
                    }
                    else if ( (LA63_0==44) ) {
                        alt63=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 63, 0, input);

                        throw nvae;
                    }
                    switch (alt63) {
                        case 1 :
                            // InternalSim.g:3009:6: otherlv_6= 'reference'
                            {
                            otherlv_6=(Token)match(input,43,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_6, grammarAccess.getSimAssociationTranspositionAccess().getReferenceKeyword_1_1_1_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalSim.g:3014:6: otherlv_7= 'composite'
                            {
                            otherlv_7=(Token)match(input,44,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_7, grammarAccess.getSimAssociationTranspositionAccess().getCompositeKeyword_1_1_1_1());
                              					
                            }

                            }
                            break;

                    }

                    // InternalSim.g:3019:5: ( (lv_rule_8_0= ruleSimMorphFeatureRule ) )
                    // InternalSim.g:3020:6: (lv_rule_8_0= ruleSimMorphFeatureRule )
                    {
                    // InternalSim.g:3020:6: (lv_rule_8_0= ruleSimMorphFeatureRule )
                    // InternalSim.g:3021:7: lv_rule_8_0= ruleSimMorphFeatureRule
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSimAssociationTranspositionAccess().getRuleSimMorphFeatureRuleParserRuleCall_1_1_2_0());
                      						
                    }
                    pushFollow(FOLLOW_47);
                    lv_rule_8_0=ruleSimMorphFeatureRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSimAssociationTranspositionRule());
                      							}
                      							set(
                      								current,
                      								"rule",
                      								lv_rule_8_0,
                      								"com.mimacom.ddd.sm.sim.Sim.SimMorphFeatureRule");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSim.g:3040:4: (otherlv_9= 'ditch' (otherlv_10= 'reference' | otherlv_11= 'composite' ) ( (lv_rule_12_0= ruleSimDitchFeatureRule ) ) )
                    {
                    // InternalSim.g:3040:4: (otherlv_9= 'ditch' (otherlv_10= 'reference' | otherlv_11= 'composite' ) ( (lv_rule_12_0= ruleSimDitchFeatureRule ) ) )
                    // InternalSim.g:3041:5: otherlv_9= 'ditch' (otherlv_10= 'reference' | otherlv_11= 'composite' ) ( (lv_rule_12_0= ruleSimDitchFeatureRule ) )
                    {
                    otherlv_9=(Token)match(input,35,FOLLOW_46); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getSimAssociationTranspositionAccess().getDitchKeyword_1_2_0());
                      				
                    }
                    // InternalSim.g:3045:5: (otherlv_10= 'reference' | otherlv_11= 'composite' )
                    int alt64=2;
                    int LA64_0 = input.LA(1);

                    if ( (LA64_0==43) ) {
                        alt64=1;
                    }
                    else if ( (LA64_0==44) ) {
                        alt64=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 64, 0, input);

                        throw nvae;
                    }
                    switch (alt64) {
                        case 1 :
                            // InternalSim.g:3046:6: otherlv_10= 'reference'
                            {
                            otherlv_10=(Token)match(input,43,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_10, grammarAccess.getSimAssociationTranspositionAccess().getReferenceKeyword_1_2_1_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalSim.g:3051:6: otherlv_11= 'composite'
                            {
                            otherlv_11=(Token)match(input,44,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_11, grammarAccess.getSimAssociationTranspositionAccess().getCompositeKeyword_1_2_1_1());
                              					
                            }

                            }
                            break;

                    }

                    // InternalSim.g:3056:5: ( (lv_rule_12_0= ruleSimDitchFeatureRule ) )
                    // InternalSim.g:3057:6: (lv_rule_12_0= ruleSimDitchFeatureRule )
                    {
                    // InternalSim.g:3057:6: (lv_rule_12_0= ruleSimDitchFeatureRule )
                    // InternalSim.g:3058:7: lv_rule_12_0= ruleSimDitchFeatureRule
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSimAssociationTranspositionAccess().getRuleSimDitchFeatureRuleParserRuleCall_1_2_2_0());
                      						
                    }
                    pushFollow(FOLLOW_47);
                    lv_rule_12_0=ruleSimDitchFeatureRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSimAssociationTranspositionRule());
                      							}
                      							set(
                      								current,
                      								"rule",
                      								lv_rule_12_0,
                      								"com.mimacom.ddd.sm.sim.Sim.SimDitchFeatureRule");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalSim.g:3077:3: ( (lv_description_13_0= ruleDRichText ) )?
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( ((LA66_0>=RULE_PLAIN_TEXT_ONLY && LA66_0<=RULE_RICH_TEXT_START)) ) {
                alt66=1;
            }
            switch (alt66) {
                case 1 :
                    // InternalSim.g:3078:4: (lv_description_13_0= ruleDRichText )
                    {
                    // InternalSim.g:3078:4: (lv_description_13_0= ruleDRichText )
                    // InternalSim.g:3079:5: lv_description_13_0= ruleDRichText
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimAssociationTranspositionAccess().getDescriptionDRichTextParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_description_13_0=ruleDRichText();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimAssociationTranspositionRule());
                      					}
                      					set(
                      						current,
                      						"description",
                      						lv_description_13_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimAssociationTransposition"


    // $ANTLR start "entryRuleSimAttributeTransposition"
    // InternalSim.g:3100:1: entryRuleSimAttributeTransposition returns [EObject current=null] : iv_ruleSimAttributeTransposition= ruleSimAttributeTransposition EOF ;
    public final EObject entryRuleSimAttributeTransposition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimAttributeTransposition = null;


        try {
            // InternalSim.g:3100:66: (iv_ruleSimAttributeTransposition= ruleSimAttributeTransposition EOF )
            // InternalSim.g:3101:2: iv_ruleSimAttributeTransposition= ruleSimAttributeTransposition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimAttributeTranspositionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimAttributeTransposition=ruleSimAttributeTransposition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimAttributeTransposition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimAttributeTransposition"


    // $ANTLR start "ruleSimAttributeTransposition"
    // InternalSim.g:3107:1: ruleSimAttributeTransposition returns [EObject current=null] : ( () ( (otherlv_1= 'grab' (otherlv_2= 'attribute' | ( (lv_detail_3_0= 'detail' ) ) )? ( (lv_rule_4_0= ruleSimGrabFeatureRule ) ) ) | (otherlv_5= 'morph' (otherlv_6= 'attribute' | ( (lv_detail_7_0= 'detail' ) ) )? ( (lv_rule_8_0= ruleSimMorphFeatureRule ) ) ) | (otherlv_9= 'ditch' (otherlv_10= 'attribute' | ( (lv_detail_11_0= 'detail' ) ) )? ( (lv_rule_12_0= ruleSimDitchFeatureRule ) ) ) ) ( (lv_description_13_0= ruleDRichText ) )? ) ;
    public final EObject ruleSimAttributeTransposition() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_detail_3_0=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token lv_detail_7_0=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token lv_detail_11_0=null;
        EObject lv_rule_4_0 = null;

        EObject lv_rule_8_0 = null;

        EObject lv_rule_12_0 = null;

        EObject lv_description_13_0 = null;



        	enterRule();

        try {
            // InternalSim.g:3113:2: ( ( () ( (otherlv_1= 'grab' (otherlv_2= 'attribute' | ( (lv_detail_3_0= 'detail' ) ) )? ( (lv_rule_4_0= ruleSimGrabFeatureRule ) ) ) | (otherlv_5= 'morph' (otherlv_6= 'attribute' | ( (lv_detail_7_0= 'detail' ) ) )? ( (lv_rule_8_0= ruleSimMorphFeatureRule ) ) ) | (otherlv_9= 'ditch' (otherlv_10= 'attribute' | ( (lv_detail_11_0= 'detail' ) ) )? ( (lv_rule_12_0= ruleSimDitchFeatureRule ) ) ) ) ( (lv_description_13_0= ruleDRichText ) )? ) )
            // InternalSim.g:3114:2: ( () ( (otherlv_1= 'grab' (otherlv_2= 'attribute' | ( (lv_detail_3_0= 'detail' ) ) )? ( (lv_rule_4_0= ruleSimGrabFeatureRule ) ) ) | (otherlv_5= 'morph' (otherlv_6= 'attribute' | ( (lv_detail_7_0= 'detail' ) ) )? ( (lv_rule_8_0= ruleSimMorphFeatureRule ) ) ) | (otherlv_9= 'ditch' (otherlv_10= 'attribute' | ( (lv_detail_11_0= 'detail' ) ) )? ( (lv_rule_12_0= ruleSimDitchFeatureRule ) ) ) ) ( (lv_description_13_0= ruleDRichText ) )? )
            {
            // InternalSim.g:3114:2: ( () ( (otherlv_1= 'grab' (otherlv_2= 'attribute' | ( (lv_detail_3_0= 'detail' ) ) )? ( (lv_rule_4_0= ruleSimGrabFeatureRule ) ) ) | (otherlv_5= 'morph' (otherlv_6= 'attribute' | ( (lv_detail_7_0= 'detail' ) ) )? ( (lv_rule_8_0= ruleSimMorphFeatureRule ) ) ) | (otherlv_9= 'ditch' (otherlv_10= 'attribute' | ( (lv_detail_11_0= 'detail' ) ) )? ( (lv_rule_12_0= ruleSimDitchFeatureRule ) ) ) ) ( (lv_description_13_0= ruleDRichText ) )? )
            // InternalSim.g:3115:3: () ( (otherlv_1= 'grab' (otherlv_2= 'attribute' | ( (lv_detail_3_0= 'detail' ) ) )? ( (lv_rule_4_0= ruleSimGrabFeatureRule ) ) ) | (otherlv_5= 'morph' (otherlv_6= 'attribute' | ( (lv_detail_7_0= 'detail' ) ) )? ( (lv_rule_8_0= ruleSimMorphFeatureRule ) ) ) | (otherlv_9= 'ditch' (otherlv_10= 'attribute' | ( (lv_detail_11_0= 'detail' ) ) )? ( (lv_rule_12_0= ruleSimDitchFeatureRule ) ) ) ) ( (lv_description_13_0= ruleDRichText ) )?
            {
            // InternalSim.g:3115:3: ()
            // InternalSim.g:3116:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSimAttributeTranspositionAccess().getTAttributeTranspositionAction_0(),
              					current);
              			
            }

            }

            // InternalSim.g:3122:3: ( (otherlv_1= 'grab' (otherlv_2= 'attribute' | ( (lv_detail_3_0= 'detail' ) ) )? ( (lv_rule_4_0= ruleSimGrabFeatureRule ) ) ) | (otherlv_5= 'morph' (otherlv_6= 'attribute' | ( (lv_detail_7_0= 'detail' ) ) )? ( (lv_rule_8_0= ruleSimMorphFeatureRule ) ) ) | (otherlv_9= 'ditch' (otherlv_10= 'attribute' | ( (lv_detail_11_0= 'detail' ) ) )? ( (lv_rule_12_0= ruleSimDitchFeatureRule ) ) ) )
            int alt70=3;
            switch ( input.LA(1) ) {
            case 30:
                {
                alt70=1;
                }
                break;
            case 40:
                {
                alt70=2;
                }
                break;
            case 35:
                {
                alt70=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 70, 0, input);

                throw nvae;
            }

            switch (alt70) {
                case 1 :
                    // InternalSim.g:3123:4: (otherlv_1= 'grab' (otherlv_2= 'attribute' | ( (lv_detail_3_0= 'detail' ) ) )? ( (lv_rule_4_0= ruleSimGrabFeatureRule ) ) )
                    {
                    // InternalSim.g:3123:4: (otherlv_1= 'grab' (otherlv_2= 'attribute' | ( (lv_detail_3_0= 'detail' ) ) )? ( (lv_rule_4_0= ruleSimGrabFeatureRule ) ) )
                    // InternalSim.g:3124:5: otherlv_1= 'grab' (otherlv_2= 'attribute' | ( (lv_detail_3_0= 'detail' ) ) )? ( (lv_rule_4_0= ruleSimGrabFeatureRule ) )
                    {
                    otherlv_1=(Token)match(input,30,FOLLOW_48); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getSimAttributeTranspositionAccess().getGrabKeyword_1_0_0());
                      				
                    }
                    // InternalSim.g:3128:5: (otherlv_2= 'attribute' | ( (lv_detail_3_0= 'detail' ) ) )?
                    int alt67=3;
                    int LA67_0 = input.LA(1);

                    if ( (LA67_0==45) ) {
                        alt67=1;
                    }
                    else if ( (LA67_0==42) ) {
                        alt67=2;
                    }
                    switch (alt67) {
                        case 1 :
                            // InternalSim.g:3129:6: otherlv_2= 'attribute'
                            {
                            otherlv_2=(Token)match(input,45,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_2, grammarAccess.getSimAttributeTranspositionAccess().getAttributeKeyword_1_0_1_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalSim.g:3134:6: ( (lv_detail_3_0= 'detail' ) )
                            {
                            // InternalSim.g:3134:6: ( (lv_detail_3_0= 'detail' ) )
                            // InternalSim.g:3135:7: (lv_detail_3_0= 'detail' )
                            {
                            // InternalSim.g:3135:7: (lv_detail_3_0= 'detail' )
                            // InternalSim.g:3136:8: lv_detail_3_0= 'detail'
                            {
                            lv_detail_3_0=(Token)match(input,42,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_detail_3_0, grammarAccess.getSimAttributeTranspositionAccess().getDetailDetailKeyword_1_0_1_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getSimAttributeTranspositionRule());
                              								}
                              								setWithLastConsumed(current, "detail", true, "detail");
                              							
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalSim.g:3149:5: ( (lv_rule_4_0= ruleSimGrabFeatureRule ) )
                    // InternalSim.g:3150:6: (lv_rule_4_0= ruleSimGrabFeatureRule )
                    {
                    // InternalSim.g:3150:6: (lv_rule_4_0= ruleSimGrabFeatureRule )
                    // InternalSim.g:3151:7: lv_rule_4_0= ruleSimGrabFeatureRule
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSimAttributeTranspositionAccess().getRuleSimGrabFeatureRuleParserRuleCall_1_0_2_0());
                      						
                    }
                    pushFollow(FOLLOW_47);
                    lv_rule_4_0=ruleSimGrabFeatureRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSimAttributeTranspositionRule());
                      							}
                      							set(
                      								current,
                      								"rule",
                      								lv_rule_4_0,
                      								"com.mimacom.ddd.sm.sim.Sim.SimGrabFeatureRule");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:3170:4: (otherlv_5= 'morph' (otherlv_6= 'attribute' | ( (lv_detail_7_0= 'detail' ) ) )? ( (lv_rule_8_0= ruleSimMorphFeatureRule ) ) )
                    {
                    // InternalSim.g:3170:4: (otherlv_5= 'morph' (otherlv_6= 'attribute' | ( (lv_detail_7_0= 'detail' ) ) )? ( (lv_rule_8_0= ruleSimMorphFeatureRule ) ) )
                    // InternalSim.g:3171:5: otherlv_5= 'morph' (otherlv_6= 'attribute' | ( (lv_detail_7_0= 'detail' ) ) )? ( (lv_rule_8_0= ruleSimMorphFeatureRule ) )
                    {
                    otherlv_5=(Token)match(input,40,FOLLOW_48); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getSimAttributeTranspositionAccess().getMorphKeyword_1_1_0());
                      				
                    }
                    // InternalSim.g:3175:5: (otherlv_6= 'attribute' | ( (lv_detail_7_0= 'detail' ) ) )?
                    int alt68=3;
                    int LA68_0 = input.LA(1);

                    if ( (LA68_0==45) ) {
                        alt68=1;
                    }
                    else if ( (LA68_0==42) ) {
                        alt68=2;
                    }
                    switch (alt68) {
                        case 1 :
                            // InternalSim.g:3176:6: otherlv_6= 'attribute'
                            {
                            otherlv_6=(Token)match(input,45,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_6, grammarAccess.getSimAttributeTranspositionAccess().getAttributeKeyword_1_1_1_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalSim.g:3181:6: ( (lv_detail_7_0= 'detail' ) )
                            {
                            // InternalSim.g:3181:6: ( (lv_detail_7_0= 'detail' ) )
                            // InternalSim.g:3182:7: (lv_detail_7_0= 'detail' )
                            {
                            // InternalSim.g:3182:7: (lv_detail_7_0= 'detail' )
                            // InternalSim.g:3183:8: lv_detail_7_0= 'detail'
                            {
                            lv_detail_7_0=(Token)match(input,42,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_detail_7_0, grammarAccess.getSimAttributeTranspositionAccess().getDetailDetailKeyword_1_1_1_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getSimAttributeTranspositionRule());
                              								}
                              								setWithLastConsumed(current, "detail", true, "detail");
                              							
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalSim.g:3196:5: ( (lv_rule_8_0= ruleSimMorphFeatureRule ) )
                    // InternalSim.g:3197:6: (lv_rule_8_0= ruleSimMorphFeatureRule )
                    {
                    // InternalSim.g:3197:6: (lv_rule_8_0= ruleSimMorphFeatureRule )
                    // InternalSim.g:3198:7: lv_rule_8_0= ruleSimMorphFeatureRule
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSimAttributeTranspositionAccess().getRuleSimMorphFeatureRuleParserRuleCall_1_1_2_0());
                      						
                    }
                    pushFollow(FOLLOW_47);
                    lv_rule_8_0=ruleSimMorphFeatureRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSimAttributeTranspositionRule());
                      							}
                      							set(
                      								current,
                      								"rule",
                      								lv_rule_8_0,
                      								"com.mimacom.ddd.sm.sim.Sim.SimMorphFeatureRule");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSim.g:3217:4: (otherlv_9= 'ditch' (otherlv_10= 'attribute' | ( (lv_detail_11_0= 'detail' ) ) )? ( (lv_rule_12_0= ruleSimDitchFeatureRule ) ) )
                    {
                    // InternalSim.g:3217:4: (otherlv_9= 'ditch' (otherlv_10= 'attribute' | ( (lv_detail_11_0= 'detail' ) ) )? ( (lv_rule_12_0= ruleSimDitchFeatureRule ) ) )
                    // InternalSim.g:3218:5: otherlv_9= 'ditch' (otherlv_10= 'attribute' | ( (lv_detail_11_0= 'detail' ) ) )? ( (lv_rule_12_0= ruleSimDitchFeatureRule ) )
                    {
                    otherlv_9=(Token)match(input,35,FOLLOW_48); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getSimAttributeTranspositionAccess().getDitchKeyword_1_2_0());
                      				
                    }
                    // InternalSim.g:3222:5: (otherlv_10= 'attribute' | ( (lv_detail_11_0= 'detail' ) ) )?
                    int alt69=3;
                    int LA69_0 = input.LA(1);

                    if ( (LA69_0==45) ) {
                        alt69=1;
                    }
                    else if ( (LA69_0==42) ) {
                        alt69=2;
                    }
                    switch (alt69) {
                        case 1 :
                            // InternalSim.g:3223:6: otherlv_10= 'attribute'
                            {
                            otherlv_10=(Token)match(input,45,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_10, grammarAccess.getSimAttributeTranspositionAccess().getAttributeKeyword_1_2_1_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalSim.g:3228:6: ( (lv_detail_11_0= 'detail' ) )
                            {
                            // InternalSim.g:3228:6: ( (lv_detail_11_0= 'detail' ) )
                            // InternalSim.g:3229:7: (lv_detail_11_0= 'detail' )
                            {
                            // InternalSim.g:3229:7: (lv_detail_11_0= 'detail' )
                            // InternalSim.g:3230:8: lv_detail_11_0= 'detail'
                            {
                            lv_detail_11_0=(Token)match(input,42,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_detail_11_0, grammarAccess.getSimAttributeTranspositionAccess().getDetailDetailKeyword_1_2_1_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getSimAttributeTranspositionRule());
                              								}
                              								setWithLastConsumed(current, "detail", true, "detail");
                              							
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalSim.g:3243:5: ( (lv_rule_12_0= ruleSimDitchFeatureRule ) )
                    // InternalSim.g:3244:6: (lv_rule_12_0= ruleSimDitchFeatureRule )
                    {
                    // InternalSim.g:3244:6: (lv_rule_12_0= ruleSimDitchFeatureRule )
                    // InternalSim.g:3245:7: lv_rule_12_0= ruleSimDitchFeatureRule
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSimAttributeTranspositionAccess().getRuleSimDitchFeatureRuleParserRuleCall_1_2_2_0());
                      						
                    }
                    pushFollow(FOLLOW_47);
                    lv_rule_12_0=ruleSimDitchFeatureRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSimAttributeTranspositionRule());
                      							}
                      							set(
                      								current,
                      								"rule",
                      								lv_rule_12_0,
                      								"com.mimacom.ddd.sm.sim.Sim.SimDitchFeatureRule");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalSim.g:3264:3: ( (lv_description_13_0= ruleDRichText ) )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( ((LA71_0>=RULE_PLAIN_TEXT_ONLY && LA71_0<=RULE_RICH_TEXT_START)) ) {
                alt71=1;
            }
            switch (alt71) {
                case 1 :
                    // InternalSim.g:3265:4: (lv_description_13_0= ruleDRichText )
                    {
                    // InternalSim.g:3265:4: (lv_description_13_0= ruleDRichText )
                    // InternalSim.g:3266:5: lv_description_13_0= ruleDRichText
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimAttributeTranspositionAccess().getDescriptionDRichTextParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_description_13_0=ruleDRichText();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimAttributeTranspositionRule());
                      					}
                      					set(
                      						current,
                      						"description",
                      						lv_description_13_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimAttributeTransposition"


    // $ANTLR start "entryRuleSimQueryTransposition"
    // InternalSim.g:3287:1: entryRuleSimQueryTransposition returns [EObject current=null] : iv_ruleSimQueryTransposition= ruleSimQueryTransposition EOF ;
    public final EObject entryRuleSimQueryTransposition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimQueryTransposition = null;


        try {
            // InternalSim.g:3287:62: (iv_ruleSimQueryTransposition= ruleSimQueryTransposition EOF )
            // InternalSim.g:3288:2: iv_ruleSimQueryTransposition= ruleSimQueryTransposition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimQueryTranspositionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimQueryTransposition=ruleSimQueryTransposition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimQueryTransposition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimQueryTransposition"


    // $ANTLR start "ruleSimQueryTransposition"
    // InternalSim.g:3294:1: ruleSimQueryTransposition returns [EObject current=null] : ( () ( ( ( (otherlv_1= 'grab' otherlv_2= 'query' ( (lv_rule_3_0= ruleSimGrabFeatureRule ) ) ) | (otherlv_4= 'morph' otherlv_5= 'query' ( (lv_rule_6_0= ruleSimMorphFeatureRule ) ) ) ) otherlv_7= '(' (otherlv_8= '*' | ( ( (lv_parameters_9_0= ruleSimQueryParameter ) ) (otherlv_10= ',' ( (lv_parameters_11_0= ruleSimQueryParameter ) ) )* ) ) otherlv_12= ')' ) | (otherlv_13= 'ditch' otherlv_14= 'query' ( (lv_rule_15_0= ruleSimDitchFeatureRule ) ) ) ) ( (lv_description_16_0= ruleDRichText ) )? ( (lv_notes_17_0= ruleDNote ) )* ) ;
    public final EObject ruleSimQueryTransposition() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        EObject lv_rule_3_0 = null;

        EObject lv_rule_6_0 = null;

        EObject lv_parameters_9_0 = null;

        EObject lv_parameters_11_0 = null;

        EObject lv_rule_15_0 = null;

        EObject lv_description_16_0 = null;

        EObject lv_notes_17_0 = null;



        	enterRule();

        try {
            // InternalSim.g:3300:2: ( ( () ( ( ( (otherlv_1= 'grab' otherlv_2= 'query' ( (lv_rule_3_0= ruleSimGrabFeatureRule ) ) ) | (otherlv_4= 'morph' otherlv_5= 'query' ( (lv_rule_6_0= ruleSimMorphFeatureRule ) ) ) ) otherlv_7= '(' (otherlv_8= '*' | ( ( (lv_parameters_9_0= ruleSimQueryParameter ) ) (otherlv_10= ',' ( (lv_parameters_11_0= ruleSimQueryParameter ) ) )* ) ) otherlv_12= ')' ) | (otherlv_13= 'ditch' otherlv_14= 'query' ( (lv_rule_15_0= ruleSimDitchFeatureRule ) ) ) ) ( (lv_description_16_0= ruleDRichText ) )? ( (lv_notes_17_0= ruleDNote ) )* ) )
            // InternalSim.g:3301:2: ( () ( ( ( (otherlv_1= 'grab' otherlv_2= 'query' ( (lv_rule_3_0= ruleSimGrabFeatureRule ) ) ) | (otherlv_4= 'morph' otherlv_5= 'query' ( (lv_rule_6_0= ruleSimMorphFeatureRule ) ) ) ) otherlv_7= '(' (otherlv_8= '*' | ( ( (lv_parameters_9_0= ruleSimQueryParameter ) ) (otherlv_10= ',' ( (lv_parameters_11_0= ruleSimQueryParameter ) ) )* ) ) otherlv_12= ')' ) | (otherlv_13= 'ditch' otherlv_14= 'query' ( (lv_rule_15_0= ruleSimDitchFeatureRule ) ) ) ) ( (lv_description_16_0= ruleDRichText ) )? ( (lv_notes_17_0= ruleDNote ) )* )
            {
            // InternalSim.g:3301:2: ( () ( ( ( (otherlv_1= 'grab' otherlv_2= 'query' ( (lv_rule_3_0= ruleSimGrabFeatureRule ) ) ) | (otherlv_4= 'morph' otherlv_5= 'query' ( (lv_rule_6_0= ruleSimMorphFeatureRule ) ) ) ) otherlv_7= '(' (otherlv_8= '*' | ( ( (lv_parameters_9_0= ruleSimQueryParameter ) ) (otherlv_10= ',' ( (lv_parameters_11_0= ruleSimQueryParameter ) ) )* ) ) otherlv_12= ')' ) | (otherlv_13= 'ditch' otherlv_14= 'query' ( (lv_rule_15_0= ruleSimDitchFeatureRule ) ) ) ) ( (lv_description_16_0= ruleDRichText ) )? ( (lv_notes_17_0= ruleDNote ) )* )
            // InternalSim.g:3302:3: () ( ( ( (otherlv_1= 'grab' otherlv_2= 'query' ( (lv_rule_3_0= ruleSimGrabFeatureRule ) ) ) | (otherlv_4= 'morph' otherlv_5= 'query' ( (lv_rule_6_0= ruleSimMorphFeatureRule ) ) ) ) otherlv_7= '(' (otherlv_8= '*' | ( ( (lv_parameters_9_0= ruleSimQueryParameter ) ) (otherlv_10= ',' ( (lv_parameters_11_0= ruleSimQueryParameter ) ) )* ) ) otherlv_12= ')' ) | (otherlv_13= 'ditch' otherlv_14= 'query' ( (lv_rule_15_0= ruleSimDitchFeatureRule ) ) ) ) ( (lv_description_16_0= ruleDRichText ) )? ( (lv_notes_17_0= ruleDNote ) )*
            {
            // InternalSim.g:3302:3: ()
            // InternalSim.g:3303:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSimQueryTranspositionAccess().getTQueryTranspositionAction_0(),
              					current);
              			
            }

            }

            // InternalSim.g:3309:3: ( ( ( (otherlv_1= 'grab' otherlv_2= 'query' ( (lv_rule_3_0= ruleSimGrabFeatureRule ) ) ) | (otherlv_4= 'morph' otherlv_5= 'query' ( (lv_rule_6_0= ruleSimMorphFeatureRule ) ) ) ) otherlv_7= '(' (otherlv_8= '*' | ( ( (lv_parameters_9_0= ruleSimQueryParameter ) ) (otherlv_10= ',' ( (lv_parameters_11_0= ruleSimQueryParameter ) ) )* ) ) otherlv_12= ')' ) | (otherlv_13= 'ditch' otherlv_14= 'query' ( (lv_rule_15_0= ruleSimDitchFeatureRule ) ) ) )
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==30||LA75_0==40) ) {
                alt75=1;
            }
            else if ( (LA75_0==35) ) {
                alt75=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 75, 0, input);

                throw nvae;
            }
            switch (alt75) {
                case 1 :
                    // InternalSim.g:3310:4: ( ( (otherlv_1= 'grab' otherlv_2= 'query' ( (lv_rule_3_0= ruleSimGrabFeatureRule ) ) ) | (otherlv_4= 'morph' otherlv_5= 'query' ( (lv_rule_6_0= ruleSimMorphFeatureRule ) ) ) ) otherlv_7= '(' (otherlv_8= '*' | ( ( (lv_parameters_9_0= ruleSimQueryParameter ) ) (otherlv_10= ',' ( (lv_parameters_11_0= ruleSimQueryParameter ) ) )* ) ) otherlv_12= ')' )
                    {
                    // InternalSim.g:3310:4: ( ( (otherlv_1= 'grab' otherlv_2= 'query' ( (lv_rule_3_0= ruleSimGrabFeatureRule ) ) ) | (otherlv_4= 'morph' otherlv_5= 'query' ( (lv_rule_6_0= ruleSimMorphFeatureRule ) ) ) ) otherlv_7= '(' (otherlv_8= '*' | ( ( (lv_parameters_9_0= ruleSimQueryParameter ) ) (otherlv_10= ',' ( (lv_parameters_11_0= ruleSimQueryParameter ) ) )* ) ) otherlv_12= ')' )
                    // InternalSim.g:3311:5: ( (otherlv_1= 'grab' otherlv_2= 'query' ( (lv_rule_3_0= ruleSimGrabFeatureRule ) ) ) | (otherlv_4= 'morph' otherlv_5= 'query' ( (lv_rule_6_0= ruleSimMorphFeatureRule ) ) ) ) otherlv_7= '(' (otherlv_8= '*' | ( ( (lv_parameters_9_0= ruleSimQueryParameter ) ) (otherlv_10= ',' ( (lv_parameters_11_0= ruleSimQueryParameter ) ) )* ) ) otherlv_12= ')'
                    {
                    // InternalSim.g:3311:5: ( (otherlv_1= 'grab' otherlv_2= 'query' ( (lv_rule_3_0= ruleSimGrabFeatureRule ) ) ) | (otherlv_4= 'morph' otherlv_5= 'query' ( (lv_rule_6_0= ruleSimMorphFeatureRule ) ) ) )
                    int alt72=2;
                    int LA72_0 = input.LA(1);

                    if ( (LA72_0==30) ) {
                        alt72=1;
                    }
                    else if ( (LA72_0==40) ) {
                        alt72=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 72, 0, input);

                        throw nvae;
                    }
                    switch (alt72) {
                        case 1 :
                            // InternalSim.g:3312:6: (otherlv_1= 'grab' otherlv_2= 'query' ( (lv_rule_3_0= ruleSimGrabFeatureRule ) ) )
                            {
                            // InternalSim.g:3312:6: (otherlv_1= 'grab' otherlv_2= 'query' ( (lv_rule_3_0= ruleSimGrabFeatureRule ) ) )
                            // InternalSim.g:3313:7: otherlv_1= 'grab' otherlv_2= 'query' ( (lv_rule_3_0= ruleSimGrabFeatureRule ) )
                            {
                            otherlv_1=(Token)match(input,30,FOLLOW_26); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_1, grammarAccess.getSimQueryTranspositionAccess().getGrabKeyword_1_0_0_0_0());
                              						
                            }
                            otherlv_2=(Token)match(input,33,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_2, grammarAccess.getSimQueryTranspositionAccess().getQueryKeyword_1_0_0_0_1());
                              						
                            }
                            // InternalSim.g:3321:7: ( (lv_rule_3_0= ruleSimGrabFeatureRule ) )
                            // InternalSim.g:3322:8: (lv_rule_3_0= ruleSimGrabFeatureRule )
                            {
                            // InternalSim.g:3322:8: (lv_rule_3_0= ruleSimGrabFeatureRule )
                            // InternalSim.g:3323:9: lv_rule_3_0= ruleSimGrabFeatureRule
                            {
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getSimQueryTranspositionAccess().getRuleSimGrabFeatureRuleParserRuleCall_1_0_0_0_2_0());
                              								
                            }
                            pushFollow(FOLLOW_49);
                            lv_rule_3_0=ruleSimGrabFeatureRule();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElementForParent(grammarAccess.getSimQueryTranspositionRule());
                              									}
                              									set(
                              										current,
                              										"rule",
                              										lv_rule_3_0,
                              										"com.mimacom.ddd.sm.sim.Sim.SimGrabFeatureRule");
                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalSim.g:3342:6: (otherlv_4= 'morph' otherlv_5= 'query' ( (lv_rule_6_0= ruleSimMorphFeatureRule ) ) )
                            {
                            // InternalSim.g:3342:6: (otherlv_4= 'morph' otherlv_5= 'query' ( (lv_rule_6_0= ruleSimMorphFeatureRule ) ) )
                            // InternalSim.g:3343:7: otherlv_4= 'morph' otherlv_5= 'query' ( (lv_rule_6_0= ruleSimMorphFeatureRule ) )
                            {
                            otherlv_4=(Token)match(input,40,FOLLOW_26); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_4, grammarAccess.getSimQueryTranspositionAccess().getMorphKeyword_1_0_0_1_0());
                              						
                            }
                            otherlv_5=(Token)match(input,33,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_5, grammarAccess.getSimQueryTranspositionAccess().getQueryKeyword_1_0_0_1_1());
                              						
                            }
                            // InternalSim.g:3351:7: ( (lv_rule_6_0= ruleSimMorphFeatureRule ) )
                            // InternalSim.g:3352:8: (lv_rule_6_0= ruleSimMorphFeatureRule )
                            {
                            // InternalSim.g:3352:8: (lv_rule_6_0= ruleSimMorphFeatureRule )
                            // InternalSim.g:3353:9: lv_rule_6_0= ruleSimMorphFeatureRule
                            {
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getSimQueryTranspositionAccess().getRuleSimMorphFeatureRuleParserRuleCall_1_0_0_1_2_0());
                              								
                            }
                            pushFollow(FOLLOW_49);
                            lv_rule_6_0=ruleSimMorphFeatureRule();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElementForParent(grammarAccess.getSimQueryTranspositionRule());
                              									}
                              									set(
                              										current,
                              										"rule",
                              										lv_rule_6_0,
                              										"com.mimacom.ddd.sm.sim.Sim.SimMorphFeatureRule");
                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }


                            }


                            }
                            break;

                    }

                    otherlv_7=(Token)match(input,46,FOLLOW_50); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getSimQueryTranspositionAccess().getLeftParenthesisKeyword_1_0_1());
                      				
                    }
                    // InternalSim.g:3376:5: (otherlv_8= '*' | ( ( (lv_parameters_9_0= ruleSimQueryParameter ) ) (otherlv_10= ',' ( (lv_parameters_11_0= ruleSimQueryParameter ) ) )* ) )
                    int alt74=2;
                    int LA74_0 = input.LA(1);

                    if ( (LA74_0==47) ) {
                        alt74=1;
                    }
                    else if ( (LA74_0==30||LA74_0==32||LA74_0==35||LA74_0==40) ) {
                        alt74=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 74, 0, input);

                        throw nvae;
                    }
                    switch (alt74) {
                        case 1 :
                            // InternalSim.g:3377:6: otherlv_8= '*'
                            {
                            otherlv_8=(Token)match(input,47,FOLLOW_51); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_8, grammarAccess.getSimQueryTranspositionAccess().getAsteriskKeyword_1_0_2_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalSim.g:3382:6: ( ( (lv_parameters_9_0= ruleSimQueryParameter ) ) (otherlv_10= ',' ( (lv_parameters_11_0= ruleSimQueryParameter ) ) )* )
                            {
                            // InternalSim.g:3382:6: ( ( (lv_parameters_9_0= ruleSimQueryParameter ) ) (otherlv_10= ',' ( (lv_parameters_11_0= ruleSimQueryParameter ) ) )* )
                            // InternalSim.g:3383:7: ( (lv_parameters_9_0= ruleSimQueryParameter ) ) (otherlv_10= ',' ( (lv_parameters_11_0= ruleSimQueryParameter ) ) )*
                            {
                            // InternalSim.g:3383:7: ( (lv_parameters_9_0= ruleSimQueryParameter ) )
                            // InternalSim.g:3384:8: (lv_parameters_9_0= ruleSimQueryParameter )
                            {
                            // InternalSim.g:3384:8: (lv_parameters_9_0= ruleSimQueryParameter )
                            // InternalSim.g:3385:9: lv_parameters_9_0= ruleSimQueryParameter
                            {
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getSimQueryTranspositionAccess().getParametersSimQueryParameterParserRuleCall_1_0_2_1_0_0());
                              								
                            }
                            pushFollow(FOLLOW_52);
                            lv_parameters_9_0=ruleSimQueryParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElementForParent(grammarAccess.getSimQueryTranspositionRule());
                              									}
                              									add(
                              										current,
                              										"parameters",
                              										lv_parameters_9_0,
                              										"com.mimacom.ddd.sm.sim.Sim.SimQueryParameter");
                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }

                            // InternalSim.g:3402:7: (otherlv_10= ',' ( (lv_parameters_11_0= ruleSimQueryParameter ) ) )*
                            loop73:
                            do {
                                int alt73=2;
                                int LA73_0 = input.LA(1);

                                if ( (LA73_0==37) ) {
                                    alt73=1;
                                }


                                switch (alt73) {
                            	case 1 :
                            	    // InternalSim.g:3403:8: otherlv_10= ',' ( (lv_parameters_11_0= ruleSimQueryParameter ) )
                            	    {
                            	    otherlv_10=(Token)match(input,37,FOLLOW_50); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								newLeafNode(otherlv_10, grammarAccess.getSimQueryTranspositionAccess().getCommaKeyword_1_0_2_1_1_0());
                            	      							
                            	    }
                            	    // InternalSim.g:3407:8: ( (lv_parameters_11_0= ruleSimQueryParameter ) )
                            	    // InternalSim.g:3408:9: (lv_parameters_11_0= ruleSimQueryParameter )
                            	    {
                            	    // InternalSim.g:3408:9: (lv_parameters_11_0= ruleSimQueryParameter )
                            	    // InternalSim.g:3409:10: lv_parameters_11_0= ruleSimQueryParameter
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      										newCompositeNode(grammarAccess.getSimQueryTranspositionAccess().getParametersSimQueryParameterParserRuleCall_1_0_2_1_1_1_0());
                            	      									
                            	    }
                            	    pushFollow(FOLLOW_52);
                            	    lv_parameters_11_0=ruleSimQueryParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      										if (current==null) {
                            	      											current = createModelElementForParent(grammarAccess.getSimQueryTranspositionRule());
                            	      										}
                            	      										add(
                            	      											current,
                            	      											"parameters",
                            	      											lv_parameters_11_0,
                            	      											"com.mimacom.ddd.sm.sim.Sim.SimQueryParameter");
                            	      										afterParserOrEnumRuleCall();
                            	      									
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop73;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }

                    otherlv_12=(Token)match(input,48,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_12, grammarAccess.getSimQueryTranspositionAccess().getRightParenthesisKeyword_1_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:3435:4: (otherlv_13= 'ditch' otherlv_14= 'query' ( (lv_rule_15_0= ruleSimDitchFeatureRule ) ) )
                    {
                    // InternalSim.g:3435:4: (otherlv_13= 'ditch' otherlv_14= 'query' ( (lv_rule_15_0= ruleSimDitchFeatureRule ) ) )
                    // InternalSim.g:3436:5: otherlv_13= 'ditch' otherlv_14= 'query' ( (lv_rule_15_0= ruleSimDitchFeatureRule ) )
                    {
                    otherlv_13=(Token)match(input,35,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_13, grammarAccess.getSimQueryTranspositionAccess().getDitchKeyword_1_1_0());
                      				
                    }
                    otherlv_14=(Token)match(input,33,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_14, grammarAccess.getSimQueryTranspositionAccess().getQueryKeyword_1_1_1());
                      				
                    }
                    // InternalSim.g:3444:5: ( (lv_rule_15_0= ruleSimDitchFeatureRule ) )
                    // InternalSim.g:3445:6: (lv_rule_15_0= ruleSimDitchFeatureRule )
                    {
                    // InternalSim.g:3445:6: (lv_rule_15_0= ruleSimDitchFeatureRule )
                    // InternalSim.g:3446:7: lv_rule_15_0= ruleSimDitchFeatureRule
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSimQueryTranspositionAccess().getRuleSimDitchFeatureRuleParserRuleCall_1_1_2_0());
                      						
                    }
                    pushFollow(FOLLOW_38);
                    lv_rule_15_0=ruleSimDitchFeatureRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSimQueryTranspositionRule());
                      							}
                      							set(
                      								current,
                      								"rule",
                      								lv_rule_15_0,
                      								"com.mimacom.ddd.sm.sim.Sim.SimDitchFeatureRule");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalSim.g:3465:3: ( (lv_description_16_0= ruleDRichText ) )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( ((LA76_0>=RULE_PLAIN_TEXT_ONLY && LA76_0<=RULE_RICH_TEXT_START)) ) {
                alt76=1;
            }
            switch (alt76) {
                case 1 :
                    // InternalSim.g:3466:4: (lv_description_16_0= ruleDRichText )
                    {
                    // InternalSim.g:3466:4: (lv_description_16_0= ruleDRichText )
                    // InternalSim.g:3467:5: lv_description_16_0= ruleDRichText
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimQueryTranspositionAccess().getDescriptionDRichTextParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_39);
                    lv_description_16_0=ruleDRichText();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimQueryTranspositionRule());
                      					}
                      					set(
                      						current,
                      						"description",
                      						lv_description_16_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:3484:3: ( (lv_notes_17_0= ruleDNote ) )*
            loop77:
            do {
                int alt77=2;
                int LA77_0 = input.LA(1);

                if ( (LA77_0==59) ) {
                    alt77=1;
                }


                switch (alt77) {
            	case 1 :
            	    // InternalSim.g:3485:4: (lv_notes_17_0= ruleDNote )
            	    {
            	    // InternalSim.g:3485:4: (lv_notes_17_0= ruleDNote )
            	    // InternalSim.g:3486:5: lv_notes_17_0= ruleDNote
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSimQueryTranspositionAccess().getNotesDNoteParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_39);
            	    lv_notes_17_0=ruleDNote();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSimQueryTranspositionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"notes",
            	      						lv_notes_17_0,
            	      						"com.mimacom.ddd.dm.dmx.Dmx.DNote");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop77;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimQueryTransposition"


    // $ANTLR start "entryRuleSimQueryParameter"
    // InternalSim.g:3507:1: entryRuleSimQueryParameter returns [EObject current=null] : iv_ruleSimQueryParameter= ruleSimQueryParameter EOF ;
    public final EObject entryRuleSimQueryParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimQueryParameter = null;


        try {
            // InternalSim.g:3507:58: (iv_ruleSimQueryParameter= ruleSimQueryParameter EOF )
            // InternalSim.g:3508:2: iv_ruleSimQueryParameter= ruleSimQueryParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimQueryParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimQueryParameter=ruleSimQueryParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimQueryParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimQueryParameter"


    // $ANTLR start "ruleSimQueryParameter"
    // InternalSim.g:3514:1: ruleSimQueryParameter returns [EObject current=null] : (this_SimQueryParameterTransposition_0= ruleSimQueryParameterTransposition | (otherlv_1= 'add' this_DimQueryParameter_2= ruleDimQueryParameter ) ) ;
    public final EObject ruleSimQueryParameter() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_SimQueryParameterTransposition_0 = null;

        EObject this_DimQueryParameter_2 = null;



        	enterRule();

        try {
            // InternalSim.g:3520:2: ( (this_SimQueryParameterTransposition_0= ruleSimQueryParameterTransposition | (otherlv_1= 'add' this_DimQueryParameter_2= ruleDimQueryParameter ) ) )
            // InternalSim.g:3521:2: (this_SimQueryParameterTransposition_0= ruleSimQueryParameterTransposition | (otherlv_1= 'add' this_DimQueryParameter_2= ruleDimQueryParameter ) )
            {
            // InternalSim.g:3521:2: (this_SimQueryParameterTransposition_0= ruleSimQueryParameterTransposition | (otherlv_1= 'add' this_DimQueryParameter_2= ruleDimQueryParameter ) )
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==30||LA78_0==35||LA78_0==40) ) {
                alt78=1;
            }
            else if ( (LA78_0==32) ) {
                alt78=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 78, 0, input);

                throw nvae;
            }
            switch (alt78) {
                case 1 :
                    // InternalSim.g:3522:3: this_SimQueryParameterTransposition_0= ruleSimQueryParameterTransposition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSimQueryParameterAccess().getSimQueryParameterTranspositionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SimQueryParameterTransposition_0=ruleSimQueryParameterTransposition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SimQueryParameterTransposition_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSim.g:3531:3: (otherlv_1= 'add' this_DimQueryParameter_2= ruleDimQueryParameter )
                    {
                    // InternalSim.g:3531:3: (otherlv_1= 'add' this_DimQueryParameter_2= ruleDimQueryParameter )
                    // InternalSim.g:3532:4: otherlv_1= 'add' this_DimQueryParameter_2= ruleDimQueryParameter
                    {
                    otherlv_1=(Token)match(input,32,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSimQueryParameterAccess().getAddKeyword_1_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSimQueryParameterAccess().getDimQueryParameterParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_DimQueryParameter_2=ruleDimQueryParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_DimQueryParameter_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimQueryParameter"


    // $ANTLR start "entryRuleSimQueryParameterTransposition"
    // InternalSim.g:3549:1: entryRuleSimQueryParameterTransposition returns [EObject current=null] : iv_ruleSimQueryParameterTransposition= ruleSimQueryParameterTransposition EOF ;
    public final EObject entryRuleSimQueryParameterTransposition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimQueryParameterTransposition = null;


        try {
            // InternalSim.g:3549:71: (iv_ruleSimQueryParameterTransposition= ruleSimQueryParameterTransposition EOF )
            // InternalSim.g:3550:2: iv_ruleSimQueryParameterTransposition= ruleSimQueryParameterTransposition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimQueryParameterTranspositionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimQueryParameterTransposition=ruleSimQueryParameterTransposition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimQueryParameterTransposition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimQueryParameterTransposition"


    // $ANTLR start "ruleSimQueryParameterTransposition"
    // InternalSim.g:3556:1: ruleSimQueryParameterTransposition returns [EObject current=null] : ( () ( (otherlv_1= 'grab' ( (lv_rule_2_0= ruleSimGrabQueryParameterRule ) ) ) | (otherlv_3= 'morph' ( (lv_rule_4_0= ruleSimMorphQueryParameterRule ) ) ) | (otherlv_5= 'ditch' ( (lv_rule_6_0= ruleSimDitchQueryParameterRule ) ) ) ) ( (lv_description_7_0= ruleDRichText ) )? ( (lv_notes_8_0= ruleDNote ) )* ) ;
    public final EObject ruleSimQueryParameterTransposition() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_rule_2_0 = null;

        EObject lv_rule_4_0 = null;

        EObject lv_rule_6_0 = null;

        EObject lv_description_7_0 = null;

        EObject lv_notes_8_0 = null;



        	enterRule();

        try {
            // InternalSim.g:3562:2: ( ( () ( (otherlv_1= 'grab' ( (lv_rule_2_0= ruleSimGrabQueryParameterRule ) ) ) | (otherlv_3= 'morph' ( (lv_rule_4_0= ruleSimMorphQueryParameterRule ) ) ) | (otherlv_5= 'ditch' ( (lv_rule_6_0= ruleSimDitchQueryParameterRule ) ) ) ) ( (lv_description_7_0= ruleDRichText ) )? ( (lv_notes_8_0= ruleDNote ) )* ) )
            // InternalSim.g:3563:2: ( () ( (otherlv_1= 'grab' ( (lv_rule_2_0= ruleSimGrabQueryParameterRule ) ) ) | (otherlv_3= 'morph' ( (lv_rule_4_0= ruleSimMorphQueryParameterRule ) ) ) | (otherlv_5= 'ditch' ( (lv_rule_6_0= ruleSimDitchQueryParameterRule ) ) ) ) ( (lv_description_7_0= ruleDRichText ) )? ( (lv_notes_8_0= ruleDNote ) )* )
            {
            // InternalSim.g:3563:2: ( () ( (otherlv_1= 'grab' ( (lv_rule_2_0= ruleSimGrabQueryParameterRule ) ) ) | (otherlv_3= 'morph' ( (lv_rule_4_0= ruleSimMorphQueryParameterRule ) ) ) | (otherlv_5= 'ditch' ( (lv_rule_6_0= ruleSimDitchQueryParameterRule ) ) ) ) ( (lv_description_7_0= ruleDRichText ) )? ( (lv_notes_8_0= ruleDNote ) )* )
            // InternalSim.g:3564:3: () ( (otherlv_1= 'grab' ( (lv_rule_2_0= ruleSimGrabQueryParameterRule ) ) ) | (otherlv_3= 'morph' ( (lv_rule_4_0= ruleSimMorphQueryParameterRule ) ) ) | (otherlv_5= 'ditch' ( (lv_rule_6_0= ruleSimDitchQueryParameterRule ) ) ) ) ( (lv_description_7_0= ruleDRichText ) )? ( (lv_notes_8_0= ruleDNote ) )*
            {
            // InternalSim.g:3564:3: ()
            // InternalSim.g:3565:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSimQueryParameterTranspositionAccess().getTQueryParameterTranspositionAction_0(),
              					current);
              			
            }

            }

            // InternalSim.g:3571:3: ( (otherlv_1= 'grab' ( (lv_rule_2_0= ruleSimGrabQueryParameterRule ) ) ) | (otherlv_3= 'morph' ( (lv_rule_4_0= ruleSimMorphQueryParameterRule ) ) ) | (otherlv_5= 'ditch' ( (lv_rule_6_0= ruleSimDitchQueryParameterRule ) ) ) )
            int alt79=3;
            switch ( input.LA(1) ) {
            case 30:
                {
                alt79=1;
                }
                break;
            case 40:
                {
                alt79=2;
                }
                break;
            case 35:
                {
                alt79=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 79, 0, input);

                throw nvae;
            }

            switch (alt79) {
                case 1 :
                    // InternalSim.g:3572:4: (otherlv_1= 'grab' ( (lv_rule_2_0= ruleSimGrabQueryParameterRule ) ) )
                    {
                    // InternalSim.g:3572:4: (otherlv_1= 'grab' ( (lv_rule_2_0= ruleSimGrabQueryParameterRule ) ) )
                    // InternalSim.g:3573:5: otherlv_1= 'grab' ( (lv_rule_2_0= ruleSimGrabQueryParameterRule ) )
                    {
                    otherlv_1=(Token)match(input,30,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getSimQueryParameterTranspositionAccess().getGrabKeyword_1_0_0());
                      				
                    }
                    // InternalSim.g:3577:5: ( (lv_rule_2_0= ruleSimGrabQueryParameterRule ) )
                    // InternalSim.g:3578:6: (lv_rule_2_0= ruleSimGrabQueryParameterRule )
                    {
                    // InternalSim.g:3578:6: (lv_rule_2_0= ruleSimGrabQueryParameterRule )
                    // InternalSim.g:3579:7: lv_rule_2_0= ruleSimGrabQueryParameterRule
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSimQueryParameterTranspositionAccess().getRuleSimGrabQueryParameterRuleParserRuleCall_1_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_38);
                    lv_rule_2_0=ruleSimGrabQueryParameterRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSimQueryParameterTranspositionRule());
                      							}
                      							set(
                      								current,
                      								"rule",
                      								lv_rule_2_0,
                      								"com.mimacom.ddd.sm.sim.Sim.SimGrabQueryParameterRule");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:3598:4: (otherlv_3= 'morph' ( (lv_rule_4_0= ruleSimMorphQueryParameterRule ) ) )
                    {
                    // InternalSim.g:3598:4: (otherlv_3= 'morph' ( (lv_rule_4_0= ruleSimMorphQueryParameterRule ) ) )
                    // InternalSim.g:3599:5: otherlv_3= 'morph' ( (lv_rule_4_0= ruleSimMorphQueryParameterRule ) )
                    {
                    otherlv_3=(Token)match(input,40,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getSimQueryParameterTranspositionAccess().getMorphKeyword_1_1_0());
                      				
                    }
                    // InternalSim.g:3603:5: ( (lv_rule_4_0= ruleSimMorphQueryParameterRule ) )
                    // InternalSim.g:3604:6: (lv_rule_4_0= ruleSimMorphQueryParameterRule )
                    {
                    // InternalSim.g:3604:6: (lv_rule_4_0= ruleSimMorphQueryParameterRule )
                    // InternalSim.g:3605:7: lv_rule_4_0= ruleSimMorphQueryParameterRule
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSimQueryParameterTranspositionAccess().getRuleSimMorphQueryParameterRuleParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_38);
                    lv_rule_4_0=ruleSimMorphQueryParameterRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSimQueryParameterTranspositionRule());
                      							}
                      							set(
                      								current,
                      								"rule",
                      								lv_rule_4_0,
                      								"com.mimacom.ddd.sm.sim.Sim.SimMorphQueryParameterRule");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSim.g:3624:4: (otherlv_5= 'ditch' ( (lv_rule_6_0= ruleSimDitchQueryParameterRule ) ) )
                    {
                    // InternalSim.g:3624:4: (otherlv_5= 'ditch' ( (lv_rule_6_0= ruleSimDitchQueryParameterRule ) ) )
                    // InternalSim.g:3625:5: otherlv_5= 'ditch' ( (lv_rule_6_0= ruleSimDitchQueryParameterRule ) )
                    {
                    otherlv_5=(Token)match(input,35,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getSimQueryParameterTranspositionAccess().getDitchKeyword_1_2_0());
                      				
                    }
                    // InternalSim.g:3629:5: ( (lv_rule_6_0= ruleSimDitchQueryParameterRule ) )
                    // InternalSim.g:3630:6: (lv_rule_6_0= ruleSimDitchQueryParameterRule )
                    {
                    // InternalSim.g:3630:6: (lv_rule_6_0= ruleSimDitchQueryParameterRule )
                    // InternalSim.g:3631:7: lv_rule_6_0= ruleSimDitchQueryParameterRule
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSimQueryParameterTranspositionAccess().getRuleSimDitchQueryParameterRuleParserRuleCall_1_2_1_0());
                      						
                    }
                    pushFollow(FOLLOW_38);
                    lv_rule_6_0=ruleSimDitchQueryParameterRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSimQueryParameterTranspositionRule());
                      							}
                      							set(
                      								current,
                      								"rule",
                      								lv_rule_6_0,
                      								"com.mimacom.ddd.sm.sim.Sim.SimDitchQueryParameterRule");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalSim.g:3650:3: ( (lv_description_7_0= ruleDRichText ) )?
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( ((LA80_0>=RULE_PLAIN_TEXT_ONLY && LA80_0<=RULE_RICH_TEXT_START)) ) {
                alt80=1;
            }
            switch (alt80) {
                case 1 :
                    // InternalSim.g:3651:4: (lv_description_7_0= ruleDRichText )
                    {
                    // InternalSim.g:3651:4: (lv_description_7_0= ruleDRichText )
                    // InternalSim.g:3652:5: lv_description_7_0= ruleDRichText
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimQueryParameterTranspositionAccess().getDescriptionDRichTextParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_39);
                    lv_description_7_0=ruleDRichText();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimQueryParameterTranspositionRule());
                      					}
                      					set(
                      						current,
                      						"description",
                      						lv_description_7_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:3669:3: ( (lv_notes_8_0= ruleDNote ) )*
            loop81:
            do {
                int alt81=2;
                int LA81_0 = input.LA(1);

                if ( (LA81_0==59) ) {
                    alt81=1;
                }


                switch (alt81) {
            	case 1 :
            	    // InternalSim.g:3670:4: (lv_notes_8_0= ruleDNote )
            	    {
            	    // InternalSim.g:3670:4: (lv_notes_8_0= ruleDNote )
            	    // InternalSim.g:3671:5: lv_notes_8_0= ruleDNote
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSimQueryParameterTranspositionAccess().getNotesDNoteParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_39);
            	    lv_notes_8_0=ruleDNote();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSimQueryParameterTranspositionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"notes",
            	      						lv_notes_8_0,
            	      						"com.mimacom.ddd.dm.dmx.Dmx.DNote");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop81;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimQueryParameterTransposition"


    // $ANTLR start "entryRuleDimAggregate"
    // InternalSim.g:3692:1: entryRuleDimAggregate returns [EObject current=null] : iv_ruleDimAggregate= ruleDimAggregate EOF ;
    public final EObject entryRuleDimAggregate() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDimAggregate = null;


        try {
            // InternalSim.g:3692:53: (iv_ruleDimAggregate= ruleDimAggregate EOF )
            // InternalSim.g:3693:2: iv_ruleDimAggregate= ruleDimAggregate EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDimAggregateRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDimAggregate=ruleDimAggregate();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDimAggregate; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDimAggregate"


    // $ANTLR start "ruleDimAggregate"
    // InternalSim.g:3699:1: ruleDimAggregate returns [EObject current=null] : ( ruleDAggregateKeyword () ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= 'alias' ( (lv_alias_4_0= RULE_ID ) ) )? ( (lv_description_5_0= ruleDRichText ) )? ( (lv_notes_6_0= ruleDNote ) )* otherlv_7= '{' (otherlv_8= 'query' ( (lv_features_9_0= ruleDimQuery ) ) )* ( (lv_types_10_0= ruleDimType ) )* otherlv_11= '}' ) ;
    public final EObject ruleDimAggregate() throws RecognitionException {
        EObject current = null;

        Token lv_name_2_0=null;
        Token otherlv_3=null;
        Token lv_alias_4_0=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_11=null;
        EObject lv_description_5_0 = null;

        EObject lv_notes_6_0 = null;

        EObject lv_features_9_0 = null;

        EObject lv_types_10_0 = null;



        	enterRule();

        try {
            // InternalSim.g:3705:2: ( ( ruleDAggregateKeyword () ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= 'alias' ( (lv_alias_4_0= RULE_ID ) ) )? ( (lv_description_5_0= ruleDRichText ) )? ( (lv_notes_6_0= ruleDNote ) )* otherlv_7= '{' (otherlv_8= 'query' ( (lv_features_9_0= ruleDimQuery ) ) )* ( (lv_types_10_0= ruleDimType ) )* otherlv_11= '}' ) )
            // InternalSim.g:3706:2: ( ruleDAggregateKeyword () ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= 'alias' ( (lv_alias_4_0= RULE_ID ) ) )? ( (lv_description_5_0= ruleDRichText ) )? ( (lv_notes_6_0= ruleDNote ) )* otherlv_7= '{' (otherlv_8= 'query' ( (lv_features_9_0= ruleDimQuery ) ) )* ( (lv_types_10_0= ruleDimType ) )* otherlv_11= '}' )
            {
            // InternalSim.g:3706:2: ( ruleDAggregateKeyword () ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= 'alias' ( (lv_alias_4_0= RULE_ID ) ) )? ( (lv_description_5_0= ruleDRichText ) )? ( (lv_notes_6_0= ruleDNote ) )* otherlv_7= '{' (otherlv_8= 'query' ( (lv_features_9_0= ruleDimQuery ) ) )* ( (lv_types_10_0= ruleDimType ) )* otherlv_11= '}' )
            // InternalSim.g:3707:3: ruleDAggregateKeyword () ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= 'alias' ( (lv_alias_4_0= RULE_ID ) ) )? ( (lv_description_5_0= ruleDRichText ) )? ( (lv_notes_6_0= ruleDNote ) )* otherlv_7= '{' (otherlv_8= 'query' ( (lv_features_9_0= ruleDimQuery ) ) )* ( (lv_types_10_0= ruleDimType ) )* otherlv_11= '}'
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDimAggregateAccess().getDAggregateKeywordParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_3);
            ruleDAggregateKeyword();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSim.g:3714:3: ()
            // InternalSim.g:3715:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDimAggregateAccess().getDimAggregateAction_1(),
              					current);
              			
            }

            }

            // InternalSim.g:3721:3: ( (lv_name_2_0= RULE_ID ) )
            // InternalSim.g:3722:4: (lv_name_2_0= RULE_ID )
            {
            // InternalSim.g:3722:4: (lv_name_2_0= RULE_ID )
            // InternalSim.g:3723:5: lv_name_2_0= RULE_ID
            {
            lv_name_2_0=(Token)match(input,RULE_ID,FOLLOW_53); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_2_0, grammarAccess.getDimAggregateAccess().getNameIDTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDimAggregateRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_2_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.ID");
              				
            }

            }


            }

            // InternalSim.g:3739:3: (otherlv_3= 'alias' ( (lv_alias_4_0= RULE_ID ) ) )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==21) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // InternalSim.g:3740:4: otherlv_3= 'alias' ( (lv_alias_4_0= RULE_ID ) )
                    {
                    otherlv_3=(Token)match(input,21,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getDimAggregateAccess().getAliasKeyword_3_0());
                      			
                    }
                    // InternalSim.g:3744:4: ( (lv_alias_4_0= RULE_ID ) )
                    // InternalSim.g:3745:5: (lv_alias_4_0= RULE_ID )
                    {
                    // InternalSim.g:3745:5: (lv_alias_4_0= RULE_ID )
                    // InternalSim.g:3746:6: lv_alias_4_0= RULE_ID
                    {
                    lv_alias_4_0=(Token)match(input,RULE_ID,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_alias_4_0, grammarAccess.getDimAggregateAccess().getAliasIDTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDimAggregateRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"alias",
                      							lv_alias_4_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.ID");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSim.g:3763:3: ( (lv_description_5_0= ruleDRichText ) )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( ((LA83_0>=RULE_PLAIN_TEXT_ONLY && LA83_0<=RULE_RICH_TEXT_START)) ) {
                alt83=1;
            }
            switch (alt83) {
                case 1 :
                    // InternalSim.g:3764:4: (lv_description_5_0= ruleDRichText )
                    {
                    // InternalSim.g:3764:4: (lv_description_5_0= ruleDRichText )
                    // InternalSim.g:3765:5: lv_description_5_0= ruleDRichText
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDimAggregateAccess().getDescriptionDRichTextParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_11);
                    lv_description_5_0=ruleDRichText();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDimAggregateRule());
                      					}
                      					set(
                      						current,
                      						"description",
                      						lv_description_5_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:3782:3: ( (lv_notes_6_0= ruleDNote ) )*
            loop84:
            do {
                int alt84=2;
                int LA84_0 = input.LA(1);

                if ( (LA84_0==59) ) {
                    alt84=1;
                }


                switch (alt84) {
            	case 1 :
            	    // InternalSim.g:3783:4: (lv_notes_6_0= ruleDNote )
            	    {
            	    // InternalSim.g:3783:4: (lv_notes_6_0= ruleDNote )
            	    // InternalSim.g:3784:5: lv_notes_6_0= ruleDNote
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getDimAggregateAccess().getNotesDNoteParserRuleCall_5_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_notes_6_0=ruleDNote();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getDimAggregateRule());
            	      					}
            	      					add(
            	      						current,
            	      						"notes",
            	      						lv_notes_6_0,
            	      						"com.mimacom.ddd.dm.dmx.Dmx.DNote");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop84;
                }
            } while (true);

            otherlv_7=(Token)match(input,23,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getDimAggregateAccess().getLeftCurlyBracketKeyword_6());
              		
            }
            // InternalSim.g:3805:3: (otherlv_8= 'query' ( (lv_features_9_0= ruleDimQuery ) ) )*
            loop85:
            do {
                int alt85=2;
                int LA85_0 = input.LA(1);

                if ( (LA85_0==33) ) {
                    alt85=1;
                }


                switch (alt85) {
            	case 1 :
            	    // InternalSim.g:3806:4: otherlv_8= 'query' ( (lv_features_9_0= ruleDimQuery ) )
            	    {
            	    otherlv_8=(Token)match(input,33,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_8, grammarAccess.getDimAggregateAccess().getQueryKeyword_7_0());
            	      			
            	    }
            	    // InternalSim.g:3810:4: ( (lv_features_9_0= ruleDimQuery ) )
            	    // InternalSim.g:3811:5: (lv_features_9_0= ruleDimQuery )
            	    {
            	    // InternalSim.g:3811:5: (lv_features_9_0= ruleDimQuery )
            	    // InternalSim.g:3812:6: lv_features_9_0= ruleDimQuery
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getDimAggregateAccess().getFeaturesDimQueryParserRuleCall_7_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_54);
            	    lv_features_9_0=ruleDimQuery();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getDimAggregateRule());
            	      						}
            	      						add(
            	      							current,
            	      							"features",
            	      							lv_features_9_0,
            	      							"com.mimacom.ddd.dm.dim.Dim.DimQuery");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop85;
                }
            } while (true);

            // InternalSim.g:3830:3: ( (lv_types_10_0= ruleDimType ) )*
            loop86:
            do {
                int alt86=2;
                int LA86_0 = input.LA(1);

                if ( (LA86_0==30||(LA86_0>=34 && LA86_0<=36)||(LA86_0>=39 && LA86_0<=42)||(LA86_0>=51 && LA86_0<=52)||(LA86_0>=101 && LA86_0<=102)) ) {
                    alt86=1;
                }


                switch (alt86) {
            	case 1 :
            	    // InternalSim.g:3831:4: (lv_types_10_0= ruleDimType )
            	    {
            	    // InternalSim.g:3831:4: (lv_types_10_0= ruleDimType )
            	    // InternalSim.g:3832:5: lv_types_10_0= ruleDimType
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getDimAggregateAccess().getTypesDimTypeParserRuleCall_8_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_55);
            	    lv_types_10_0=ruleDimType();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getDimAggregateRule());
            	      					}
            	      					add(
            	      						current,
            	      						"types",
            	      						lv_types_10_0,
            	      						"com.mimacom.ddd.sm.sim.Sim.DimType");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop86;
                }
            } while (true);

            otherlv_11=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_11, grammarAccess.getDimAggregateAccess().getRightCurlyBracketKeyword_9());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDimAggregate"


    // $ANTLR start "entryRuleDConstraint"
    // InternalSim.g:3857:1: entryRuleDConstraint returns [EObject current=null] : iv_ruleDConstraint= ruleDConstraint EOF ;
    public final EObject entryRuleDConstraint() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDConstraint = null;


        try {
            // InternalSim.g:3857:52: (iv_ruleDConstraint= ruleDConstraint EOF )
            // InternalSim.g:3858:2: iv_ruleDConstraint= ruleDConstraint EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDConstraintRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDConstraint=ruleDConstraint();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDConstraint; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDConstraint"


    // $ANTLR start "ruleDConstraint"
    // InternalSim.g:3864:1: ruleDConstraint returns [EObject current=null] : (otherlv_0= 'constraint' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'alias' ( (lv_alias_3_0= RULE_ID ) ) )? otherlv_4= ':' ( (lv_predicate_5_0= ruleDExpression ) ) ( (lv_description_6_0= ruleDRichText ) )? ( (lv_notes_7_0= ruleDNote ) )* ) ;
    public final EObject ruleDConstraint() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token lv_alias_3_0=null;
        Token otherlv_4=null;
        EObject lv_predicate_5_0 = null;

        EObject lv_description_6_0 = null;

        EObject lv_notes_7_0 = null;



        	enterRule();

        try {
            // InternalSim.g:3870:2: ( (otherlv_0= 'constraint' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'alias' ( (lv_alias_3_0= RULE_ID ) ) )? otherlv_4= ':' ( (lv_predicate_5_0= ruleDExpression ) ) ( (lv_description_6_0= ruleDRichText ) )? ( (lv_notes_7_0= ruleDNote ) )* ) )
            // InternalSim.g:3871:2: (otherlv_0= 'constraint' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'alias' ( (lv_alias_3_0= RULE_ID ) ) )? otherlv_4= ':' ( (lv_predicate_5_0= ruleDExpression ) ) ( (lv_description_6_0= ruleDRichText ) )? ( (lv_notes_7_0= ruleDNote ) )* )
            {
            // InternalSim.g:3871:2: (otherlv_0= 'constraint' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'alias' ( (lv_alias_3_0= RULE_ID ) ) )? otherlv_4= ':' ( (lv_predicate_5_0= ruleDExpression ) ) ( (lv_description_6_0= ruleDRichText ) )? ( (lv_notes_7_0= ruleDNote ) )* )
            // InternalSim.g:3872:3: otherlv_0= 'constraint' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'alias' ( (lv_alias_3_0= RULE_ID ) ) )? otherlv_4= ':' ( (lv_predicate_5_0= ruleDExpression ) ) ( (lv_description_6_0= ruleDRichText ) )? ( (lv_notes_7_0= ruleDNote ) )*
            {
            otherlv_0=(Token)match(input,49,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDConstraintAccess().getConstraintKeyword_0());
              		
            }
            // InternalSim.g:3876:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalSim.g:3877:4: (lv_name_1_0= RULE_ID )
            {
            // InternalSim.g:3877:4: (lv_name_1_0= RULE_ID )
            // InternalSim.g:3878:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_56); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getDConstraintAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDConstraintRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.ID");
              				
            }

            }


            }

            // InternalSim.g:3894:3: (otherlv_2= 'alias' ( (lv_alias_3_0= RULE_ID ) ) )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==21) ) {
                alt87=1;
            }
            switch (alt87) {
                case 1 :
                    // InternalSim.g:3895:4: otherlv_2= 'alias' ( (lv_alias_3_0= RULE_ID ) )
                    {
                    otherlv_2=(Token)match(input,21,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getDConstraintAccess().getAliasKeyword_2_0());
                      			
                    }
                    // InternalSim.g:3899:4: ( (lv_alias_3_0= RULE_ID ) )
                    // InternalSim.g:3900:5: (lv_alias_3_0= RULE_ID )
                    {
                    // InternalSim.g:3900:5: (lv_alias_3_0= RULE_ID )
                    // InternalSim.g:3901:6: lv_alias_3_0= RULE_ID
                    {
                    lv_alias_3_0=(Token)match(input,RULE_ID,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_alias_3_0, grammarAccess.getDConstraintAccess().getAliasIDTerminalRuleCall_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDConstraintRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"alias",
                      							lv_alias_3_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.ID");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,29,FOLLOW_57); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getDConstraintAccess().getColonKeyword_3());
              		
            }
            // InternalSim.g:3922:3: ( (lv_predicate_5_0= ruleDExpression ) )
            // InternalSim.g:3923:4: (lv_predicate_5_0= ruleDExpression )
            {
            // InternalSim.g:3923:4: (lv_predicate_5_0= ruleDExpression )
            // InternalSim.g:3924:5: lv_predicate_5_0= ruleDExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDConstraintAccess().getPredicateDExpressionParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_38);
            lv_predicate_5_0=ruleDExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDConstraintRule());
              					}
              					set(
              						current,
              						"predicate",
              						lv_predicate_5_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.DExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSim.g:3941:3: ( (lv_description_6_0= ruleDRichText ) )?
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( ((LA88_0>=RULE_PLAIN_TEXT_ONLY && LA88_0<=RULE_RICH_TEXT_START)) ) {
                alt88=1;
            }
            switch (alt88) {
                case 1 :
                    // InternalSim.g:3942:4: (lv_description_6_0= ruleDRichText )
                    {
                    // InternalSim.g:3942:4: (lv_description_6_0= ruleDRichText )
                    // InternalSim.g:3943:5: lv_description_6_0= ruleDRichText
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDConstraintAccess().getDescriptionDRichTextParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_39);
                    lv_description_6_0=ruleDRichText();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDConstraintRule());
                      					}
                      					set(
                      						current,
                      						"description",
                      						lv_description_6_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:3960:3: ( (lv_notes_7_0= ruleDNote ) )*
            loop89:
            do {
                int alt89=2;
                int LA89_0 = input.LA(1);

                if ( (LA89_0==59) ) {
                    alt89=1;
                }


                switch (alt89) {
            	case 1 :
            	    // InternalSim.g:3961:4: (lv_notes_7_0= ruleDNote )
            	    {
            	    // InternalSim.g:3961:4: (lv_notes_7_0= ruleDNote )
            	    // InternalSim.g:3962:5: lv_notes_7_0= ruleDNote
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getDConstraintAccess().getNotesDNoteParserRuleCall_6_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_39);
            	    lv_notes_7_0=ruleDNote();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getDConstraintRule());
            	      					}
            	      					add(
            	      						current,
            	      						"notes",
            	      						lv_notes_7_0,
            	      						"com.mimacom.ddd.dm.dmx.Dmx.DNote");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop89;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDConstraint"


    // $ANTLR start "entryRuleDimPrimitive"
    // InternalSim.g:3983:1: entryRuleDimPrimitive returns [EObject current=null] : iv_ruleDimPrimitive= ruleDimPrimitive EOF ;
    public final EObject entryRuleDimPrimitive() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDimPrimitive = null;


        try {
            // InternalSim.g:3983:53: (iv_ruleDimPrimitive= ruleDimPrimitive EOF )
            // InternalSim.g:3984:2: iv_ruleDimPrimitive= ruleDimPrimitive EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDimPrimitiveRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDimPrimitive=ruleDimPrimitive();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDimPrimitive; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDimPrimitive"


    // $ANTLR start "ruleDimPrimitive"
    // InternalSim.g:3990:1: ruleDimPrimitive returns [EObject current=null] : ( () otherlv_1= 'primitive' ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= 'alias' ( (lv_alias_4_0= RULE_ID ) ) )? otherlv_5= 'redefines' ( (otherlv_6= RULE_ID ) ) ( (lv_description_7_0= ruleDRichText ) )? ( (lv_notes_8_0= ruleDNote ) )* (otherlv_9= '{' ( (lv_constraints_10_0= ruleDConstraint ) )+ otherlv_11= '}' )? ) ;
    public final EObject ruleDimPrimitive() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_name_2_0=null;
        Token otherlv_3=null;
        Token lv_alias_4_0=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        EObject lv_description_7_0 = null;

        EObject lv_notes_8_0 = null;

        EObject lv_constraints_10_0 = null;



        	enterRule();

        try {
            // InternalSim.g:3996:2: ( ( () otherlv_1= 'primitive' ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= 'alias' ( (lv_alias_4_0= RULE_ID ) ) )? otherlv_5= 'redefines' ( (otherlv_6= RULE_ID ) ) ( (lv_description_7_0= ruleDRichText ) )? ( (lv_notes_8_0= ruleDNote ) )* (otherlv_9= '{' ( (lv_constraints_10_0= ruleDConstraint ) )+ otherlv_11= '}' )? ) )
            // InternalSim.g:3997:2: ( () otherlv_1= 'primitive' ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= 'alias' ( (lv_alias_4_0= RULE_ID ) ) )? otherlv_5= 'redefines' ( (otherlv_6= RULE_ID ) ) ( (lv_description_7_0= ruleDRichText ) )? ( (lv_notes_8_0= ruleDNote ) )* (otherlv_9= '{' ( (lv_constraints_10_0= ruleDConstraint ) )+ otherlv_11= '}' )? )
            {
            // InternalSim.g:3997:2: ( () otherlv_1= 'primitive' ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= 'alias' ( (lv_alias_4_0= RULE_ID ) ) )? otherlv_5= 'redefines' ( (otherlv_6= RULE_ID ) ) ( (lv_description_7_0= ruleDRichText ) )? ( (lv_notes_8_0= ruleDNote ) )* (otherlv_9= '{' ( (lv_constraints_10_0= ruleDConstraint ) )+ otherlv_11= '}' )? )
            // InternalSim.g:3998:3: () otherlv_1= 'primitive' ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= 'alias' ( (lv_alias_4_0= RULE_ID ) ) )? otherlv_5= 'redefines' ( (otherlv_6= RULE_ID ) ) ( (lv_description_7_0= ruleDRichText ) )? ( (lv_notes_8_0= ruleDNote ) )* (otherlv_9= '{' ( (lv_constraints_10_0= ruleDConstraint ) )+ otherlv_11= '}' )?
            {
            // InternalSim.g:3998:3: ()
            // InternalSim.g:3999:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDimPrimitiveAccess().getDimPrimitiveAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,34,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getDimPrimitiveAccess().getPrimitiveKeyword_1());
              		
            }
            // InternalSim.g:4009:3: ( (lv_name_2_0= RULE_ID ) )
            // InternalSim.g:4010:4: (lv_name_2_0= RULE_ID )
            {
            // InternalSim.g:4010:4: (lv_name_2_0= RULE_ID )
            // InternalSim.g:4011:5: lv_name_2_0= RULE_ID
            {
            lv_name_2_0=(Token)match(input,RULE_ID,FOLLOW_58); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_2_0, grammarAccess.getDimPrimitiveAccess().getNameIDTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDimPrimitiveRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_2_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.ID");
              				
            }

            }


            }

            // InternalSim.g:4027:3: (otherlv_3= 'alias' ( (lv_alias_4_0= RULE_ID ) ) )?
            int alt90=2;
            int LA90_0 = input.LA(1);

            if ( (LA90_0==21) ) {
                alt90=1;
            }
            switch (alt90) {
                case 1 :
                    // InternalSim.g:4028:4: otherlv_3= 'alias' ( (lv_alias_4_0= RULE_ID ) )
                    {
                    otherlv_3=(Token)match(input,21,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getDimPrimitiveAccess().getAliasKeyword_3_0());
                      			
                    }
                    // InternalSim.g:4032:4: ( (lv_alias_4_0= RULE_ID ) )
                    // InternalSim.g:4033:5: (lv_alias_4_0= RULE_ID )
                    {
                    // InternalSim.g:4033:5: (lv_alias_4_0= RULE_ID )
                    // InternalSim.g:4034:6: lv_alias_4_0= RULE_ID
                    {
                    lv_alias_4_0=(Token)match(input,RULE_ID,FOLLOW_59); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_alias_4_0, grammarAccess.getDimPrimitiveAccess().getAliasIDTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDimPrimitiveRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"alias",
                      							lv_alias_4_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.ID");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,50,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getDimPrimitiveAccess().getRedefinesKeyword_4());
              		
            }
            // InternalSim.g:4055:3: ( (otherlv_6= RULE_ID ) )
            // InternalSim.g:4056:4: (otherlv_6= RULE_ID )
            {
            // InternalSim.g:4056:4: (otherlv_6= RULE_ID )
            // InternalSim.g:4057:5: otherlv_6= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDimPrimitiveRule());
              					}
              				
            }
            otherlv_6=(Token)match(input,RULE_ID,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_6, grammarAccess.getDimPrimitiveAccess().getRedefinesDmxArchetypeCrossReference_5_0());
              				
            }

            }


            }

            // InternalSim.g:4068:3: ( (lv_description_7_0= ruleDRichText ) )?
            int alt91=2;
            int LA91_0 = input.LA(1);

            if ( ((LA91_0>=RULE_PLAIN_TEXT_ONLY && LA91_0<=RULE_RICH_TEXT_START)) ) {
                alt91=1;
            }
            switch (alt91) {
                case 1 :
                    // InternalSim.g:4069:4: (lv_description_7_0= ruleDRichText )
                    {
                    // InternalSim.g:4069:4: (lv_description_7_0= ruleDRichText )
                    // InternalSim.g:4070:5: lv_description_7_0= ruleDRichText
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDimPrimitiveAccess().getDescriptionDRichTextParserRuleCall_6_0());
                      				
                    }
                    pushFollow(FOLLOW_32);
                    lv_description_7_0=ruleDRichText();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDimPrimitiveRule());
                      					}
                      					set(
                      						current,
                      						"description",
                      						lv_description_7_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:4087:3: ( (lv_notes_8_0= ruleDNote ) )*
            loop92:
            do {
                int alt92=2;
                int LA92_0 = input.LA(1);

                if ( (LA92_0==59) ) {
                    alt92=1;
                }


                switch (alt92) {
            	case 1 :
            	    // InternalSim.g:4088:4: (lv_notes_8_0= ruleDNote )
            	    {
            	    // InternalSim.g:4088:4: (lv_notes_8_0= ruleDNote )
            	    // InternalSim.g:4089:5: lv_notes_8_0= ruleDNote
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getDimPrimitiveAccess().getNotesDNoteParserRuleCall_7_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_32);
            	    lv_notes_8_0=ruleDNote();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getDimPrimitiveRule());
            	      					}
            	      					add(
            	      						current,
            	      						"notes",
            	      						lv_notes_8_0,
            	      						"com.mimacom.ddd.dm.dmx.Dmx.DNote");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop92;
                }
            } while (true);

            // InternalSim.g:4106:3: (otherlv_9= '{' ( (lv_constraints_10_0= ruleDConstraint ) )+ otherlv_11= '}' )?
            int alt94=2;
            int LA94_0 = input.LA(1);

            if ( (LA94_0==23) ) {
                alt94=1;
            }
            switch (alt94) {
                case 1 :
                    // InternalSim.g:4107:4: otherlv_9= '{' ( (lv_constraints_10_0= ruleDConstraint ) )+ otherlv_11= '}'
                    {
                    otherlv_9=(Token)match(input,23,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getDimPrimitiveAccess().getLeftCurlyBracketKeyword_8_0());
                      			
                    }
                    // InternalSim.g:4111:4: ( (lv_constraints_10_0= ruleDConstraint ) )+
                    int cnt93=0;
                    loop93:
                    do {
                        int alt93=2;
                        int LA93_0 = input.LA(1);

                        if ( (LA93_0==49) ) {
                            alt93=1;
                        }


                        switch (alt93) {
                    	case 1 :
                    	    // InternalSim.g:4112:5: (lv_constraints_10_0= ruleDConstraint )
                    	    {
                    	    // InternalSim.g:4112:5: (lv_constraints_10_0= ruleDConstraint )
                    	    // InternalSim.g:4113:6: lv_constraints_10_0= ruleDConstraint
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getDimPrimitiveAccess().getConstraintsDConstraintParserRuleCall_8_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_60);
                    	    lv_constraints_10_0=ruleDConstraint();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getDimPrimitiveRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"constraints",
                    	      							lv_constraints_10_0,
                    	      							"com.mimacom.ddd.dm.dim.Dim.DConstraint");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt93 >= 1 ) break loop93;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(93, input);
                                throw eee;
                        }
                        cnt93++;
                    } while (true);

                    otherlv_11=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getDimPrimitiveAccess().getRightCurlyBracketKeyword_8_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDimPrimitive"


    // $ANTLR start "entryRuleDimEnumeration"
    // InternalSim.g:4139:1: entryRuleDimEnumeration returns [EObject current=null] : iv_ruleDimEnumeration= ruleDimEnumeration EOF ;
    public final EObject entryRuleDimEnumeration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDimEnumeration = null;


        try {
            // InternalSim.g:4139:55: (iv_ruleDimEnumeration= ruleDimEnumeration EOF )
            // InternalSim.g:4140:2: iv_ruleDimEnumeration= ruleDimEnumeration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDimEnumerationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDimEnumeration=ruleDimEnumeration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDimEnumeration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDimEnumeration"


    // $ANTLR start "ruleDimEnumeration"
    // InternalSim.g:4146:1: ruleDimEnumeration returns [EObject current=null] : ( () otherlv_1= 'enumeration' ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= 'alias' ( (lv_alias_4_0= RULE_ID ) ) )? ( (lv_description_5_0= ruleDRichText ) )? ( (lv_notes_6_0= ruleDNote ) )* otherlv_7= '{' ( ( (lv_literals_8_0= ruleDimLiteral ) ) (otherlv_9= ',' ( (lv_literals_10_0= ruleDimLiteral ) ) )* )? ( (lv_constraints_11_0= ruleDConstraint ) )* otherlv_12= '}' ) ;
    public final EObject ruleDimEnumeration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_name_2_0=null;
        Token otherlv_3=null;
        Token lv_alias_4_0=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_12=null;
        EObject lv_description_5_0 = null;

        EObject lv_notes_6_0 = null;

        EObject lv_literals_8_0 = null;

        EObject lv_literals_10_0 = null;

        EObject lv_constraints_11_0 = null;



        	enterRule();

        try {
            // InternalSim.g:4152:2: ( ( () otherlv_1= 'enumeration' ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= 'alias' ( (lv_alias_4_0= RULE_ID ) ) )? ( (lv_description_5_0= ruleDRichText ) )? ( (lv_notes_6_0= ruleDNote ) )* otherlv_7= '{' ( ( (lv_literals_8_0= ruleDimLiteral ) ) (otherlv_9= ',' ( (lv_literals_10_0= ruleDimLiteral ) ) )* )? ( (lv_constraints_11_0= ruleDConstraint ) )* otherlv_12= '}' ) )
            // InternalSim.g:4153:2: ( () otherlv_1= 'enumeration' ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= 'alias' ( (lv_alias_4_0= RULE_ID ) ) )? ( (lv_description_5_0= ruleDRichText ) )? ( (lv_notes_6_0= ruleDNote ) )* otherlv_7= '{' ( ( (lv_literals_8_0= ruleDimLiteral ) ) (otherlv_9= ',' ( (lv_literals_10_0= ruleDimLiteral ) ) )* )? ( (lv_constraints_11_0= ruleDConstraint ) )* otherlv_12= '}' )
            {
            // InternalSim.g:4153:2: ( () otherlv_1= 'enumeration' ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= 'alias' ( (lv_alias_4_0= RULE_ID ) ) )? ( (lv_description_5_0= ruleDRichText ) )? ( (lv_notes_6_0= ruleDNote ) )* otherlv_7= '{' ( ( (lv_literals_8_0= ruleDimLiteral ) ) (otherlv_9= ',' ( (lv_literals_10_0= ruleDimLiteral ) ) )* )? ( (lv_constraints_11_0= ruleDConstraint ) )* otherlv_12= '}' )
            // InternalSim.g:4154:3: () otherlv_1= 'enumeration' ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= 'alias' ( (lv_alias_4_0= RULE_ID ) ) )? ( (lv_description_5_0= ruleDRichText ) )? ( (lv_notes_6_0= ruleDNote ) )* otherlv_7= '{' ( ( (lv_literals_8_0= ruleDimLiteral ) ) (otherlv_9= ',' ( (lv_literals_10_0= ruleDimLiteral ) ) )* )? ( (lv_constraints_11_0= ruleDConstraint ) )* otherlv_12= '}'
            {
            // InternalSim.g:4154:3: ()
            // InternalSim.g:4155:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDimEnumerationAccess().getDimEnumerationAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,36,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getDimEnumerationAccess().getEnumerationKeyword_1());
              		
            }
            // InternalSim.g:4165:3: ( (lv_name_2_0= RULE_ID ) )
            // InternalSim.g:4166:4: (lv_name_2_0= RULE_ID )
            {
            // InternalSim.g:4166:4: (lv_name_2_0= RULE_ID )
            // InternalSim.g:4167:5: lv_name_2_0= RULE_ID
            {
            lv_name_2_0=(Token)match(input,RULE_ID,FOLLOW_53); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_2_0, grammarAccess.getDimEnumerationAccess().getNameIDTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDimEnumerationRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_2_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.ID");
              				
            }

            }


            }

            // InternalSim.g:4183:3: (otherlv_3= 'alias' ( (lv_alias_4_0= RULE_ID ) ) )?
            int alt95=2;
            int LA95_0 = input.LA(1);

            if ( (LA95_0==21) ) {
                alt95=1;
            }
            switch (alt95) {
                case 1 :
                    // InternalSim.g:4184:4: otherlv_3= 'alias' ( (lv_alias_4_0= RULE_ID ) )
                    {
                    otherlv_3=(Token)match(input,21,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getDimEnumerationAccess().getAliasKeyword_3_0());
                      			
                    }
                    // InternalSim.g:4188:4: ( (lv_alias_4_0= RULE_ID ) )
                    // InternalSim.g:4189:5: (lv_alias_4_0= RULE_ID )
                    {
                    // InternalSim.g:4189:5: (lv_alias_4_0= RULE_ID )
                    // InternalSim.g:4190:6: lv_alias_4_0= RULE_ID
                    {
                    lv_alias_4_0=(Token)match(input,RULE_ID,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_alias_4_0, grammarAccess.getDimEnumerationAccess().getAliasIDTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDimEnumerationRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"alias",
                      							lv_alias_4_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.ID");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSim.g:4207:3: ( (lv_description_5_0= ruleDRichText ) )?
            int alt96=2;
            int LA96_0 = input.LA(1);

            if ( ((LA96_0>=RULE_PLAIN_TEXT_ONLY && LA96_0<=RULE_RICH_TEXT_START)) ) {
                alt96=1;
            }
            switch (alt96) {
                case 1 :
                    // InternalSim.g:4208:4: (lv_description_5_0= ruleDRichText )
                    {
                    // InternalSim.g:4208:4: (lv_description_5_0= ruleDRichText )
                    // InternalSim.g:4209:5: lv_description_5_0= ruleDRichText
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDimEnumerationAccess().getDescriptionDRichTextParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_11);
                    lv_description_5_0=ruleDRichText();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDimEnumerationRule());
                      					}
                      					set(
                      						current,
                      						"description",
                      						lv_description_5_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:4226:3: ( (lv_notes_6_0= ruleDNote ) )*
            loop97:
            do {
                int alt97=2;
                int LA97_0 = input.LA(1);

                if ( (LA97_0==59) ) {
                    alt97=1;
                }


                switch (alt97) {
            	case 1 :
            	    // InternalSim.g:4227:4: (lv_notes_6_0= ruleDNote )
            	    {
            	    // InternalSim.g:4227:4: (lv_notes_6_0= ruleDNote )
            	    // InternalSim.g:4228:5: lv_notes_6_0= ruleDNote
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getDimEnumerationAccess().getNotesDNoteParserRuleCall_5_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_notes_6_0=ruleDNote();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getDimEnumerationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"notes",
            	      						lv_notes_6_0,
            	      						"com.mimacom.ddd.dm.dmx.Dmx.DNote");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop97;
                }
            } while (true);

            otherlv_7=(Token)match(input,23,FOLLOW_61); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getDimEnumerationAccess().getLeftCurlyBracketKeyword_6());
              		
            }
            // InternalSim.g:4249:3: ( ( (lv_literals_8_0= ruleDimLiteral ) ) (otherlv_9= ',' ( (lv_literals_10_0= ruleDimLiteral ) ) )* )?
            int alt99=2;
            int LA99_0 = input.LA(1);

            if ( (LA99_0==RULE_ID) ) {
                alt99=1;
            }
            switch (alt99) {
                case 1 :
                    // InternalSim.g:4250:4: ( (lv_literals_8_0= ruleDimLiteral ) ) (otherlv_9= ',' ( (lv_literals_10_0= ruleDimLiteral ) ) )*
                    {
                    // InternalSim.g:4250:4: ( (lv_literals_8_0= ruleDimLiteral ) )
                    // InternalSim.g:4251:5: (lv_literals_8_0= ruleDimLiteral )
                    {
                    // InternalSim.g:4251:5: (lv_literals_8_0= ruleDimLiteral )
                    // InternalSim.g:4252:6: lv_literals_8_0= ruleDimLiteral
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDimEnumerationAccess().getLiteralsDimLiteralParserRuleCall_7_0_0());
                      					
                    }
                    pushFollow(FOLLOW_62);
                    lv_literals_8_0=ruleDimLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDimEnumerationRule());
                      						}
                      						add(
                      							current,
                      							"literals",
                      							lv_literals_8_0,
                      							"com.mimacom.ddd.dm.dim.Dim.DimLiteral");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSim.g:4269:4: (otherlv_9= ',' ( (lv_literals_10_0= ruleDimLiteral ) ) )*
                    loop98:
                    do {
                        int alt98=2;
                        int LA98_0 = input.LA(1);

                        if ( (LA98_0==37) ) {
                            alt98=1;
                        }


                        switch (alt98) {
                    	case 1 :
                    	    // InternalSim.g:4270:5: otherlv_9= ',' ( (lv_literals_10_0= ruleDimLiteral ) )
                    	    {
                    	    otherlv_9=(Token)match(input,37,FOLLOW_3); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_9, grammarAccess.getDimEnumerationAccess().getCommaKeyword_7_1_0());
                    	      				
                    	    }
                    	    // InternalSim.g:4274:5: ( (lv_literals_10_0= ruleDimLiteral ) )
                    	    // InternalSim.g:4275:6: (lv_literals_10_0= ruleDimLiteral )
                    	    {
                    	    // InternalSim.g:4275:6: (lv_literals_10_0= ruleDimLiteral )
                    	    // InternalSim.g:4276:7: lv_literals_10_0= ruleDimLiteral
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getDimEnumerationAccess().getLiteralsDimLiteralParserRuleCall_7_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_62);
                    	    lv_literals_10_0=ruleDimLiteral();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getDimEnumerationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"literals",
                    	      								lv_literals_10_0,
                    	      								"com.mimacom.ddd.dm.dim.Dim.DimLiteral");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop98;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalSim.g:4295:3: ( (lv_constraints_11_0= ruleDConstraint ) )*
            loop100:
            do {
                int alt100=2;
                int LA100_0 = input.LA(1);

                if ( (LA100_0==49) ) {
                    alt100=1;
                }


                switch (alt100) {
            	case 1 :
            	    // InternalSim.g:4296:4: (lv_constraints_11_0= ruleDConstraint )
            	    {
            	    // InternalSim.g:4296:4: (lv_constraints_11_0= ruleDConstraint )
            	    // InternalSim.g:4297:5: lv_constraints_11_0= ruleDConstraint
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getDimEnumerationAccess().getConstraintsDConstraintParserRuleCall_8_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_60);
            	    lv_constraints_11_0=ruleDConstraint();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getDimEnumerationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"constraints",
            	      						lv_constraints_11_0,
            	      						"com.mimacom.ddd.dm.dim.Dim.DConstraint");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop100;
                }
            } while (true);

            otherlv_12=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getDimEnumerationAccess().getRightCurlyBracketKeyword_9());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDimEnumeration"


    // $ANTLR start "entryRuleDimLiteral"
    // InternalSim.g:4322:1: entryRuleDimLiteral returns [EObject current=null] : iv_ruleDimLiteral= ruleDimLiteral EOF ;
    public final EObject entryRuleDimLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDimLiteral = null;


        try {
            // InternalSim.g:4322:51: (iv_ruleDimLiteral= ruleDimLiteral EOF )
            // InternalSim.g:4323:2: iv_ruleDimLiteral= ruleDimLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDimLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDimLiteral=ruleDimLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDimLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDimLiteral"


    // $ANTLR start "ruleDimLiteral"
    // InternalSim.g:4329:1: ruleDimLiteral returns [EObject current=null] : ( () ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'alias' ( (lv_alias_3_0= RULE_ID ) ) )? ( (lv_description_4_0= ruleDRichText ) )? ( (lv_notes_5_0= ruleDNote ) )* ) ;
    public final EObject ruleDimLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token lv_alias_3_0=null;
        EObject lv_description_4_0 = null;

        EObject lv_notes_5_0 = null;



        	enterRule();

        try {
            // InternalSim.g:4335:2: ( ( () ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'alias' ( (lv_alias_3_0= RULE_ID ) ) )? ( (lv_description_4_0= ruleDRichText ) )? ( (lv_notes_5_0= ruleDNote ) )* ) )
            // InternalSim.g:4336:2: ( () ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'alias' ( (lv_alias_3_0= RULE_ID ) ) )? ( (lv_description_4_0= ruleDRichText ) )? ( (lv_notes_5_0= ruleDNote ) )* )
            {
            // InternalSim.g:4336:2: ( () ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'alias' ( (lv_alias_3_0= RULE_ID ) ) )? ( (lv_description_4_0= ruleDRichText ) )? ( (lv_notes_5_0= ruleDNote ) )* )
            // InternalSim.g:4337:3: () ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'alias' ( (lv_alias_3_0= RULE_ID ) ) )? ( (lv_description_4_0= ruleDRichText ) )? ( (lv_notes_5_0= ruleDNote ) )*
            {
            // InternalSim.g:4337:3: ()
            // InternalSim.g:4338:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDimLiteralAccess().getDimLiteralAction_0(),
              					current);
              			
            }

            }

            // InternalSim.g:4344:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalSim.g:4345:4: (lv_name_1_0= RULE_ID )
            {
            // InternalSim.g:4345:4: (lv_name_1_0= RULE_ID )
            // InternalSim.g:4346:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_63); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getDimLiteralAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDimLiteralRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.ID");
              				
            }

            }


            }

            // InternalSim.g:4362:3: (otherlv_2= 'alias' ( (lv_alias_3_0= RULE_ID ) ) )?
            int alt101=2;
            int LA101_0 = input.LA(1);

            if ( (LA101_0==21) ) {
                alt101=1;
            }
            switch (alt101) {
                case 1 :
                    // InternalSim.g:4363:4: otherlv_2= 'alias' ( (lv_alias_3_0= RULE_ID ) )
                    {
                    otherlv_2=(Token)match(input,21,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getDimLiteralAccess().getAliasKeyword_2_0());
                      			
                    }
                    // InternalSim.g:4367:4: ( (lv_alias_3_0= RULE_ID ) )
                    // InternalSim.g:4368:5: (lv_alias_3_0= RULE_ID )
                    {
                    // InternalSim.g:4368:5: (lv_alias_3_0= RULE_ID )
                    // InternalSim.g:4369:6: lv_alias_3_0= RULE_ID
                    {
                    lv_alias_3_0=(Token)match(input,RULE_ID,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_alias_3_0, grammarAccess.getDimLiteralAccess().getAliasIDTerminalRuleCall_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDimLiteralRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"alias",
                      							lv_alias_3_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.ID");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSim.g:4386:3: ( (lv_description_4_0= ruleDRichText ) )?
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( ((LA102_0>=RULE_PLAIN_TEXT_ONLY && LA102_0<=RULE_RICH_TEXT_START)) ) {
                alt102=1;
            }
            switch (alt102) {
                case 1 :
                    // InternalSim.g:4387:4: (lv_description_4_0= ruleDRichText )
                    {
                    // InternalSim.g:4387:4: (lv_description_4_0= ruleDRichText )
                    // InternalSim.g:4388:5: lv_description_4_0= ruleDRichText
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDimLiteralAccess().getDescriptionDRichTextParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_39);
                    lv_description_4_0=ruleDRichText();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDimLiteralRule());
                      					}
                      					set(
                      						current,
                      						"description",
                      						lv_description_4_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:4405:3: ( (lv_notes_5_0= ruleDNote ) )*
            loop103:
            do {
                int alt103=2;
                int LA103_0 = input.LA(1);

                if ( (LA103_0==59) ) {
                    alt103=1;
                }


                switch (alt103) {
            	case 1 :
            	    // InternalSim.g:4406:4: (lv_notes_5_0= ruleDNote )
            	    {
            	    // InternalSim.g:4406:4: (lv_notes_5_0= ruleDNote )
            	    // InternalSim.g:4407:5: lv_notes_5_0= ruleDNote
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getDimLiteralAccess().getNotesDNoteParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_39);
            	    lv_notes_5_0=ruleDNote();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getDimLiteralRule());
            	      					}
            	      					add(
            	      						current,
            	      						"notes",
            	      						lv_notes_5_0,
            	      						"com.mimacom.ddd.dm.dmx.Dmx.DNote");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop103;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDimLiteral"


    // $ANTLR start "entryRuleDimEntityType"
    // InternalSim.g:4428:1: entryRuleDimEntityType returns [EObject current=null] : iv_ruleDimEntityType= ruleDimEntityType EOF ;
    public final EObject entryRuleDimEntityType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDimEntityType = null;


        try {
            // InternalSim.g:4428:54: (iv_ruleDimEntityType= ruleDimEntityType EOF )
            // InternalSim.g:4429:2: iv_ruleDimEntityType= ruleDimEntityType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDimEntityTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDimEntityType=ruleDimEntityType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDimEntityType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDimEntityType"


    // $ANTLR start "ruleDimEntityType"
    // InternalSim.g:4435:1: ruleDimEntityType returns [EObject current=null] : ( () ( (lv_abstract_1_0= 'abstract' ) )? ( (lv_root_2_0= 'main' ) )? (otherlv_3= 'entity' | ( ( (lv_nature_4_0= ruleDEntityNatureAutonomous ) ) otherlv_5= 'entity' ) | ( (lv_nature_6_0= ruleDEntityNatureRelationship ) ) ) this_DimComplexType_7= ruleDimComplexType[$current] otherlv_8= '{' (otherlv_9= 'states' otherlv_10= '{' ( (lv_states_11_0= ruleDState ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleDState ) ) )* otherlv_14= '}' (otherlv_15= 'events' otherlv_16= '{' ( (lv_events_17_0= ruleDStateEvent ) ) (otherlv_18= ',' ( (lv_events_19_0= ruleDStateEvent ) ) )* otherlv_20= '}' )? )? ( ( (lv_features_21_0= ruleDimFeature ) ) | ( (lv_constraints_22_0= ruleDConstraint ) ) )* otherlv_23= '}' ) ;
    public final EObject ruleDimEntityType() throws RecognitionException {
        EObject current = null;

        Token lv_abstract_1_0=null;
        Token lv_root_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_23=null;
        Enumerator lv_nature_4_0 = null;

        Enumerator lv_nature_6_0 = null;

        EObject this_DimComplexType_7 = null;

        EObject lv_states_11_0 = null;

        EObject lv_states_13_0 = null;

        EObject lv_events_17_0 = null;

        EObject lv_events_19_0 = null;

        EObject lv_features_21_0 = null;

        EObject lv_constraints_22_0 = null;



        	enterRule();

        try {
            // InternalSim.g:4441:2: ( ( () ( (lv_abstract_1_0= 'abstract' ) )? ( (lv_root_2_0= 'main' ) )? (otherlv_3= 'entity' | ( ( (lv_nature_4_0= ruleDEntityNatureAutonomous ) ) otherlv_5= 'entity' ) | ( (lv_nature_6_0= ruleDEntityNatureRelationship ) ) ) this_DimComplexType_7= ruleDimComplexType[$current] otherlv_8= '{' (otherlv_9= 'states' otherlv_10= '{' ( (lv_states_11_0= ruleDState ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleDState ) ) )* otherlv_14= '}' (otherlv_15= 'events' otherlv_16= '{' ( (lv_events_17_0= ruleDStateEvent ) ) (otherlv_18= ',' ( (lv_events_19_0= ruleDStateEvent ) ) )* otherlv_20= '}' )? )? ( ( (lv_features_21_0= ruleDimFeature ) ) | ( (lv_constraints_22_0= ruleDConstraint ) ) )* otherlv_23= '}' ) )
            // InternalSim.g:4442:2: ( () ( (lv_abstract_1_0= 'abstract' ) )? ( (lv_root_2_0= 'main' ) )? (otherlv_3= 'entity' | ( ( (lv_nature_4_0= ruleDEntityNatureAutonomous ) ) otherlv_5= 'entity' ) | ( (lv_nature_6_0= ruleDEntityNatureRelationship ) ) ) this_DimComplexType_7= ruleDimComplexType[$current] otherlv_8= '{' (otherlv_9= 'states' otherlv_10= '{' ( (lv_states_11_0= ruleDState ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleDState ) ) )* otherlv_14= '}' (otherlv_15= 'events' otherlv_16= '{' ( (lv_events_17_0= ruleDStateEvent ) ) (otherlv_18= ',' ( (lv_events_19_0= ruleDStateEvent ) ) )* otherlv_20= '}' )? )? ( ( (lv_features_21_0= ruleDimFeature ) ) | ( (lv_constraints_22_0= ruleDConstraint ) ) )* otherlv_23= '}' )
            {
            // InternalSim.g:4442:2: ( () ( (lv_abstract_1_0= 'abstract' ) )? ( (lv_root_2_0= 'main' ) )? (otherlv_3= 'entity' | ( ( (lv_nature_4_0= ruleDEntityNatureAutonomous ) ) otherlv_5= 'entity' ) | ( (lv_nature_6_0= ruleDEntityNatureRelationship ) ) ) this_DimComplexType_7= ruleDimComplexType[$current] otherlv_8= '{' (otherlv_9= 'states' otherlv_10= '{' ( (lv_states_11_0= ruleDState ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleDState ) ) )* otherlv_14= '}' (otherlv_15= 'events' otherlv_16= '{' ( (lv_events_17_0= ruleDStateEvent ) ) (otherlv_18= ',' ( (lv_events_19_0= ruleDStateEvent ) ) )* otherlv_20= '}' )? )? ( ( (lv_features_21_0= ruleDimFeature ) ) | ( (lv_constraints_22_0= ruleDConstraint ) ) )* otherlv_23= '}' )
            // InternalSim.g:4443:3: () ( (lv_abstract_1_0= 'abstract' ) )? ( (lv_root_2_0= 'main' ) )? (otherlv_3= 'entity' | ( ( (lv_nature_4_0= ruleDEntityNatureAutonomous ) ) otherlv_5= 'entity' ) | ( (lv_nature_6_0= ruleDEntityNatureRelationship ) ) ) this_DimComplexType_7= ruleDimComplexType[$current] otherlv_8= '{' (otherlv_9= 'states' otherlv_10= '{' ( (lv_states_11_0= ruleDState ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleDState ) ) )* otherlv_14= '}' (otherlv_15= 'events' otherlv_16= '{' ( (lv_events_17_0= ruleDStateEvent ) ) (otherlv_18= ',' ( (lv_events_19_0= ruleDStateEvent ) ) )* otherlv_20= '}' )? )? ( ( (lv_features_21_0= ruleDimFeature ) ) | ( (lv_constraints_22_0= ruleDConstraint ) ) )* otherlv_23= '}'
            {
            // InternalSim.g:4443:3: ()
            // InternalSim.g:4444:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDimEntityTypeAccess().getDimEntityTypeAction_0(),
              					current);
              			
            }

            }

            // InternalSim.g:4450:3: ( (lv_abstract_1_0= 'abstract' ) )?
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( (LA104_0==51) ) {
                alt104=1;
            }
            switch (alt104) {
                case 1 :
                    // InternalSim.g:4451:4: (lv_abstract_1_0= 'abstract' )
                    {
                    // InternalSim.g:4451:4: (lv_abstract_1_0= 'abstract' )
                    // InternalSim.g:4452:5: lv_abstract_1_0= 'abstract'
                    {
                    lv_abstract_1_0=(Token)match(input,51,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_abstract_1_0, grammarAccess.getDimEntityTypeAccess().getAbstractAbstractKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDimEntityTypeRule());
                      					}
                      					setWithLastConsumed(current, "abstract", true, "abstract");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:4464:3: ( (lv_root_2_0= 'main' ) )?
            int alt105=2;
            int LA105_0 = input.LA(1);

            if ( (LA105_0==52) ) {
                alt105=1;
            }
            switch (alt105) {
                case 1 :
                    // InternalSim.g:4465:4: (lv_root_2_0= 'main' )
                    {
                    // InternalSim.g:4465:4: (lv_root_2_0= 'main' )
                    // InternalSim.g:4466:5: lv_root_2_0= 'main'
                    {
                    lv_root_2_0=(Token)match(input,52,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_root_2_0, grammarAccess.getDimEntityTypeAccess().getRootMainKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDimEntityTypeRule());
                      					}
                      					setWithLastConsumed(current, "root", true, "main");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:4478:3: (otherlv_3= 'entity' | ( ( (lv_nature_4_0= ruleDEntityNatureAutonomous ) ) otherlv_5= 'entity' ) | ( (lv_nature_6_0= ruleDEntityNatureRelationship ) ) )
            int alt106=3;
            switch ( input.LA(1) ) {
            case 39:
                {
                alt106=1;
                }
                break;
            case 101:
                {
                alt106=2;
                }
                break;
            case 102:
                {
                alt106=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 106, 0, input);

                throw nvae;
            }

            switch (alt106) {
                case 1 :
                    // InternalSim.g:4479:4: otherlv_3= 'entity'
                    {
                    otherlv_3=(Token)match(input,39,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getDimEntityTypeAccess().getEntityKeyword_3_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalSim.g:4484:4: ( ( (lv_nature_4_0= ruleDEntityNatureAutonomous ) ) otherlv_5= 'entity' )
                    {
                    // InternalSim.g:4484:4: ( ( (lv_nature_4_0= ruleDEntityNatureAutonomous ) ) otherlv_5= 'entity' )
                    // InternalSim.g:4485:5: ( (lv_nature_4_0= ruleDEntityNatureAutonomous ) ) otherlv_5= 'entity'
                    {
                    // InternalSim.g:4485:5: ( (lv_nature_4_0= ruleDEntityNatureAutonomous ) )
                    // InternalSim.g:4486:6: (lv_nature_4_0= ruleDEntityNatureAutonomous )
                    {
                    // InternalSim.g:4486:6: (lv_nature_4_0= ruleDEntityNatureAutonomous )
                    // InternalSim.g:4487:7: lv_nature_4_0= ruleDEntityNatureAutonomous
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getDimEntityTypeAccess().getNatureDEntityNatureAutonomousEnumRuleCall_3_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_41);
                    lv_nature_4_0=ruleDEntityNatureAutonomous();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getDimEntityTypeRule());
                      							}
                      							set(
                      								current,
                      								"nature",
                      								lv_nature_4_0,
                      								"com.mimacom.ddd.dm.dim.Dim.DEntityNatureAutonomous");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,39,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getDimEntityTypeAccess().getEntityKeyword_3_1_1());
                      				
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSim.g:4510:4: ( (lv_nature_6_0= ruleDEntityNatureRelationship ) )
                    {
                    // InternalSim.g:4510:4: ( (lv_nature_6_0= ruleDEntityNatureRelationship ) )
                    // InternalSim.g:4511:5: (lv_nature_6_0= ruleDEntityNatureRelationship )
                    {
                    // InternalSim.g:4511:5: (lv_nature_6_0= ruleDEntityNatureRelationship )
                    // InternalSim.g:4512:6: lv_nature_6_0= ruleDEntityNatureRelationship
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDimEntityTypeAccess().getNatureDEntityNatureRelationshipEnumRuleCall_3_2_0());
                      					
                    }
                    pushFollow(FOLLOW_3);
                    lv_nature_6_0=ruleDEntityNatureRelationship();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDimEntityTypeRule());
                      						}
                      						set(
                      							current,
                      							"nature",
                      							lv_nature_6_0,
                      							"com.mimacom.ddd.dm.dim.Dim.DEntityNatureRelationship");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getDimEntityTypeRule());
              			}
              			newCompositeNode(grammarAccess.getDimEntityTypeAccess().getDimComplexTypeParserRuleCall_4());
              		
            }
            pushFollow(FOLLOW_64);
            this_DimComplexType_7=ruleDimComplexType(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_DimComplexType_7;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_8=(Token)match(input,23,FOLLOW_65); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getDimEntityTypeAccess().getLeftCurlyBracketKeyword_5());
              		
            }
            // InternalSim.g:4545:3: (otherlv_9= 'states' otherlv_10= '{' ( (lv_states_11_0= ruleDState ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleDState ) ) )* otherlv_14= '}' (otherlv_15= 'events' otherlv_16= '{' ( (lv_events_17_0= ruleDStateEvent ) ) (otherlv_18= ',' ( (lv_events_19_0= ruleDStateEvent ) ) )* otherlv_20= '}' )? )?
            int alt110=2;
            int LA110_0 = input.LA(1);

            if ( (LA110_0==53) ) {
                alt110=1;
            }
            switch (alt110) {
                case 1 :
                    // InternalSim.g:4546:4: otherlv_9= 'states' otherlv_10= '{' ( (lv_states_11_0= ruleDState ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleDState ) ) )* otherlv_14= '}' (otherlv_15= 'events' otherlv_16= '{' ( (lv_events_17_0= ruleDStateEvent ) ) (otherlv_18= ',' ( (lv_events_19_0= ruleDStateEvent ) ) )* otherlv_20= '}' )?
                    {
                    otherlv_9=(Token)match(input,53,FOLLOW_64); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getDimEntityTypeAccess().getStatesKeyword_6_0());
                      			
                    }
                    otherlv_10=(Token)match(input,23,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getDimEntityTypeAccess().getLeftCurlyBracketKeyword_6_1());
                      			
                    }
                    // InternalSim.g:4554:4: ( (lv_states_11_0= ruleDState ) )
                    // InternalSim.g:4555:5: (lv_states_11_0= ruleDState )
                    {
                    // InternalSim.g:4555:5: (lv_states_11_0= ruleDState )
                    // InternalSim.g:4556:6: lv_states_11_0= ruleDState
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDimEntityTypeAccess().getStatesDStateParserRuleCall_6_2_0());
                      					
                    }
                    pushFollow(FOLLOW_66);
                    lv_states_11_0=ruleDState();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDimEntityTypeRule());
                      						}
                      						add(
                      							current,
                      							"states",
                      							lv_states_11_0,
                      							"com.mimacom.ddd.dm.dim.Dim.DState");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSim.g:4573:4: (otherlv_12= ',' ( (lv_states_13_0= ruleDState ) ) )*
                    loop107:
                    do {
                        int alt107=2;
                        int LA107_0 = input.LA(1);

                        if ( (LA107_0==37) ) {
                            alt107=1;
                        }


                        switch (alt107) {
                    	case 1 :
                    	    // InternalSim.g:4574:5: otherlv_12= ',' ( (lv_states_13_0= ruleDState ) )
                    	    {
                    	    otherlv_12=(Token)match(input,37,FOLLOW_3); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_12, grammarAccess.getDimEntityTypeAccess().getCommaKeyword_6_3_0());
                    	      				
                    	    }
                    	    // InternalSim.g:4578:5: ( (lv_states_13_0= ruleDState ) )
                    	    // InternalSim.g:4579:6: (lv_states_13_0= ruleDState )
                    	    {
                    	    // InternalSim.g:4579:6: (lv_states_13_0= ruleDState )
                    	    // InternalSim.g:4580:7: lv_states_13_0= ruleDState
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getDimEntityTypeAccess().getStatesDStateParserRuleCall_6_3_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_66);
                    	    lv_states_13_0=ruleDState();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getDimEntityTypeRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"states",
                    	      								lv_states_13_0,
                    	      								"com.mimacom.ddd.dm.dim.Dim.DState");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop107;
                        }
                    } while (true);

                    otherlv_14=(Token)match(input,24,FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getDimEntityTypeAccess().getRightCurlyBracketKeyword_6_4());
                      			
                    }
                    // InternalSim.g:4602:4: (otherlv_15= 'events' otherlv_16= '{' ( (lv_events_17_0= ruleDStateEvent ) ) (otherlv_18= ',' ( (lv_events_19_0= ruleDStateEvent ) ) )* otherlv_20= '}' )?
                    int alt109=2;
                    int LA109_0 = input.LA(1);

                    if ( (LA109_0==54) ) {
                        alt109=1;
                    }
                    switch (alt109) {
                        case 1 :
                            // InternalSim.g:4603:5: otherlv_15= 'events' otherlv_16= '{' ( (lv_events_17_0= ruleDStateEvent ) ) (otherlv_18= ',' ( (lv_events_19_0= ruleDStateEvent ) ) )* otherlv_20= '}'
                            {
                            otherlv_15=(Token)match(input,54,FOLLOW_64); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_15, grammarAccess.getDimEntityTypeAccess().getEventsKeyword_6_5_0());
                              				
                            }
                            otherlv_16=(Token)match(input,23,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_16, grammarAccess.getDimEntityTypeAccess().getLeftCurlyBracketKeyword_6_5_1());
                              				
                            }
                            // InternalSim.g:4611:5: ( (lv_events_17_0= ruleDStateEvent ) )
                            // InternalSim.g:4612:6: (lv_events_17_0= ruleDStateEvent )
                            {
                            // InternalSim.g:4612:6: (lv_events_17_0= ruleDStateEvent )
                            // InternalSim.g:4613:7: lv_events_17_0= ruleDStateEvent
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getDimEntityTypeAccess().getEventsDStateEventParserRuleCall_6_5_2_0());
                              						
                            }
                            pushFollow(FOLLOW_66);
                            lv_events_17_0=ruleDStateEvent();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getDimEntityTypeRule());
                              							}
                              							add(
                              								current,
                              								"events",
                              								lv_events_17_0,
                              								"com.mimacom.ddd.dm.dim.Dim.DStateEvent");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalSim.g:4630:5: (otherlv_18= ',' ( (lv_events_19_0= ruleDStateEvent ) ) )*
                            loop108:
                            do {
                                int alt108=2;
                                int LA108_0 = input.LA(1);

                                if ( (LA108_0==37) ) {
                                    alt108=1;
                                }


                                switch (alt108) {
                            	case 1 :
                            	    // InternalSim.g:4631:6: otherlv_18= ',' ( (lv_events_19_0= ruleDStateEvent ) )
                            	    {
                            	    otherlv_18=(Token)match(input,37,FOLLOW_3); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_18, grammarAccess.getDimEntityTypeAccess().getCommaKeyword_6_5_3_0());
                            	      					
                            	    }
                            	    // InternalSim.g:4635:6: ( (lv_events_19_0= ruleDStateEvent ) )
                            	    // InternalSim.g:4636:7: (lv_events_19_0= ruleDStateEvent )
                            	    {
                            	    // InternalSim.g:4636:7: (lv_events_19_0= ruleDStateEvent )
                            	    // InternalSim.g:4637:8: lv_events_19_0= ruleDStateEvent
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getDimEntityTypeAccess().getEventsDStateEventParserRuleCall_6_5_3_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_66);
                            	    lv_events_19_0=ruleDStateEvent();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getDimEntityTypeRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"events",
                            	      									lv_events_19_0,
                            	      									"com.mimacom.ddd.dm.dim.Dim.DStateEvent");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop108;
                                }
                            } while (true);

                            otherlv_20=(Token)match(input,24,FOLLOW_68); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_20, grammarAccess.getDimEntityTypeAccess().getRightCurlyBracketKeyword_6_5_4());
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalSim.g:4661:3: ( ( (lv_features_21_0= ruleDimFeature ) ) | ( (lv_constraints_22_0= ruleDConstraint ) ) )*
            loop111:
            do {
                int alt111=3;
                int LA111_0 = input.LA(1);

                if ( (LA111_0==RULE_ID||LA111_0==42||LA111_0==55) ) {
                    alt111=1;
                }
                else if ( (LA111_0==49) ) {
                    alt111=2;
                }


                switch (alt111) {
            	case 1 :
            	    // InternalSim.g:4662:4: ( (lv_features_21_0= ruleDimFeature ) )
            	    {
            	    // InternalSim.g:4662:4: ( (lv_features_21_0= ruleDimFeature ) )
            	    // InternalSim.g:4663:5: (lv_features_21_0= ruleDimFeature )
            	    {
            	    // InternalSim.g:4663:5: (lv_features_21_0= ruleDimFeature )
            	    // InternalSim.g:4664:6: lv_features_21_0= ruleDimFeature
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getDimEntityTypeAccess().getFeaturesDimFeatureParserRuleCall_7_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_68);
            	    lv_features_21_0=ruleDimFeature();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getDimEntityTypeRule());
            	      						}
            	      						add(
            	      							current,
            	      							"features",
            	      							lv_features_21_0,
            	      							"com.mimacom.ddd.dm.dim.Dim.DimFeature");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalSim.g:4682:4: ( (lv_constraints_22_0= ruleDConstraint ) )
            	    {
            	    // InternalSim.g:4682:4: ( (lv_constraints_22_0= ruleDConstraint ) )
            	    // InternalSim.g:4683:5: (lv_constraints_22_0= ruleDConstraint )
            	    {
            	    // InternalSim.g:4683:5: (lv_constraints_22_0= ruleDConstraint )
            	    // InternalSim.g:4684:6: lv_constraints_22_0= ruleDConstraint
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getDimEntityTypeAccess().getConstraintsDConstraintParserRuleCall_7_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_68);
            	    lv_constraints_22_0=ruleDConstraint();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getDimEntityTypeRule());
            	      						}
            	      						add(
            	      							current,
            	      							"constraints",
            	      							lv_constraints_22_0,
            	      							"com.mimacom.ddd.dm.dim.Dim.DConstraint");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop111;
                }
            } while (true);

            otherlv_23=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_23, grammarAccess.getDimEntityTypeAccess().getRightCurlyBracketKeyword_8());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDimEntityType"


    // $ANTLR start "entryRuleDState"
    // InternalSim.g:4710:1: entryRuleDState returns [EObject current=null] : iv_ruleDState= ruleDState EOF ;
    public final EObject entryRuleDState() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDState = null;


        try {
            // InternalSim.g:4710:47: (iv_ruleDState= ruleDState EOF )
            // InternalSim.g:4711:2: iv_ruleDState= ruleDState EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDStateRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDState=ruleDState();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDState; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDState"


    // $ANTLR start "ruleDState"
    // InternalSim.g:4717:1: ruleDState returns [EObject current=null] : ( ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= 'alias' ( (lv_alias_2_0= RULE_ID ) ) )? ) ;
    public final EObject ruleDState() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token lv_alias_2_0=null;


        	enterRule();

        try {
            // InternalSim.g:4723:2: ( ( ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= 'alias' ( (lv_alias_2_0= RULE_ID ) ) )? ) )
            // InternalSim.g:4724:2: ( ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= 'alias' ( (lv_alias_2_0= RULE_ID ) ) )? )
            {
            // InternalSim.g:4724:2: ( ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= 'alias' ( (lv_alias_2_0= RULE_ID ) ) )? )
            // InternalSim.g:4725:3: ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= 'alias' ( (lv_alias_2_0= RULE_ID ) ) )?
            {
            // InternalSim.g:4725:3: ( (lv_name_0_0= RULE_ID ) )
            // InternalSim.g:4726:4: (lv_name_0_0= RULE_ID )
            {
            // InternalSim.g:4726:4: (lv_name_0_0= RULE_ID )
            // InternalSim.g:4727:5: lv_name_0_0= RULE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ID,FOLLOW_69); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getDStateAccess().getNameIDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDStateRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.ID");
              				
            }

            }


            }

            // InternalSim.g:4743:3: (otherlv_1= 'alias' ( (lv_alias_2_0= RULE_ID ) ) )?
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( (LA112_0==21) ) {
                alt112=1;
            }
            switch (alt112) {
                case 1 :
                    // InternalSim.g:4744:4: otherlv_1= 'alias' ( (lv_alias_2_0= RULE_ID ) )
                    {
                    otherlv_1=(Token)match(input,21,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getDStateAccess().getAliasKeyword_1_0());
                      			
                    }
                    // InternalSim.g:4748:4: ( (lv_alias_2_0= RULE_ID ) )
                    // InternalSim.g:4749:5: (lv_alias_2_0= RULE_ID )
                    {
                    // InternalSim.g:4749:5: (lv_alias_2_0= RULE_ID )
                    // InternalSim.g:4750:6: lv_alias_2_0= RULE_ID
                    {
                    lv_alias_2_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_alias_2_0, grammarAccess.getDStateAccess().getAliasIDTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDStateRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"alias",
                      							lv_alias_2_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.ID");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDState"


    // $ANTLR start "entryRuleDStateEvent"
    // InternalSim.g:4771:1: entryRuleDStateEvent returns [EObject current=null] : iv_ruleDStateEvent= ruleDStateEvent EOF ;
    public final EObject entryRuleDStateEvent() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDStateEvent = null;


        try {
            // InternalSim.g:4771:52: (iv_ruleDStateEvent= ruleDStateEvent EOF )
            // InternalSim.g:4772:2: iv_ruleDStateEvent= ruleDStateEvent EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDStateEventRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDStateEvent=ruleDStateEvent();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDStateEvent; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDStateEvent"


    // $ANTLR start "ruleDStateEvent"
    // InternalSim.g:4778:1: ruleDStateEvent returns [EObject current=null] : ( ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= 'alias' ( (lv_alias_2_0= RULE_ID ) ) )? ) ;
    public final EObject ruleDStateEvent() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token lv_alias_2_0=null;


        	enterRule();

        try {
            // InternalSim.g:4784:2: ( ( ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= 'alias' ( (lv_alias_2_0= RULE_ID ) ) )? ) )
            // InternalSim.g:4785:2: ( ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= 'alias' ( (lv_alias_2_0= RULE_ID ) ) )? )
            {
            // InternalSim.g:4785:2: ( ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= 'alias' ( (lv_alias_2_0= RULE_ID ) ) )? )
            // InternalSim.g:4786:3: ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= 'alias' ( (lv_alias_2_0= RULE_ID ) ) )?
            {
            // InternalSim.g:4786:3: ( (lv_name_0_0= RULE_ID ) )
            // InternalSim.g:4787:4: (lv_name_0_0= RULE_ID )
            {
            // InternalSim.g:4787:4: (lv_name_0_0= RULE_ID )
            // InternalSim.g:4788:5: lv_name_0_0= RULE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ID,FOLLOW_69); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getDStateEventAccess().getNameIDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDStateEventRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.ID");
              				
            }

            }


            }

            // InternalSim.g:4804:3: (otherlv_1= 'alias' ( (lv_alias_2_0= RULE_ID ) ) )?
            int alt113=2;
            int LA113_0 = input.LA(1);

            if ( (LA113_0==21) ) {
                alt113=1;
            }
            switch (alt113) {
                case 1 :
                    // InternalSim.g:4805:4: otherlv_1= 'alias' ( (lv_alias_2_0= RULE_ID ) )
                    {
                    otherlv_1=(Token)match(input,21,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getDStateEventAccess().getAliasKeyword_1_0());
                      			
                    }
                    // InternalSim.g:4809:4: ( (lv_alias_2_0= RULE_ID ) )
                    // InternalSim.g:4810:5: (lv_alias_2_0= RULE_ID )
                    {
                    // InternalSim.g:4810:5: (lv_alias_2_0= RULE_ID )
                    // InternalSim.g:4811:6: lv_alias_2_0= RULE_ID
                    {
                    lv_alias_2_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_alias_2_0, grammarAccess.getDStateEventAccess().getAliasIDTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDStateEventRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"alias",
                      							lv_alias_2_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.ID");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDStateEvent"


    // $ANTLR start "entryRuleDimDetailType"
    // InternalSim.g:4832:1: entryRuleDimDetailType returns [EObject current=null] : iv_ruleDimDetailType= ruleDimDetailType EOF ;
    public final EObject entryRuleDimDetailType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDimDetailType = null;


        try {
            // InternalSim.g:4832:54: (iv_ruleDimDetailType= ruleDimDetailType EOF )
            // InternalSim.g:4833:2: iv_ruleDimDetailType= ruleDimDetailType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDimDetailTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDimDetailType=ruleDimDetailType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDimDetailType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDimDetailType"


    // $ANTLR start "ruleDimDetailType"
    // InternalSim.g:4839:1: ruleDimDetailType returns [EObject current=null] : ( () ( (lv_abstract_1_0= 'abstract' ) )? otherlv_2= 'detail' this_DimComplexType_3= ruleDimComplexType[$current] otherlv_4= '{' ( ( (lv_features_5_0= ruleDimFeature ) ) | ( (lv_constraints_6_0= ruleDConstraint ) ) )* otherlv_7= '}' ) ;
    public final EObject ruleDimDetailType() throws RecognitionException {
        EObject current = null;

        Token lv_abstract_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_7=null;
        EObject this_DimComplexType_3 = null;

        EObject lv_features_5_0 = null;

        EObject lv_constraints_6_0 = null;



        	enterRule();

        try {
            // InternalSim.g:4845:2: ( ( () ( (lv_abstract_1_0= 'abstract' ) )? otherlv_2= 'detail' this_DimComplexType_3= ruleDimComplexType[$current] otherlv_4= '{' ( ( (lv_features_5_0= ruleDimFeature ) ) | ( (lv_constraints_6_0= ruleDConstraint ) ) )* otherlv_7= '}' ) )
            // InternalSim.g:4846:2: ( () ( (lv_abstract_1_0= 'abstract' ) )? otherlv_2= 'detail' this_DimComplexType_3= ruleDimComplexType[$current] otherlv_4= '{' ( ( (lv_features_5_0= ruleDimFeature ) ) | ( (lv_constraints_6_0= ruleDConstraint ) ) )* otherlv_7= '}' )
            {
            // InternalSim.g:4846:2: ( () ( (lv_abstract_1_0= 'abstract' ) )? otherlv_2= 'detail' this_DimComplexType_3= ruleDimComplexType[$current] otherlv_4= '{' ( ( (lv_features_5_0= ruleDimFeature ) ) | ( (lv_constraints_6_0= ruleDConstraint ) ) )* otherlv_7= '}' )
            // InternalSim.g:4847:3: () ( (lv_abstract_1_0= 'abstract' ) )? otherlv_2= 'detail' this_DimComplexType_3= ruleDimComplexType[$current] otherlv_4= '{' ( ( (lv_features_5_0= ruleDimFeature ) ) | ( (lv_constraints_6_0= ruleDConstraint ) ) )* otherlv_7= '}'
            {
            // InternalSim.g:4847:3: ()
            // InternalSim.g:4848:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDimDetailTypeAccess().getDimDetailTypeAction_0(),
              					current);
              			
            }

            }

            // InternalSim.g:4854:3: ( (lv_abstract_1_0= 'abstract' ) )?
            int alt114=2;
            int LA114_0 = input.LA(1);

            if ( (LA114_0==51) ) {
                alt114=1;
            }
            switch (alt114) {
                case 1 :
                    // InternalSim.g:4855:4: (lv_abstract_1_0= 'abstract' )
                    {
                    // InternalSim.g:4855:4: (lv_abstract_1_0= 'abstract' )
                    // InternalSim.g:4856:5: lv_abstract_1_0= 'abstract'
                    {
                    lv_abstract_1_0=(Token)match(input,51,FOLLOW_42); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_abstract_1_0, grammarAccess.getDimDetailTypeAccess().getAbstractAbstractKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDimDetailTypeRule());
                      					}
                      					setWithLastConsumed(current, "abstract", true, "abstract");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,42,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getDimDetailTypeAccess().getDetailKeyword_2());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getDimDetailTypeRule());
              			}
              			newCompositeNode(grammarAccess.getDimDetailTypeAccess().getDimComplexTypeParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_64);
            this_DimComplexType_3=ruleDimComplexType(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_DimComplexType_3;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_4=(Token)match(input,23,FOLLOW_68); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getDimDetailTypeAccess().getLeftCurlyBracketKeyword_4());
              		
            }
            // InternalSim.g:4887:3: ( ( (lv_features_5_0= ruleDimFeature ) ) | ( (lv_constraints_6_0= ruleDConstraint ) ) )*
            loop115:
            do {
                int alt115=3;
                int LA115_0 = input.LA(1);

                if ( (LA115_0==RULE_ID||LA115_0==42||LA115_0==55) ) {
                    alt115=1;
                }
                else if ( (LA115_0==49) ) {
                    alt115=2;
                }


                switch (alt115) {
            	case 1 :
            	    // InternalSim.g:4888:4: ( (lv_features_5_0= ruleDimFeature ) )
            	    {
            	    // InternalSim.g:4888:4: ( (lv_features_5_0= ruleDimFeature ) )
            	    // InternalSim.g:4889:5: (lv_features_5_0= ruleDimFeature )
            	    {
            	    // InternalSim.g:4889:5: (lv_features_5_0= ruleDimFeature )
            	    // InternalSim.g:4890:6: lv_features_5_0= ruleDimFeature
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getDimDetailTypeAccess().getFeaturesDimFeatureParserRuleCall_5_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_68);
            	    lv_features_5_0=ruleDimFeature();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getDimDetailTypeRule());
            	      						}
            	      						add(
            	      							current,
            	      							"features",
            	      							lv_features_5_0,
            	      							"com.mimacom.ddd.dm.dim.Dim.DimFeature");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalSim.g:4908:4: ( (lv_constraints_6_0= ruleDConstraint ) )
            	    {
            	    // InternalSim.g:4908:4: ( (lv_constraints_6_0= ruleDConstraint ) )
            	    // InternalSim.g:4909:5: (lv_constraints_6_0= ruleDConstraint )
            	    {
            	    // InternalSim.g:4909:5: (lv_constraints_6_0= ruleDConstraint )
            	    // InternalSim.g:4910:6: lv_constraints_6_0= ruleDConstraint
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getDimDetailTypeAccess().getConstraintsDConstraintParserRuleCall_5_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_68);
            	    lv_constraints_6_0=ruleDConstraint();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getDimDetailTypeRule());
            	      						}
            	      						add(
            	      							current,
            	      							"constraints",
            	      							lv_constraints_6_0,
            	      							"com.mimacom.ddd.dm.dim.Dim.DConstraint");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop115;
                }
            } while (true);

            otherlv_7=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getDimDetailTypeAccess().getRightCurlyBracketKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDimDetailType"


    // $ANTLR start "ruleDimComplexType"
    // InternalSim.g:4937:1: ruleDimComplexType[EObject in_current] returns [EObject current=in_current] : ( ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= 'alias' ( (lv_alias_2_0= RULE_ID ) ) )? (otherlv_3= 'extends' ( (otherlv_4= RULE_ID ) ) )? ( (lv_description_5_0= ruleDRichText ) )? ( (lv_notes_6_0= ruleDNote ) )* ) ;
    public final EObject ruleDimComplexType(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token lv_alias_2_0=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_description_5_0 = null;

        EObject lv_notes_6_0 = null;



        	enterRule();

        try {
            // InternalSim.g:4943:2: ( ( ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= 'alias' ( (lv_alias_2_0= RULE_ID ) ) )? (otherlv_3= 'extends' ( (otherlv_4= RULE_ID ) ) )? ( (lv_description_5_0= ruleDRichText ) )? ( (lv_notes_6_0= ruleDNote ) )* ) )
            // InternalSim.g:4944:2: ( ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= 'alias' ( (lv_alias_2_0= RULE_ID ) ) )? (otherlv_3= 'extends' ( (otherlv_4= RULE_ID ) ) )? ( (lv_description_5_0= ruleDRichText ) )? ( (lv_notes_6_0= ruleDNote ) )* )
            {
            // InternalSim.g:4944:2: ( ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= 'alias' ( (lv_alias_2_0= RULE_ID ) ) )? (otherlv_3= 'extends' ( (otherlv_4= RULE_ID ) ) )? ( (lv_description_5_0= ruleDRichText ) )? ( (lv_notes_6_0= ruleDNote ) )* )
            // InternalSim.g:4945:3: ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= 'alias' ( (lv_alias_2_0= RULE_ID ) ) )? (otherlv_3= 'extends' ( (otherlv_4= RULE_ID ) ) )? ( (lv_description_5_0= ruleDRichText ) )? ( (lv_notes_6_0= ruleDNote ) )*
            {
            // InternalSim.g:4945:3: ( (lv_name_0_0= RULE_ID ) )
            // InternalSim.g:4946:4: (lv_name_0_0= RULE_ID )
            {
            // InternalSim.g:4946:4: (lv_name_0_0= RULE_ID )
            // InternalSim.g:4947:5: lv_name_0_0= RULE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ID,FOLLOW_70); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getDimComplexTypeAccess().getNameIDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDimComplexTypeRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.ID");
              				
            }

            }


            }

            // InternalSim.g:4963:3: (otherlv_1= 'alias' ( (lv_alias_2_0= RULE_ID ) ) )?
            int alt116=2;
            int LA116_0 = input.LA(1);

            if ( (LA116_0==21) ) {
                alt116=1;
            }
            switch (alt116) {
                case 1 :
                    // InternalSim.g:4964:4: otherlv_1= 'alias' ( (lv_alias_2_0= RULE_ID ) )
                    {
                    otherlv_1=(Token)match(input,21,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getDimComplexTypeAccess().getAliasKeyword_1_0());
                      			
                    }
                    // InternalSim.g:4968:4: ( (lv_alias_2_0= RULE_ID ) )
                    // InternalSim.g:4969:5: (lv_alias_2_0= RULE_ID )
                    {
                    // InternalSim.g:4969:5: (lv_alias_2_0= RULE_ID )
                    // InternalSim.g:4970:6: lv_alias_2_0= RULE_ID
                    {
                    lv_alias_2_0=(Token)match(input,RULE_ID,FOLLOW_71); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_alias_2_0, grammarAccess.getDimComplexTypeAccess().getAliasIDTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDimComplexTypeRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"alias",
                      							lv_alias_2_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.ID");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSim.g:4987:3: (otherlv_3= 'extends' ( (otherlv_4= RULE_ID ) ) )?
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( (LA117_0==28) ) {
                alt117=1;
            }
            switch (alt117) {
                case 1 :
                    // InternalSim.g:4988:4: otherlv_3= 'extends' ( (otherlv_4= RULE_ID ) )
                    {
                    otherlv_3=(Token)match(input,28,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getDimComplexTypeAccess().getExtendsKeyword_2_0());
                      			
                    }
                    // InternalSim.g:4992:4: ( (otherlv_4= RULE_ID ) )
                    // InternalSim.g:4993:5: (otherlv_4= RULE_ID )
                    {
                    // InternalSim.g:4993:5: (otherlv_4= RULE_ID )
                    // InternalSim.g:4994:6: otherlv_4= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDimComplexTypeRule());
                      						}
                      					
                    }
                    otherlv_4=(Token)match(input,RULE_ID,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_4, grammarAccess.getDimComplexTypeAccess().getSuperTypeDComplexTypeCrossReference_2_1_0());
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSim.g:5006:3: ( (lv_description_5_0= ruleDRichText ) )?
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( ((LA118_0>=RULE_PLAIN_TEXT_ONLY && LA118_0<=RULE_RICH_TEXT_START)) ) {
                alt118=1;
            }
            switch (alt118) {
                case 1 :
                    // InternalSim.g:5007:4: (lv_description_5_0= ruleDRichText )
                    {
                    // InternalSim.g:5007:4: (lv_description_5_0= ruleDRichText )
                    // InternalSim.g:5008:5: lv_description_5_0= ruleDRichText
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDimComplexTypeAccess().getDescriptionDRichTextParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_39);
                    lv_description_5_0=ruleDRichText();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDimComplexTypeRule());
                      					}
                      					set(
                      						current,
                      						"description",
                      						lv_description_5_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:5025:3: ( (lv_notes_6_0= ruleDNote ) )*
            loop119:
            do {
                int alt119=2;
                int LA119_0 = input.LA(1);

                if ( (LA119_0==59) ) {
                    alt119=1;
                }


                switch (alt119) {
            	case 1 :
            	    // InternalSim.g:5026:4: (lv_notes_6_0= ruleDNote )
            	    {
            	    // InternalSim.g:5026:4: (lv_notes_6_0= ruleDNote )
            	    // InternalSim.g:5027:5: lv_notes_6_0= ruleDNote
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getDimComplexTypeAccess().getNotesDNoteParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_39);
            	    lv_notes_6_0=ruleDNote();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getDimComplexTypeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"notes",
            	      						lv_notes_6_0,
            	      						"com.mimacom.ddd.dm.dmx.Dmx.DNote");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop119;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDimComplexType"


    // $ANTLR start "entryRuleDimFeature"
    // InternalSim.g:5048:1: entryRuleDimFeature returns [EObject current=null] : iv_ruleDimFeature= ruleDimFeature EOF ;
    public final EObject entryRuleDimFeature() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDimFeature = null;


        try {
            // InternalSim.g:5048:51: (iv_ruleDimFeature= ruleDimFeature EOF )
            // InternalSim.g:5049:2: iv_ruleDimFeature= ruleDimFeature EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDimFeatureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDimFeature=ruleDimFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDimFeature; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDimFeature"


    // $ANTLR start "ruleDimFeature"
    // InternalSim.g:5055:1: ruleDimFeature returns [EObject current=null] : (this_DimAssociation_0= ruleDimAssociation | this_DimAttribute_1= ruleDimAttribute | this_DimQuery_2= ruleDimQuery ) ;
    public final EObject ruleDimFeature() throws RecognitionException {
        EObject current = null;

        EObject this_DimAssociation_0 = null;

        EObject this_DimAttribute_1 = null;

        EObject this_DimQuery_2 = null;



        	enterRule();

        try {
            // InternalSim.g:5061:2: ( (this_DimAssociation_0= ruleDimAssociation | this_DimAttribute_1= ruleDimAttribute | this_DimQuery_2= ruleDimQuery ) )
            // InternalSim.g:5062:2: (this_DimAssociation_0= ruleDimAssociation | this_DimAttribute_1= ruleDimAttribute | this_DimQuery_2= ruleDimQuery )
            {
            // InternalSim.g:5062:2: (this_DimAssociation_0= ruleDimAssociation | this_DimAttribute_1= ruleDimAttribute | this_DimQuery_2= ruleDimQuery )
            int alt120=3;
            switch ( input.LA(1) ) {
            case 55:
                {
                alt120=1;
                }
                break;
            case RULE_ID:
                {
                switch ( input.LA(2) ) {
                case 21:
                    {
                    int LA120_4 = input.LA(3);

                    if ( (LA120_4==RULE_ID) ) {
                        switch ( input.LA(4) ) {
                        case 46:
                            {
                            alt120=3;
                            }
                            break;
                        case 29:
                            {
                            alt120=2;
                            }
                            break;
                        case 56:
                        case 103:
                        case 104:
                            {
                            alt120=1;
                            }
                            break;
                        default:
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 120, 6, input);

                            throw nvae;
                        }

                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 120, 4, input);

                        throw nvae;
                    }
                    }
                    break;
                case 56:
                case 103:
                case 104:
                    {
                    alt120=1;
                    }
                    break;
                case 46:
                    {
                    alt120=3;
                    }
                    break;
                case 29:
                    {
                    alt120=2;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 120, 2, input);

                    throw nvae;
                }

                }
                break;
            case 42:
                {
                alt120=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 120, 0, input);

                throw nvae;
            }

            switch (alt120) {
                case 1 :
                    // InternalSim.g:5063:3: this_DimAssociation_0= ruleDimAssociation
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDimFeatureAccess().getDimAssociationParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DimAssociation_0=ruleDimAssociation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DimAssociation_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSim.g:5072:3: this_DimAttribute_1= ruleDimAttribute
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDimFeatureAccess().getDimAttributeParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DimAttribute_1=ruleDimAttribute();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DimAttribute_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSim.g:5081:3: this_DimQuery_2= ruleDimQuery
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDimFeatureAccess().getDimQueryParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DimQuery_2=ruleDimQuery();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DimQuery_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDimFeature"


    // $ANTLR start "entryRuleDimAssociation"
    // InternalSim.g:5093:1: entryRuleDimAssociation returns [EObject current=null] : iv_ruleDimAssociation= ruleDimAssociation EOF ;
    public final EObject entryRuleDimAssociation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDimAssociation = null;


        try {
            // InternalSim.g:5093:55: (iv_ruleDimAssociation= ruleDimAssociation EOF )
            // InternalSim.g:5094:2: iv_ruleDimAssociation= ruleDimAssociation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDimAssociationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDimAssociation=ruleDimAssociation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDimAssociation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDimAssociation"


    // $ANTLR start "ruleDimAssociation"
    // InternalSim.g:5100:1: ruleDimAssociation returns [EObject current=null] : ( () ( (lv_derived_1_0= 'derived' ) )? ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= 'alias' ( (lv_alias_4_0= RULE_ID ) ) )? ( ( (lv_kind_5_0= ruleDAssociationKind ) ) | ( ( (lv_kind_6_0= ruleDAssociationKindInverse ) ) otherlv_7= 'contains' ) ) ( (otherlv_8= RULE_ID ) )? ( (lv_multiplicity_9_0= ruleDMultiplicity ) )? ( (lv_description_10_0= ruleDRichText ) )? ( (lv_notes_11_0= ruleDNote ) )* ) ;
    public final EObject ruleDimAssociation() throws RecognitionException {
        EObject current = null;

        Token lv_derived_1_0=null;
        Token lv_name_2_0=null;
        Token otherlv_3=null;
        Token lv_alias_4_0=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Enumerator lv_kind_5_0 = null;

        Enumerator lv_kind_6_0 = null;

        EObject lv_multiplicity_9_0 = null;

        EObject lv_description_10_0 = null;

        EObject lv_notes_11_0 = null;



        	enterRule();

        try {
            // InternalSim.g:5106:2: ( ( () ( (lv_derived_1_0= 'derived' ) )? ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= 'alias' ( (lv_alias_4_0= RULE_ID ) ) )? ( ( (lv_kind_5_0= ruleDAssociationKind ) ) | ( ( (lv_kind_6_0= ruleDAssociationKindInverse ) ) otherlv_7= 'contains' ) ) ( (otherlv_8= RULE_ID ) )? ( (lv_multiplicity_9_0= ruleDMultiplicity ) )? ( (lv_description_10_0= ruleDRichText ) )? ( (lv_notes_11_0= ruleDNote ) )* ) )
            // InternalSim.g:5107:2: ( () ( (lv_derived_1_0= 'derived' ) )? ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= 'alias' ( (lv_alias_4_0= RULE_ID ) ) )? ( ( (lv_kind_5_0= ruleDAssociationKind ) ) | ( ( (lv_kind_6_0= ruleDAssociationKindInverse ) ) otherlv_7= 'contains' ) ) ( (otherlv_8= RULE_ID ) )? ( (lv_multiplicity_9_0= ruleDMultiplicity ) )? ( (lv_description_10_0= ruleDRichText ) )? ( (lv_notes_11_0= ruleDNote ) )* )
            {
            // InternalSim.g:5107:2: ( () ( (lv_derived_1_0= 'derived' ) )? ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= 'alias' ( (lv_alias_4_0= RULE_ID ) ) )? ( ( (lv_kind_5_0= ruleDAssociationKind ) ) | ( ( (lv_kind_6_0= ruleDAssociationKindInverse ) ) otherlv_7= 'contains' ) ) ( (otherlv_8= RULE_ID ) )? ( (lv_multiplicity_9_0= ruleDMultiplicity ) )? ( (lv_description_10_0= ruleDRichText ) )? ( (lv_notes_11_0= ruleDNote ) )* )
            // InternalSim.g:5108:3: () ( (lv_derived_1_0= 'derived' ) )? ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= 'alias' ( (lv_alias_4_0= RULE_ID ) ) )? ( ( (lv_kind_5_0= ruleDAssociationKind ) ) | ( ( (lv_kind_6_0= ruleDAssociationKindInverse ) ) otherlv_7= 'contains' ) ) ( (otherlv_8= RULE_ID ) )? ( (lv_multiplicity_9_0= ruleDMultiplicity ) )? ( (lv_description_10_0= ruleDRichText ) )? ( (lv_notes_11_0= ruleDNote ) )*
            {
            // InternalSim.g:5108:3: ()
            // InternalSim.g:5109:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDimAssociationAccess().getDimAssociationAction_0(),
              					current);
              			
            }

            }

            // InternalSim.g:5115:3: ( (lv_derived_1_0= 'derived' ) )?
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( (LA121_0==55) ) {
                alt121=1;
            }
            switch (alt121) {
                case 1 :
                    // InternalSim.g:5116:4: (lv_derived_1_0= 'derived' )
                    {
                    // InternalSim.g:5116:4: (lv_derived_1_0= 'derived' )
                    // InternalSim.g:5117:5: lv_derived_1_0= 'derived'
                    {
                    lv_derived_1_0=(Token)match(input,55,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_derived_1_0, grammarAccess.getDimAssociationAccess().getDerivedDerivedKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDimAssociationRule());
                      					}
                      					setWithLastConsumed(current, "derived", true, "derived");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:5129:3: ( (lv_name_2_0= RULE_ID ) )
            // InternalSim.g:5130:4: (lv_name_2_0= RULE_ID )
            {
            // InternalSim.g:5130:4: (lv_name_2_0= RULE_ID )
            // InternalSim.g:5131:5: lv_name_2_0= RULE_ID
            {
            lv_name_2_0=(Token)match(input,RULE_ID,FOLLOW_72); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_2_0, grammarAccess.getDimAssociationAccess().getNameIDTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDimAssociationRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_2_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.ID");
              				
            }

            }


            }

            // InternalSim.g:5147:3: (otherlv_3= 'alias' ( (lv_alias_4_0= RULE_ID ) ) )?
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( (LA122_0==21) ) {
                alt122=1;
            }
            switch (alt122) {
                case 1 :
                    // InternalSim.g:5148:4: otherlv_3= 'alias' ( (lv_alias_4_0= RULE_ID ) )
                    {
                    otherlv_3=(Token)match(input,21,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getDimAssociationAccess().getAliasKeyword_3_0());
                      			
                    }
                    // InternalSim.g:5152:4: ( (lv_alias_4_0= RULE_ID ) )
                    // InternalSim.g:5153:5: (lv_alias_4_0= RULE_ID )
                    {
                    // InternalSim.g:5153:5: (lv_alias_4_0= RULE_ID )
                    // InternalSim.g:5154:6: lv_alias_4_0= RULE_ID
                    {
                    lv_alias_4_0=(Token)match(input,RULE_ID,FOLLOW_72); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_alias_4_0, grammarAccess.getDimAssociationAccess().getAliasIDTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDimAssociationRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"alias",
                      							lv_alias_4_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.ID");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSim.g:5171:3: ( ( (lv_kind_5_0= ruleDAssociationKind ) ) | ( ( (lv_kind_6_0= ruleDAssociationKindInverse ) ) otherlv_7= 'contains' ) )
            int alt123=2;
            int LA123_0 = input.LA(1);

            if ( (LA123_0==56||LA123_0==103) ) {
                alt123=1;
            }
            else if ( (LA123_0==104) ) {
                alt123=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 123, 0, input);

                throw nvae;
            }
            switch (alt123) {
                case 1 :
                    // InternalSim.g:5172:4: ( (lv_kind_5_0= ruleDAssociationKind ) )
                    {
                    // InternalSim.g:5172:4: ( (lv_kind_5_0= ruleDAssociationKind ) )
                    // InternalSim.g:5173:5: (lv_kind_5_0= ruleDAssociationKind )
                    {
                    // InternalSim.g:5173:5: (lv_kind_5_0= ruleDAssociationKind )
                    // InternalSim.g:5174:6: lv_kind_5_0= ruleDAssociationKind
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDimAssociationAccess().getKindDAssociationKindEnumRuleCall_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_73);
                    lv_kind_5_0=ruleDAssociationKind();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDimAssociationRule());
                      						}
                      						set(
                      							current,
                      							"kind",
                      							lv_kind_5_0,
                      							"com.mimacom.ddd.dm.dim.Dim.DAssociationKind");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:5192:4: ( ( (lv_kind_6_0= ruleDAssociationKindInverse ) ) otherlv_7= 'contains' )
                    {
                    // InternalSim.g:5192:4: ( ( (lv_kind_6_0= ruleDAssociationKindInverse ) ) otherlv_7= 'contains' )
                    // InternalSim.g:5193:5: ( (lv_kind_6_0= ruleDAssociationKindInverse ) ) otherlv_7= 'contains'
                    {
                    // InternalSim.g:5193:5: ( (lv_kind_6_0= ruleDAssociationKindInverse ) )
                    // InternalSim.g:5194:6: (lv_kind_6_0= ruleDAssociationKindInverse )
                    {
                    // InternalSim.g:5194:6: (lv_kind_6_0= ruleDAssociationKindInverse )
                    // InternalSim.g:5195:7: lv_kind_6_0= ruleDAssociationKindInverse
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getDimAssociationAccess().getKindDAssociationKindInverseEnumRuleCall_4_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_74);
                    lv_kind_6_0=ruleDAssociationKindInverse();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getDimAssociationRule());
                      							}
                      							set(
                      								current,
                      								"kind",
                      								lv_kind_6_0,
                      								"com.mimacom.ddd.dm.dim.Dim.DAssociationKindInverse");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_7=(Token)match(input,56,FOLLOW_73); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getDimAssociationAccess().getContainsKeyword_4_1_1());
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:5218:3: ( (otherlv_8= RULE_ID ) )?
            int alt124=2;
            int LA124_0 = input.LA(1);

            if ( (LA124_0==RULE_ID) ) {
                int LA124_1 = input.LA(2);

                if ( (LA124_1==EOF||(LA124_1>=RULE_ID && LA124_1<=RULE_RICH_TEXT_START)||LA124_1==24||LA124_1==30||LA124_1==32||LA124_1==35||LA124_1==40||LA124_1==42||LA124_1==47||LA124_1==49||LA124_1==55||LA124_1==59||LA124_1==93||LA124_1==146) ) {
                    alt124=1;
                }
                else if ( (LA124_1==46) ) {
                    int LA124_4 = input.LA(3);

                    if ( (LA124_4==RULE_NATURAL) ) {
                        alt124=1;
                    }
                }
            }
            switch (alt124) {
                case 1 :
                    // InternalSim.g:5219:4: (otherlv_8= RULE_ID )
                    {
                    // InternalSim.g:5219:4: (otherlv_8= RULE_ID )
                    // InternalSim.g:5220:5: otherlv_8= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDimAssociationRule());
                      					}
                      				
                    }
                    otherlv_8=(Token)match(input,RULE_ID,FOLLOW_75); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_8, grammarAccess.getDimAssociationAccess().getTypeDEntityTypeCrossReference_5_0());
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:5231:3: ( (lv_multiplicity_9_0= ruleDMultiplicity ) )?
            int alt125=2;
            int LA125_0 = input.LA(1);

            if ( ((LA125_0>=46 && LA125_0<=47)||LA125_0==93||LA125_0==146) ) {
                alt125=1;
            }
            switch (alt125) {
                case 1 :
                    // InternalSim.g:5232:4: (lv_multiplicity_9_0= ruleDMultiplicity )
                    {
                    // InternalSim.g:5232:4: (lv_multiplicity_9_0= ruleDMultiplicity )
                    // InternalSim.g:5233:5: lv_multiplicity_9_0= ruleDMultiplicity
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDimAssociationAccess().getMultiplicityDMultiplicityParserRuleCall_6_0());
                      				
                    }
                    pushFollow(FOLLOW_38);
                    lv_multiplicity_9_0=ruleDMultiplicity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDimAssociationRule());
                      					}
                      					set(
                      						current,
                      						"multiplicity",
                      						lv_multiplicity_9_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DMultiplicity");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:5250:3: ( (lv_description_10_0= ruleDRichText ) )?
            int alt126=2;
            int LA126_0 = input.LA(1);

            if ( ((LA126_0>=RULE_PLAIN_TEXT_ONLY && LA126_0<=RULE_RICH_TEXT_START)) ) {
                alt126=1;
            }
            switch (alt126) {
                case 1 :
                    // InternalSim.g:5251:4: (lv_description_10_0= ruleDRichText )
                    {
                    // InternalSim.g:5251:4: (lv_description_10_0= ruleDRichText )
                    // InternalSim.g:5252:5: lv_description_10_0= ruleDRichText
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDimAssociationAccess().getDescriptionDRichTextParserRuleCall_7_0());
                      				
                    }
                    pushFollow(FOLLOW_39);
                    lv_description_10_0=ruleDRichText();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDimAssociationRule());
                      					}
                      					set(
                      						current,
                      						"description",
                      						lv_description_10_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:5269:3: ( (lv_notes_11_0= ruleDNote ) )*
            loop127:
            do {
                int alt127=2;
                int LA127_0 = input.LA(1);

                if ( (LA127_0==59) ) {
                    alt127=1;
                }


                switch (alt127) {
            	case 1 :
            	    // InternalSim.g:5270:4: (lv_notes_11_0= ruleDNote )
            	    {
            	    // InternalSim.g:5270:4: (lv_notes_11_0= ruleDNote )
            	    // InternalSim.g:5271:5: lv_notes_11_0= ruleDNote
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getDimAssociationAccess().getNotesDNoteParserRuleCall_8_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_39);
            	    lv_notes_11_0=ruleDNote();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getDimAssociationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"notes",
            	      						lv_notes_11_0,
            	      						"com.mimacom.ddd.dm.dmx.Dmx.DNote");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop127;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDimAssociation"


    // $ANTLR start "entryRuleDimAttribute"
    // InternalSim.g:5292:1: entryRuleDimAttribute returns [EObject current=null] : iv_ruleDimAttribute= ruleDimAttribute EOF ;
    public final EObject entryRuleDimAttribute() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDimAttribute = null;


        try {
            // InternalSim.g:5292:53: (iv_ruleDimAttribute= ruleDimAttribute EOF )
            // InternalSim.g:5293:2: iv_ruleDimAttribute= ruleDimAttribute EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDimAttributeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDimAttribute=ruleDimAttribute();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDimAttribute; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDimAttribute"


    // $ANTLR start "ruleDimAttribute"
    // InternalSim.g:5299:1: ruleDimAttribute returns [EObject current=null] : ( () ( (lv_detail_1_0= 'detail' ) )? ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= 'alias' ( (lv_alias_4_0= RULE_ID ) ) )? otherlv_5= ':' ( (otherlv_6= RULE_ID ) )? ( (lv_multiplicity_7_0= ruleDMultiplicity ) )? ( (lv_key_8_0= 'key' ) )? ( (lv_description_9_0= ruleDRichText ) )? ( (lv_notes_10_0= ruleDNote ) )* ) ;
    public final EObject ruleDimAttribute() throws RecognitionException {
        EObject current = null;

        Token lv_detail_1_0=null;
        Token lv_name_2_0=null;
        Token otherlv_3=null;
        Token lv_alias_4_0=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token lv_key_8_0=null;
        EObject lv_multiplicity_7_0 = null;

        EObject lv_description_9_0 = null;

        EObject lv_notes_10_0 = null;



        	enterRule();

        try {
            // InternalSim.g:5305:2: ( ( () ( (lv_detail_1_0= 'detail' ) )? ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= 'alias' ( (lv_alias_4_0= RULE_ID ) ) )? otherlv_5= ':' ( (otherlv_6= RULE_ID ) )? ( (lv_multiplicity_7_0= ruleDMultiplicity ) )? ( (lv_key_8_0= 'key' ) )? ( (lv_description_9_0= ruleDRichText ) )? ( (lv_notes_10_0= ruleDNote ) )* ) )
            // InternalSim.g:5306:2: ( () ( (lv_detail_1_0= 'detail' ) )? ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= 'alias' ( (lv_alias_4_0= RULE_ID ) ) )? otherlv_5= ':' ( (otherlv_6= RULE_ID ) )? ( (lv_multiplicity_7_0= ruleDMultiplicity ) )? ( (lv_key_8_0= 'key' ) )? ( (lv_description_9_0= ruleDRichText ) )? ( (lv_notes_10_0= ruleDNote ) )* )
            {
            // InternalSim.g:5306:2: ( () ( (lv_detail_1_0= 'detail' ) )? ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= 'alias' ( (lv_alias_4_0= RULE_ID ) ) )? otherlv_5= ':' ( (otherlv_6= RULE_ID ) )? ( (lv_multiplicity_7_0= ruleDMultiplicity ) )? ( (lv_key_8_0= 'key' ) )? ( (lv_description_9_0= ruleDRichText ) )? ( (lv_notes_10_0= ruleDNote ) )* )
            // InternalSim.g:5307:3: () ( (lv_detail_1_0= 'detail' ) )? ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= 'alias' ( (lv_alias_4_0= RULE_ID ) ) )? otherlv_5= ':' ( (otherlv_6= RULE_ID ) )? ( (lv_multiplicity_7_0= ruleDMultiplicity ) )? ( (lv_key_8_0= 'key' ) )? ( (lv_description_9_0= ruleDRichText ) )? ( (lv_notes_10_0= ruleDNote ) )*
            {
            // InternalSim.g:5307:3: ()
            // InternalSim.g:5308:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDimAttributeAccess().getDimAttributeAction_0(),
              					current);
              			
            }

            }

            // InternalSim.g:5314:3: ( (lv_detail_1_0= 'detail' ) )?
            int alt128=2;
            int LA128_0 = input.LA(1);

            if ( (LA128_0==42) ) {
                alt128=1;
            }
            switch (alt128) {
                case 1 :
                    // InternalSim.g:5315:4: (lv_detail_1_0= 'detail' )
                    {
                    // InternalSim.g:5315:4: (lv_detail_1_0= 'detail' )
                    // InternalSim.g:5316:5: lv_detail_1_0= 'detail'
                    {
                    lv_detail_1_0=(Token)match(input,42,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_detail_1_0, grammarAccess.getDimAttributeAccess().getDetailDetailKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDimAttributeRule());
                      					}
                      					setWithLastConsumed(current, "detail", true, "detail");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:5328:3: ( (lv_name_2_0= RULE_ID ) )
            // InternalSim.g:5329:4: (lv_name_2_0= RULE_ID )
            {
            // InternalSim.g:5329:4: (lv_name_2_0= RULE_ID )
            // InternalSim.g:5330:5: lv_name_2_0= RULE_ID
            {
            lv_name_2_0=(Token)match(input,RULE_ID,FOLLOW_56); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_2_0, grammarAccess.getDimAttributeAccess().getNameIDTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDimAttributeRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_2_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.ID");
              				
            }

            }


            }

            // InternalSim.g:5346:3: (otherlv_3= 'alias' ( (lv_alias_4_0= RULE_ID ) ) )?
            int alt129=2;
            int LA129_0 = input.LA(1);

            if ( (LA129_0==21) ) {
                alt129=1;
            }
            switch (alt129) {
                case 1 :
                    // InternalSim.g:5347:4: otherlv_3= 'alias' ( (lv_alias_4_0= RULE_ID ) )
                    {
                    otherlv_3=(Token)match(input,21,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getDimAttributeAccess().getAliasKeyword_3_0());
                      			
                    }
                    // InternalSim.g:5351:4: ( (lv_alias_4_0= RULE_ID ) )
                    // InternalSim.g:5352:5: (lv_alias_4_0= RULE_ID )
                    {
                    // InternalSim.g:5352:5: (lv_alias_4_0= RULE_ID )
                    // InternalSim.g:5353:6: lv_alias_4_0= RULE_ID
                    {
                    lv_alias_4_0=(Token)match(input,RULE_ID,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_alias_4_0, grammarAccess.getDimAttributeAccess().getAliasIDTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDimAttributeRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"alias",
                      							lv_alias_4_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.ID");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,29,FOLLOW_76); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getDimAttributeAccess().getColonKeyword_4());
              		
            }
            // InternalSim.g:5374:3: ( (otherlv_6= RULE_ID ) )?
            int alt130=2;
            int LA130_0 = input.LA(1);

            if ( (LA130_0==RULE_ID) ) {
                int LA130_1 = input.LA(2);

                if ( (LA130_1==EOF||(LA130_1>=RULE_ID && LA130_1<=RULE_RICH_TEXT_START)||LA130_1==24||LA130_1==30||LA130_1==32||LA130_1==35||LA130_1==40||LA130_1==42||LA130_1==47||LA130_1==49||LA130_1==55||LA130_1==57||LA130_1==59||LA130_1==93||LA130_1==146) ) {
                    alt130=1;
                }
                else if ( (LA130_1==46) ) {
                    int LA130_4 = input.LA(3);

                    if ( (LA130_4==RULE_NATURAL) ) {
                        alt130=1;
                    }
                }
            }
            switch (alt130) {
                case 1 :
                    // InternalSim.g:5375:4: (otherlv_6= RULE_ID )
                    {
                    // InternalSim.g:5375:4: (otherlv_6= RULE_ID )
                    // InternalSim.g:5376:5: otherlv_6= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDimAttributeRule());
                      					}
                      				
                    }
                    otherlv_6=(Token)match(input,RULE_ID,FOLLOW_77); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getDimAttributeAccess().getTypeDTypeCrossReference_5_0());
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:5387:3: ( (lv_multiplicity_7_0= ruleDMultiplicity ) )?
            int alt131=2;
            int LA131_0 = input.LA(1);

            if ( ((LA131_0>=46 && LA131_0<=47)||LA131_0==93||LA131_0==146) ) {
                alt131=1;
            }
            switch (alt131) {
                case 1 :
                    // InternalSim.g:5388:4: (lv_multiplicity_7_0= ruleDMultiplicity )
                    {
                    // InternalSim.g:5388:4: (lv_multiplicity_7_0= ruleDMultiplicity )
                    // InternalSim.g:5389:5: lv_multiplicity_7_0= ruleDMultiplicity
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDimAttributeAccess().getMultiplicityDMultiplicityParserRuleCall_6_0());
                      				
                    }
                    pushFollow(FOLLOW_78);
                    lv_multiplicity_7_0=ruleDMultiplicity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDimAttributeRule());
                      					}
                      					set(
                      						current,
                      						"multiplicity",
                      						lv_multiplicity_7_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DMultiplicity");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:5406:3: ( (lv_key_8_0= 'key' ) )?
            int alt132=2;
            int LA132_0 = input.LA(1);

            if ( (LA132_0==57) ) {
                alt132=1;
            }
            switch (alt132) {
                case 1 :
                    // InternalSim.g:5407:4: (lv_key_8_0= 'key' )
                    {
                    // InternalSim.g:5407:4: (lv_key_8_0= 'key' )
                    // InternalSim.g:5408:5: lv_key_8_0= 'key'
                    {
                    lv_key_8_0=(Token)match(input,57,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_key_8_0, grammarAccess.getDimAttributeAccess().getKeyKeyKeyword_7_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDimAttributeRule());
                      					}
                      					setWithLastConsumed(current, "key", true, "key");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:5420:3: ( (lv_description_9_0= ruleDRichText ) )?
            int alt133=2;
            int LA133_0 = input.LA(1);

            if ( ((LA133_0>=RULE_PLAIN_TEXT_ONLY && LA133_0<=RULE_RICH_TEXT_START)) ) {
                alt133=1;
            }
            switch (alt133) {
                case 1 :
                    // InternalSim.g:5421:4: (lv_description_9_0= ruleDRichText )
                    {
                    // InternalSim.g:5421:4: (lv_description_9_0= ruleDRichText )
                    // InternalSim.g:5422:5: lv_description_9_0= ruleDRichText
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDimAttributeAccess().getDescriptionDRichTextParserRuleCall_8_0());
                      				
                    }
                    pushFollow(FOLLOW_39);
                    lv_description_9_0=ruleDRichText();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDimAttributeRule());
                      					}
                      					set(
                      						current,
                      						"description",
                      						lv_description_9_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:5439:3: ( (lv_notes_10_0= ruleDNote ) )*
            loop134:
            do {
                int alt134=2;
                int LA134_0 = input.LA(1);

                if ( (LA134_0==59) ) {
                    alt134=1;
                }


                switch (alt134) {
            	case 1 :
            	    // InternalSim.g:5440:4: (lv_notes_10_0= ruleDNote )
            	    {
            	    // InternalSim.g:5440:4: (lv_notes_10_0= ruleDNote )
            	    // InternalSim.g:5441:5: lv_notes_10_0= ruleDNote
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getDimAttributeAccess().getNotesDNoteParserRuleCall_9_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_39);
            	    lv_notes_10_0=ruleDNote();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getDimAttributeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"notes",
            	      						lv_notes_10_0,
            	      						"com.mimacom.ddd.dm.dmx.Dmx.DNote");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop134;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDimAttribute"


    // $ANTLR start "entryRuleDimQuery"
    // InternalSim.g:5462:1: entryRuleDimQuery returns [EObject current=null] : iv_ruleDimQuery= ruleDimQuery EOF ;
    public final EObject entryRuleDimQuery() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDimQuery = null;


        try {
            // InternalSim.g:5462:49: (iv_ruleDimQuery= ruleDimQuery EOF )
            // InternalSim.g:5463:2: iv_ruleDimQuery= ruleDimQuery EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDimQueryRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDimQuery=ruleDimQuery();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDimQuery; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDimQuery"


    // $ANTLR start "ruleDimQuery"
    // InternalSim.g:5469:1: ruleDimQuery returns [EObject current=null] : ( () ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'alias' ( (lv_alias_3_0= RULE_ID ) ) )? otherlv_4= '(' ( ( (lv_parameters_5_0= ruleDimQueryParameter ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleDimQueryParameter ) ) )* )? otherlv_8= ')' otherlv_9= ':' ( (otherlv_10= RULE_ID ) )? ( (lv_multiplicity_11_0= ruleDMultiplicity ) )? (otherlv_12= 'returns' ( (lv_returns_13_0= ruleDExpression ) ) )? ( (lv_description_14_0= ruleDRichText ) )? ( (lv_notes_15_0= ruleDNote ) )* ) ;
    public final EObject ruleDimQuery() throws RecognitionException {
        EObject current = null;

        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token lv_alias_3_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_parameters_5_0 = null;

        EObject lv_parameters_7_0 = null;

        EObject lv_multiplicity_11_0 = null;

        EObject lv_returns_13_0 = null;

        EObject lv_description_14_0 = null;

        EObject lv_notes_15_0 = null;



        	enterRule();

        try {
            // InternalSim.g:5475:2: ( ( () ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'alias' ( (lv_alias_3_0= RULE_ID ) ) )? otherlv_4= '(' ( ( (lv_parameters_5_0= ruleDimQueryParameter ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleDimQueryParameter ) ) )* )? otherlv_8= ')' otherlv_9= ':' ( (otherlv_10= RULE_ID ) )? ( (lv_multiplicity_11_0= ruleDMultiplicity ) )? (otherlv_12= 'returns' ( (lv_returns_13_0= ruleDExpression ) ) )? ( (lv_description_14_0= ruleDRichText ) )? ( (lv_notes_15_0= ruleDNote ) )* ) )
            // InternalSim.g:5476:2: ( () ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'alias' ( (lv_alias_3_0= RULE_ID ) ) )? otherlv_4= '(' ( ( (lv_parameters_5_0= ruleDimQueryParameter ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleDimQueryParameter ) ) )* )? otherlv_8= ')' otherlv_9= ':' ( (otherlv_10= RULE_ID ) )? ( (lv_multiplicity_11_0= ruleDMultiplicity ) )? (otherlv_12= 'returns' ( (lv_returns_13_0= ruleDExpression ) ) )? ( (lv_description_14_0= ruleDRichText ) )? ( (lv_notes_15_0= ruleDNote ) )* )
            {
            // InternalSim.g:5476:2: ( () ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'alias' ( (lv_alias_3_0= RULE_ID ) ) )? otherlv_4= '(' ( ( (lv_parameters_5_0= ruleDimQueryParameter ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleDimQueryParameter ) ) )* )? otherlv_8= ')' otherlv_9= ':' ( (otherlv_10= RULE_ID ) )? ( (lv_multiplicity_11_0= ruleDMultiplicity ) )? (otherlv_12= 'returns' ( (lv_returns_13_0= ruleDExpression ) ) )? ( (lv_description_14_0= ruleDRichText ) )? ( (lv_notes_15_0= ruleDNote ) )* )
            // InternalSim.g:5477:3: () ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'alias' ( (lv_alias_3_0= RULE_ID ) ) )? otherlv_4= '(' ( ( (lv_parameters_5_0= ruleDimQueryParameter ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleDimQueryParameter ) ) )* )? otherlv_8= ')' otherlv_9= ':' ( (otherlv_10= RULE_ID ) )? ( (lv_multiplicity_11_0= ruleDMultiplicity ) )? (otherlv_12= 'returns' ( (lv_returns_13_0= ruleDExpression ) ) )? ( (lv_description_14_0= ruleDRichText ) )? ( (lv_notes_15_0= ruleDNote ) )*
            {
            // InternalSim.g:5477:3: ()
            // InternalSim.g:5478:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDimQueryAccess().getDimQueryAction_0(),
              					current);
              			
            }

            }

            // InternalSim.g:5484:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalSim.g:5485:4: (lv_name_1_0= RULE_ID )
            {
            // InternalSim.g:5485:4: (lv_name_1_0= RULE_ID )
            // InternalSim.g:5486:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_79); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getDimQueryAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDimQueryRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.ID");
              				
            }

            }


            }

            // InternalSim.g:5502:3: (otherlv_2= 'alias' ( (lv_alias_3_0= RULE_ID ) ) )?
            int alt135=2;
            int LA135_0 = input.LA(1);

            if ( (LA135_0==21) ) {
                alt135=1;
            }
            switch (alt135) {
                case 1 :
                    // InternalSim.g:5503:4: otherlv_2= 'alias' ( (lv_alias_3_0= RULE_ID ) )
                    {
                    otherlv_2=(Token)match(input,21,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getDimQueryAccess().getAliasKeyword_2_0());
                      			
                    }
                    // InternalSim.g:5507:4: ( (lv_alias_3_0= RULE_ID ) )
                    // InternalSim.g:5508:5: (lv_alias_3_0= RULE_ID )
                    {
                    // InternalSim.g:5508:5: (lv_alias_3_0= RULE_ID )
                    // InternalSim.g:5509:6: lv_alias_3_0= RULE_ID
                    {
                    lv_alias_3_0=(Token)match(input,RULE_ID,FOLLOW_49); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_alias_3_0, grammarAccess.getDimQueryAccess().getAliasIDTerminalRuleCall_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDimQueryRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"alias",
                      							lv_alias_3_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.ID");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,46,FOLLOW_80); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getDimQueryAccess().getLeftParenthesisKeyword_3());
              		
            }
            // InternalSim.g:5530:3: ( ( (lv_parameters_5_0= ruleDimQueryParameter ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleDimQueryParameter ) ) )* )?
            int alt137=2;
            int LA137_0 = input.LA(1);

            if ( (LA137_0==RULE_ID) ) {
                alt137=1;
            }
            switch (alt137) {
                case 1 :
                    // InternalSim.g:5531:4: ( (lv_parameters_5_0= ruleDimQueryParameter ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleDimQueryParameter ) ) )*
                    {
                    // InternalSim.g:5531:4: ( (lv_parameters_5_0= ruleDimQueryParameter ) )
                    // InternalSim.g:5532:5: (lv_parameters_5_0= ruleDimQueryParameter )
                    {
                    // InternalSim.g:5532:5: (lv_parameters_5_0= ruleDimQueryParameter )
                    // InternalSim.g:5533:6: lv_parameters_5_0= ruleDimQueryParameter
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDimQueryAccess().getParametersDimQueryParameterParserRuleCall_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_52);
                    lv_parameters_5_0=ruleDimQueryParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDimQueryRule());
                      						}
                      						add(
                      							current,
                      							"parameters",
                      							lv_parameters_5_0,
                      							"com.mimacom.ddd.dm.dim.Dim.DimQueryParameter");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSim.g:5550:4: (otherlv_6= ',' ( (lv_parameters_7_0= ruleDimQueryParameter ) ) )*
                    loop136:
                    do {
                        int alt136=2;
                        int LA136_0 = input.LA(1);

                        if ( (LA136_0==37) ) {
                            alt136=1;
                        }


                        switch (alt136) {
                    	case 1 :
                    	    // InternalSim.g:5551:5: otherlv_6= ',' ( (lv_parameters_7_0= ruleDimQueryParameter ) )
                    	    {
                    	    otherlv_6=(Token)match(input,37,FOLLOW_3); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_6, grammarAccess.getDimQueryAccess().getCommaKeyword_4_1_0());
                    	      				
                    	    }
                    	    // InternalSim.g:5555:5: ( (lv_parameters_7_0= ruleDimQueryParameter ) )
                    	    // InternalSim.g:5556:6: (lv_parameters_7_0= ruleDimQueryParameter )
                    	    {
                    	    // InternalSim.g:5556:6: (lv_parameters_7_0= ruleDimQueryParameter )
                    	    // InternalSim.g:5557:7: lv_parameters_7_0= ruleDimQueryParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getDimQueryAccess().getParametersDimQueryParameterParserRuleCall_4_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_52);
                    	    lv_parameters_7_0=ruleDimQueryParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getDimQueryRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"parameters",
                    	      								lv_parameters_7_0,
                    	      								"com.mimacom.ddd.dm.dim.Dim.DimQueryParameter");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop136;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_8=(Token)match(input,48,FOLLOW_20); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getDimQueryAccess().getRightParenthesisKeyword_5());
              		
            }
            otherlv_9=(Token)match(input,29,FOLLOW_81); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getDimQueryAccess().getColonKeyword_6());
              		
            }
            // InternalSim.g:5584:3: ( (otherlv_10= RULE_ID ) )?
            int alt138=2;
            int LA138_0 = input.LA(1);

            if ( (LA138_0==RULE_ID) ) {
                int LA138_1 = input.LA(2);

                if ( (LA138_1==46) ) {
                    int LA138_3 = input.LA(3);

                    if ( (LA138_3==RULE_NATURAL) ) {
                        alt138=1;
                    }
                }
                else if ( (LA138_1==EOF||(LA138_1>=RULE_ID && LA138_1<=RULE_RICH_TEXT_START)||LA138_1==24||LA138_1==30||(LA138_1>=32 && LA138_1<=36)||(LA138_1>=39 && LA138_1<=42)||LA138_1==47||LA138_1==49||(LA138_1>=51 && LA138_1<=52)||LA138_1==55||(LA138_1>=58 && LA138_1<=59)||LA138_1==93||(LA138_1>=101 && LA138_1<=102)||LA138_1==146) ) {
                    alt138=1;
                }
            }
            switch (alt138) {
                case 1 :
                    // InternalSim.g:5585:4: (otherlv_10= RULE_ID )
                    {
                    // InternalSim.g:5585:4: (otherlv_10= RULE_ID )
                    // InternalSim.g:5586:5: otherlv_10= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDimQueryRule());
                      					}
                      				
                    }
                    otherlv_10=(Token)match(input,RULE_ID,FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_10, grammarAccess.getDimQueryAccess().getTypeDTypeCrossReference_7_0());
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:5597:3: ( (lv_multiplicity_11_0= ruleDMultiplicity ) )?
            int alt139=2;
            int LA139_0 = input.LA(1);

            if ( ((LA139_0>=46 && LA139_0<=47)||LA139_0==93||LA139_0==146) ) {
                alt139=1;
            }
            switch (alt139) {
                case 1 :
                    // InternalSim.g:5598:4: (lv_multiplicity_11_0= ruleDMultiplicity )
                    {
                    // InternalSim.g:5598:4: (lv_multiplicity_11_0= ruleDMultiplicity )
                    // InternalSim.g:5599:5: lv_multiplicity_11_0= ruleDMultiplicity
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDimQueryAccess().getMultiplicityDMultiplicityParserRuleCall_8_0());
                      				
                    }
                    pushFollow(FOLLOW_83);
                    lv_multiplicity_11_0=ruleDMultiplicity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDimQueryRule());
                      					}
                      					set(
                      						current,
                      						"multiplicity",
                      						lv_multiplicity_11_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DMultiplicity");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:5616:3: (otherlv_12= 'returns' ( (lv_returns_13_0= ruleDExpression ) ) )?
            int alt140=2;
            int LA140_0 = input.LA(1);

            if ( (LA140_0==58) ) {
                alt140=1;
            }
            switch (alt140) {
                case 1 :
                    // InternalSim.g:5617:4: otherlv_12= 'returns' ( (lv_returns_13_0= ruleDExpression ) )
                    {
                    otherlv_12=(Token)match(input,58,FOLLOW_57); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getDimQueryAccess().getReturnsKeyword_9_0());
                      			
                    }
                    // InternalSim.g:5621:4: ( (lv_returns_13_0= ruleDExpression ) )
                    // InternalSim.g:5622:5: (lv_returns_13_0= ruleDExpression )
                    {
                    // InternalSim.g:5622:5: (lv_returns_13_0= ruleDExpression )
                    // InternalSim.g:5623:6: lv_returns_13_0= ruleDExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDimQueryAccess().getReturnsDExpressionParserRuleCall_9_1_0());
                      					
                    }
                    pushFollow(FOLLOW_38);
                    lv_returns_13_0=ruleDExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDimQueryRule());
                      						}
                      						set(
                      							current,
                      							"returns",
                      							lv_returns_13_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.DExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSim.g:5641:3: ( (lv_description_14_0= ruleDRichText ) )?
            int alt141=2;
            int LA141_0 = input.LA(1);

            if ( ((LA141_0>=RULE_PLAIN_TEXT_ONLY && LA141_0<=RULE_RICH_TEXT_START)) ) {
                alt141=1;
            }
            switch (alt141) {
                case 1 :
                    // InternalSim.g:5642:4: (lv_description_14_0= ruleDRichText )
                    {
                    // InternalSim.g:5642:4: (lv_description_14_0= ruleDRichText )
                    // InternalSim.g:5643:5: lv_description_14_0= ruleDRichText
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDimQueryAccess().getDescriptionDRichTextParserRuleCall_10_0());
                      				
                    }
                    pushFollow(FOLLOW_39);
                    lv_description_14_0=ruleDRichText();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDimQueryRule());
                      					}
                      					set(
                      						current,
                      						"description",
                      						lv_description_14_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:5660:3: ( (lv_notes_15_0= ruleDNote ) )*
            loop142:
            do {
                int alt142=2;
                int LA142_0 = input.LA(1);

                if ( (LA142_0==59) ) {
                    alt142=1;
                }


                switch (alt142) {
            	case 1 :
            	    // InternalSim.g:5661:4: (lv_notes_15_0= ruleDNote )
            	    {
            	    // InternalSim.g:5661:4: (lv_notes_15_0= ruleDNote )
            	    // InternalSim.g:5662:5: lv_notes_15_0= ruleDNote
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getDimQueryAccess().getNotesDNoteParserRuleCall_11_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_39);
            	    lv_notes_15_0=ruleDNote();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getDimQueryRule());
            	      					}
            	      					add(
            	      						current,
            	      						"notes",
            	      						lv_notes_15_0,
            	      						"com.mimacom.ddd.dm.dmx.Dmx.DNote");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop142;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDimQuery"


    // $ANTLR start "entryRuleDimQueryParameter"
    // InternalSim.g:5683:1: entryRuleDimQueryParameter returns [EObject current=null] : iv_ruleDimQueryParameter= ruleDimQueryParameter EOF ;
    public final EObject entryRuleDimQueryParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDimQueryParameter = null;


        try {
            // InternalSim.g:5683:58: (iv_ruleDimQueryParameter= ruleDimQueryParameter EOF )
            // InternalSim.g:5684:2: iv_ruleDimQueryParameter= ruleDimQueryParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDimQueryParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDimQueryParameter=ruleDimQueryParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDimQueryParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDimQueryParameter"


    // $ANTLR start "ruleDimQueryParameter"
    // InternalSim.g:5690:1: ruleDimQueryParameter returns [EObject current=null] : ( () ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' ( (otherlv_3= RULE_ID ) )? ( (lv_multiplicity_4_0= ruleDMultiplicity ) )? ( (lv_description_5_0= ruleDRichText ) )? ( (lv_notes_6_0= ruleDNote ) )* ) ;
    public final EObject ruleDimQueryParameter() throws RecognitionException {
        EObject current = null;

        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        EObject lv_multiplicity_4_0 = null;

        EObject lv_description_5_0 = null;

        EObject lv_notes_6_0 = null;



        	enterRule();

        try {
            // InternalSim.g:5696:2: ( ( () ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' ( (otherlv_3= RULE_ID ) )? ( (lv_multiplicity_4_0= ruleDMultiplicity ) )? ( (lv_description_5_0= ruleDRichText ) )? ( (lv_notes_6_0= ruleDNote ) )* ) )
            // InternalSim.g:5697:2: ( () ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' ( (otherlv_3= RULE_ID ) )? ( (lv_multiplicity_4_0= ruleDMultiplicity ) )? ( (lv_description_5_0= ruleDRichText ) )? ( (lv_notes_6_0= ruleDNote ) )* )
            {
            // InternalSim.g:5697:2: ( () ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' ( (otherlv_3= RULE_ID ) )? ( (lv_multiplicity_4_0= ruleDMultiplicity ) )? ( (lv_description_5_0= ruleDRichText ) )? ( (lv_notes_6_0= ruleDNote ) )* )
            // InternalSim.g:5698:3: () ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' ( (otherlv_3= RULE_ID ) )? ( (lv_multiplicity_4_0= ruleDMultiplicity ) )? ( (lv_description_5_0= ruleDRichText ) )? ( (lv_notes_6_0= ruleDNote ) )*
            {
            // InternalSim.g:5698:3: ()
            // InternalSim.g:5699:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDimQueryParameterAccess().getDimQueryParameterAction_0(),
              					current);
              			
            }

            }

            // InternalSim.g:5705:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalSim.g:5706:4: (lv_name_1_0= RULE_ID )
            {
            // InternalSim.g:5706:4: (lv_name_1_0= RULE_ID )
            // InternalSim.g:5707:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_20); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getDimQueryParameterAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDimQueryParameterRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.ID");
              				
            }

            }


            }

            otherlv_2=(Token)match(input,29,FOLLOW_73); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getDimQueryParameterAccess().getColonKeyword_2());
              		
            }
            // InternalSim.g:5727:3: ( (otherlv_3= RULE_ID ) )?
            int alt143=2;
            int LA143_0 = input.LA(1);

            if ( (LA143_0==RULE_ID) ) {
                alt143=1;
            }
            switch (alt143) {
                case 1 :
                    // InternalSim.g:5728:4: (otherlv_3= RULE_ID )
                    {
                    // InternalSim.g:5728:4: (otherlv_3= RULE_ID )
                    // InternalSim.g:5729:5: otherlv_3= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDimQueryParameterRule());
                      					}
                      				
                    }
                    otherlv_3=(Token)match(input,RULE_ID,FOLLOW_75); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getDimQueryParameterAccess().getTypeDTypeCrossReference_3_0());
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:5740:3: ( (lv_multiplicity_4_0= ruleDMultiplicity ) )?
            int alt144=2;
            int LA144_0 = input.LA(1);

            if ( ((LA144_0>=46 && LA144_0<=47)||LA144_0==93||LA144_0==146) ) {
                alt144=1;
            }
            switch (alt144) {
                case 1 :
                    // InternalSim.g:5741:4: (lv_multiplicity_4_0= ruleDMultiplicity )
                    {
                    // InternalSim.g:5741:4: (lv_multiplicity_4_0= ruleDMultiplicity )
                    // InternalSim.g:5742:5: lv_multiplicity_4_0= ruleDMultiplicity
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDimQueryParameterAccess().getMultiplicityDMultiplicityParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_38);
                    lv_multiplicity_4_0=ruleDMultiplicity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDimQueryParameterRule());
                      					}
                      					set(
                      						current,
                      						"multiplicity",
                      						lv_multiplicity_4_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DMultiplicity");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:5759:3: ( (lv_description_5_0= ruleDRichText ) )?
            int alt145=2;
            int LA145_0 = input.LA(1);

            if ( ((LA145_0>=RULE_PLAIN_TEXT_ONLY && LA145_0<=RULE_RICH_TEXT_START)) ) {
                alt145=1;
            }
            switch (alt145) {
                case 1 :
                    // InternalSim.g:5760:4: (lv_description_5_0= ruleDRichText )
                    {
                    // InternalSim.g:5760:4: (lv_description_5_0= ruleDRichText )
                    // InternalSim.g:5761:5: lv_description_5_0= ruleDRichText
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDimQueryParameterAccess().getDescriptionDRichTextParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_39);
                    lv_description_5_0=ruleDRichText();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDimQueryParameterRule());
                      					}
                      					set(
                      						current,
                      						"description",
                      						lv_description_5_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:5778:3: ( (lv_notes_6_0= ruleDNote ) )*
            loop146:
            do {
                int alt146=2;
                int LA146_0 = input.LA(1);

                if ( (LA146_0==59) ) {
                    alt146=1;
                }


                switch (alt146) {
            	case 1 :
            	    // InternalSim.g:5779:4: (lv_notes_6_0= ruleDNote )
            	    {
            	    // InternalSim.g:5779:4: (lv_notes_6_0= ruleDNote )
            	    // InternalSim.g:5780:5: lv_notes_6_0= ruleDNote
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getDimQueryParameterAccess().getNotesDNoteParserRuleCall_6_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_39);
            	    lv_notes_6_0=ruleDNote();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getDimQueryParameterRule());
            	      					}
            	      					add(
            	      						current,
            	      						"notes",
            	      						lv_notes_6_0,
            	      						"com.mimacom.ddd.dm.dmx.Dmx.DNote");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop146;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDimQueryParameter"


    // $ANTLR start "entryRuleDNote"
    // InternalSim.g:5801:1: entryRuleDNote returns [EObject current=null] : iv_ruleDNote= ruleDNote EOF ;
    public final EObject entryRuleDNote() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDNote = null;


        try {
            // InternalSim.g:5801:46: (iv_ruleDNote= ruleDNote EOF )
            // InternalSim.g:5802:2: iv_ruleDNote= ruleDNote EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDNoteRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDNote=ruleDNote();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDNote; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDNote"


    // $ANTLR start "ruleDNote"
    // InternalSim.g:5808:1: ruleDNote returns [EObject current=null] : (otherlv_0= 'NOTE' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '{' ( (lv_text_3_0= ruleDRichText ) ) ( (lv_color_4_0= ruleDNoteColor ) )? otherlv_5= '}' ) ;
    public final EObject ruleDNote() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        EObject lv_text_3_0 = null;

        Enumerator lv_color_4_0 = null;



        	enterRule();

        try {
            // InternalSim.g:5814:2: ( (otherlv_0= 'NOTE' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '{' ( (lv_text_3_0= ruleDRichText ) ) ( (lv_color_4_0= ruleDNoteColor ) )? otherlv_5= '}' ) )
            // InternalSim.g:5815:2: (otherlv_0= 'NOTE' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '{' ( (lv_text_3_0= ruleDRichText ) ) ( (lv_color_4_0= ruleDNoteColor ) )? otherlv_5= '}' )
            {
            // InternalSim.g:5815:2: (otherlv_0= 'NOTE' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '{' ( (lv_text_3_0= ruleDRichText ) ) ( (lv_color_4_0= ruleDNoteColor ) )? otherlv_5= '}' )
            // InternalSim.g:5816:3: otherlv_0= 'NOTE' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '{' ( (lv_text_3_0= ruleDRichText ) ) ( (lv_color_4_0= ruleDNoteColor ) )? otherlv_5= '}'
            {
            otherlv_0=(Token)match(input,59,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDNoteAccess().getNOTEKeyword_0());
              		
            }
            // InternalSim.g:5820:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalSim.g:5821:4: (lv_name_1_0= RULE_ID )
            {
            // InternalSim.g:5821:4: (lv_name_1_0= RULE_ID )
            // InternalSim.g:5822:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_64); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getDNoteAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDNoteRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.ID");
              				
            }

            }


            }

            otherlv_2=(Token)match(input,23,FOLLOW_84); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getDNoteAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalSim.g:5842:3: ( (lv_text_3_0= ruleDRichText ) )
            // InternalSim.g:5843:4: (lv_text_3_0= ruleDRichText )
            {
            // InternalSim.g:5843:4: (lv_text_3_0= ruleDRichText )
            // InternalSim.g:5844:5: lv_text_3_0= ruleDRichText
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDNoteAccess().getTextDRichTextParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_85);
            lv_text_3_0=ruleDRichText();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDNoteRule());
              					}
              					set(
              						current,
              						"text",
              						lv_text_3_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSim.g:5861:3: ( (lv_color_4_0= ruleDNoteColor ) )?
            int alt147=2;
            int LA147_0 = input.LA(1);

            if ( ((LA147_0>=105 && LA147_0<=112)) ) {
                alt147=1;
            }
            switch (alt147) {
                case 1 :
                    // InternalSim.g:5862:4: (lv_color_4_0= ruleDNoteColor )
                    {
                    // InternalSim.g:5862:4: (lv_color_4_0= ruleDNoteColor )
                    // InternalSim.g:5863:5: lv_color_4_0= ruleDNoteColor
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDNoteAccess().getColorDNoteColorEnumRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_86);
                    lv_color_4_0=ruleDNoteColor();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDNoteRule());
                      					}
                      					set(
                      						current,
                      						"color",
                      						lv_color_4_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DNoteColor");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getDNoteAccess().getRightCurlyBracketKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDNote"


    // $ANTLR start "entryRuleDImport"
    // InternalSim.g:5888:1: entryRuleDImport returns [EObject current=null] : iv_ruleDImport= ruleDImport EOF ;
    public final EObject entryRuleDImport() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDImport = null;


        try {
            // InternalSim.g:5888:48: (iv_ruleDImport= ruleDImport EOF )
            // InternalSim.g:5889:2: iv_ruleDImport= ruleDImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDImportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDImport=ruleDImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDImport; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDImport"


    // $ANTLR start "ruleDImport"
    // InternalSim.g:5895:1: ruleDImport returns [EObject current=null] : (otherlv_0= 'import' ( (lv_importedNamespace_1_0= ruleDQualifiedNameWithWildcard ) ) ) ;
    public final EObject ruleDImport() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_importedNamespace_1_0 = null;



        	enterRule();

        try {
            // InternalSim.g:5901:2: ( (otherlv_0= 'import' ( (lv_importedNamespace_1_0= ruleDQualifiedNameWithWildcard ) ) ) )
            // InternalSim.g:5902:2: (otherlv_0= 'import' ( (lv_importedNamespace_1_0= ruleDQualifiedNameWithWildcard ) ) )
            {
            // InternalSim.g:5902:2: (otherlv_0= 'import' ( (lv_importedNamespace_1_0= ruleDQualifiedNameWithWildcard ) ) )
            // InternalSim.g:5903:3: otherlv_0= 'import' ( (lv_importedNamespace_1_0= ruleDQualifiedNameWithWildcard ) )
            {
            otherlv_0=(Token)match(input,60,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDImportAccess().getImportKeyword_0());
              		
            }
            // InternalSim.g:5907:3: ( (lv_importedNamespace_1_0= ruleDQualifiedNameWithWildcard ) )
            // InternalSim.g:5908:4: (lv_importedNamespace_1_0= ruleDQualifiedNameWithWildcard )
            {
            // InternalSim.g:5908:4: (lv_importedNamespace_1_0= ruleDQualifiedNameWithWildcard )
            // InternalSim.g:5909:5: lv_importedNamespace_1_0= ruleDQualifiedNameWithWildcard
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDImportAccess().getImportedNamespaceDQualifiedNameWithWildcardParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_importedNamespace_1_0=ruleDQualifiedNameWithWildcard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDImportRule());
              					}
              					set(
              						current,
              						"importedNamespace",
              						lv_importedNamespace_1_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.DQualifiedNameWithWildcard");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDImport"


    // $ANTLR start "entryRuleDmxTest"
    // InternalSim.g:5930:1: entryRuleDmxTest returns [EObject current=null] : iv_ruleDmxTest= ruleDmxTest EOF ;
    public final EObject entryRuleDmxTest() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxTest = null;


        try {
            // InternalSim.g:5930:48: (iv_ruleDmxTest= ruleDmxTest EOF )
            // InternalSim.g:5931:2: iv_ruleDmxTest= ruleDmxTest EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxTestRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxTest=ruleDmxTest();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxTest; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxTest"


    // $ANTLR start "ruleDmxTest"
    // InternalSim.g:5937:1: ruleDmxTest returns [EObject current=null] : (otherlv_0= 'test' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'context' ( (lv_context_3_0= ruleDmxTestContext ) ) (otherlv_4= ',' ( (lv_context_5_0= ruleDmxTestContext ) ) )* )? otherlv_6= '{' ( (lv_expr_7_0= ruleDExpression ) ) otherlv_8= '}' ) ;
    public final EObject ruleDmxTest() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        EObject lv_context_3_0 = null;

        EObject lv_context_5_0 = null;

        EObject lv_expr_7_0 = null;



        	enterRule();

        try {
            // InternalSim.g:5943:2: ( (otherlv_0= 'test' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'context' ( (lv_context_3_0= ruleDmxTestContext ) ) (otherlv_4= ',' ( (lv_context_5_0= ruleDmxTestContext ) ) )* )? otherlv_6= '{' ( (lv_expr_7_0= ruleDExpression ) ) otherlv_8= '}' ) )
            // InternalSim.g:5944:2: (otherlv_0= 'test' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'context' ( (lv_context_3_0= ruleDmxTestContext ) ) (otherlv_4= ',' ( (lv_context_5_0= ruleDmxTestContext ) ) )* )? otherlv_6= '{' ( (lv_expr_7_0= ruleDExpression ) ) otherlv_8= '}' )
            {
            // InternalSim.g:5944:2: (otherlv_0= 'test' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'context' ( (lv_context_3_0= ruleDmxTestContext ) ) (otherlv_4= ',' ( (lv_context_5_0= ruleDmxTestContext ) ) )* )? otherlv_6= '{' ( (lv_expr_7_0= ruleDExpression ) ) otherlv_8= '}' )
            // InternalSim.g:5945:3: otherlv_0= 'test' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'context' ( (lv_context_3_0= ruleDmxTestContext ) ) (otherlv_4= ',' ( (lv_context_5_0= ruleDmxTestContext ) ) )* )? otherlv_6= '{' ( (lv_expr_7_0= ruleDExpression ) ) otherlv_8= '}'
            {
            otherlv_0=(Token)match(input,61,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDmxTestAccess().getTestKeyword_0());
              		
            }
            // InternalSim.g:5949:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalSim.g:5950:4: (lv_name_1_0= RULE_ID )
            {
            // InternalSim.g:5950:4: (lv_name_1_0= RULE_ID )
            // InternalSim.g:5951:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_87); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getDmxTestAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDmxTestRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.ID");
              				
            }

            }


            }

            // InternalSim.g:5967:3: (otherlv_2= 'context' ( (lv_context_3_0= ruleDmxTestContext ) ) (otherlv_4= ',' ( (lv_context_5_0= ruleDmxTestContext ) ) )* )?
            int alt149=2;
            int LA149_0 = input.LA(1);

            if ( (LA149_0==62) ) {
                alt149=1;
            }
            switch (alt149) {
                case 1 :
                    // InternalSim.g:5968:4: otherlv_2= 'context' ( (lv_context_3_0= ruleDmxTestContext ) ) (otherlv_4= ',' ( (lv_context_5_0= ruleDmxTestContext ) ) )*
                    {
                    otherlv_2=(Token)match(input,62,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getDmxTestAccess().getContextKeyword_2_0());
                      			
                    }
                    // InternalSim.g:5972:4: ( (lv_context_3_0= ruleDmxTestContext ) )
                    // InternalSim.g:5973:5: (lv_context_3_0= ruleDmxTestContext )
                    {
                    // InternalSim.g:5973:5: (lv_context_3_0= ruleDmxTestContext )
                    // InternalSim.g:5974:6: lv_context_3_0= ruleDmxTestContext
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDmxTestAccess().getContextDmxTestContextParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_88);
                    lv_context_3_0=ruleDmxTestContext();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDmxTestRule());
                      						}
                      						add(
                      							current,
                      							"context",
                      							lv_context_3_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.DmxTestContext");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSim.g:5991:4: (otherlv_4= ',' ( (lv_context_5_0= ruleDmxTestContext ) ) )*
                    loop148:
                    do {
                        int alt148=2;
                        int LA148_0 = input.LA(1);

                        if ( (LA148_0==37) ) {
                            alt148=1;
                        }


                        switch (alt148) {
                    	case 1 :
                    	    // InternalSim.g:5992:5: otherlv_4= ',' ( (lv_context_5_0= ruleDmxTestContext ) )
                    	    {
                    	    otherlv_4=(Token)match(input,37,FOLLOW_3); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getDmxTestAccess().getCommaKeyword_2_2_0());
                    	      				
                    	    }
                    	    // InternalSim.g:5996:5: ( (lv_context_5_0= ruleDmxTestContext ) )
                    	    // InternalSim.g:5997:6: (lv_context_5_0= ruleDmxTestContext )
                    	    {
                    	    // InternalSim.g:5997:6: (lv_context_5_0= ruleDmxTestContext )
                    	    // InternalSim.g:5998:7: lv_context_5_0= ruleDmxTestContext
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getDmxTestAccess().getContextDmxTestContextParserRuleCall_2_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_88);
                    	    lv_context_5_0=ruleDmxTestContext();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getDmxTestRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"context",
                    	      								lv_context_5_0,
                    	      								"com.mimacom.ddd.dm.dmx.Dmx.DmxTestContext");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop148;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,23,FOLLOW_57); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getDmxTestAccess().getLeftCurlyBracketKeyword_3());
              		
            }
            // InternalSim.g:6021:3: ( (lv_expr_7_0= ruleDExpression ) )
            // InternalSim.g:6022:4: (lv_expr_7_0= ruleDExpression )
            {
            // InternalSim.g:6022:4: (lv_expr_7_0= ruleDExpression )
            // InternalSim.g:6023:5: lv_expr_7_0= ruleDExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDmxTestAccess().getExprDExpressionParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_86);
            lv_expr_7_0=ruleDExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDmxTestRule());
              					}
              					set(
              						current,
              						"expr",
              						lv_expr_7_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.DExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_8=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getDmxTestAccess().getRightCurlyBracketKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxTest"


    // $ANTLR start "entryRuleDmxTestContext"
    // InternalSim.g:6048:1: entryRuleDmxTestContext returns [EObject current=null] : iv_ruleDmxTestContext= ruleDmxTestContext EOF ;
    public final EObject entryRuleDmxTestContext() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxTestContext = null;


        try {
            // InternalSim.g:6048:55: (iv_ruleDmxTestContext= ruleDmxTestContext EOF )
            // InternalSim.g:6049:2: iv_ruleDmxTestContext= ruleDmxTestContext EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxTestContextRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxTestContext=ruleDmxTestContext();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxTestContext; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxTestContext"


    // $ANTLR start "ruleDmxTestContext"
    // InternalSim.g:6055:1: ruleDmxTestContext returns [EObject current=null] : ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= ':' ( (otherlv_2= RULE_ID ) ) ( (lv_multiplicity_3_0= ruleDMultiplicity ) )? (otherlv_4= ':=' ( ( (lv_value_5_0= ruleDmxLiteralExpression ) ) | ( (lv_value_6_0= ruleDmxLiteralListExpression ) ) ) )? ) ;
    public final EObject ruleDmxTestContext() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_multiplicity_3_0 = null;

        EObject lv_value_5_0 = null;

        EObject lv_value_6_0 = null;



        	enterRule();

        try {
            // InternalSim.g:6061:2: ( ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= ':' ( (otherlv_2= RULE_ID ) ) ( (lv_multiplicity_3_0= ruleDMultiplicity ) )? (otherlv_4= ':=' ( ( (lv_value_5_0= ruleDmxLiteralExpression ) ) | ( (lv_value_6_0= ruleDmxLiteralListExpression ) ) ) )? ) )
            // InternalSim.g:6062:2: ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= ':' ( (otherlv_2= RULE_ID ) ) ( (lv_multiplicity_3_0= ruleDMultiplicity ) )? (otherlv_4= ':=' ( ( (lv_value_5_0= ruleDmxLiteralExpression ) ) | ( (lv_value_6_0= ruleDmxLiteralListExpression ) ) ) )? )
            {
            // InternalSim.g:6062:2: ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= ':' ( (otherlv_2= RULE_ID ) ) ( (lv_multiplicity_3_0= ruleDMultiplicity ) )? (otherlv_4= ':=' ( ( (lv_value_5_0= ruleDmxLiteralExpression ) ) | ( (lv_value_6_0= ruleDmxLiteralListExpression ) ) ) )? )
            // InternalSim.g:6063:3: ( (lv_name_0_0= RULE_ID ) ) otherlv_1= ':' ( (otherlv_2= RULE_ID ) ) ( (lv_multiplicity_3_0= ruleDMultiplicity ) )? (otherlv_4= ':=' ( ( (lv_value_5_0= ruleDmxLiteralExpression ) ) | ( (lv_value_6_0= ruleDmxLiteralListExpression ) ) ) )?
            {
            // InternalSim.g:6063:3: ( (lv_name_0_0= RULE_ID ) )
            // InternalSim.g:6064:4: (lv_name_0_0= RULE_ID )
            {
            // InternalSim.g:6064:4: (lv_name_0_0= RULE_ID )
            // InternalSim.g:6065:5: lv_name_0_0= RULE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ID,FOLLOW_20); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getDmxTestContextAccess().getNameIDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDmxTestContextRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.ID");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,29,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getDmxTestContextAccess().getColonKeyword_1());
              		
            }
            // InternalSim.g:6085:3: ( (otherlv_2= RULE_ID ) )
            // InternalSim.g:6086:4: (otherlv_2= RULE_ID )
            {
            // InternalSim.g:6086:4: (otherlv_2= RULE_ID )
            // InternalSim.g:6087:5: otherlv_2= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDmxTestContextRule());
              					}
              				
            }
            otherlv_2=(Token)match(input,RULE_ID,FOLLOW_89); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_2, grammarAccess.getDmxTestContextAccess().getTypeDTypeCrossReference_2_0());
              				
            }

            }


            }

            // InternalSim.g:6098:3: ( (lv_multiplicity_3_0= ruleDMultiplicity ) )?
            int alt150=2;
            int LA150_0 = input.LA(1);

            if ( ((LA150_0>=46 && LA150_0<=47)||LA150_0==93||LA150_0==146) ) {
                alt150=1;
            }
            switch (alt150) {
                case 1 :
                    // InternalSim.g:6099:4: (lv_multiplicity_3_0= ruleDMultiplicity )
                    {
                    // InternalSim.g:6099:4: (lv_multiplicity_3_0= ruleDMultiplicity )
                    // InternalSim.g:6100:5: lv_multiplicity_3_0= ruleDMultiplicity
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDmxTestContextAccess().getMultiplicityDMultiplicityParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_90);
                    lv_multiplicity_3_0=ruleDMultiplicity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDmxTestContextRule());
                      					}
                      					set(
                      						current,
                      						"multiplicity",
                      						lv_multiplicity_3_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DMultiplicity");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:6117:3: (otherlv_4= ':=' ( ( (lv_value_5_0= ruleDmxLiteralExpression ) ) | ( (lv_value_6_0= ruleDmxLiteralListExpression ) ) ) )?
            int alt152=2;
            int LA152_0 = input.LA(1);

            if ( (LA152_0==63) ) {
                alt152=1;
            }
            switch (alt152) {
                case 1 :
                    // InternalSim.g:6118:4: otherlv_4= ':=' ( ( (lv_value_5_0= ruleDmxLiteralExpression ) ) | ( (lv_value_6_0= ruleDmxLiteralListExpression ) ) )
                    {
                    otherlv_4=(Token)match(input,63,FOLLOW_91); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getDmxTestContextAccess().getColonEqualsSignKeyword_4_0());
                      			
                    }
                    // InternalSim.g:6122:4: ( ( (lv_value_5_0= ruleDmxLiteralExpression ) ) | ( (lv_value_6_0= ruleDmxLiteralListExpression ) ) )
                    int alt151=2;
                    int LA151_0 = input.LA(1);

                    if ( ((LA151_0>=RULE_NATURAL && LA151_0<=RULE_STRING)||LA151_0==39||LA151_0==42||(LA151_0>=85 && LA151_0<=90)) ) {
                        alt151=1;
                    }
                    else if ( (LA151_0==23) ) {
                        alt151=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 151, 0, input);

                        throw nvae;
                    }
                    switch (alt151) {
                        case 1 :
                            // InternalSim.g:6123:5: ( (lv_value_5_0= ruleDmxLiteralExpression ) )
                            {
                            // InternalSim.g:6123:5: ( (lv_value_5_0= ruleDmxLiteralExpression ) )
                            // InternalSim.g:6124:6: (lv_value_5_0= ruleDmxLiteralExpression )
                            {
                            // InternalSim.g:6124:6: (lv_value_5_0= ruleDmxLiteralExpression )
                            // InternalSim.g:6125:7: lv_value_5_0= ruleDmxLiteralExpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getDmxTestContextAccess().getValueDmxLiteralExpressionParserRuleCall_4_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_value_5_0=ruleDmxLiteralExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getDmxTestContextRule());
                              							}
                              							set(
                              								current,
                              								"value",
                              								lv_value_5_0,
                              								"com.mimacom.ddd.dm.dmx.Dmx.DmxLiteralExpression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalSim.g:6143:5: ( (lv_value_6_0= ruleDmxLiteralListExpression ) )
                            {
                            // InternalSim.g:6143:5: ( (lv_value_6_0= ruleDmxLiteralListExpression ) )
                            // InternalSim.g:6144:6: (lv_value_6_0= ruleDmxLiteralListExpression )
                            {
                            // InternalSim.g:6144:6: (lv_value_6_0= ruleDmxLiteralListExpression )
                            // InternalSim.g:6145:7: lv_value_6_0= ruleDmxLiteralListExpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getDmxTestContextAccess().getValueDmxLiteralListExpressionParserRuleCall_4_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_value_6_0=ruleDmxLiteralListExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getDmxTestContextRule());
                              							}
                              							set(
                              								current,
                              								"value",
                              								lv_value_6_0,
                              								"com.mimacom.ddd.dm.dmx.Dmx.DmxLiteralListExpression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxTestContext"


    // $ANTLR start "entryRuleDmxBaseTypeSet"
    // InternalSim.g:6168:1: entryRuleDmxBaseTypeSet returns [EObject current=null] : iv_ruleDmxBaseTypeSet= ruleDmxBaseTypeSet EOF ;
    public final EObject entryRuleDmxBaseTypeSet() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxBaseTypeSet = null;


        try {
            // InternalSim.g:6168:55: (iv_ruleDmxBaseTypeSet= ruleDmxBaseTypeSet EOF )
            // InternalSim.g:6169:2: iv_ruleDmxBaseTypeSet= ruleDmxBaseTypeSet EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxBaseTypeSetRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxBaseTypeSet=ruleDmxBaseTypeSet();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxBaseTypeSet; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxBaseTypeSet"


    // $ANTLR start "ruleDmxBaseTypeSet"
    // InternalSim.g:6175:1: ruleDmxBaseTypeSet returns [EObject current=null] : ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= 'in' otherlv_2= '(' ( (lv_members_3_0= ruleDmxBaseType ) ) (otherlv_4= ',' ( (lv_members_5_0= ruleDmxBaseType ) ) )+ otherlv_6= ')' ) ;
    public final EObject ruleDmxBaseTypeSet() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Enumerator lv_members_3_0 = null;

        Enumerator lv_members_5_0 = null;



        	enterRule();

        try {
            // InternalSim.g:6181:2: ( ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= 'in' otherlv_2= '(' ( (lv_members_3_0= ruleDmxBaseType ) ) (otherlv_4= ',' ( (lv_members_5_0= ruleDmxBaseType ) ) )+ otherlv_6= ')' ) )
            // InternalSim.g:6182:2: ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= 'in' otherlv_2= '(' ( (lv_members_3_0= ruleDmxBaseType ) ) (otherlv_4= ',' ( (lv_members_5_0= ruleDmxBaseType ) ) )+ otherlv_6= ')' )
            {
            // InternalSim.g:6182:2: ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= 'in' otherlv_2= '(' ( (lv_members_3_0= ruleDmxBaseType ) ) (otherlv_4= ',' ( (lv_members_5_0= ruleDmxBaseType ) ) )+ otherlv_6= ')' )
            // InternalSim.g:6183:3: ( (lv_name_0_0= RULE_ID ) ) otherlv_1= 'in' otherlv_2= '(' ( (lv_members_3_0= ruleDmxBaseType ) ) (otherlv_4= ',' ( (lv_members_5_0= ruleDmxBaseType ) ) )+ otherlv_6= ')'
            {
            // InternalSim.g:6183:3: ( (lv_name_0_0= RULE_ID ) )
            // InternalSim.g:6184:4: (lv_name_0_0= RULE_ID )
            {
            // InternalSim.g:6184:4: (lv_name_0_0= RULE_ID )
            // InternalSim.g:6185:5: lv_name_0_0= RULE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ID,FOLLOW_92); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getDmxBaseTypeSetAccess().getNameIDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDmxBaseTypeSetRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.ID");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,64,FOLLOW_49); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getDmxBaseTypeSetAccess().getInKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,46,FOLLOW_93); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getDmxBaseTypeSetAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalSim.g:6209:3: ( (lv_members_3_0= ruleDmxBaseType ) )
            // InternalSim.g:6210:4: (lv_members_3_0= ruleDmxBaseType )
            {
            // InternalSim.g:6210:4: (lv_members_3_0= ruleDmxBaseType )
            // InternalSim.g:6211:5: lv_members_3_0= ruleDmxBaseType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDmxBaseTypeSetAccess().getMembersDmxBaseTypeEnumRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_94);
            lv_members_3_0=ruleDmxBaseType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDmxBaseTypeSetRule());
              					}
              					add(
              						current,
              						"members",
              						lv_members_3_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.DmxBaseType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSim.g:6228:3: (otherlv_4= ',' ( (lv_members_5_0= ruleDmxBaseType ) ) )+
            int cnt153=0;
            loop153:
            do {
                int alt153=2;
                int LA153_0 = input.LA(1);

                if ( (LA153_0==37) ) {
                    alt153=1;
                }


                switch (alt153) {
            	case 1 :
            	    // InternalSim.g:6229:4: otherlv_4= ',' ( (lv_members_5_0= ruleDmxBaseType ) )
            	    {
            	    otherlv_4=(Token)match(input,37,FOLLOW_93); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getDmxBaseTypeSetAccess().getCommaKeyword_4_0());
            	      			
            	    }
            	    // InternalSim.g:6233:4: ( (lv_members_5_0= ruleDmxBaseType ) )
            	    // InternalSim.g:6234:5: (lv_members_5_0= ruleDmxBaseType )
            	    {
            	    // InternalSim.g:6234:5: (lv_members_5_0= ruleDmxBaseType )
            	    // InternalSim.g:6235:6: lv_members_5_0= ruleDmxBaseType
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getDmxBaseTypeSetAccess().getMembersDmxBaseTypeEnumRuleCall_4_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_52);
            	    lv_members_5_0=ruleDmxBaseType();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getDmxBaseTypeSetRule());
            	      						}
            	      						add(
            	      							current,
            	      							"members",
            	      							lv_members_5_0,
            	      							"com.mimacom.ddd.dm.dmx.Dmx.DmxBaseType");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt153 >= 1 ) break loop153;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(153, input);
                        throw eee;
                }
                cnt153++;
            } while (true);

            otherlv_6=(Token)match(input,48,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getDmxBaseTypeSetAccess().getRightParenthesisKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxBaseTypeSet"


    // $ANTLR start "entryRuleDmxArchetype"
    // InternalSim.g:6261:1: entryRuleDmxArchetype returns [EObject current=null] : iv_ruleDmxArchetype= ruleDmxArchetype EOF ;
    public final EObject entryRuleDmxArchetype() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxArchetype = null;


        try {
            // InternalSim.g:6261:53: (iv_ruleDmxArchetype= ruleDmxArchetype EOF )
            // InternalSim.g:6262:2: iv_ruleDmxArchetype= ruleDmxArchetype EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxArchetypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxArchetype=ruleDmxArchetype();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxArchetype; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxArchetype"


    // $ANTLR start "ruleDmxArchetype"
    // InternalSim.g:6268:1: ruleDmxArchetype returns [EObject current=null] : (otherlv_0= 'archetype' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= 'is' ( (lv_baseType_3_0= ruleDmxBaseType ) ) ( (lv_description_4_0= ruleDRichText ) )? ) ;
    public final EObject ruleDmxArchetype() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Enumerator lv_baseType_3_0 = null;

        EObject lv_description_4_0 = null;



        	enterRule();

        try {
            // InternalSim.g:6274:2: ( (otherlv_0= 'archetype' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= 'is' ( (lv_baseType_3_0= ruleDmxBaseType ) ) ( (lv_description_4_0= ruleDRichText ) )? ) )
            // InternalSim.g:6275:2: (otherlv_0= 'archetype' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= 'is' ( (lv_baseType_3_0= ruleDmxBaseType ) ) ( (lv_description_4_0= ruleDRichText ) )? )
            {
            // InternalSim.g:6275:2: (otherlv_0= 'archetype' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= 'is' ( (lv_baseType_3_0= ruleDmxBaseType ) ) ( (lv_description_4_0= ruleDRichText ) )? )
            // InternalSim.g:6276:3: otherlv_0= 'archetype' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= 'is' ( (lv_baseType_3_0= ruleDmxBaseType ) ) ( (lv_description_4_0= ruleDRichText ) )?
            {
            otherlv_0=(Token)match(input,65,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDmxArchetypeAccess().getArchetypeKeyword_0());
              		
            }
            // InternalSim.g:6280:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalSim.g:6281:4: (lv_name_1_0= RULE_ID )
            {
            // InternalSim.g:6281:4: (lv_name_1_0= RULE_ID )
            // InternalSim.g:6282:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_95); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getDmxArchetypeAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDmxArchetypeRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.ID");
              				
            }

            }


            }

            otherlv_2=(Token)match(input,66,FOLLOW_93); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getDmxArchetypeAccess().getIsKeyword_2());
              		
            }
            // InternalSim.g:6302:3: ( (lv_baseType_3_0= ruleDmxBaseType ) )
            // InternalSim.g:6303:4: (lv_baseType_3_0= ruleDmxBaseType )
            {
            // InternalSim.g:6303:4: (lv_baseType_3_0= ruleDmxBaseType )
            // InternalSim.g:6304:5: lv_baseType_3_0= ruleDmxBaseType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDmxArchetypeAccess().getBaseTypeDmxBaseTypeEnumRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_47);
            lv_baseType_3_0=ruleDmxBaseType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDmxArchetypeRule());
              					}
              					set(
              						current,
              						"baseType",
              						lv_baseType_3_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.DmxBaseType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSim.g:6321:3: ( (lv_description_4_0= ruleDRichText ) )?
            int alt154=2;
            int LA154_0 = input.LA(1);

            if ( ((LA154_0>=RULE_PLAIN_TEXT_ONLY && LA154_0<=RULE_RICH_TEXT_START)) ) {
                alt154=1;
            }
            switch (alt154) {
                case 1 :
                    // InternalSim.g:6322:4: (lv_description_4_0= ruleDRichText )
                    {
                    // InternalSim.g:6322:4: (lv_description_4_0= ruleDRichText )
                    // InternalSim.g:6323:5: lv_description_4_0= ruleDRichText
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDmxArchetypeAccess().getDescriptionDRichTextParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_description_4_0=ruleDRichText();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDmxArchetypeRule());
                      					}
                      					set(
                      						current,
                      						"description",
                      						lv_description_4_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxArchetype"


    // $ANTLR start "entryRuleDmxFilter"
    // InternalSim.g:6344:1: entryRuleDmxFilter returns [EObject current=null] : iv_ruleDmxFilter= ruleDmxFilter EOF ;
    public final EObject entryRuleDmxFilter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxFilter = null;


        try {
            // InternalSim.g:6344:50: (iv_ruleDmxFilter= ruleDmxFilter EOF )
            // InternalSim.g:6345:2: iv_ruleDmxFilter= ruleDmxFilter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxFilterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxFilter=ruleDmxFilter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxFilter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxFilter"


    // $ANTLR start "ruleDmxFilter"
    // InternalSim.g:6351:1: ruleDmxFilter returns [EObject current=null] : (otherlv_0= 'filter' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_parameters_3_0= ruleDmxFilterParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleDmxFilterParameter ) ) )* )? otherlv_6= ')' otherlv_7= ':' ( (lv_typeDesc_8_0= ruleDmxFilterTypeDescriptor ) ) (otherlv_9= 'with' ( (lv_withTypeSet_10_0= ruleDmxBaseTypeSet ) ) )? ) ;
    public final EObject ruleDmxFilter() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        EObject lv_parameters_3_0 = null;

        EObject lv_parameters_5_0 = null;

        EObject lv_typeDesc_8_0 = null;

        EObject lv_withTypeSet_10_0 = null;



        	enterRule();

        try {
            // InternalSim.g:6357:2: ( (otherlv_0= 'filter' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_parameters_3_0= ruleDmxFilterParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleDmxFilterParameter ) ) )* )? otherlv_6= ')' otherlv_7= ':' ( (lv_typeDesc_8_0= ruleDmxFilterTypeDescriptor ) ) (otherlv_9= 'with' ( (lv_withTypeSet_10_0= ruleDmxBaseTypeSet ) ) )? ) )
            // InternalSim.g:6358:2: (otherlv_0= 'filter' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_parameters_3_0= ruleDmxFilterParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleDmxFilterParameter ) ) )* )? otherlv_6= ')' otherlv_7= ':' ( (lv_typeDesc_8_0= ruleDmxFilterTypeDescriptor ) ) (otherlv_9= 'with' ( (lv_withTypeSet_10_0= ruleDmxBaseTypeSet ) ) )? )
            {
            // InternalSim.g:6358:2: (otherlv_0= 'filter' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_parameters_3_0= ruleDmxFilterParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleDmxFilterParameter ) ) )* )? otherlv_6= ')' otherlv_7= ':' ( (lv_typeDesc_8_0= ruleDmxFilterTypeDescriptor ) ) (otherlv_9= 'with' ( (lv_withTypeSet_10_0= ruleDmxBaseTypeSet ) ) )? )
            // InternalSim.g:6359:3: otherlv_0= 'filter' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_parameters_3_0= ruleDmxFilterParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleDmxFilterParameter ) ) )* )? otherlv_6= ')' otherlv_7= ':' ( (lv_typeDesc_8_0= ruleDmxFilterTypeDescriptor ) ) (otherlv_9= 'with' ( (lv_withTypeSet_10_0= ruleDmxBaseTypeSet ) ) )?
            {
            otherlv_0=(Token)match(input,67,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDmxFilterAccess().getFilterKeyword_0());
              		
            }
            // InternalSim.g:6363:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalSim.g:6364:4: (lv_name_1_0= RULE_ID )
            {
            // InternalSim.g:6364:4: (lv_name_1_0= RULE_ID )
            // InternalSim.g:6365:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_49); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getDmxFilterAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDmxFilterRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.ID");
              				
            }

            }


            }

            otherlv_2=(Token)match(input,46,FOLLOW_80); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getDmxFilterAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalSim.g:6385:3: ( ( (lv_parameters_3_0= ruleDmxFilterParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleDmxFilterParameter ) ) )* )?
            int alt156=2;
            int LA156_0 = input.LA(1);

            if ( (LA156_0==RULE_ID) ) {
                alt156=1;
            }
            switch (alt156) {
                case 1 :
                    // InternalSim.g:6386:4: ( (lv_parameters_3_0= ruleDmxFilterParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleDmxFilterParameter ) ) )*
                    {
                    // InternalSim.g:6386:4: ( (lv_parameters_3_0= ruleDmxFilterParameter ) )
                    // InternalSim.g:6387:5: (lv_parameters_3_0= ruleDmxFilterParameter )
                    {
                    // InternalSim.g:6387:5: (lv_parameters_3_0= ruleDmxFilterParameter )
                    // InternalSim.g:6388:6: lv_parameters_3_0= ruleDmxFilterParameter
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDmxFilterAccess().getParametersDmxFilterParameterParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_52);
                    lv_parameters_3_0=ruleDmxFilterParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDmxFilterRule());
                      						}
                      						add(
                      							current,
                      							"parameters",
                      							lv_parameters_3_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.DmxFilterParameter");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSim.g:6405:4: (otherlv_4= ',' ( (lv_parameters_5_0= ruleDmxFilterParameter ) ) )*
                    loop155:
                    do {
                        int alt155=2;
                        int LA155_0 = input.LA(1);

                        if ( (LA155_0==37) ) {
                            alt155=1;
                        }


                        switch (alt155) {
                    	case 1 :
                    	    // InternalSim.g:6406:5: otherlv_4= ',' ( (lv_parameters_5_0= ruleDmxFilterParameter ) )
                    	    {
                    	    otherlv_4=(Token)match(input,37,FOLLOW_3); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getDmxFilterAccess().getCommaKeyword_3_1_0());
                    	      				
                    	    }
                    	    // InternalSim.g:6410:5: ( (lv_parameters_5_0= ruleDmxFilterParameter ) )
                    	    // InternalSim.g:6411:6: (lv_parameters_5_0= ruleDmxFilterParameter )
                    	    {
                    	    // InternalSim.g:6411:6: (lv_parameters_5_0= ruleDmxFilterParameter )
                    	    // InternalSim.g:6412:7: lv_parameters_5_0= ruleDmxFilterParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getDmxFilterAccess().getParametersDmxFilterParameterParserRuleCall_3_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_52);
                    	    lv_parameters_5_0=ruleDmxFilterParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getDmxFilterRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"parameters",
                    	      								lv_parameters_5_0,
                    	      								"com.mimacom.ddd.dm.dmx.Dmx.DmxFilterParameter");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop155;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,48,FOLLOW_20); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getDmxFilterAccess().getRightParenthesisKeyword_4());
              		
            }
            otherlv_7=(Token)match(input,29,FOLLOW_96); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getDmxFilterAccess().getColonKeyword_5());
              		
            }
            // InternalSim.g:6439:3: ( (lv_typeDesc_8_0= ruleDmxFilterTypeDescriptor ) )
            // InternalSim.g:6440:4: (lv_typeDesc_8_0= ruleDmxFilterTypeDescriptor )
            {
            // InternalSim.g:6440:4: (lv_typeDesc_8_0= ruleDmxFilterTypeDescriptor )
            // InternalSim.g:6441:5: lv_typeDesc_8_0= ruleDmxFilterTypeDescriptor
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDmxFilterAccess().getTypeDescDmxFilterTypeDescriptorParserRuleCall_6_0());
              				
            }
            pushFollow(FOLLOW_97);
            lv_typeDesc_8_0=ruleDmxFilterTypeDescriptor();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDmxFilterRule());
              					}
              					set(
              						current,
              						"typeDesc",
              						lv_typeDesc_8_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.DmxFilterTypeDescriptor");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSim.g:6458:3: (otherlv_9= 'with' ( (lv_withTypeSet_10_0= ruleDmxBaseTypeSet ) ) )?
            int alt157=2;
            int LA157_0 = input.LA(1);

            if ( (LA157_0==68) ) {
                alt157=1;
            }
            switch (alt157) {
                case 1 :
                    // InternalSim.g:6459:4: otherlv_9= 'with' ( (lv_withTypeSet_10_0= ruleDmxBaseTypeSet ) )
                    {
                    otherlv_9=(Token)match(input,68,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getDmxFilterAccess().getWithKeyword_7_0());
                      			
                    }
                    // InternalSim.g:6463:4: ( (lv_withTypeSet_10_0= ruleDmxBaseTypeSet ) )
                    // InternalSim.g:6464:5: (lv_withTypeSet_10_0= ruleDmxBaseTypeSet )
                    {
                    // InternalSim.g:6464:5: (lv_withTypeSet_10_0= ruleDmxBaseTypeSet )
                    // InternalSim.g:6465:6: lv_withTypeSet_10_0= ruleDmxBaseTypeSet
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDmxFilterAccess().getWithTypeSetDmxBaseTypeSetParserRuleCall_7_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_withTypeSet_10_0=ruleDmxBaseTypeSet();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDmxFilterRule());
                      						}
                      						set(
                      							current,
                      							"withTypeSet",
                      							lv_withTypeSet_10_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.DmxBaseTypeSet");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxFilter"


    // $ANTLR start "entryRuleDmxFilterTypeDescriptor"
    // InternalSim.g:6487:1: entryRuleDmxFilterTypeDescriptor returns [EObject current=null] : iv_ruleDmxFilterTypeDescriptor= ruleDmxFilterTypeDescriptor EOF ;
    public final EObject entryRuleDmxFilterTypeDescriptor() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxFilterTypeDescriptor = null;


        try {
            // InternalSim.g:6487:64: (iv_ruleDmxFilterTypeDescriptor= ruleDmxFilterTypeDescriptor EOF )
            // InternalSim.g:6488:2: iv_ruleDmxFilterTypeDescriptor= ruleDmxFilterTypeDescriptor EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxFilterTypeDescriptorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxFilterTypeDescriptor=ruleDmxFilterTypeDescriptor();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxFilterTypeDescriptor; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxFilterTypeDescriptor"


    // $ANTLR start "ruleDmxFilterTypeDescriptor"
    // InternalSim.g:6494:1: ruleDmxFilterTypeDescriptor returns [EObject current=null] : ( ( ( (lv_single_0_0= ruleDmxBaseType ) ) | ( (otherlv_1= RULE_ID ) ) ) ( (lv_collection_2_0= '*' ) )? ) ;
    public final EObject ruleDmxFilterTypeDescriptor() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_collection_2_0=null;
        Enumerator lv_single_0_0 = null;



        	enterRule();

        try {
            // InternalSim.g:6500:2: ( ( ( ( (lv_single_0_0= ruleDmxBaseType ) ) | ( (otherlv_1= RULE_ID ) ) ) ( (lv_collection_2_0= '*' ) )? ) )
            // InternalSim.g:6501:2: ( ( ( (lv_single_0_0= ruleDmxBaseType ) ) | ( (otherlv_1= RULE_ID ) ) ) ( (lv_collection_2_0= '*' ) )? )
            {
            // InternalSim.g:6501:2: ( ( ( (lv_single_0_0= ruleDmxBaseType ) ) | ( (otherlv_1= RULE_ID ) ) ) ( (lv_collection_2_0= '*' ) )? )
            // InternalSim.g:6502:3: ( ( (lv_single_0_0= ruleDmxBaseType ) ) | ( (otherlv_1= RULE_ID ) ) ) ( (lv_collection_2_0= '*' ) )?
            {
            // InternalSim.g:6502:3: ( ( (lv_single_0_0= ruleDmxBaseType ) ) | ( (otherlv_1= RULE_ID ) ) )
            int alt158=2;
            int LA158_0 = input.LA(1);

            if ( ((LA158_0>=113 && LA158_0<=123)) ) {
                alt158=1;
            }
            else if ( (LA158_0==RULE_ID) ) {
                alt158=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 158, 0, input);

                throw nvae;
            }
            switch (alt158) {
                case 1 :
                    // InternalSim.g:6503:4: ( (lv_single_0_0= ruleDmxBaseType ) )
                    {
                    // InternalSim.g:6503:4: ( (lv_single_0_0= ruleDmxBaseType ) )
                    // InternalSim.g:6504:5: (lv_single_0_0= ruleDmxBaseType )
                    {
                    // InternalSim.g:6504:5: (lv_single_0_0= ruleDmxBaseType )
                    // InternalSim.g:6505:6: lv_single_0_0= ruleDmxBaseType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDmxFilterTypeDescriptorAccess().getSingleDmxBaseTypeEnumRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_98);
                    lv_single_0_0=ruleDmxBaseType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDmxFilterTypeDescriptorRule());
                      						}
                      						set(
                      							current,
                      							"single",
                      							lv_single_0_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.DmxBaseType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:6523:4: ( (otherlv_1= RULE_ID ) )
                    {
                    // InternalSim.g:6523:4: ( (otherlv_1= RULE_ID ) )
                    // InternalSim.g:6524:5: (otherlv_1= RULE_ID )
                    {
                    // InternalSim.g:6524:5: (otherlv_1= RULE_ID )
                    // InternalSim.g:6525:6: otherlv_1= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDmxFilterTypeDescriptorRule());
                      						}
                      					
                    }
                    otherlv_1=(Token)match(input,RULE_ID,FOLLOW_98); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_1, grammarAccess.getDmxFilterTypeDescriptorAccess().getMultipleDmxBaseTypeSetCrossReference_0_1_0());
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSim.g:6537:3: ( (lv_collection_2_0= '*' ) )?
            int alt159=2;
            int LA159_0 = input.LA(1);

            if ( (LA159_0==47) ) {
                alt159=1;
            }
            switch (alt159) {
                case 1 :
                    // InternalSim.g:6538:4: (lv_collection_2_0= '*' )
                    {
                    // InternalSim.g:6538:4: (lv_collection_2_0= '*' )
                    // InternalSim.g:6539:5: lv_collection_2_0= '*'
                    {
                    lv_collection_2_0=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_collection_2_0, grammarAccess.getDmxFilterTypeDescriptorAccess().getCollectionAsteriskKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDmxFilterTypeDescriptorRule());
                      					}
                      					setWithLastConsumed(current, "collection", true, "*");
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxFilterTypeDescriptor"


    // $ANTLR start "entryRuleDmxFilterParameter"
    // InternalSim.g:6555:1: entryRuleDmxFilterParameter returns [EObject current=null] : iv_ruleDmxFilterParameter= ruleDmxFilterParameter EOF ;
    public final EObject entryRuleDmxFilterParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxFilterParameter = null;


        try {
            // InternalSim.g:6555:59: (iv_ruleDmxFilterParameter= ruleDmxFilterParameter EOF )
            // InternalSim.g:6556:2: iv_ruleDmxFilterParameter= ruleDmxFilterParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxFilterParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxFilterParameter=ruleDmxFilterParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxFilterParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxFilterParameter"


    // $ANTLR start "ruleDmxFilterParameter"
    // InternalSim.g:6562:1: ruleDmxFilterParameter returns [EObject current=null] : ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= ':' ( (lv_typeDesc_2_0= ruleDmxFilterTypeDescriptor ) ) ) ;
    public final EObject ruleDmxFilterParameter() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        EObject lv_typeDesc_2_0 = null;



        	enterRule();

        try {
            // InternalSim.g:6568:2: ( ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= ':' ( (lv_typeDesc_2_0= ruleDmxFilterTypeDescriptor ) ) ) )
            // InternalSim.g:6569:2: ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= ':' ( (lv_typeDesc_2_0= ruleDmxFilterTypeDescriptor ) ) )
            {
            // InternalSim.g:6569:2: ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= ':' ( (lv_typeDesc_2_0= ruleDmxFilterTypeDescriptor ) ) )
            // InternalSim.g:6570:3: ( (lv_name_0_0= RULE_ID ) ) otherlv_1= ':' ( (lv_typeDesc_2_0= ruleDmxFilterTypeDescriptor ) )
            {
            // InternalSim.g:6570:3: ( (lv_name_0_0= RULE_ID ) )
            // InternalSim.g:6571:4: (lv_name_0_0= RULE_ID )
            {
            // InternalSim.g:6571:4: (lv_name_0_0= RULE_ID )
            // InternalSim.g:6572:5: lv_name_0_0= RULE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ID,FOLLOW_20); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getDmxFilterParameterAccess().getNameIDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDmxFilterParameterRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.ID");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,29,FOLLOW_96); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getDmxFilterParameterAccess().getColonKeyword_1());
              		
            }
            // InternalSim.g:6592:3: ( (lv_typeDesc_2_0= ruleDmxFilterTypeDescriptor ) )
            // InternalSim.g:6593:4: (lv_typeDesc_2_0= ruleDmxFilterTypeDescriptor )
            {
            // InternalSim.g:6593:4: (lv_typeDesc_2_0= ruleDmxFilterTypeDescriptor )
            // InternalSim.g:6594:5: lv_typeDesc_2_0= ruleDmxFilterTypeDescriptor
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDmxFilterParameterAccess().getTypeDescDmxFilterTypeDescriptorParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeDesc_2_0=ruleDmxFilterTypeDescriptor();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDmxFilterParameterRule());
              					}
              					set(
              						current,
              						"typeDesc",
              						lv_typeDesc_2_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.DmxFilterTypeDescriptor");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxFilterParameter"


    // $ANTLR start "entryRuleDExpression"
    // InternalSim.g:6615:1: entryRuleDExpression returns [EObject current=null] : iv_ruleDExpression= ruleDExpression EOF ;
    public final EObject entryRuleDExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDExpression = null;


        try {
            // InternalSim.g:6615:52: (iv_ruleDExpression= ruleDExpression EOF )
            // InternalSim.g:6616:2: iv_ruleDExpression= ruleDExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDExpression=ruleDExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDExpression"


    // $ANTLR start "ruleDExpression"
    // InternalSim.g:6622:1: ruleDExpression returns [EObject current=null] : (this_DmxAssignment_0= ruleDmxAssignment | this_DmxPredicateWithCorrelationVariable_1= ruleDmxPredicateWithCorrelationVariable | this_DRichText_2= ruleDRichText ) ;
    public final EObject ruleDExpression() throws RecognitionException {
        EObject current = null;

        EObject this_DmxAssignment_0 = null;

        EObject this_DmxPredicateWithCorrelationVariable_1 = null;

        EObject this_DRichText_2 = null;



        	enterRule();

        try {
            // InternalSim.g:6628:2: ( (this_DmxAssignment_0= ruleDmxAssignment | this_DmxPredicateWithCorrelationVariable_1= ruleDmxPredicateWithCorrelationVariable | this_DRichText_2= ruleDRichText ) )
            // InternalSim.g:6629:2: (this_DmxAssignment_0= ruleDmxAssignment | this_DmxPredicateWithCorrelationVariable_1= ruleDmxPredicateWithCorrelationVariable | this_DRichText_2= ruleDRichText )
            {
            // InternalSim.g:6629:2: (this_DmxAssignment_0= ruleDmxAssignment | this_DmxPredicateWithCorrelationVariable_1= ruleDmxPredicateWithCorrelationVariable | this_DRichText_2= ruleDRichText )
            int alt160=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                int LA160_1 = input.LA(2);

                if ( (LA160_1==EOF||(LA160_1>=RULE_ID && LA160_1<=RULE_RICH_TEXT_END)||(LA160_1>=24 && LA160_1<=26)||LA160_1==30||(LA160_1>=32 && LA160_1<=37)||(LA160_1>=39 && LA160_1<=42)||(LA160_1>=46 && LA160_1<=49)||(LA160_1>=51 && LA160_1<=52)||LA160_1==55||LA160_1==59||LA160_1==64||(LA160_1>=69 && LA160_1<=75)||(LA160_1>=81 && LA160_1<=84)||(LA160_1>=93 && LA160_1<=94)||(LA160_1>=101 && LA160_1<=102)||(LA160_1>=124 && LA160_1<=142)) ) {
                    alt160=2;
                }
                else if ( (LA160_1==63) ) {
                    alt160=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 160, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_NATURAL:
            case RULE_STRING:
            case 23:
            case 39:
            case 42:
            case 46:
            case 76:
            case 80:
            case 85:
            case 86:
            case 87:
            case 88:
            case 89:
            case 90:
            case 93:
            case 94:
            case 143:
            case 144:
            case 145:
                {
                alt160=2;
                }
                break;
            case RULE_PLAIN_TEXT_ONLY:
            case RULE_RICH_TEXT_START:
                {
                alt160=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 160, 0, input);

                throw nvae;
            }

            switch (alt160) {
                case 1 :
                    // InternalSim.g:6630:3: this_DmxAssignment_0= ruleDmxAssignment
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDExpressionAccess().getDmxAssignmentParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DmxAssignment_0=ruleDmxAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DmxAssignment_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSim.g:6639:3: this_DmxPredicateWithCorrelationVariable_1= ruleDmxPredicateWithCorrelationVariable
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDExpressionAccess().getDmxPredicateWithCorrelationVariableParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DmxPredicateWithCorrelationVariable_1=ruleDmxPredicateWithCorrelationVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DmxPredicateWithCorrelationVariable_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSim.g:6648:3: this_DRichText_2= ruleDRichText
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDExpressionAccess().getDRichTextParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DRichText_2=ruleDRichText();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DRichText_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDExpression"


    // $ANTLR start "entryRuleDRichText"
    // InternalSim.g:6660:1: entryRuleDRichText returns [EObject current=null] : iv_ruleDRichText= ruleDRichText EOF ;
    public final EObject entryRuleDRichText() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDRichText = null;


        try {
            // InternalSim.g:6660:50: (iv_ruleDRichText= ruleDRichText EOF )
            // InternalSim.g:6661:2: iv_ruleDRichText= ruleDRichText EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDRichTextRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDRichText=ruleDRichText();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDRichText; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDRichText"


    // $ANTLR start "ruleDRichText"
    // InternalSim.g:6667:1: ruleDRichText returns [EObject current=null] : ( ( (lv_segments_0_0= ruleDmxTextOnly ) ) | ( ( (lv_segments_1_0= ruleDmxTextStart ) ) ( (lv_segments_2_0= ruleDExpression ) ) ( ( (lv_segments_3_0= ruleDmxTextMiddle ) ) ( (lv_segments_4_0= ruleDExpression ) ) )* ( (lv_segments_5_0= ruleDmxTextEnd ) ) ) ) ;
    public final EObject ruleDRichText() throws RecognitionException {
        EObject current = null;

        EObject lv_segments_0_0 = null;

        EObject lv_segments_1_0 = null;

        EObject lv_segments_2_0 = null;

        EObject lv_segments_3_0 = null;

        EObject lv_segments_4_0 = null;

        EObject lv_segments_5_0 = null;



        	enterRule();

        try {
            // InternalSim.g:6673:2: ( ( ( (lv_segments_0_0= ruleDmxTextOnly ) ) | ( ( (lv_segments_1_0= ruleDmxTextStart ) ) ( (lv_segments_2_0= ruleDExpression ) ) ( ( (lv_segments_3_0= ruleDmxTextMiddle ) ) ( (lv_segments_4_0= ruleDExpression ) ) )* ( (lv_segments_5_0= ruleDmxTextEnd ) ) ) ) )
            // InternalSim.g:6674:2: ( ( (lv_segments_0_0= ruleDmxTextOnly ) ) | ( ( (lv_segments_1_0= ruleDmxTextStart ) ) ( (lv_segments_2_0= ruleDExpression ) ) ( ( (lv_segments_3_0= ruleDmxTextMiddle ) ) ( (lv_segments_4_0= ruleDExpression ) ) )* ( (lv_segments_5_0= ruleDmxTextEnd ) ) ) )
            {
            // InternalSim.g:6674:2: ( ( (lv_segments_0_0= ruleDmxTextOnly ) ) | ( ( (lv_segments_1_0= ruleDmxTextStart ) ) ( (lv_segments_2_0= ruleDExpression ) ) ( ( (lv_segments_3_0= ruleDmxTextMiddle ) ) ( (lv_segments_4_0= ruleDExpression ) ) )* ( (lv_segments_5_0= ruleDmxTextEnd ) ) ) )
            int alt162=2;
            int LA162_0 = input.LA(1);

            if ( (LA162_0==RULE_PLAIN_TEXT_ONLY) ) {
                alt162=1;
            }
            else if ( (LA162_0==RULE_RICH_TEXT_START) ) {
                alt162=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 162, 0, input);

                throw nvae;
            }
            switch (alt162) {
                case 1 :
                    // InternalSim.g:6675:3: ( (lv_segments_0_0= ruleDmxTextOnly ) )
                    {
                    // InternalSim.g:6675:3: ( (lv_segments_0_0= ruleDmxTextOnly ) )
                    // InternalSim.g:6676:4: (lv_segments_0_0= ruleDmxTextOnly )
                    {
                    // InternalSim.g:6676:4: (lv_segments_0_0= ruleDmxTextOnly )
                    // InternalSim.g:6677:5: lv_segments_0_0= ruleDmxTextOnly
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDRichTextAccess().getSegmentsDmxTextOnlyParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_segments_0_0=ruleDmxTextOnly();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDRichTextRule());
                      					}
                      					add(
                      						current,
                      						"segments",
                      						lv_segments_0_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DmxTextOnly");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:6695:3: ( ( (lv_segments_1_0= ruleDmxTextStart ) ) ( (lv_segments_2_0= ruleDExpression ) ) ( ( (lv_segments_3_0= ruleDmxTextMiddle ) ) ( (lv_segments_4_0= ruleDExpression ) ) )* ( (lv_segments_5_0= ruleDmxTextEnd ) ) )
                    {
                    // InternalSim.g:6695:3: ( ( (lv_segments_1_0= ruleDmxTextStart ) ) ( (lv_segments_2_0= ruleDExpression ) ) ( ( (lv_segments_3_0= ruleDmxTextMiddle ) ) ( (lv_segments_4_0= ruleDExpression ) ) )* ( (lv_segments_5_0= ruleDmxTextEnd ) ) )
                    // InternalSim.g:6696:4: ( (lv_segments_1_0= ruleDmxTextStart ) ) ( (lv_segments_2_0= ruleDExpression ) ) ( ( (lv_segments_3_0= ruleDmxTextMiddle ) ) ( (lv_segments_4_0= ruleDExpression ) ) )* ( (lv_segments_5_0= ruleDmxTextEnd ) )
                    {
                    // InternalSim.g:6696:4: ( (lv_segments_1_0= ruleDmxTextStart ) )
                    // InternalSim.g:6697:5: (lv_segments_1_0= ruleDmxTextStart )
                    {
                    // InternalSim.g:6697:5: (lv_segments_1_0= ruleDmxTextStart )
                    // InternalSim.g:6698:6: lv_segments_1_0= ruleDmxTextStart
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDRichTextAccess().getSegmentsDmxTextStartParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_57);
                    lv_segments_1_0=ruleDmxTextStart();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDRichTextRule());
                      						}
                      						add(
                      							current,
                      							"segments",
                      							lv_segments_1_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.DmxTextStart");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSim.g:6715:4: ( (lv_segments_2_0= ruleDExpression ) )
                    // InternalSim.g:6716:5: (lv_segments_2_0= ruleDExpression )
                    {
                    // InternalSim.g:6716:5: (lv_segments_2_0= ruleDExpression )
                    // InternalSim.g:6717:6: lv_segments_2_0= ruleDExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDRichTextAccess().getSegmentsDExpressionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_99);
                    lv_segments_2_0=ruleDExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDRichTextRule());
                      						}
                      						add(
                      							current,
                      							"segments",
                      							lv_segments_2_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.DExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSim.g:6734:4: ( ( (lv_segments_3_0= ruleDmxTextMiddle ) ) ( (lv_segments_4_0= ruleDExpression ) ) )*
                    loop161:
                    do {
                        int alt161=2;
                        int LA161_0 = input.LA(1);

                        if ( (LA161_0==RULE_RICH_TEXT_MIDDLE) ) {
                            alt161=1;
                        }


                        switch (alt161) {
                    	case 1 :
                    	    // InternalSim.g:6735:5: ( (lv_segments_3_0= ruleDmxTextMiddle ) ) ( (lv_segments_4_0= ruleDExpression ) )
                    	    {
                    	    // InternalSim.g:6735:5: ( (lv_segments_3_0= ruleDmxTextMiddle ) )
                    	    // InternalSim.g:6736:6: (lv_segments_3_0= ruleDmxTextMiddle )
                    	    {
                    	    // InternalSim.g:6736:6: (lv_segments_3_0= ruleDmxTextMiddle )
                    	    // InternalSim.g:6737:7: lv_segments_3_0= ruleDmxTextMiddle
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getDRichTextAccess().getSegmentsDmxTextMiddleParserRuleCall_1_2_0_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_57);
                    	    lv_segments_3_0=ruleDmxTextMiddle();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getDRichTextRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"segments",
                    	      								lv_segments_3_0,
                    	      								"com.mimacom.ddd.dm.dmx.Dmx.DmxTextMiddle");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }

                    	    // InternalSim.g:6754:5: ( (lv_segments_4_0= ruleDExpression ) )
                    	    // InternalSim.g:6755:6: (lv_segments_4_0= ruleDExpression )
                    	    {
                    	    // InternalSim.g:6755:6: (lv_segments_4_0= ruleDExpression )
                    	    // InternalSim.g:6756:7: lv_segments_4_0= ruleDExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getDRichTextAccess().getSegmentsDExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_99);
                    	    lv_segments_4_0=ruleDExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getDRichTextRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"segments",
                    	      								lv_segments_4_0,
                    	      								"com.mimacom.ddd.dm.dmx.Dmx.DExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop161;
                        }
                    } while (true);

                    // InternalSim.g:6774:4: ( (lv_segments_5_0= ruleDmxTextEnd ) )
                    // InternalSim.g:6775:5: (lv_segments_5_0= ruleDmxTextEnd )
                    {
                    // InternalSim.g:6775:5: (lv_segments_5_0= ruleDmxTextEnd )
                    // InternalSim.g:6776:6: lv_segments_5_0= ruleDmxTextEnd
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDRichTextAccess().getSegmentsDmxTextEndParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_segments_5_0=ruleDmxTextEnd();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDRichTextRule());
                      						}
                      						add(
                      							current,
                      							"segments",
                      							lv_segments_5_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.DmxTextEnd");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDRichText"


    // $ANTLR start "entryRuleDmxTextOnly"
    // InternalSim.g:6798:1: entryRuleDmxTextOnly returns [EObject current=null] : iv_ruleDmxTextOnly= ruleDmxTextOnly EOF ;
    public final EObject entryRuleDmxTextOnly() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxTextOnly = null;


        try {
            // InternalSim.g:6798:52: (iv_ruleDmxTextOnly= ruleDmxTextOnly EOF )
            // InternalSim.g:6799:2: iv_ruleDmxTextOnly= ruleDmxTextOnly EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxTextOnlyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxTextOnly=ruleDmxTextOnly();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxTextOnly; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxTextOnly"


    // $ANTLR start "ruleDmxTextOnly"
    // InternalSim.g:6805:1: ruleDmxTextOnly returns [EObject current=null] : ( (lv_value_0_0= RULE_PLAIN_TEXT_ONLY ) ) ;
    public final EObject ruleDmxTextOnly() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
            // InternalSim.g:6811:2: ( ( (lv_value_0_0= RULE_PLAIN_TEXT_ONLY ) ) )
            // InternalSim.g:6812:2: ( (lv_value_0_0= RULE_PLAIN_TEXT_ONLY ) )
            {
            // InternalSim.g:6812:2: ( (lv_value_0_0= RULE_PLAIN_TEXT_ONLY ) )
            // InternalSim.g:6813:3: (lv_value_0_0= RULE_PLAIN_TEXT_ONLY )
            {
            // InternalSim.g:6813:3: (lv_value_0_0= RULE_PLAIN_TEXT_ONLY )
            // InternalSim.g:6814:4: lv_value_0_0= RULE_PLAIN_TEXT_ONLY
            {
            lv_value_0_0=(Token)match(input,RULE_PLAIN_TEXT_ONLY,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getDmxTextOnlyAccess().getValuePLAIN_TEXT_ONLYTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getDmxTextOnlyRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"com.mimacom.ddd.dm.dmx.Dmx.PLAIN_TEXT_ONLY");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxTextOnly"


    // $ANTLR start "entryRuleDmxTextStart"
    // InternalSim.g:6833:1: entryRuleDmxTextStart returns [EObject current=null] : iv_ruleDmxTextStart= ruleDmxTextStart EOF ;
    public final EObject entryRuleDmxTextStart() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxTextStart = null;


        try {
            // InternalSim.g:6833:53: (iv_ruleDmxTextStart= ruleDmxTextStart EOF )
            // InternalSim.g:6834:2: iv_ruleDmxTextStart= ruleDmxTextStart EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxTextStartRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxTextStart=ruleDmxTextStart();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxTextStart; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxTextStart"


    // $ANTLR start "ruleDmxTextStart"
    // InternalSim.g:6840:1: ruleDmxTextStart returns [EObject current=null] : ( (lv_value_0_0= RULE_RICH_TEXT_START ) ) ;
    public final EObject ruleDmxTextStart() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
            // InternalSim.g:6846:2: ( ( (lv_value_0_0= RULE_RICH_TEXT_START ) ) )
            // InternalSim.g:6847:2: ( (lv_value_0_0= RULE_RICH_TEXT_START ) )
            {
            // InternalSim.g:6847:2: ( (lv_value_0_0= RULE_RICH_TEXT_START ) )
            // InternalSim.g:6848:3: (lv_value_0_0= RULE_RICH_TEXT_START )
            {
            // InternalSim.g:6848:3: (lv_value_0_0= RULE_RICH_TEXT_START )
            // InternalSim.g:6849:4: lv_value_0_0= RULE_RICH_TEXT_START
            {
            lv_value_0_0=(Token)match(input,RULE_RICH_TEXT_START,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getDmxTextStartAccess().getValueRICH_TEXT_STARTTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getDmxTextStartRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"com.mimacom.ddd.dm.dmx.Dmx.RICH_TEXT_START");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxTextStart"


    // $ANTLR start "entryRuleDmxTextMiddle"
    // InternalSim.g:6868:1: entryRuleDmxTextMiddle returns [EObject current=null] : iv_ruleDmxTextMiddle= ruleDmxTextMiddle EOF ;
    public final EObject entryRuleDmxTextMiddle() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxTextMiddle = null;


        try {
            // InternalSim.g:6868:54: (iv_ruleDmxTextMiddle= ruleDmxTextMiddle EOF )
            // InternalSim.g:6869:2: iv_ruleDmxTextMiddle= ruleDmxTextMiddle EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxTextMiddleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxTextMiddle=ruleDmxTextMiddle();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxTextMiddle; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxTextMiddle"


    // $ANTLR start "ruleDmxTextMiddle"
    // InternalSim.g:6875:1: ruleDmxTextMiddle returns [EObject current=null] : ( (lv_value_0_0= RULE_RICH_TEXT_MIDDLE ) ) ;
    public final EObject ruleDmxTextMiddle() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
            // InternalSim.g:6881:2: ( ( (lv_value_0_0= RULE_RICH_TEXT_MIDDLE ) ) )
            // InternalSim.g:6882:2: ( (lv_value_0_0= RULE_RICH_TEXT_MIDDLE ) )
            {
            // InternalSim.g:6882:2: ( (lv_value_0_0= RULE_RICH_TEXT_MIDDLE ) )
            // InternalSim.g:6883:3: (lv_value_0_0= RULE_RICH_TEXT_MIDDLE )
            {
            // InternalSim.g:6883:3: (lv_value_0_0= RULE_RICH_TEXT_MIDDLE )
            // InternalSim.g:6884:4: lv_value_0_0= RULE_RICH_TEXT_MIDDLE
            {
            lv_value_0_0=(Token)match(input,RULE_RICH_TEXT_MIDDLE,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getDmxTextMiddleAccess().getValueRICH_TEXT_MIDDLETerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getDmxTextMiddleRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"com.mimacom.ddd.dm.dmx.Dmx.RICH_TEXT_MIDDLE");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxTextMiddle"


    // $ANTLR start "entryRuleDmxTextEnd"
    // InternalSim.g:6903:1: entryRuleDmxTextEnd returns [EObject current=null] : iv_ruleDmxTextEnd= ruleDmxTextEnd EOF ;
    public final EObject entryRuleDmxTextEnd() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxTextEnd = null;


        try {
            // InternalSim.g:6903:51: (iv_ruleDmxTextEnd= ruleDmxTextEnd EOF )
            // InternalSim.g:6904:2: iv_ruleDmxTextEnd= ruleDmxTextEnd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxTextEndRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxTextEnd=ruleDmxTextEnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxTextEnd; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxTextEnd"


    // $ANTLR start "ruleDmxTextEnd"
    // InternalSim.g:6910:1: ruleDmxTextEnd returns [EObject current=null] : ( (lv_value_0_0= RULE_RICH_TEXT_END ) ) ;
    public final EObject ruleDmxTextEnd() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
            // InternalSim.g:6916:2: ( ( (lv_value_0_0= RULE_RICH_TEXT_END ) ) )
            // InternalSim.g:6917:2: ( (lv_value_0_0= RULE_RICH_TEXT_END ) )
            {
            // InternalSim.g:6917:2: ( (lv_value_0_0= RULE_RICH_TEXT_END ) )
            // InternalSim.g:6918:3: (lv_value_0_0= RULE_RICH_TEXT_END )
            {
            // InternalSim.g:6918:3: (lv_value_0_0= RULE_RICH_TEXT_END )
            // InternalSim.g:6919:4: lv_value_0_0= RULE_RICH_TEXT_END
            {
            lv_value_0_0=(Token)match(input,RULE_RICH_TEXT_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getDmxTextEndAccess().getValueRICH_TEXT_ENDTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getDmxTextEndRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"com.mimacom.ddd.dm.dmx.Dmx.RICH_TEXT_END");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxTextEnd"


    // $ANTLR start "entryRuleDmxNavigableMemberReference"
    // InternalSim.g:6938:1: entryRuleDmxNavigableMemberReference returns [EObject current=null] : iv_ruleDmxNavigableMemberReference= ruleDmxNavigableMemberReference EOF ;
    public final EObject entryRuleDmxNavigableMemberReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxNavigableMemberReference = null;


        try {
            // InternalSim.g:6938:68: (iv_ruleDmxNavigableMemberReference= ruleDmxNavigableMemberReference EOF )
            // InternalSim.g:6939:2: iv_ruleDmxNavigableMemberReference= ruleDmxNavigableMemberReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxNavigableMemberReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxNavigableMemberReference=ruleDmxNavigableMemberReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxNavigableMemberReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxNavigableMemberReference"


    // $ANTLR start "ruleDmxNavigableMemberReference"
    // InternalSim.g:6945:1: ruleDmxNavigableMemberReference returns [EObject current=null] : (this_DmxPrimaryExpression_0= ruleDmxPrimaryExpression ( ( ( ( ( () '.' ( ( RULE_ID ) ) ruleDmxOpSingleAssign ) )=> ( () otherlv_2= '.' ( (otherlv_3= RULE_ID ) ) ruleDmxOpSingleAssign ) ) ( (lv_value_5_0= ruleDmxOrExpression ) ) ) | ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( (otherlv_8= RULE_ID ) ) ( ( ( ( ( '(' ) )=> (lv_explicitOperationCall_9_0= '(' ) ) ( (lv_callArguments_10_0= ruleDmxCallArguments ) ) otherlv_11= ')' ) | ( (lv_before_12_0= '@before' ) ) )? ) )* ) ;
    public final EObject ruleDmxNavigableMemberReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token lv_explicitOperationCall_9_0=null;
        Token otherlv_11=null;
        Token lv_before_12_0=null;
        EObject this_DmxPrimaryExpression_0 = null;

        EObject lv_value_5_0 = null;

        EObject lv_callArguments_10_0 = null;



        	enterRule();

        try {
            // InternalSim.g:6951:2: ( (this_DmxPrimaryExpression_0= ruleDmxPrimaryExpression ( ( ( ( ( () '.' ( ( RULE_ID ) ) ruleDmxOpSingleAssign ) )=> ( () otherlv_2= '.' ( (otherlv_3= RULE_ID ) ) ruleDmxOpSingleAssign ) ) ( (lv_value_5_0= ruleDmxOrExpression ) ) ) | ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( (otherlv_8= RULE_ID ) ) ( ( ( ( ( '(' ) )=> (lv_explicitOperationCall_9_0= '(' ) ) ( (lv_callArguments_10_0= ruleDmxCallArguments ) ) otherlv_11= ')' ) | ( (lv_before_12_0= '@before' ) ) )? ) )* ) )
            // InternalSim.g:6952:2: (this_DmxPrimaryExpression_0= ruleDmxPrimaryExpression ( ( ( ( ( () '.' ( ( RULE_ID ) ) ruleDmxOpSingleAssign ) )=> ( () otherlv_2= '.' ( (otherlv_3= RULE_ID ) ) ruleDmxOpSingleAssign ) ) ( (lv_value_5_0= ruleDmxOrExpression ) ) ) | ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( (otherlv_8= RULE_ID ) ) ( ( ( ( ( '(' ) )=> (lv_explicitOperationCall_9_0= '(' ) ) ( (lv_callArguments_10_0= ruleDmxCallArguments ) ) otherlv_11= ')' ) | ( (lv_before_12_0= '@before' ) ) )? ) )* )
            {
            // InternalSim.g:6952:2: (this_DmxPrimaryExpression_0= ruleDmxPrimaryExpression ( ( ( ( ( () '.' ( ( RULE_ID ) ) ruleDmxOpSingleAssign ) )=> ( () otherlv_2= '.' ( (otherlv_3= RULE_ID ) ) ruleDmxOpSingleAssign ) ) ( (lv_value_5_0= ruleDmxOrExpression ) ) ) | ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( (otherlv_8= RULE_ID ) ) ( ( ( ( ( '(' ) )=> (lv_explicitOperationCall_9_0= '(' ) ) ( (lv_callArguments_10_0= ruleDmxCallArguments ) ) otherlv_11= ')' ) | ( (lv_before_12_0= '@before' ) ) )? ) )* )
            // InternalSim.g:6953:3: this_DmxPrimaryExpression_0= ruleDmxPrimaryExpression ( ( ( ( ( () '.' ( ( RULE_ID ) ) ruleDmxOpSingleAssign ) )=> ( () otherlv_2= '.' ( (otherlv_3= RULE_ID ) ) ruleDmxOpSingleAssign ) ) ( (lv_value_5_0= ruleDmxOrExpression ) ) ) | ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( (otherlv_8= RULE_ID ) ) ( ( ( ( ( '(' ) )=> (lv_explicitOperationCall_9_0= '(' ) ) ( (lv_callArguments_10_0= ruleDmxCallArguments ) ) otherlv_11= ')' ) | ( (lv_before_12_0= '@before' ) ) )? ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDmxNavigableMemberReferenceAccess().getDmxPrimaryExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_100);
            this_DmxPrimaryExpression_0=ruleDmxPrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_DmxPrimaryExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSim.g:6961:3: ( ( ( ( ( () '.' ( ( RULE_ID ) ) ruleDmxOpSingleAssign ) )=> ( () otherlv_2= '.' ( (otherlv_3= RULE_ID ) ) ruleDmxOpSingleAssign ) ) ( (lv_value_5_0= ruleDmxOrExpression ) ) ) | ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( (otherlv_8= RULE_ID ) ) ( ( ( ( ( '(' ) )=> (lv_explicitOperationCall_9_0= '(' ) ) ( (lv_callArguments_10_0= ruleDmxCallArguments ) ) otherlv_11= ')' ) | ( (lv_before_12_0= '@before' ) ) )? ) )*
            loop164:
            do {
                int alt164=3;
                int LA164_0 = input.LA(1);

                if ( (LA164_0==69) ) {
                    int LA164_2 = input.LA(2);

                    if ( (synpred1_InternalSim()) ) {
                        alt164=1;
                    }
                    else if ( (synpred2_InternalSim()) ) {
                        alt164=2;
                    }


                }


                switch (alt164) {
            	case 1 :
            	    // InternalSim.g:6962:4: ( ( ( ( () '.' ( ( RULE_ID ) ) ruleDmxOpSingleAssign ) )=> ( () otherlv_2= '.' ( (otherlv_3= RULE_ID ) ) ruleDmxOpSingleAssign ) ) ( (lv_value_5_0= ruleDmxOrExpression ) ) )
            	    {
            	    // InternalSim.g:6962:4: ( ( ( ( () '.' ( ( RULE_ID ) ) ruleDmxOpSingleAssign ) )=> ( () otherlv_2= '.' ( (otherlv_3= RULE_ID ) ) ruleDmxOpSingleAssign ) ) ( (lv_value_5_0= ruleDmxOrExpression ) ) )
            	    // InternalSim.g:6963:5: ( ( ( () '.' ( ( RULE_ID ) ) ruleDmxOpSingleAssign ) )=> ( () otherlv_2= '.' ( (otherlv_3= RULE_ID ) ) ruleDmxOpSingleAssign ) ) ( (lv_value_5_0= ruleDmxOrExpression ) )
            	    {
            	    // InternalSim.g:6963:5: ( ( ( () '.' ( ( RULE_ID ) ) ruleDmxOpSingleAssign ) )=> ( () otherlv_2= '.' ( (otherlv_3= RULE_ID ) ) ruleDmxOpSingleAssign ) )
            	    // InternalSim.g:6964:6: ( ( () '.' ( ( RULE_ID ) ) ruleDmxOpSingleAssign ) )=> ( () otherlv_2= '.' ( (otherlv_3= RULE_ID ) ) ruleDmxOpSingleAssign )
            	    {
            	    // InternalSim.g:6976:6: ( () otherlv_2= '.' ( (otherlv_3= RULE_ID ) ) ruleDmxOpSingleAssign )
            	    // InternalSim.g:6977:7: () otherlv_2= '.' ( (otherlv_3= RULE_ID ) ) ruleDmxOpSingleAssign
            	    {
            	    // InternalSim.g:6977:7: ()
            	    // InternalSim.g:6978:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								current = forceCreateModelElementAndSet(
            	      									grammarAccess.getDmxNavigableMemberReferenceAccess().getDmxAssignmentPrecedingNavigationSegmentAction_1_0_0_0_0(),
            	      									current);
            	      							
            	    }

            	    }

            	    otherlv_2=(Token)match(input,69,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							newLeafNode(otherlv_2, grammarAccess.getDmxNavigableMemberReferenceAccess().getFullStopKeyword_1_0_0_0_1());
            	      						
            	    }
            	    // InternalSim.g:6988:7: ( (otherlv_3= RULE_ID ) )
            	    // InternalSim.g:6989:8: (otherlv_3= RULE_ID )
            	    {
            	    // InternalSim.g:6989:8: (otherlv_3= RULE_ID )
            	    // InternalSim.g:6990:9: otherlv_3= RULE_ID
            	    {
            	    if ( state.backtracking==0 ) {

            	      									if (current==null) {
            	      										current = createModelElement(grammarAccess.getDmxNavigableMemberReferenceRule());
            	      									}
            	      								
            	    }
            	    otherlv_3=(Token)match(input,RULE_ID,FOLLOW_101); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_3, grammarAccess.getDmxNavigableMemberReferenceAccess().getAssignToMemberDNavigableMemberCrossReference_1_0_0_0_2_0());
            	      								
            	    }

            	    }


            	    }

            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getDmxNavigableMemberReferenceAccess().getDmxOpSingleAssignParserRuleCall_1_0_0_0_3());
            	      						
            	    }
            	    pushFollow(FOLLOW_102);
            	    ruleDmxOpSingleAssign();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalSim.g:7010:5: ( (lv_value_5_0= ruleDmxOrExpression ) )
            	    // InternalSim.g:7011:6: (lv_value_5_0= ruleDmxOrExpression )
            	    {
            	    // InternalSim.g:7011:6: (lv_value_5_0= ruleDmxOrExpression )
            	    // InternalSim.g:7012:7: lv_value_5_0= ruleDmxOrExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getDmxNavigableMemberReferenceAccess().getValueDmxOrExpressionParserRuleCall_1_0_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_100);
            	    lv_value_5_0=ruleDmxOrExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getDmxNavigableMemberReferenceRule());
            	      							}
            	      							set(
            	      								current,
            	      								"value",
            	      								lv_value_5_0,
            	      								"com.mimacom.ddd.dm.dmx.Dmx.DmxOrExpression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalSim.g:7031:4: ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( (otherlv_8= RULE_ID ) ) ( ( ( ( ( '(' ) )=> (lv_explicitOperationCall_9_0= '(' ) ) ( (lv_callArguments_10_0= ruleDmxCallArguments ) ) otherlv_11= ')' ) | ( (lv_before_12_0= '@before' ) ) )? )
            	    {
            	    // InternalSim.g:7031:4: ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( (otherlv_8= RULE_ID ) ) ( ( ( ( ( '(' ) )=> (lv_explicitOperationCall_9_0= '(' ) ) ( (lv_callArguments_10_0= ruleDmxCallArguments ) ) otherlv_11= ')' ) | ( (lv_before_12_0= '@before' ) ) )? )
            	    // InternalSim.g:7032:5: ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( (otherlv_8= RULE_ID ) ) ( ( ( ( ( '(' ) )=> (lv_explicitOperationCall_9_0= '(' ) ) ( (lv_callArguments_10_0= ruleDmxCallArguments ) ) otherlv_11= ')' ) | ( (lv_before_12_0= '@before' ) ) )?
            	    {
            	    // InternalSim.g:7032:5: ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) )
            	    // InternalSim.g:7033:6: ( ( () '.' ) )=> ( () otherlv_7= '.' )
            	    {
            	    // InternalSim.g:7039:6: ( () otherlv_7= '.' )
            	    // InternalSim.g:7040:7: () otherlv_7= '.'
            	    {
            	    // InternalSim.g:7040:7: ()
            	    // InternalSim.g:7041:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								current = forceCreateModelElementAndSet(
            	      									grammarAccess.getDmxNavigableMemberReferenceAccess().getDmxMemberNavigationPrecedingNavigationSegmentAction_1_1_0_0_0(),
            	      									current);
            	      							
            	    }

            	    }

            	    otherlv_7=(Token)match(input,69,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							newLeafNode(otherlv_7, grammarAccess.getDmxNavigableMemberReferenceAccess().getFullStopKeyword_1_1_0_0_1());
            	      						
            	    }

            	    }


            	    }

            	    // InternalSim.g:7053:5: ( (otherlv_8= RULE_ID ) )
            	    // InternalSim.g:7054:6: (otherlv_8= RULE_ID )
            	    {
            	    // InternalSim.g:7054:6: (otherlv_8= RULE_ID )
            	    // InternalSim.g:7055:7: otherlv_8= RULE_ID
            	    {
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElement(grammarAccess.getDmxNavigableMemberReferenceRule());
            	      							}
            	      						
            	    }
            	    otherlv_8=(Token)match(input,RULE_ID,FOLLOW_103); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							newLeafNode(otherlv_8, grammarAccess.getDmxNavigableMemberReferenceAccess().getMemberDNavigableMemberCrossReference_1_1_1_0());
            	      						
            	    }

            	    }


            	    }

            	    // InternalSim.g:7066:5: ( ( ( ( ( '(' ) )=> (lv_explicitOperationCall_9_0= '(' ) ) ( (lv_callArguments_10_0= ruleDmxCallArguments ) ) otherlv_11= ')' ) | ( (lv_before_12_0= '@before' ) ) )?
            	    int alt163=3;
            	    int LA163_0 = input.LA(1);

            	    if ( (LA163_0==46) && (synpred3_InternalSim())) {
            	        alt163=1;
            	    }
            	    else if ( (LA163_0==70) ) {
            	        alt163=2;
            	    }
            	    switch (alt163) {
            	        case 1 :
            	            // InternalSim.g:7067:6: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_9_0= '(' ) ) ( (lv_callArguments_10_0= ruleDmxCallArguments ) ) otherlv_11= ')' )
            	            {
            	            // InternalSim.g:7067:6: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_9_0= '(' ) ) ( (lv_callArguments_10_0= ruleDmxCallArguments ) ) otherlv_11= ')' )
            	            // InternalSim.g:7068:7: ( ( ( '(' ) )=> (lv_explicitOperationCall_9_0= '(' ) ) ( (lv_callArguments_10_0= ruleDmxCallArguments ) ) otherlv_11= ')'
            	            {
            	            // InternalSim.g:7068:7: ( ( ( '(' ) )=> (lv_explicitOperationCall_9_0= '(' ) )
            	            // InternalSim.g:7069:8: ( ( '(' ) )=> (lv_explicitOperationCall_9_0= '(' )
            	            {
            	            // InternalSim.g:7073:8: (lv_explicitOperationCall_9_0= '(' )
            	            // InternalSim.g:7074:9: lv_explicitOperationCall_9_0= '('
            	            {
            	            lv_explicitOperationCall_9_0=(Token)match(input,46,FOLLOW_104); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(lv_explicitOperationCall_9_0, grammarAccess.getDmxNavigableMemberReferenceAccess().getExplicitOperationCallLeftParenthesisKeyword_1_1_2_0_0_0());
            	              								
            	            }
            	            if ( state.backtracking==0 ) {

            	              									if (current==null) {
            	              										current = createModelElement(grammarAccess.getDmxNavigableMemberReferenceRule());
            	              									}
            	              									setWithLastConsumed(current, "explicitOperationCall", true, "(");
            	              								
            	            }

            	            }


            	            }

            	            // InternalSim.g:7086:7: ( (lv_callArguments_10_0= ruleDmxCallArguments ) )
            	            // InternalSim.g:7087:8: (lv_callArguments_10_0= ruleDmxCallArguments )
            	            {
            	            // InternalSim.g:7087:8: (lv_callArguments_10_0= ruleDmxCallArguments )
            	            // InternalSim.g:7088:9: lv_callArguments_10_0= ruleDmxCallArguments
            	            {
            	            if ( state.backtracking==0 ) {

            	              									newCompositeNode(grammarAccess.getDmxNavigableMemberReferenceAccess().getCallArgumentsDmxCallArgumentsParserRuleCall_1_1_2_0_1_0());
            	              								
            	            }
            	            pushFollow(FOLLOW_51);
            	            lv_callArguments_10_0=ruleDmxCallArguments();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									if (current==null) {
            	              										current = createModelElementForParent(grammarAccess.getDmxNavigableMemberReferenceRule());
            	              									}
            	              									set(
            	              										current,
            	              										"callArguments",
            	              										lv_callArguments_10_0,
            	              										"com.mimacom.ddd.dm.dmx.Dmx.DmxCallArguments");
            	              									afterParserOrEnumRuleCall();
            	              								
            	            }

            	            }


            	            }

            	            otherlv_11=(Token)match(input,48,FOLLOW_100); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(otherlv_11, grammarAccess.getDmxNavigableMemberReferenceAccess().getRightParenthesisKeyword_1_1_2_0_2());
            	              						
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalSim.g:7111:6: ( (lv_before_12_0= '@before' ) )
            	            {
            	            // InternalSim.g:7111:6: ( (lv_before_12_0= '@before' ) )
            	            // InternalSim.g:7112:7: (lv_before_12_0= '@before' )
            	            {
            	            // InternalSim.g:7112:7: (lv_before_12_0= '@before' )
            	            // InternalSim.g:7113:8: lv_before_12_0= '@before'
            	            {
            	            lv_before_12_0=(Token)match(input,70,FOLLOW_100); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(lv_before_12_0, grammarAccess.getDmxNavigableMemberReferenceAccess().getBeforeBeforeKeyword_1_1_2_1_0());
            	              							
            	            }
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElement(grammarAccess.getDmxNavigableMemberReferenceRule());
            	              								}
            	              								setWithLastConsumed(current, "before", true, "@before");
            	              							
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop164;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxNavigableMemberReference"


    // $ANTLR start "entryRuleDmxCallArguments"
    // InternalSim.g:7132:1: entryRuleDmxCallArguments returns [EObject current=null] : iv_ruleDmxCallArguments= ruleDmxCallArguments EOF ;
    public final EObject entryRuleDmxCallArguments() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxCallArguments = null;


        try {
            // InternalSim.g:7132:57: (iv_ruleDmxCallArguments= ruleDmxCallArguments EOF )
            // InternalSim.g:7133:2: iv_ruleDmxCallArguments= ruleDmxCallArguments EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxCallArgumentsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxCallArguments=ruleDmxCallArguments();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxCallArguments; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxCallArguments"


    // $ANTLR start "ruleDmxCallArguments"
    // InternalSim.g:7139:1: ruleDmxCallArguments returns [EObject current=null] : ( () ( ( (lv_arguments_1_0= ruleDmxPredicateWithCorrelationVariable ) ) (otherlv_2= ',' ( (lv_arguments_3_0= ruleDmxPredicateWithCorrelationVariable ) ) )* )? ) ;
    public final EObject ruleDmxCallArguments() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_arguments_1_0 = null;

        EObject lv_arguments_3_0 = null;



        	enterRule();

        try {
            // InternalSim.g:7145:2: ( ( () ( ( (lv_arguments_1_0= ruleDmxPredicateWithCorrelationVariable ) ) (otherlv_2= ',' ( (lv_arguments_3_0= ruleDmxPredicateWithCorrelationVariable ) ) )* )? ) )
            // InternalSim.g:7146:2: ( () ( ( (lv_arguments_1_0= ruleDmxPredicateWithCorrelationVariable ) ) (otherlv_2= ',' ( (lv_arguments_3_0= ruleDmxPredicateWithCorrelationVariable ) ) )* )? )
            {
            // InternalSim.g:7146:2: ( () ( ( (lv_arguments_1_0= ruleDmxPredicateWithCorrelationVariable ) ) (otherlv_2= ',' ( (lv_arguments_3_0= ruleDmxPredicateWithCorrelationVariable ) ) )* )? )
            // InternalSim.g:7147:3: () ( ( (lv_arguments_1_0= ruleDmxPredicateWithCorrelationVariable ) ) (otherlv_2= ',' ( (lv_arguments_3_0= ruleDmxPredicateWithCorrelationVariable ) ) )* )?
            {
            // InternalSim.g:7147:3: ()
            // InternalSim.g:7148:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDmxCallArgumentsAccess().getDmxCallArgumentsAction_0(),
              					current);
              			
            }

            }

            // InternalSim.g:7154:3: ( ( (lv_arguments_1_0= ruleDmxPredicateWithCorrelationVariable ) ) (otherlv_2= ',' ( (lv_arguments_3_0= ruleDmxPredicateWithCorrelationVariable ) ) )* )?
            int alt166=2;
            int LA166_0 = input.LA(1);

            if ( (LA166_0==RULE_ID||(LA166_0>=RULE_NATURAL && LA166_0<=RULE_STRING)||LA166_0==23||LA166_0==39||LA166_0==42||LA166_0==46||LA166_0==76||LA166_0==80||(LA166_0>=85 && LA166_0<=90)||(LA166_0>=93 && LA166_0<=94)||(LA166_0>=143 && LA166_0<=145)) ) {
                alt166=1;
            }
            switch (alt166) {
                case 1 :
                    // InternalSim.g:7155:4: ( (lv_arguments_1_0= ruleDmxPredicateWithCorrelationVariable ) ) (otherlv_2= ',' ( (lv_arguments_3_0= ruleDmxPredicateWithCorrelationVariable ) ) )*
                    {
                    // InternalSim.g:7155:4: ( (lv_arguments_1_0= ruleDmxPredicateWithCorrelationVariable ) )
                    // InternalSim.g:7156:5: (lv_arguments_1_0= ruleDmxPredicateWithCorrelationVariable )
                    {
                    // InternalSim.g:7156:5: (lv_arguments_1_0= ruleDmxPredicateWithCorrelationVariable )
                    // InternalSim.g:7157:6: lv_arguments_1_0= ruleDmxPredicateWithCorrelationVariable
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDmxCallArgumentsAccess().getArgumentsDmxPredicateWithCorrelationVariableParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_105);
                    lv_arguments_1_0=ruleDmxPredicateWithCorrelationVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDmxCallArgumentsRule());
                      						}
                      						add(
                      							current,
                      							"arguments",
                      							lv_arguments_1_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.DmxPredicateWithCorrelationVariable");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSim.g:7174:4: (otherlv_2= ',' ( (lv_arguments_3_0= ruleDmxPredicateWithCorrelationVariable ) ) )*
                    loop165:
                    do {
                        int alt165=2;
                        int LA165_0 = input.LA(1);

                        if ( (LA165_0==37) ) {
                            alt165=1;
                        }


                        switch (alt165) {
                    	case 1 :
                    	    // InternalSim.g:7175:5: otherlv_2= ',' ( (lv_arguments_3_0= ruleDmxPredicateWithCorrelationVariable ) )
                    	    {
                    	    otherlv_2=(Token)match(input,37,FOLLOW_102); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_2, grammarAccess.getDmxCallArgumentsAccess().getCommaKeyword_1_1_0());
                    	      				
                    	    }
                    	    // InternalSim.g:7179:5: ( (lv_arguments_3_0= ruleDmxPredicateWithCorrelationVariable ) )
                    	    // InternalSim.g:7180:6: (lv_arguments_3_0= ruleDmxPredicateWithCorrelationVariable )
                    	    {
                    	    // InternalSim.g:7180:6: (lv_arguments_3_0= ruleDmxPredicateWithCorrelationVariable )
                    	    // InternalSim.g:7181:7: lv_arguments_3_0= ruleDmxPredicateWithCorrelationVariable
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getDmxCallArgumentsAccess().getArgumentsDmxPredicateWithCorrelationVariableParserRuleCall_1_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_105);
                    	    lv_arguments_3_0=ruleDmxPredicateWithCorrelationVariable();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getDmxCallArgumentsRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"arguments",
                    	      								lv_arguments_3_0,
                    	      								"com.mimacom.ddd.dm.dmx.Dmx.DmxPredicateWithCorrelationVariable");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop165;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxCallArguments"


    // $ANTLR start "entryRuleDmxAssignment"
    // InternalSim.g:7204:1: entryRuleDmxAssignment returns [EObject current=null] : iv_ruleDmxAssignment= ruleDmxAssignment EOF ;
    public final EObject entryRuleDmxAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxAssignment = null;


        try {
            // InternalSim.g:7204:54: (iv_ruleDmxAssignment= ruleDmxAssignment EOF )
            // InternalSim.g:7205:2: iv_ruleDmxAssignment= ruleDmxAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxAssignmentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxAssignment=ruleDmxAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxAssignment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxAssignment"


    // $ANTLR start "ruleDmxAssignment"
    // InternalSim.g:7211:1: ruleDmxAssignment returns [EObject current=null] : ( () ( (otherlv_1= RULE_ID ) ) ruleDmxOpSingleAssign ( (lv_value_3_0= ruleDmxOrExpression ) ) ) ;
    public final EObject ruleDmxAssignment() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_value_3_0 = null;



        	enterRule();

        try {
            // InternalSim.g:7217:2: ( ( () ( (otherlv_1= RULE_ID ) ) ruleDmxOpSingleAssign ( (lv_value_3_0= ruleDmxOrExpression ) ) ) )
            // InternalSim.g:7218:2: ( () ( (otherlv_1= RULE_ID ) ) ruleDmxOpSingleAssign ( (lv_value_3_0= ruleDmxOrExpression ) ) )
            {
            // InternalSim.g:7218:2: ( () ( (otherlv_1= RULE_ID ) ) ruleDmxOpSingleAssign ( (lv_value_3_0= ruleDmxOrExpression ) ) )
            // InternalSim.g:7219:3: () ( (otherlv_1= RULE_ID ) ) ruleDmxOpSingleAssign ( (lv_value_3_0= ruleDmxOrExpression ) )
            {
            // InternalSim.g:7219:3: ()
            // InternalSim.g:7220:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDmxAssignmentAccess().getDmxAssignmentAction_0(),
              					current);
              			
            }

            }

            // InternalSim.g:7226:3: ( (otherlv_1= RULE_ID ) )
            // InternalSim.g:7227:4: (otherlv_1= RULE_ID )
            {
            // InternalSim.g:7227:4: (otherlv_1= RULE_ID )
            // InternalSim.g:7228:5: otherlv_1= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDmxAssignmentRule());
              					}
              				
            }
            otherlv_1=(Token)match(input,RULE_ID,FOLLOW_101); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getDmxAssignmentAccess().getAssignToMemberDNavigableMemberCrossReference_1_0());
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDmxAssignmentAccess().getDmxOpSingleAssignParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_102);
            ruleDmxOpSingleAssign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSim.g:7246:3: ( (lv_value_3_0= ruleDmxOrExpression ) )
            // InternalSim.g:7247:4: (lv_value_3_0= ruleDmxOrExpression )
            {
            // InternalSim.g:7247:4: (lv_value_3_0= ruleDmxOrExpression )
            // InternalSim.g:7248:5: lv_value_3_0= ruleDmxOrExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDmxAssignmentAccess().getValueDmxOrExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_3_0=ruleDmxOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDmxAssignmentRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_3_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.DmxOrExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxAssignment"


    // $ANTLR start "entryRuleDmxOpSingleAssign"
    // InternalSim.g:7269:1: entryRuleDmxOpSingleAssign returns [String current=null] : iv_ruleDmxOpSingleAssign= ruleDmxOpSingleAssign EOF ;
    public final String entryRuleDmxOpSingleAssign() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleDmxOpSingleAssign = null;


        try {
            // InternalSim.g:7269:57: (iv_ruleDmxOpSingleAssign= ruleDmxOpSingleAssign EOF )
            // InternalSim.g:7270:2: iv_ruleDmxOpSingleAssign= ruleDmxOpSingleAssign EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxOpSingleAssignRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxOpSingleAssign=ruleDmxOpSingleAssign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxOpSingleAssign.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxOpSingleAssign"


    // $ANTLR start "ruleDmxOpSingleAssign"
    // InternalSim.g:7276:1: ruleDmxOpSingleAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= ':=' ;
    public final AntlrDatatypeRuleToken ruleDmxOpSingleAssign() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalSim.g:7282:2: (kw= ':=' )
            // InternalSim.g:7283:2: kw= ':='
            {
            kw=(Token)match(input,63,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getDmxOpSingleAssignAccess().getColonEqualsSignKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxOpSingleAssign"


    // $ANTLR start "entryRuleDmxPredicateWithCorrelationVariable"
    // InternalSim.g:7291:1: entryRuleDmxPredicateWithCorrelationVariable returns [EObject current=null] : iv_ruleDmxPredicateWithCorrelationVariable= ruleDmxPredicateWithCorrelationVariable EOF ;
    public final EObject entryRuleDmxPredicateWithCorrelationVariable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxPredicateWithCorrelationVariable = null;


        try {
            // InternalSim.g:7291:76: (iv_ruleDmxPredicateWithCorrelationVariable= ruleDmxPredicateWithCorrelationVariable EOF )
            // InternalSim.g:7292:2: iv_ruleDmxPredicateWithCorrelationVariable= ruleDmxPredicateWithCorrelationVariable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxPredicateWithCorrelationVariableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxPredicateWithCorrelationVariable=ruleDmxPredicateWithCorrelationVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxPredicateWithCorrelationVariable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxPredicateWithCorrelationVariable"


    // $ANTLR start "ruleDmxPredicateWithCorrelationVariable"
    // InternalSim.g:7298:1: ruleDmxPredicateWithCorrelationVariable returns [EObject current=null] : ( ( () ( (lv_correlationVariable_1_0= ruleDmxCorrelationVariable ) ) otherlv_2= '|' ( (lv_predicate_3_0= ruleDmxOrExpression ) ) ) | this_DmxOrExpression_4= ruleDmxOrExpression ) ;
    public final EObject ruleDmxPredicateWithCorrelationVariable() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_correlationVariable_1_0 = null;

        EObject lv_predicate_3_0 = null;

        EObject this_DmxOrExpression_4 = null;



        	enterRule();

        try {
            // InternalSim.g:7304:2: ( ( ( () ( (lv_correlationVariable_1_0= ruleDmxCorrelationVariable ) ) otherlv_2= '|' ( (lv_predicate_3_0= ruleDmxOrExpression ) ) ) | this_DmxOrExpression_4= ruleDmxOrExpression ) )
            // InternalSim.g:7305:2: ( ( () ( (lv_correlationVariable_1_0= ruleDmxCorrelationVariable ) ) otherlv_2= '|' ( (lv_predicate_3_0= ruleDmxOrExpression ) ) ) | this_DmxOrExpression_4= ruleDmxOrExpression )
            {
            // InternalSim.g:7305:2: ( ( () ( (lv_correlationVariable_1_0= ruleDmxCorrelationVariable ) ) otherlv_2= '|' ( (lv_predicate_3_0= ruleDmxOrExpression ) ) ) | this_DmxOrExpression_4= ruleDmxOrExpression )
            int alt167=2;
            int LA167_0 = input.LA(1);

            if ( (LA167_0==RULE_ID) ) {
                int LA167_1 = input.LA(2);

                if ( (LA167_1==71) ) {
                    alt167=1;
                }
                else if ( (LA167_1==EOF||(LA167_1>=RULE_ID && LA167_1<=RULE_RICH_TEXT_END)||(LA167_1>=24 && LA167_1<=26)||LA167_1==30||(LA167_1>=32 && LA167_1<=37)||(LA167_1>=39 && LA167_1<=42)||(LA167_1>=46 && LA167_1<=49)||(LA167_1>=51 && LA167_1<=52)||LA167_1==55||LA167_1==59||LA167_1==64||(LA167_1>=69 && LA167_1<=70)||(LA167_1>=72 && LA167_1<=75)||(LA167_1>=81 && LA167_1<=84)||(LA167_1>=93 && LA167_1<=94)||(LA167_1>=101 && LA167_1<=102)||(LA167_1>=124 && LA167_1<=142)) ) {
                    alt167=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 167, 1, input);

                    throw nvae;
                }
            }
            else if ( ((LA167_0>=RULE_NATURAL && LA167_0<=RULE_STRING)||LA167_0==23||LA167_0==39||LA167_0==42||LA167_0==46||LA167_0==76||LA167_0==80||(LA167_0>=85 && LA167_0<=90)||(LA167_0>=93 && LA167_0<=94)||(LA167_0>=143 && LA167_0<=145)) ) {
                alt167=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 167, 0, input);

                throw nvae;
            }
            switch (alt167) {
                case 1 :
                    // InternalSim.g:7306:3: ( () ( (lv_correlationVariable_1_0= ruleDmxCorrelationVariable ) ) otherlv_2= '|' ( (lv_predicate_3_0= ruleDmxOrExpression ) ) )
                    {
                    // InternalSim.g:7306:3: ( () ( (lv_correlationVariable_1_0= ruleDmxCorrelationVariable ) ) otherlv_2= '|' ( (lv_predicate_3_0= ruleDmxOrExpression ) ) )
                    // InternalSim.g:7307:4: () ( (lv_correlationVariable_1_0= ruleDmxCorrelationVariable ) ) otherlv_2= '|' ( (lv_predicate_3_0= ruleDmxOrExpression ) )
                    {
                    // InternalSim.g:7307:4: ()
                    // InternalSim.g:7308:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getDmxPredicateWithCorrelationVariableAccess().getDmxPredicateWithCorrelationVariableAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSim.g:7314:4: ( (lv_correlationVariable_1_0= ruleDmxCorrelationVariable ) )
                    // InternalSim.g:7315:5: (lv_correlationVariable_1_0= ruleDmxCorrelationVariable )
                    {
                    // InternalSim.g:7315:5: (lv_correlationVariable_1_0= ruleDmxCorrelationVariable )
                    // InternalSim.g:7316:6: lv_correlationVariable_1_0= ruleDmxCorrelationVariable
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDmxPredicateWithCorrelationVariableAccess().getCorrelationVariableDmxCorrelationVariableParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_106);
                    lv_correlationVariable_1_0=ruleDmxCorrelationVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDmxPredicateWithCorrelationVariableRule());
                      						}
                      						set(
                      							current,
                      							"correlationVariable",
                      							lv_correlationVariable_1_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.DmxCorrelationVariable");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,71,FOLLOW_102); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getDmxPredicateWithCorrelationVariableAccess().getVerticalLineKeyword_0_2());
                      			
                    }
                    // InternalSim.g:7337:4: ( (lv_predicate_3_0= ruleDmxOrExpression ) )
                    // InternalSim.g:7338:5: (lv_predicate_3_0= ruleDmxOrExpression )
                    {
                    // InternalSim.g:7338:5: (lv_predicate_3_0= ruleDmxOrExpression )
                    // InternalSim.g:7339:6: lv_predicate_3_0= ruleDmxOrExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDmxPredicateWithCorrelationVariableAccess().getPredicateDmxOrExpressionParserRuleCall_0_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_predicate_3_0=ruleDmxOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDmxPredicateWithCorrelationVariableRule());
                      						}
                      						set(
                      							current,
                      							"predicate",
                      							lv_predicate_3_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.DmxOrExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:7358:3: this_DmxOrExpression_4= ruleDmxOrExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDmxPredicateWithCorrelationVariableAccess().getDmxOrExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DmxOrExpression_4=ruleDmxOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DmxOrExpression_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxPredicateWithCorrelationVariable"


    // $ANTLR start "entryRuleDmxCorrelationVariable"
    // InternalSim.g:7370:1: entryRuleDmxCorrelationVariable returns [EObject current=null] : iv_ruleDmxCorrelationVariable= ruleDmxCorrelationVariable EOF ;
    public final EObject entryRuleDmxCorrelationVariable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxCorrelationVariable = null;


        try {
            // InternalSim.g:7370:63: (iv_ruleDmxCorrelationVariable= ruleDmxCorrelationVariable EOF )
            // InternalSim.g:7371:2: iv_ruleDmxCorrelationVariable= ruleDmxCorrelationVariable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxCorrelationVariableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxCorrelationVariable=ruleDmxCorrelationVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxCorrelationVariable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxCorrelationVariable"


    // $ANTLR start "ruleDmxCorrelationVariable"
    // InternalSim.g:7377:1: ruleDmxCorrelationVariable returns [EObject current=null] : ( (lv_name_0_0= RULE_ID ) ) ;
    public final EObject ruleDmxCorrelationVariable() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;


        	enterRule();

        try {
            // InternalSim.g:7383:2: ( ( (lv_name_0_0= RULE_ID ) ) )
            // InternalSim.g:7384:2: ( (lv_name_0_0= RULE_ID ) )
            {
            // InternalSim.g:7384:2: ( (lv_name_0_0= RULE_ID ) )
            // InternalSim.g:7385:3: (lv_name_0_0= RULE_ID )
            {
            // InternalSim.g:7385:3: (lv_name_0_0= RULE_ID )
            // InternalSim.g:7386:4: lv_name_0_0= RULE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_name_0_0, grammarAccess.getDmxCorrelationVariableAccess().getNameIDTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getDmxCorrelationVariableRule());
              				}
              				setWithLastConsumed(
              					current,
              					"name",
              					lv_name_0_0,
              					"com.mimacom.ddd.dm.dmx.Dmx.ID");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxCorrelationVariable"


    // $ANTLR start "entryRuleDmxOrExpression"
    // InternalSim.g:7405:1: entryRuleDmxOrExpression returns [EObject current=null] : iv_ruleDmxOrExpression= ruleDmxOrExpression EOF ;
    public final EObject entryRuleDmxOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxOrExpression = null;


        try {
            // InternalSim.g:7405:56: (iv_ruleDmxOrExpression= ruleDmxOrExpression EOF )
            // InternalSim.g:7406:2: iv_ruleDmxOrExpression= ruleDmxOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxOrExpression=ruleDmxOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxOrExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxOrExpression"


    // $ANTLR start "ruleDmxOrExpression"
    // InternalSim.g:7412:1: ruleDmxOrExpression returns [EObject current=null] : (this_DmxAndExpression_0= ruleDmxAndExpression ( ( ( ( () ( ( ruleDmxOpOr ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxAndExpression ) ) )* ) ;
    public final EObject ruleDmxOrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_DmxAndExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalSim.g:7418:2: ( (this_DmxAndExpression_0= ruleDmxAndExpression ( ( ( ( () ( ( ruleDmxOpOr ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxAndExpression ) ) )* ) )
            // InternalSim.g:7419:2: (this_DmxAndExpression_0= ruleDmxAndExpression ( ( ( ( () ( ( ruleDmxOpOr ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxAndExpression ) ) )* )
            {
            // InternalSim.g:7419:2: (this_DmxAndExpression_0= ruleDmxAndExpression ( ( ( ( () ( ( ruleDmxOpOr ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxAndExpression ) ) )* )
            // InternalSim.g:7420:3: this_DmxAndExpression_0= ruleDmxAndExpression ( ( ( ( () ( ( ruleDmxOpOr ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxAndExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDmxOrExpressionAccess().getDmxAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_107);
            this_DmxAndExpression_0=ruleDmxAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_DmxAndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSim.g:7428:3: ( ( ( ( () ( ( ruleDmxOpOr ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxAndExpression ) ) )*
            loop168:
            do {
                int alt168=2;
                switch ( input.LA(1) ) {
                case 124:
                    {
                    int LA168_2 = input.LA(2);

                    if ( (synpred4_InternalSim()) ) {
                        alt168=1;
                    }


                    }
                    break;
                case 125:
                    {
                    int LA168_3 = input.LA(2);

                    if ( (synpred4_InternalSim()) ) {
                        alt168=1;
                    }


                    }
                    break;
                case 126:
                    {
                    int LA168_4 = input.LA(2);

                    if ( (synpred4_InternalSim()) ) {
                        alt168=1;
                    }


                    }
                    break;
                case 127:
                    {
                    int LA168_5 = input.LA(2);

                    if ( (synpred4_InternalSim()) ) {
                        alt168=1;
                    }


                    }
                    break;

                }

                switch (alt168) {
            	case 1 :
            	    // InternalSim.g:7429:4: ( ( ( () ( ( ruleDmxOpOr ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxAndExpression ) )
            	    {
            	    // InternalSim.g:7429:4: ( ( ( () ( ( ruleDmxOpOr ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpOr ) ) ) )
            	    // InternalSim.g:7430:5: ( ( () ( ( ruleDmxOpOr ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpOr ) ) )
            	    {
            	    // InternalSim.g:7440:5: ( () ( (lv_operator_2_0= ruleDmxOpOr ) ) )
            	    // InternalSim.g:7441:6: () ( (lv_operator_2_0= ruleDmxOpOr ) )
            	    {
            	    // InternalSim.g:7441:6: ()
            	    // InternalSim.g:7442:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getDmxOrExpressionAccess().getDmxBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalSim.g:7448:6: ( (lv_operator_2_0= ruleDmxOpOr ) )
            	    // InternalSim.g:7449:7: (lv_operator_2_0= ruleDmxOpOr )
            	    {
            	    // InternalSim.g:7449:7: (lv_operator_2_0= ruleDmxOpOr )
            	    // InternalSim.g:7450:8: lv_operator_2_0= ruleDmxOpOr
            	    {
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getDmxOrExpressionAccess().getOperatorDmxOpOrEnumRuleCall_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_102);
            	    lv_operator_2_0=ruleDmxOpOr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElementForParent(grammarAccess.getDmxOrExpressionRule());
            	      								}
            	      								set(
            	      									current,
            	      									"operator",
            	      									lv_operator_2_0,
            	      									"com.mimacom.ddd.dm.dmx.Dmx.DmxOpOr");
            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalSim.g:7469:4: ( (lv_rightOperand_3_0= ruleDmxAndExpression ) )
            	    // InternalSim.g:7470:5: (lv_rightOperand_3_0= ruleDmxAndExpression )
            	    {
            	    // InternalSim.g:7470:5: (lv_rightOperand_3_0= ruleDmxAndExpression )
            	    // InternalSim.g:7471:6: lv_rightOperand_3_0= ruleDmxAndExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getDmxOrExpressionAccess().getRightOperandDmxAndExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_107);
            	    lv_rightOperand_3_0=ruleDmxAndExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getDmxOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"com.mimacom.ddd.dm.dmx.Dmx.DmxAndExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop168;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxOrExpression"


    // $ANTLR start "entryRuleDmxAndExpression"
    // InternalSim.g:7493:1: entryRuleDmxAndExpression returns [EObject current=null] : iv_ruleDmxAndExpression= ruleDmxAndExpression EOF ;
    public final EObject entryRuleDmxAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxAndExpression = null;


        try {
            // InternalSim.g:7493:57: (iv_ruleDmxAndExpression= ruleDmxAndExpression EOF )
            // InternalSim.g:7494:2: iv_ruleDmxAndExpression= ruleDmxAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxAndExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxAndExpression=ruleDmxAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxAndExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxAndExpression"


    // $ANTLR start "ruleDmxAndExpression"
    // InternalSim.g:7500:1: ruleDmxAndExpression returns [EObject current=null] : (this_DmxEqualityExpression_0= ruleDmxEqualityExpression ( ( ( ( () ( ( ruleDmxOpAnd ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxEqualityExpression ) ) )* ) ;
    public final EObject ruleDmxAndExpression() throws RecognitionException {
        EObject current = null;

        EObject this_DmxEqualityExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalSim.g:7506:2: ( (this_DmxEqualityExpression_0= ruleDmxEqualityExpression ( ( ( ( () ( ( ruleDmxOpAnd ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxEqualityExpression ) ) )* ) )
            // InternalSim.g:7507:2: (this_DmxEqualityExpression_0= ruleDmxEqualityExpression ( ( ( ( () ( ( ruleDmxOpAnd ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxEqualityExpression ) ) )* )
            {
            // InternalSim.g:7507:2: (this_DmxEqualityExpression_0= ruleDmxEqualityExpression ( ( ( ( () ( ( ruleDmxOpAnd ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxEqualityExpression ) ) )* )
            // InternalSim.g:7508:3: this_DmxEqualityExpression_0= ruleDmxEqualityExpression ( ( ( ( () ( ( ruleDmxOpAnd ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxEqualityExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDmxAndExpressionAccess().getDmxEqualityExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_108);
            this_DmxEqualityExpression_0=ruleDmxEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_DmxEqualityExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSim.g:7516:3: ( ( ( ( () ( ( ruleDmxOpAnd ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxEqualityExpression ) ) )*
            loop169:
            do {
                int alt169=2;
                int LA169_0 = input.LA(1);

                if ( (LA169_0==128) ) {
                    int LA169_2 = input.LA(2);

                    if ( (synpred5_InternalSim()) ) {
                        alt169=1;
                    }


                }
                else if ( (LA169_0==26) ) {
                    int LA169_3 = input.LA(2);

                    if ( (synpred5_InternalSim()) ) {
                        alt169=1;
                    }


                }


                switch (alt169) {
            	case 1 :
            	    // InternalSim.g:7517:4: ( ( ( () ( ( ruleDmxOpAnd ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxEqualityExpression ) )
            	    {
            	    // InternalSim.g:7517:4: ( ( ( () ( ( ruleDmxOpAnd ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpAnd ) ) ) )
            	    // InternalSim.g:7518:5: ( ( () ( ( ruleDmxOpAnd ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpAnd ) ) )
            	    {
            	    // InternalSim.g:7528:5: ( () ( (lv_operator_2_0= ruleDmxOpAnd ) ) )
            	    // InternalSim.g:7529:6: () ( (lv_operator_2_0= ruleDmxOpAnd ) )
            	    {
            	    // InternalSim.g:7529:6: ()
            	    // InternalSim.g:7530:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getDmxAndExpressionAccess().getDmxBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalSim.g:7536:6: ( (lv_operator_2_0= ruleDmxOpAnd ) )
            	    // InternalSim.g:7537:7: (lv_operator_2_0= ruleDmxOpAnd )
            	    {
            	    // InternalSim.g:7537:7: (lv_operator_2_0= ruleDmxOpAnd )
            	    // InternalSim.g:7538:8: lv_operator_2_0= ruleDmxOpAnd
            	    {
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getDmxAndExpressionAccess().getOperatorDmxOpAndEnumRuleCall_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_102);
            	    lv_operator_2_0=ruleDmxOpAnd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElementForParent(grammarAccess.getDmxAndExpressionRule());
            	      								}
            	      								set(
            	      									current,
            	      									"operator",
            	      									lv_operator_2_0,
            	      									"com.mimacom.ddd.dm.dmx.Dmx.DmxOpAnd");
            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalSim.g:7557:4: ( (lv_rightOperand_3_0= ruleDmxEqualityExpression ) )
            	    // InternalSim.g:7558:5: (lv_rightOperand_3_0= ruleDmxEqualityExpression )
            	    {
            	    // InternalSim.g:7558:5: (lv_rightOperand_3_0= ruleDmxEqualityExpression )
            	    // InternalSim.g:7559:6: lv_rightOperand_3_0= ruleDmxEqualityExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getDmxAndExpressionAccess().getRightOperandDmxEqualityExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_108);
            	    lv_rightOperand_3_0=ruleDmxEqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getDmxAndExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"com.mimacom.ddd.dm.dmx.Dmx.DmxEqualityExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop169;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxAndExpression"


    // $ANTLR start "entryRuleDmxEqualityExpression"
    // InternalSim.g:7581:1: entryRuleDmxEqualityExpression returns [EObject current=null] : iv_ruleDmxEqualityExpression= ruleDmxEqualityExpression EOF ;
    public final EObject entryRuleDmxEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxEqualityExpression = null;


        try {
            // InternalSim.g:7581:62: (iv_ruleDmxEqualityExpression= ruleDmxEqualityExpression EOF )
            // InternalSim.g:7582:2: iv_ruleDmxEqualityExpression= ruleDmxEqualityExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxEqualityExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxEqualityExpression=ruleDmxEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxEqualityExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxEqualityExpression"


    // $ANTLR start "ruleDmxEqualityExpression"
    // InternalSim.g:7588:1: ruleDmxEqualityExpression returns [EObject current=null] : (this_DmxRelationalExpression_0= ruleDmxRelationalExpression ( ( ( ( () ( ( ruleDmxOpEquality ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxRelationalExpression ) ) )* ) ;
    public final EObject ruleDmxEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject this_DmxRelationalExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalSim.g:7594:2: ( (this_DmxRelationalExpression_0= ruleDmxRelationalExpression ( ( ( ( () ( ( ruleDmxOpEquality ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxRelationalExpression ) ) )* ) )
            // InternalSim.g:7595:2: (this_DmxRelationalExpression_0= ruleDmxRelationalExpression ( ( ( ( () ( ( ruleDmxOpEquality ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxRelationalExpression ) ) )* )
            {
            // InternalSim.g:7595:2: (this_DmxRelationalExpression_0= ruleDmxRelationalExpression ( ( ( ( () ( ( ruleDmxOpEquality ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxRelationalExpression ) ) )* )
            // InternalSim.g:7596:3: this_DmxRelationalExpression_0= ruleDmxRelationalExpression ( ( ( ( () ( ( ruleDmxOpEquality ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxRelationalExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDmxEqualityExpressionAccess().getDmxRelationalExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_109);
            this_DmxRelationalExpression_0=ruleDmxRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_DmxRelationalExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSim.g:7604:3: ( ( ( ( () ( ( ruleDmxOpEquality ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxRelationalExpression ) ) )*
            loop170:
            do {
                int alt170=2;
                switch ( input.LA(1) ) {
                case 75:
                    {
                    int LA170_2 = input.LA(2);

                    if ( (synpred6_InternalSim()) ) {
                        alt170=1;
                    }


                    }
                    break;
                case 129:
                    {
                    int LA170_3 = input.LA(2);

                    if ( (synpred6_InternalSim()) ) {
                        alt170=1;
                    }


                    }
                    break;
                case 130:
                    {
                    int LA170_4 = input.LA(2);

                    if ( (synpred6_InternalSim()) ) {
                        alt170=1;
                    }


                    }
                    break;

                }

                switch (alt170) {
            	case 1 :
            	    // InternalSim.g:7605:4: ( ( ( () ( ( ruleDmxOpEquality ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxRelationalExpression ) )
            	    {
            	    // InternalSim.g:7605:4: ( ( ( () ( ( ruleDmxOpEquality ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpEquality ) ) ) )
            	    // InternalSim.g:7606:5: ( ( () ( ( ruleDmxOpEquality ) ) ) )=> ( () ( (lv_operator_2_0= ruleDmxOpEquality ) ) )
            	    {
            	    // InternalSim.g:7616:5: ( () ( (lv_operator_2_0= ruleDmxOpEquality ) ) )
            	    // InternalSim.g:7617:6: () ( (lv_operator_2_0= ruleDmxOpEquality ) )
            	    {
            	    // InternalSim.g:7617:6: ()
            	    // InternalSim.g:7618:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getDmxEqualityExpressionAccess().getDmxBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalSim.g:7624:6: ( (lv_operator_2_0= ruleDmxOpEquality ) )
            	    // InternalSim.g:7625:7: (lv_operator_2_0= ruleDmxOpEquality )
            	    {
            	    // InternalSim.g:7625:7: (lv_operator_2_0= ruleDmxOpEquality )
            	    // InternalSim.g:7626:8: lv_operator_2_0= ruleDmxOpEquality
            	    {
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getDmxEqualityExpressionAccess().getOperatorDmxOpEqualityEnumRuleCall_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_102);
            	    lv_operator_2_0=ruleDmxOpEquality();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElementForParent(grammarAccess.getDmxEqualityExpressionRule());
            	      								}
            	      								set(
            	      									current,
            	      									"operator",
            	      									lv_operator_2_0,
            	      									"com.mimacom.ddd.dm.dmx.Dmx.DmxOpEquality");
            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalSim.g:7645:4: ( (lv_rightOperand_3_0= ruleDmxRelationalExpression ) )
            	    // InternalSim.g:7646:5: (lv_rightOperand_3_0= ruleDmxRelationalExpression )
            	    {
            	    // InternalSim.g:7646:5: (lv_rightOperand_3_0= ruleDmxRelationalExpression )
            	    // InternalSim.g:7647:6: lv_rightOperand_3_0= ruleDmxRelationalExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getDmxEqualityExpressionAccess().getRightOperandDmxRelationalExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_109);
            	    lv_rightOperand_3_0=ruleDmxRelationalExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getDmxEqualityExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"com.mimacom.ddd.dm.dmx.Dmx.DmxRelationalExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop170;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxEqualityExpression"


    // $ANTLR start "entryRuleDmxRelationalExpression"
    // InternalSim.g:7669:1: entryRuleDmxRelationalExpression returns [EObject current=null] : iv_ruleDmxRelationalExpression= ruleDmxRelationalExpression EOF ;
    public final EObject entryRuleDmxRelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxRelationalExpression = null;


        try {
            // InternalSim.g:7669:64: (iv_ruleDmxRelationalExpression= ruleDmxRelationalExpression EOF )
            // InternalSim.g:7670:2: iv_ruleDmxRelationalExpression= ruleDmxRelationalExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxRelationalExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxRelationalExpression=ruleDmxRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxRelationalExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxRelationalExpression"


    // $ANTLR start "ruleDmxRelationalExpression"
    // InternalSim.g:7676:1: ruleDmxRelationalExpression returns [EObject current=null] : (this_DmxOtherOperatorExpression_0= ruleDmxOtherOperatorExpression ( ( ( ( ( () ruleDmxOpInstanceOf ) )=> ( () ruleDmxOpInstanceOf ) ) ( (otherlv_3= RULE_ID ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( (lv_operator_5_0= ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleDmxOtherOperatorExpression ) ) ) )* ) ;
    public final EObject ruleDmxRelationalExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        EObject this_DmxOtherOperatorExpression_0 = null;

        Enumerator lv_operator_5_0 = null;

        EObject lv_rightOperand_6_0 = null;



        	enterRule();

        try {
            // InternalSim.g:7682:2: ( (this_DmxOtherOperatorExpression_0= ruleDmxOtherOperatorExpression ( ( ( ( ( () ruleDmxOpInstanceOf ) )=> ( () ruleDmxOpInstanceOf ) ) ( (otherlv_3= RULE_ID ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( (lv_operator_5_0= ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleDmxOtherOperatorExpression ) ) ) )* ) )
            // InternalSim.g:7683:2: (this_DmxOtherOperatorExpression_0= ruleDmxOtherOperatorExpression ( ( ( ( ( () ruleDmxOpInstanceOf ) )=> ( () ruleDmxOpInstanceOf ) ) ( (otherlv_3= RULE_ID ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( (lv_operator_5_0= ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleDmxOtherOperatorExpression ) ) ) )* )
            {
            // InternalSim.g:7683:2: (this_DmxOtherOperatorExpression_0= ruleDmxOtherOperatorExpression ( ( ( ( ( () ruleDmxOpInstanceOf ) )=> ( () ruleDmxOpInstanceOf ) ) ( (otherlv_3= RULE_ID ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( (lv_operator_5_0= ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleDmxOtherOperatorExpression ) ) ) )* )
            // InternalSim.g:7684:3: this_DmxOtherOperatorExpression_0= ruleDmxOtherOperatorExpression ( ( ( ( ( () ruleDmxOpInstanceOf ) )=> ( () ruleDmxOpInstanceOf ) ) ( (otherlv_3= RULE_ID ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( (lv_operator_5_0= ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleDmxOtherOperatorExpression ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDmxRelationalExpressionAccess().getDmxOtherOperatorExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_110);
            this_DmxOtherOperatorExpression_0=ruleDmxOtherOperatorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_DmxOtherOperatorExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSim.g:7692:3: ( ( ( ( ( () ruleDmxOpInstanceOf ) )=> ( () ruleDmxOpInstanceOf ) ) ( (otherlv_3= RULE_ID ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( (lv_operator_5_0= ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleDmxOtherOperatorExpression ) ) ) )*
            loop171:
            do {
                int alt171=3;
                alt171 = dfa171.predict(input);
                switch (alt171) {
            	case 1 :
            	    // InternalSim.g:7693:4: ( ( ( ( () ruleDmxOpInstanceOf ) )=> ( () ruleDmxOpInstanceOf ) ) ( (otherlv_3= RULE_ID ) ) )
            	    {
            	    // InternalSim.g:7693:4: ( ( ( ( () ruleDmxOpInstanceOf ) )=> ( () ruleDmxOpInstanceOf ) ) ( (otherlv_3= RULE_ID ) ) )
            	    // InternalSim.g:7694:5: ( ( ( () ruleDmxOpInstanceOf ) )=> ( () ruleDmxOpInstanceOf ) ) ( (otherlv_3= RULE_ID ) )
            	    {
            	    // InternalSim.g:7694:5: ( ( ( () ruleDmxOpInstanceOf ) )=> ( () ruleDmxOpInstanceOf ) )
            	    // InternalSim.g:7695:6: ( ( () ruleDmxOpInstanceOf ) )=> ( () ruleDmxOpInstanceOf )
            	    {
            	    // InternalSim.g:7701:6: ( () ruleDmxOpInstanceOf )
            	    // InternalSim.g:7702:7: () ruleDmxOpInstanceOf
            	    {
            	    // InternalSim.g:7702:7: ()
            	    // InternalSim.g:7703:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								current = forceCreateModelElementAndSet(
            	      									grammarAccess.getDmxRelationalExpressionAccess().getDmxInstanceOfExpressionExpressionAction_1_0_0_0_0(),
            	      									current);
            	      							
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getDmxRelationalExpressionAccess().getDmxOpInstanceOfParserRuleCall_1_0_0_0_1());
            	      						
            	    }
            	    pushFollow(FOLLOW_3);
            	    ruleDmxOpInstanceOf();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalSim.g:7718:5: ( (otherlv_3= RULE_ID ) )
            	    // InternalSim.g:7719:6: (otherlv_3= RULE_ID )
            	    {
            	    // InternalSim.g:7719:6: (otherlv_3= RULE_ID )
            	    // InternalSim.g:7720:7: otherlv_3= RULE_ID
            	    {
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElement(grammarAccess.getDmxRelationalExpressionRule());
            	      							}
            	      						
            	    }
            	    otherlv_3=(Token)match(input,RULE_ID,FOLLOW_110); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							newLeafNode(otherlv_3, grammarAccess.getDmxRelationalExpressionAccess().getTypeDTypeCrossReference_1_0_1_0());
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalSim.g:7733:4: ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( (lv_operator_5_0= ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleDmxOtherOperatorExpression ) ) )
            	    {
            	    // InternalSim.g:7733:4: ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( (lv_operator_5_0= ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleDmxOtherOperatorExpression ) ) )
            	    // InternalSim.g:7734:5: ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( (lv_operator_5_0= ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleDmxOtherOperatorExpression ) )
            	    {
            	    // InternalSim.g:7734:5: ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( (lv_operator_5_0= ruleOpCompare ) ) ) )
            	    // InternalSim.g:7735:6: ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( (lv_operator_5_0= ruleOpCompare ) ) )
            	    {
            	    // InternalSim.g:7745:6: ( () ( (lv_operator_5_0= ruleOpCompare ) ) )
            	    // InternalSim.g:7746:7: () ( (lv_operator_5_0= ruleOpCompare ) )
            	    {
            	    // InternalSim.g:7746:7: ()
            	    // InternalSim.g:7747:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								current = forceCreateModelElementAndSet(
            	      									grammarAccess.getDmxRelationalExpressionAccess().getDmxBinaryOperationLeftOperandAction_1_1_0_0_0(),
            	      									current);
            	      							
            	    }

            	    }

            	    // InternalSim.g:7753:7: ( (lv_operator_5_0= ruleOpCompare ) )
            	    // InternalSim.g:7754:8: (lv_operator_5_0= ruleOpCompare )
            	    {
            	    // InternalSim.g:7754:8: (lv_operator_5_0= ruleOpCompare )
            	    // InternalSim.g:7755:9: lv_operator_5_0= ruleOpCompare
            	    {
            	    if ( state.backtracking==0 ) {

            	      									newCompositeNode(grammarAccess.getDmxRelationalExpressionAccess().getOperatorOpCompareEnumRuleCall_1_1_0_0_1_0());
            	      								
            	    }
            	    pushFollow(FOLLOW_102);
            	    lv_operator_5_0=ruleOpCompare();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									if (current==null) {
            	      										current = createModelElementForParent(grammarAccess.getDmxRelationalExpressionRule());
            	      									}
            	      									set(
            	      										current,
            	      										"operator",
            	      										lv_operator_5_0,
            	      										"com.mimacom.ddd.dm.dmx.Dmx.OpCompare");
            	      									afterParserOrEnumRuleCall();
            	      								
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalSim.g:7774:5: ( (lv_rightOperand_6_0= ruleDmxOtherOperatorExpression ) )
            	    // InternalSim.g:7775:6: (lv_rightOperand_6_0= ruleDmxOtherOperatorExpression )
            	    {
            	    // InternalSim.g:7775:6: (lv_rightOperand_6_0= ruleDmxOtherOperatorExpression )
            	    // InternalSim.g:7776:7: lv_rightOperand_6_0= ruleDmxOtherOperatorExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getDmxRelationalExpressionAccess().getRightOperandDmxOtherOperatorExpressionParserRuleCall_1_1_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_110);
            	    lv_rightOperand_6_0=ruleDmxOtherOperatorExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getDmxRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"rightOperand",
            	      								lv_rightOperand_6_0,
            	      								"com.mimacom.ddd.dm.dmx.Dmx.DmxOtherOperatorExpression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop171;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxRelationalExpression"


    // $ANTLR start "entryRuleDmxOpInstanceOf"
    // InternalSim.g:7799:1: entryRuleDmxOpInstanceOf returns [String current=null] : iv_ruleDmxOpInstanceOf= ruleDmxOpInstanceOf EOF ;
    public final String entryRuleDmxOpInstanceOf() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleDmxOpInstanceOf = null;


        try {
            // InternalSim.g:7799:55: (iv_ruleDmxOpInstanceOf= ruleDmxOpInstanceOf EOF )
            // InternalSim.g:7800:2: iv_ruleDmxOpInstanceOf= ruleDmxOpInstanceOf EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxOpInstanceOfRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxOpInstanceOf=ruleDmxOpInstanceOf();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxOpInstanceOf.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxOpInstanceOf"


    // $ANTLR start "ruleDmxOpInstanceOf"
    // InternalSim.g:7806:1: ruleDmxOpInstanceOf returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'ISA' | kw= 'isa' ) ;
    public final AntlrDatatypeRuleToken ruleDmxOpInstanceOf() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalSim.g:7812:2: ( (kw= 'ISA' | kw= 'isa' ) )
            // InternalSim.g:7813:2: (kw= 'ISA' | kw= 'isa' )
            {
            // InternalSim.g:7813:2: (kw= 'ISA' | kw= 'isa' )
            int alt172=2;
            int LA172_0 = input.LA(1);

            if ( (LA172_0==72) ) {
                alt172=1;
            }
            else if ( (LA172_0==73) ) {
                alt172=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 172, 0, input);

                throw nvae;
            }
            switch (alt172) {
                case 1 :
                    // InternalSim.g:7814:3: kw= 'ISA'
                    {
                    kw=(Token)match(input,72,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDmxOpInstanceOfAccess().getISAKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSim.g:7820:3: kw= 'isa'
                    {
                    kw=(Token)match(input,73,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDmxOpInstanceOfAccess().getIsaKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxOpInstanceOf"


    // $ANTLR start "entryRuleDmxOtherOperatorExpression"
    // InternalSim.g:7829:1: entryRuleDmxOtherOperatorExpression returns [EObject current=null] : iv_ruleDmxOtherOperatorExpression= ruleDmxOtherOperatorExpression EOF ;
    public final EObject entryRuleDmxOtherOperatorExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxOtherOperatorExpression = null;


        try {
            // InternalSim.g:7829:67: (iv_ruleDmxOtherOperatorExpression= ruleDmxOtherOperatorExpression EOF )
            // InternalSim.g:7830:2: iv_ruleDmxOtherOperatorExpression= ruleDmxOtherOperatorExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxOtherOperatorExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxOtherOperatorExpression=ruleDmxOtherOperatorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxOtherOperatorExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxOtherOperatorExpression"


    // $ANTLR start "ruleDmxOtherOperatorExpression"
    // InternalSim.g:7836:1: ruleDmxOtherOperatorExpression returns [EObject current=null] : (this_DmxAdditiveExpression_0= ruleDmxAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxAdditiveExpression ) ) )* ) ;
    public final EObject ruleDmxOtherOperatorExpression() throws RecognitionException {
        EObject current = null;

        EObject this_DmxAdditiveExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalSim.g:7842:2: ( (this_DmxAdditiveExpression_0= ruleDmxAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxAdditiveExpression ) ) )* ) )
            // InternalSim.g:7843:2: (this_DmxAdditiveExpression_0= ruleDmxAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxAdditiveExpression ) ) )* )
            {
            // InternalSim.g:7843:2: (this_DmxAdditiveExpression_0= ruleDmxAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxAdditiveExpression ) ) )* )
            // InternalSim.g:7844:3: this_DmxAdditiveExpression_0= ruleDmxAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxAdditiveExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDmxOtherOperatorExpressionAccess().getDmxAdditiveExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_111);
            this_DmxAdditiveExpression_0=ruleDmxAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_DmxAdditiveExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSim.g:7852:3: ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxAdditiveExpression ) ) )*
            loop173:
            do {
                int alt173=2;
                switch ( input.LA(1) ) {
                case 137:
                    {
                    int LA173_2 = input.LA(2);

                    if ( (synpred9_InternalSim()) ) {
                        alt173=1;
                    }


                    }
                    break;
                case 64:
                    {
                    int LA173_3 = input.LA(2);

                    if ( (synpred9_InternalSim()) ) {
                        alt173=1;
                    }


                    }
                    break;
                case 84:
                    {
                    int LA173_4 = input.LA(2);

                    if ( (synpred9_InternalSim()) ) {
                        alt173=1;
                    }


                    }
                    break;
                case 138:
                    {
                    int LA173_5 = input.LA(2);

                    if ( (synpred9_InternalSim()) ) {
                        alt173=1;
                    }


                    }
                    break;
                case 139:
                    {
                    int LA173_6 = input.LA(2);

                    if ( (synpred9_InternalSim()) ) {
                        alt173=1;
                    }


                    }
                    break;

                }

                switch (alt173) {
            	case 1 :
            	    // InternalSim.g:7853:4: ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxAdditiveExpression ) )
            	    {
            	    // InternalSim.g:7853:4: ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpOther ) ) ) )
            	    // InternalSim.g:7854:5: ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpOther ) ) )
            	    {
            	    // InternalSim.g:7864:5: ( () ( (lv_operator_2_0= ruleOpOther ) ) )
            	    // InternalSim.g:7865:6: () ( (lv_operator_2_0= ruleOpOther ) )
            	    {
            	    // InternalSim.g:7865:6: ()
            	    // InternalSim.g:7866:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getDmxOtherOperatorExpressionAccess().getDmxBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalSim.g:7872:6: ( (lv_operator_2_0= ruleOpOther ) )
            	    // InternalSim.g:7873:7: (lv_operator_2_0= ruleOpOther )
            	    {
            	    // InternalSim.g:7873:7: (lv_operator_2_0= ruleOpOther )
            	    // InternalSim.g:7874:8: lv_operator_2_0= ruleOpOther
            	    {
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getDmxOtherOperatorExpressionAccess().getOperatorOpOtherEnumRuleCall_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_102);
            	    lv_operator_2_0=ruleOpOther();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElementForParent(grammarAccess.getDmxOtherOperatorExpressionRule());
            	      								}
            	      								set(
            	      									current,
            	      									"operator",
            	      									lv_operator_2_0,
            	      									"com.mimacom.ddd.dm.dmx.Dmx.OpOther");
            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalSim.g:7893:4: ( (lv_rightOperand_3_0= ruleDmxAdditiveExpression ) )
            	    // InternalSim.g:7894:5: (lv_rightOperand_3_0= ruleDmxAdditiveExpression )
            	    {
            	    // InternalSim.g:7894:5: (lv_rightOperand_3_0= ruleDmxAdditiveExpression )
            	    // InternalSim.g:7895:6: lv_rightOperand_3_0= ruleDmxAdditiveExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getDmxOtherOperatorExpressionAccess().getRightOperandDmxAdditiveExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_111);
            	    lv_rightOperand_3_0=ruleDmxAdditiveExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getDmxOtherOperatorExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"com.mimacom.ddd.dm.dmx.Dmx.DmxAdditiveExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop173;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxOtherOperatorExpression"


    // $ANTLR start "entryRuleDmxAdditiveExpression"
    // InternalSim.g:7917:1: entryRuleDmxAdditiveExpression returns [EObject current=null] : iv_ruleDmxAdditiveExpression= ruleDmxAdditiveExpression EOF ;
    public final EObject entryRuleDmxAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxAdditiveExpression = null;


        try {
            // InternalSim.g:7917:62: (iv_ruleDmxAdditiveExpression= ruleDmxAdditiveExpression EOF )
            // InternalSim.g:7918:2: iv_ruleDmxAdditiveExpression= ruleDmxAdditiveExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxAdditiveExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxAdditiveExpression=ruleDmxAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxAdditiveExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxAdditiveExpression"


    // $ANTLR start "ruleDmxAdditiveExpression"
    // InternalSim.g:7924:1: ruleDmxAdditiveExpression returns [EObject current=null] : (this_DmxMultiplicativeExpression_0= ruleDmxMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxMultiplicativeExpression ) ) )* ) ;
    public final EObject ruleDmxAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject this_DmxMultiplicativeExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalSim.g:7930:2: ( (this_DmxMultiplicativeExpression_0= ruleDmxMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxMultiplicativeExpression ) ) )* ) )
            // InternalSim.g:7931:2: (this_DmxMultiplicativeExpression_0= ruleDmxMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxMultiplicativeExpression ) ) )* )
            {
            // InternalSim.g:7931:2: (this_DmxMultiplicativeExpression_0= ruleDmxMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxMultiplicativeExpression ) ) )* )
            // InternalSim.g:7932:3: this_DmxMultiplicativeExpression_0= ruleDmxMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxMultiplicativeExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDmxAdditiveExpressionAccess().getDmxMultiplicativeExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_112);
            this_DmxMultiplicativeExpression_0=ruleDmxMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_DmxMultiplicativeExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSim.g:7940:3: ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxMultiplicativeExpression ) ) )*
            loop174:
            do {
                int alt174=2;
                int LA174_0 = input.LA(1);

                if ( (LA174_0==93) ) {
                    int LA174_2 = input.LA(2);

                    if ( (synpred10_InternalSim()) ) {
                        alt174=1;
                    }


                }
                else if ( (LA174_0==94) ) {
                    int LA174_3 = input.LA(2);

                    if ( (synpred10_InternalSim()) ) {
                        alt174=1;
                    }


                }


                switch (alt174) {
            	case 1 :
            	    // InternalSim.g:7941:4: ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxMultiplicativeExpression ) )
            	    {
            	    // InternalSim.g:7941:4: ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpAdd ) ) ) )
            	    // InternalSim.g:7942:5: ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpAdd ) ) )
            	    {
            	    // InternalSim.g:7952:5: ( () ( (lv_operator_2_0= ruleOpAdd ) ) )
            	    // InternalSim.g:7953:6: () ( (lv_operator_2_0= ruleOpAdd ) )
            	    {
            	    // InternalSim.g:7953:6: ()
            	    // InternalSim.g:7954:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getDmxAdditiveExpressionAccess().getDmxBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalSim.g:7960:6: ( (lv_operator_2_0= ruleOpAdd ) )
            	    // InternalSim.g:7961:7: (lv_operator_2_0= ruleOpAdd )
            	    {
            	    // InternalSim.g:7961:7: (lv_operator_2_0= ruleOpAdd )
            	    // InternalSim.g:7962:8: lv_operator_2_0= ruleOpAdd
            	    {
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getDmxAdditiveExpressionAccess().getOperatorOpAddEnumRuleCall_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_102);
            	    lv_operator_2_0=ruleOpAdd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElementForParent(grammarAccess.getDmxAdditiveExpressionRule());
            	      								}
            	      								set(
            	      									current,
            	      									"operator",
            	      									lv_operator_2_0,
            	      									"com.mimacom.ddd.dm.dmx.Dmx.OpAdd");
            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalSim.g:7981:4: ( (lv_rightOperand_3_0= ruleDmxMultiplicativeExpression ) )
            	    // InternalSim.g:7982:5: (lv_rightOperand_3_0= ruleDmxMultiplicativeExpression )
            	    {
            	    // InternalSim.g:7982:5: (lv_rightOperand_3_0= ruleDmxMultiplicativeExpression )
            	    // InternalSim.g:7983:6: lv_rightOperand_3_0= ruleDmxMultiplicativeExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getDmxAdditiveExpressionAccess().getRightOperandDmxMultiplicativeExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_112);
            	    lv_rightOperand_3_0=ruleDmxMultiplicativeExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getDmxAdditiveExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"com.mimacom.ddd.dm.dmx.Dmx.DmxMultiplicativeExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop174;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxAdditiveExpression"


    // $ANTLR start "entryRuleDmxMultiplicativeExpression"
    // InternalSim.g:8005:1: entryRuleDmxMultiplicativeExpression returns [EObject current=null] : iv_ruleDmxMultiplicativeExpression= ruleDmxMultiplicativeExpression EOF ;
    public final EObject entryRuleDmxMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxMultiplicativeExpression = null;


        try {
            // InternalSim.g:8005:68: (iv_ruleDmxMultiplicativeExpression= ruleDmxMultiplicativeExpression EOF )
            // InternalSim.g:8006:2: iv_ruleDmxMultiplicativeExpression= ruleDmxMultiplicativeExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxMultiplicativeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxMultiplicativeExpression=ruleDmxMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxMultiplicativeExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxMultiplicativeExpression"


    // $ANTLR start "ruleDmxMultiplicativeExpression"
    // InternalSim.g:8012:1: ruleDmxMultiplicativeExpression returns [EObject current=null] : (this_DmxUnaryOperation_0= ruleDmxUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxUnaryOperation ) ) )* ) ;
    public final EObject ruleDmxMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject this_DmxUnaryOperation_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalSim.g:8018:2: ( (this_DmxUnaryOperation_0= ruleDmxUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxUnaryOperation ) ) )* ) )
            // InternalSim.g:8019:2: (this_DmxUnaryOperation_0= ruleDmxUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxUnaryOperation ) ) )* )
            {
            // InternalSim.g:8019:2: (this_DmxUnaryOperation_0= ruleDmxUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxUnaryOperation ) ) )* )
            // InternalSim.g:8020:3: this_DmxUnaryOperation_0= ruleDmxUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxUnaryOperation ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDmxMultiplicativeExpressionAccess().getDmxUnaryOperationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_113);
            this_DmxUnaryOperation_0=ruleDmxUnaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_DmxUnaryOperation_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSim.g:8028:3: ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxUnaryOperation ) ) )*
            loop175:
            do {
                int alt175=2;
                switch ( input.LA(1) ) {
                case 47:
                    {
                    int LA175_2 = input.LA(2);

                    if ( (synpred11_InternalSim()) ) {
                        alt175=1;
                    }


                    }
                    break;
                case 140:
                    {
                    int LA175_3 = input.LA(2);

                    if ( (synpred11_InternalSim()) ) {
                        alt175=1;
                    }


                    }
                    break;
                case 141:
                    {
                    int LA175_4 = input.LA(2);

                    if ( (synpred11_InternalSim()) ) {
                        alt175=1;
                    }


                    }
                    break;
                case 142:
                    {
                    int LA175_5 = input.LA(2);

                    if ( (synpred11_InternalSim()) ) {
                        alt175=1;
                    }


                    }
                    break;

                }

                switch (alt175) {
            	case 1 :
            	    // InternalSim.g:8029:4: ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleDmxUnaryOperation ) )
            	    {
            	    // InternalSim.g:8029:4: ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpMulti ) ) ) )
            	    // InternalSim.g:8030:5: ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpMulti ) ) )
            	    {
            	    // InternalSim.g:8040:5: ( () ( (lv_operator_2_0= ruleOpMulti ) ) )
            	    // InternalSim.g:8041:6: () ( (lv_operator_2_0= ruleOpMulti ) )
            	    {
            	    // InternalSim.g:8041:6: ()
            	    // InternalSim.g:8042:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getDmxMultiplicativeExpressionAccess().getDmxBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalSim.g:8048:6: ( (lv_operator_2_0= ruleOpMulti ) )
            	    // InternalSim.g:8049:7: (lv_operator_2_0= ruleOpMulti )
            	    {
            	    // InternalSim.g:8049:7: (lv_operator_2_0= ruleOpMulti )
            	    // InternalSim.g:8050:8: lv_operator_2_0= ruleOpMulti
            	    {
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getDmxMultiplicativeExpressionAccess().getOperatorOpMultiEnumRuleCall_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_102);
            	    lv_operator_2_0=ruleOpMulti();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElementForParent(grammarAccess.getDmxMultiplicativeExpressionRule());
            	      								}
            	      								set(
            	      									current,
            	      									"operator",
            	      									lv_operator_2_0,
            	      									"com.mimacom.ddd.dm.dmx.Dmx.OpMulti");
            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalSim.g:8069:4: ( (lv_rightOperand_3_0= ruleDmxUnaryOperation ) )
            	    // InternalSim.g:8070:5: (lv_rightOperand_3_0= ruleDmxUnaryOperation )
            	    {
            	    // InternalSim.g:8070:5: (lv_rightOperand_3_0= ruleDmxUnaryOperation )
            	    // InternalSim.g:8071:6: lv_rightOperand_3_0= ruleDmxUnaryOperation
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getDmxMultiplicativeExpressionAccess().getRightOperandDmxUnaryOperationParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_113);
            	    lv_rightOperand_3_0=ruleDmxUnaryOperation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getDmxMultiplicativeExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"com.mimacom.ddd.dm.dmx.Dmx.DmxUnaryOperation");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop175;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxMultiplicativeExpression"


    // $ANTLR start "entryRuleDmxUnaryOperation"
    // InternalSim.g:8093:1: entryRuleDmxUnaryOperation returns [EObject current=null] : iv_ruleDmxUnaryOperation= ruleDmxUnaryOperation EOF ;
    public final EObject entryRuleDmxUnaryOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxUnaryOperation = null;


        try {
            // InternalSim.g:8093:58: (iv_ruleDmxUnaryOperation= ruleDmxUnaryOperation EOF )
            // InternalSim.g:8094:2: iv_ruleDmxUnaryOperation= ruleDmxUnaryOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxUnaryOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxUnaryOperation=ruleDmxUnaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxUnaryOperation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxUnaryOperation"


    // $ANTLR start "ruleDmxUnaryOperation"
    // InternalSim.g:8100:1: ruleDmxUnaryOperation returns [EObject current=null] : ( ( () ( (lv_operator_1_0= ruleOpUnary ) ) ( (lv_operand_2_0= ruleDmxUnaryOperation ) ) ) | this_DmxCastExpression_3= ruleDmxCastExpression ) ;
    public final EObject ruleDmxUnaryOperation() throws RecognitionException {
        EObject current = null;

        Enumerator lv_operator_1_0 = null;

        EObject lv_operand_2_0 = null;

        EObject this_DmxCastExpression_3 = null;



        	enterRule();

        try {
            // InternalSim.g:8106:2: ( ( ( () ( (lv_operator_1_0= ruleOpUnary ) ) ( (lv_operand_2_0= ruleDmxUnaryOperation ) ) ) | this_DmxCastExpression_3= ruleDmxCastExpression ) )
            // InternalSim.g:8107:2: ( ( () ( (lv_operator_1_0= ruleOpUnary ) ) ( (lv_operand_2_0= ruleDmxUnaryOperation ) ) ) | this_DmxCastExpression_3= ruleDmxCastExpression )
            {
            // InternalSim.g:8107:2: ( ( () ( (lv_operator_1_0= ruleOpUnary ) ) ( (lv_operand_2_0= ruleDmxUnaryOperation ) ) ) | this_DmxCastExpression_3= ruleDmxCastExpression )
            int alt176=2;
            int LA176_0 = input.LA(1);

            if ( ((LA176_0>=93 && LA176_0<=94)||(LA176_0>=143 && LA176_0<=145)) ) {
                alt176=1;
            }
            else if ( (LA176_0==RULE_ID||(LA176_0>=RULE_NATURAL && LA176_0<=RULE_STRING)||LA176_0==23||LA176_0==39||LA176_0==42||LA176_0==46||LA176_0==76||LA176_0==80||(LA176_0>=85 && LA176_0<=90)) ) {
                alt176=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 176, 0, input);

                throw nvae;
            }
            switch (alt176) {
                case 1 :
                    // InternalSim.g:8108:3: ( () ( (lv_operator_1_0= ruleOpUnary ) ) ( (lv_operand_2_0= ruleDmxUnaryOperation ) ) )
                    {
                    // InternalSim.g:8108:3: ( () ( (lv_operator_1_0= ruleOpUnary ) ) ( (lv_operand_2_0= ruleDmxUnaryOperation ) ) )
                    // InternalSim.g:8109:4: () ( (lv_operator_1_0= ruleOpUnary ) ) ( (lv_operand_2_0= ruleDmxUnaryOperation ) )
                    {
                    // InternalSim.g:8109:4: ()
                    // InternalSim.g:8110:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getDmxUnaryOperationAccess().getDmxUnaryOperationAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSim.g:8116:4: ( (lv_operator_1_0= ruleOpUnary ) )
                    // InternalSim.g:8117:5: (lv_operator_1_0= ruleOpUnary )
                    {
                    // InternalSim.g:8117:5: (lv_operator_1_0= ruleOpUnary )
                    // InternalSim.g:8118:6: lv_operator_1_0= ruleOpUnary
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDmxUnaryOperationAccess().getOperatorOpUnaryEnumRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_102);
                    lv_operator_1_0=ruleOpUnary();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDmxUnaryOperationRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_1_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.OpUnary");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSim.g:8135:4: ( (lv_operand_2_0= ruleDmxUnaryOperation ) )
                    // InternalSim.g:8136:5: (lv_operand_2_0= ruleDmxUnaryOperation )
                    {
                    // InternalSim.g:8136:5: (lv_operand_2_0= ruleDmxUnaryOperation )
                    // InternalSim.g:8137:6: lv_operand_2_0= ruleDmxUnaryOperation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDmxUnaryOperationAccess().getOperandDmxUnaryOperationParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_operand_2_0=ruleDmxUnaryOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDmxUnaryOperationRule());
                      						}
                      						set(
                      							current,
                      							"operand",
                      							lv_operand_2_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.DmxUnaryOperation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:8156:3: this_DmxCastExpression_3= ruleDmxCastExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDmxUnaryOperationAccess().getDmxCastExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DmxCastExpression_3=ruleDmxCastExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DmxCastExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxUnaryOperation"


    // $ANTLR start "entryRuleDmxCastExpression"
    // InternalSim.g:8168:1: entryRuleDmxCastExpression returns [EObject current=null] : iv_ruleDmxCastExpression= ruleDmxCastExpression EOF ;
    public final EObject entryRuleDmxCastExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxCastExpression = null;


        try {
            // InternalSim.g:8168:58: (iv_ruleDmxCastExpression= ruleDmxCastExpression EOF )
            // InternalSim.g:8169:2: iv_ruleDmxCastExpression= ruleDmxCastExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxCastExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxCastExpression=ruleDmxCastExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxCastExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxCastExpression"


    // $ANTLR start "ruleDmxCastExpression"
    // InternalSim.g:8175:1: ruleDmxCastExpression returns [EObject current=null] : (this_DmxNavigableMemberReference_0= ruleDmxNavigableMemberReference ( ( ( ( () ruleDmxOpCast ) )=> ( () ruleDmxOpCast ) ) ( (otherlv_3= RULE_ID ) ) )? ) ;
    public final EObject ruleDmxCastExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        EObject this_DmxNavigableMemberReference_0 = null;



        	enterRule();

        try {
            // InternalSim.g:8181:2: ( (this_DmxNavigableMemberReference_0= ruleDmxNavigableMemberReference ( ( ( ( () ruleDmxOpCast ) )=> ( () ruleDmxOpCast ) ) ( (otherlv_3= RULE_ID ) ) )? ) )
            // InternalSim.g:8182:2: (this_DmxNavigableMemberReference_0= ruleDmxNavigableMemberReference ( ( ( ( () ruleDmxOpCast ) )=> ( () ruleDmxOpCast ) ) ( (otherlv_3= RULE_ID ) ) )? )
            {
            // InternalSim.g:8182:2: (this_DmxNavigableMemberReference_0= ruleDmxNavigableMemberReference ( ( ( ( () ruleDmxOpCast ) )=> ( () ruleDmxOpCast ) ) ( (otherlv_3= RULE_ID ) ) )? )
            // InternalSim.g:8183:3: this_DmxNavigableMemberReference_0= ruleDmxNavigableMemberReference ( ( ( ( () ruleDmxOpCast ) )=> ( () ruleDmxOpCast ) ) ( (otherlv_3= RULE_ID ) ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDmxCastExpressionAccess().getDmxNavigableMemberReferenceParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_114);
            this_DmxNavigableMemberReference_0=ruleDmxNavigableMemberReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_DmxNavigableMemberReference_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSim.g:8191:3: ( ( ( ( () ruleDmxOpCast ) )=> ( () ruleDmxOpCast ) ) ( (otherlv_3= RULE_ID ) ) )?
            int alt177=2;
            int LA177_0 = input.LA(1);

            if ( (LA177_0==74) ) {
                int LA177_1 = input.LA(2);

                if ( (synpred12_InternalSim()) ) {
                    alt177=1;
                }
            }
            else if ( (LA177_0==25) ) {
                int LA177_2 = input.LA(2);

                if ( (synpred12_InternalSim()) ) {
                    alt177=1;
                }
            }
            switch (alt177) {
                case 1 :
                    // InternalSim.g:8192:4: ( ( ( () ruleDmxOpCast ) )=> ( () ruleDmxOpCast ) ) ( (otherlv_3= RULE_ID ) )
                    {
                    // InternalSim.g:8192:4: ( ( ( () ruleDmxOpCast ) )=> ( () ruleDmxOpCast ) )
                    // InternalSim.g:8193:5: ( ( () ruleDmxOpCast ) )=> ( () ruleDmxOpCast )
                    {
                    // InternalSim.g:8199:5: ( () ruleDmxOpCast )
                    // InternalSim.g:8200:6: () ruleDmxOpCast
                    {
                    // InternalSim.g:8200:6: ()
                    // InternalSim.g:8201:7: 
                    {
                    if ( state.backtracking==0 ) {

                      							current = forceCreateModelElementAndSet(
                      								grammarAccess.getDmxCastExpressionAccess().getDmxCastExpressionTargetAction_1_0_0_0(),
                      								current);
                      						
                    }

                    }

                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDmxCastExpressionAccess().getDmxOpCastParserRuleCall_1_0_0_1());
                      					
                    }
                    pushFollow(FOLLOW_3);
                    ruleDmxOpCast();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSim.g:8216:4: ( (otherlv_3= RULE_ID ) )
                    // InternalSim.g:8217:5: (otherlv_3= RULE_ID )
                    {
                    // InternalSim.g:8217:5: (otherlv_3= RULE_ID )
                    // InternalSim.g:8218:6: otherlv_3= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDmxCastExpressionRule());
                      						}
                      					
                    }
                    otherlv_3=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_3, grammarAccess.getDmxCastExpressionAccess().getTypeDTypeCrossReference_1_1_0());
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxCastExpression"


    // $ANTLR start "entryRuleDmxOpCast"
    // InternalSim.g:8234:1: entryRuleDmxOpCast returns [String current=null] : iv_ruleDmxOpCast= ruleDmxOpCast EOF ;
    public final String entryRuleDmxOpCast() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleDmxOpCast = null;


        try {
            // InternalSim.g:8234:49: (iv_ruleDmxOpCast= ruleDmxOpCast EOF )
            // InternalSim.g:8235:2: iv_ruleDmxOpCast= ruleDmxOpCast EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxOpCastRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxOpCast=ruleDmxOpCast();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxOpCast.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxOpCast"


    // $ANTLR start "ruleDmxOpCast"
    // InternalSim.g:8241:1: ruleDmxOpCast returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'AS' | kw= 'as' ) ;
    public final AntlrDatatypeRuleToken ruleDmxOpCast() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalSim.g:8247:2: ( (kw= 'AS' | kw= 'as' ) )
            // InternalSim.g:8248:2: (kw= 'AS' | kw= 'as' )
            {
            // InternalSim.g:8248:2: (kw= 'AS' | kw= 'as' )
            int alt178=2;
            int LA178_0 = input.LA(1);

            if ( (LA178_0==74) ) {
                alt178=1;
            }
            else if ( (LA178_0==25) ) {
                alt178=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 178, 0, input);

                throw nvae;
            }
            switch (alt178) {
                case 1 :
                    // InternalSim.g:8249:3: kw= 'AS'
                    {
                    kw=(Token)match(input,74,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDmxOpCastAccess().getASKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSim.g:8255:3: kw= 'as'
                    {
                    kw=(Token)match(input,25,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDmxOpCastAccess().getAsKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxOpCast"


    // $ANTLR start "entryRuleDmxPrimaryExpression"
    // InternalSim.g:8264:1: entryRuleDmxPrimaryExpression returns [EObject current=null] : iv_ruleDmxPrimaryExpression= ruleDmxPrimaryExpression EOF ;
    public final EObject entryRuleDmxPrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxPrimaryExpression = null;


        try {
            // InternalSim.g:8264:61: (iv_ruleDmxPrimaryExpression= ruleDmxPrimaryExpression EOF )
            // InternalSim.g:8265:2: iv_ruleDmxPrimaryExpression= ruleDmxPrimaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxPrimaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxPrimaryExpression=ruleDmxPrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxPrimaryExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxPrimaryExpression"


    // $ANTLR start "ruleDmxPrimaryExpression"
    // InternalSim.g:8271:1: ruleDmxPrimaryExpression returns [EObject current=null] : (this_DmxLiteralExpression_0= ruleDmxLiteralExpression | this_DmxParenthesizedExpression_1= ruleDmxParenthesizedExpression | this_DmxListExpression_2= ruleDmxListExpression | this_DmxFunctionCall_3= ruleDmxFunctionCall | this_DmxStaticReference_4= ruleDmxStaticReference | this_DmxContextReference_5= ruleDmxContextReference | this_DmxIfExpression_6= ruleDmxIfExpression ) ;
    public final EObject ruleDmxPrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject this_DmxLiteralExpression_0 = null;

        EObject this_DmxParenthesizedExpression_1 = null;

        EObject this_DmxListExpression_2 = null;

        EObject this_DmxFunctionCall_3 = null;

        EObject this_DmxStaticReference_4 = null;

        EObject this_DmxContextReference_5 = null;

        EObject this_DmxIfExpression_6 = null;



        	enterRule();

        try {
            // InternalSim.g:8277:2: ( (this_DmxLiteralExpression_0= ruleDmxLiteralExpression | this_DmxParenthesizedExpression_1= ruleDmxParenthesizedExpression | this_DmxListExpression_2= ruleDmxListExpression | this_DmxFunctionCall_3= ruleDmxFunctionCall | this_DmxStaticReference_4= ruleDmxStaticReference | this_DmxContextReference_5= ruleDmxContextReference | this_DmxIfExpression_6= ruleDmxIfExpression ) )
            // InternalSim.g:8278:2: (this_DmxLiteralExpression_0= ruleDmxLiteralExpression | this_DmxParenthesizedExpression_1= ruleDmxParenthesizedExpression | this_DmxListExpression_2= ruleDmxListExpression | this_DmxFunctionCall_3= ruleDmxFunctionCall | this_DmxStaticReference_4= ruleDmxStaticReference | this_DmxContextReference_5= ruleDmxContextReference | this_DmxIfExpression_6= ruleDmxIfExpression )
            {
            // InternalSim.g:8278:2: (this_DmxLiteralExpression_0= ruleDmxLiteralExpression | this_DmxParenthesizedExpression_1= ruleDmxParenthesizedExpression | this_DmxListExpression_2= ruleDmxListExpression | this_DmxFunctionCall_3= ruleDmxFunctionCall | this_DmxStaticReference_4= ruleDmxStaticReference | this_DmxContextReference_5= ruleDmxContextReference | this_DmxIfExpression_6= ruleDmxIfExpression )
            int alt179=7;
            switch ( input.LA(1) ) {
            case RULE_NATURAL:
            case RULE_STRING:
            case 39:
            case 42:
            case 85:
            case 86:
            case 87:
            case 88:
            case 89:
            case 90:
                {
                alt179=1;
                }
                break;
            case 46:
                {
                alt179=2;
                }
                break;
            case 23:
                {
                alt179=3;
                }
                break;
            case RULE_ID:
                {
                int LA179_4 = input.LA(2);

                if ( (LA179_4==46) ) {
                    alt179=4;
                }
                else if ( (LA179_4==EOF||(LA179_4>=RULE_ID && LA179_4<=RULE_RICH_TEXT_END)||(LA179_4>=24 && LA179_4<=26)||LA179_4==30||(LA179_4>=32 && LA179_4<=37)||(LA179_4>=39 && LA179_4<=42)||(LA179_4>=47 && LA179_4<=49)||(LA179_4>=51 && LA179_4<=52)||LA179_4==55||LA179_4==59||LA179_4==64||(LA179_4>=69 && LA179_4<=70)||(LA179_4>=72 && LA179_4<=75)||(LA179_4>=81 && LA179_4<=84)||(LA179_4>=93 && LA179_4<=94)||(LA179_4>=101 && LA179_4<=102)||(LA179_4>=124 && LA179_4<=142)) ) {
                    alt179=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 179, 4, input);

                    throw nvae;
                }
                }
                break;
            case 76:
                {
                alt179=5;
                }
                break;
            case 80:
                {
                alt179=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 179, 0, input);

                throw nvae;
            }

            switch (alt179) {
                case 1 :
                    // InternalSim.g:8279:3: this_DmxLiteralExpression_0= ruleDmxLiteralExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDmxPrimaryExpressionAccess().getDmxLiteralExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DmxLiteralExpression_0=ruleDmxLiteralExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DmxLiteralExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSim.g:8288:3: this_DmxParenthesizedExpression_1= ruleDmxParenthesizedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDmxPrimaryExpressionAccess().getDmxParenthesizedExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DmxParenthesizedExpression_1=ruleDmxParenthesizedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DmxParenthesizedExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSim.g:8297:3: this_DmxListExpression_2= ruleDmxListExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDmxPrimaryExpressionAccess().getDmxListExpressionParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DmxListExpression_2=ruleDmxListExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DmxListExpression_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSim.g:8306:3: this_DmxFunctionCall_3= ruleDmxFunctionCall
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDmxPrimaryExpressionAccess().getDmxFunctionCallParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DmxFunctionCall_3=ruleDmxFunctionCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DmxFunctionCall_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalSim.g:8315:3: this_DmxStaticReference_4= ruleDmxStaticReference
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDmxPrimaryExpressionAccess().getDmxStaticReferenceParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DmxStaticReference_4=ruleDmxStaticReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DmxStaticReference_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalSim.g:8324:3: this_DmxContextReference_5= ruleDmxContextReference
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDmxPrimaryExpressionAccess().getDmxContextReferenceParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DmxContextReference_5=ruleDmxContextReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DmxContextReference_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalSim.g:8333:3: this_DmxIfExpression_6= ruleDmxIfExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDmxPrimaryExpressionAccess().getDmxIfExpressionParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DmxIfExpression_6=ruleDmxIfExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DmxIfExpression_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxPrimaryExpression"


    // $ANTLR start "entryRuleDmxLiteralExpression"
    // InternalSim.g:8345:1: entryRuleDmxLiteralExpression returns [EObject current=null] : iv_ruleDmxLiteralExpression= ruleDmxLiteralExpression EOF ;
    public final EObject entryRuleDmxLiteralExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxLiteralExpression = null;


        try {
            // InternalSim.g:8345:61: (iv_ruleDmxLiteralExpression= ruleDmxLiteralExpression EOF )
            // InternalSim.g:8346:2: iv_ruleDmxLiteralExpression= ruleDmxLiteralExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxLiteralExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxLiteralExpression=ruleDmxLiteralExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxLiteralExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxLiteralExpression"


    // $ANTLR start "ruleDmxLiteralExpression"
    // InternalSim.g:8352:1: ruleDmxLiteralExpression returns [EObject current=null] : (this_DmxBooleanLiteral_0= ruleDmxBooleanLiteral | this_DmxStringLiteral_1= ruleDmxStringLiteral | this_DmxNaturalLiteral_2= ruleDmxNaturalLiteral | this_DmxDecimalLiteral_3= ruleDmxDecimalLiteral | this_DmxUndefinedLiteral_4= ruleDmxUndefinedLiteral | this_DmxEntity_5= ruleDmxEntity | this_DmxDetail_6= ruleDmxDetail ) ;
    public final EObject ruleDmxLiteralExpression() throws RecognitionException {
        EObject current = null;

        EObject this_DmxBooleanLiteral_0 = null;

        EObject this_DmxStringLiteral_1 = null;

        EObject this_DmxNaturalLiteral_2 = null;

        EObject this_DmxDecimalLiteral_3 = null;

        EObject this_DmxUndefinedLiteral_4 = null;

        EObject this_DmxEntity_5 = null;

        EObject this_DmxDetail_6 = null;



        	enterRule();

        try {
            // InternalSim.g:8358:2: ( (this_DmxBooleanLiteral_0= ruleDmxBooleanLiteral | this_DmxStringLiteral_1= ruleDmxStringLiteral | this_DmxNaturalLiteral_2= ruleDmxNaturalLiteral | this_DmxDecimalLiteral_3= ruleDmxDecimalLiteral | this_DmxUndefinedLiteral_4= ruleDmxUndefinedLiteral | this_DmxEntity_5= ruleDmxEntity | this_DmxDetail_6= ruleDmxDetail ) )
            // InternalSim.g:8359:2: (this_DmxBooleanLiteral_0= ruleDmxBooleanLiteral | this_DmxStringLiteral_1= ruleDmxStringLiteral | this_DmxNaturalLiteral_2= ruleDmxNaturalLiteral | this_DmxDecimalLiteral_3= ruleDmxDecimalLiteral | this_DmxUndefinedLiteral_4= ruleDmxUndefinedLiteral | this_DmxEntity_5= ruleDmxEntity | this_DmxDetail_6= ruleDmxDetail )
            {
            // InternalSim.g:8359:2: (this_DmxBooleanLiteral_0= ruleDmxBooleanLiteral | this_DmxStringLiteral_1= ruleDmxStringLiteral | this_DmxNaturalLiteral_2= ruleDmxNaturalLiteral | this_DmxDecimalLiteral_3= ruleDmxDecimalLiteral | this_DmxUndefinedLiteral_4= ruleDmxUndefinedLiteral | this_DmxEntity_5= ruleDmxEntity | this_DmxDetail_6= ruleDmxDetail )
            int alt180=7;
            alt180 = dfa180.predict(input);
            switch (alt180) {
                case 1 :
                    // InternalSim.g:8360:3: this_DmxBooleanLiteral_0= ruleDmxBooleanLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDmxLiteralExpressionAccess().getDmxBooleanLiteralParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DmxBooleanLiteral_0=ruleDmxBooleanLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DmxBooleanLiteral_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSim.g:8369:3: this_DmxStringLiteral_1= ruleDmxStringLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDmxLiteralExpressionAccess().getDmxStringLiteralParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DmxStringLiteral_1=ruleDmxStringLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DmxStringLiteral_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSim.g:8378:3: this_DmxNaturalLiteral_2= ruleDmxNaturalLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDmxLiteralExpressionAccess().getDmxNaturalLiteralParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DmxNaturalLiteral_2=ruleDmxNaturalLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DmxNaturalLiteral_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSim.g:8387:3: this_DmxDecimalLiteral_3= ruleDmxDecimalLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDmxLiteralExpressionAccess().getDmxDecimalLiteralParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DmxDecimalLiteral_3=ruleDmxDecimalLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DmxDecimalLiteral_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalSim.g:8396:3: this_DmxUndefinedLiteral_4= ruleDmxUndefinedLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDmxLiteralExpressionAccess().getDmxUndefinedLiteralParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DmxUndefinedLiteral_4=ruleDmxUndefinedLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DmxUndefinedLiteral_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalSim.g:8405:3: this_DmxEntity_5= ruleDmxEntity
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDmxLiteralExpressionAccess().getDmxEntityParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DmxEntity_5=ruleDmxEntity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DmxEntity_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalSim.g:8414:3: this_DmxDetail_6= ruleDmxDetail
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDmxLiteralExpressionAccess().getDmxDetailParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DmxDetail_6=ruleDmxDetail();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DmxDetail_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxLiteralExpression"


    // $ANTLR start "entryRuleDmxParenthesizedExpression"
    // InternalSim.g:8426:1: entryRuleDmxParenthesizedExpression returns [EObject current=null] : iv_ruleDmxParenthesizedExpression= ruleDmxParenthesizedExpression EOF ;
    public final EObject entryRuleDmxParenthesizedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxParenthesizedExpression = null;


        try {
            // InternalSim.g:8426:67: (iv_ruleDmxParenthesizedExpression= ruleDmxParenthesizedExpression EOF )
            // InternalSim.g:8427:2: iv_ruleDmxParenthesizedExpression= ruleDmxParenthesizedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxParenthesizedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxParenthesizedExpression=ruleDmxParenthesizedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxParenthesizedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxParenthesizedExpression"


    // $ANTLR start "ruleDmxParenthesizedExpression"
    // InternalSim.g:8433:1: ruleDmxParenthesizedExpression returns [EObject current=null] : (otherlv_0= '(' this_DExpression_1= ruleDExpression otherlv_2= ')' ) ;
    public final EObject ruleDmxParenthesizedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject this_DExpression_1 = null;



        	enterRule();

        try {
            // InternalSim.g:8439:2: ( (otherlv_0= '(' this_DExpression_1= ruleDExpression otherlv_2= ')' ) )
            // InternalSim.g:8440:2: (otherlv_0= '(' this_DExpression_1= ruleDExpression otherlv_2= ')' )
            {
            // InternalSim.g:8440:2: (otherlv_0= '(' this_DExpression_1= ruleDExpression otherlv_2= ')' )
            // InternalSim.g:8441:3: otherlv_0= '(' this_DExpression_1= ruleDExpression otherlv_2= ')'
            {
            otherlv_0=(Token)match(input,46,FOLLOW_57); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDmxParenthesizedExpressionAccess().getLeftParenthesisKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDmxParenthesizedExpressionAccess().getDExpressionParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_51);
            this_DExpression_1=ruleDExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_DExpression_1;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_2=(Token)match(input,48,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getDmxParenthesizedExpressionAccess().getRightParenthesisKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxParenthesizedExpression"


    // $ANTLR start "entryRuleDmxListExpression"
    // InternalSim.g:8461:1: entryRuleDmxListExpression returns [EObject current=null] : iv_ruleDmxListExpression= ruleDmxListExpression EOF ;
    public final EObject entryRuleDmxListExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxListExpression = null;


        try {
            // InternalSim.g:8461:58: (iv_ruleDmxListExpression= ruleDmxListExpression EOF )
            // InternalSim.g:8462:2: iv_ruleDmxListExpression= ruleDmxListExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxListExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxListExpression=ruleDmxListExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxListExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxListExpression"


    // $ANTLR start "ruleDmxListExpression"
    // InternalSim.g:8468:1: ruleDmxListExpression returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_elements_2_0= ruleDExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleDExpression ) ) )* )? otherlv_5= '}' ) ;
    public final EObject ruleDmxListExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_elements_2_0 = null;

        EObject lv_elements_4_0 = null;



        	enterRule();

        try {
            // InternalSim.g:8474:2: ( ( () otherlv_1= '{' ( ( (lv_elements_2_0= ruleDExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleDExpression ) ) )* )? otherlv_5= '}' ) )
            // InternalSim.g:8475:2: ( () otherlv_1= '{' ( ( (lv_elements_2_0= ruleDExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleDExpression ) ) )* )? otherlv_5= '}' )
            {
            // InternalSim.g:8475:2: ( () otherlv_1= '{' ( ( (lv_elements_2_0= ruleDExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleDExpression ) ) )* )? otherlv_5= '}' )
            // InternalSim.g:8476:3: () otherlv_1= '{' ( ( (lv_elements_2_0= ruleDExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleDExpression ) ) )* )? otherlv_5= '}'
            {
            // InternalSim.g:8476:3: ()
            // InternalSim.g:8477:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDmxListExpressionAccess().getDmxListExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,23,FOLLOW_115); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getDmxListExpressionAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalSim.g:8487:3: ( ( (lv_elements_2_0= ruleDExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleDExpression ) ) )* )?
            int alt182=2;
            int LA182_0 = input.LA(1);

            if ( ((LA182_0>=RULE_ID && LA182_0<=RULE_RICH_TEXT_START)||(LA182_0>=RULE_NATURAL && LA182_0<=RULE_STRING)||LA182_0==23||LA182_0==39||LA182_0==42||LA182_0==46||LA182_0==76||LA182_0==80||(LA182_0>=85 && LA182_0<=90)||(LA182_0>=93 && LA182_0<=94)||(LA182_0>=143 && LA182_0<=145)) ) {
                alt182=1;
            }
            switch (alt182) {
                case 1 :
                    // InternalSim.g:8488:4: ( (lv_elements_2_0= ruleDExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleDExpression ) ) )*
                    {
                    // InternalSim.g:8488:4: ( (lv_elements_2_0= ruleDExpression ) )
                    // InternalSim.g:8489:5: (lv_elements_2_0= ruleDExpression )
                    {
                    // InternalSim.g:8489:5: (lv_elements_2_0= ruleDExpression )
                    // InternalSim.g:8490:6: lv_elements_2_0= ruleDExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDmxListExpressionAccess().getElementsDExpressionParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_66);
                    lv_elements_2_0=ruleDExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDmxListExpressionRule());
                      						}
                      						add(
                      							current,
                      							"elements",
                      							lv_elements_2_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.DExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSim.g:8507:4: (otherlv_3= ',' ( (lv_elements_4_0= ruleDExpression ) ) )*
                    loop181:
                    do {
                        int alt181=2;
                        int LA181_0 = input.LA(1);

                        if ( (LA181_0==37) ) {
                            alt181=1;
                        }


                        switch (alt181) {
                    	case 1 :
                    	    // InternalSim.g:8508:5: otherlv_3= ',' ( (lv_elements_4_0= ruleDExpression ) )
                    	    {
                    	    otherlv_3=(Token)match(input,37,FOLLOW_57); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getDmxListExpressionAccess().getCommaKeyword_2_1_0());
                    	      				
                    	    }
                    	    // InternalSim.g:8512:5: ( (lv_elements_4_0= ruleDExpression ) )
                    	    // InternalSim.g:8513:6: (lv_elements_4_0= ruleDExpression )
                    	    {
                    	    // InternalSim.g:8513:6: (lv_elements_4_0= ruleDExpression )
                    	    // InternalSim.g:8514:7: lv_elements_4_0= ruleDExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getDmxListExpressionAccess().getElementsDExpressionParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_66);
                    	    lv_elements_4_0=ruleDExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getDmxListExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"elements",
                    	      								lv_elements_4_0,
                    	      								"com.mimacom.ddd.dm.dmx.Dmx.DExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop181;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getDmxListExpressionAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxListExpression"


    // $ANTLR start "entryRuleDmxLiteralListExpression"
    // InternalSim.g:8541:1: entryRuleDmxLiteralListExpression returns [EObject current=null] : iv_ruleDmxLiteralListExpression= ruleDmxLiteralListExpression EOF ;
    public final EObject entryRuleDmxLiteralListExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxLiteralListExpression = null;


        try {
            // InternalSim.g:8541:65: (iv_ruleDmxLiteralListExpression= ruleDmxLiteralListExpression EOF )
            // InternalSim.g:8542:2: iv_ruleDmxLiteralListExpression= ruleDmxLiteralListExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxLiteralListExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxLiteralListExpression=ruleDmxLiteralListExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxLiteralListExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxLiteralListExpression"


    // $ANTLR start "ruleDmxLiteralListExpression"
    // InternalSim.g:8548:1: ruleDmxLiteralListExpression returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_elements_2_0= ruleDmxLiteralExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleDmxLiteralExpression ) ) )* )? otherlv_5= '}' ) ;
    public final EObject ruleDmxLiteralListExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_elements_2_0 = null;

        EObject lv_elements_4_0 = null;



        	enterRule();

        try {
            // InternalSim.g:8554:2: ( ( () otherlv_1= '{' ( ( (lv_elements_2_0= ruleDmxLiteralExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleDmxLiteralExpression ) ) )* )? otherlv_5= '}' ) )
            // InternalSim.g:8555:2: ( () otherlv_1= '{' ( ( (lv_elements_2_0= ruleDmxLiteralExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleDmxLiteralExpression ) ) )* )? otherlv_5= '}' )
            {
            // InternalSim.g:8555:2: ( () otherlv_1= '{' ( ( (lv_elements_2_0= ruleDmxLiteralExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleDmxLiteralExpression ) ) )* )? otherlv_5= '}' )
            // InternalSim.g:8556:3: () otherlv_1= '{' ( ( (lv_elements_2_0= ruleDmxLiteralExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleDmxLiteralExpression ) ) )* )? otherlv_5= '}'
            {
            // InternalSim.g:8556:3: ()
            // InternalSim.g:8557:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDmxLiteralListExpressionAccess().getDmxListExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,23,FOLLOW_116); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getDmxLiteralListExpressionAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalSim.g:8567:3: ( ( (lv_elements_2_0= ruleDmxLiteralExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleDmxLiteralExpression ) ) )* )?
            int alt184=2;
            int LA184_0 = input.LA(1);

            if ( ((LA184_0>=RULE_NATURAL && LA184_0<=RULE_STRING)||LA184_0==39||LA184_0==42||(LA184_0>=85 && LA184_0<=90)) ) {
                alt184=1;
            }
            switch (alt184) {
                case 1 :
                    // InternalSim.g:8568:4: ( (lv_elements_2_0= ruleDmxLiteralExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleDmxLiteralExpression ) ) )*
                    {
                    // InternalSim.g:8568:4: ( (lv_elements_2_0= ruleDmxLiteralExpression ) )
                    // InternalSim.g:8569:5: (lv_elements_2_0= ruleDmxLiteralExpression )
                    {
                    // InternalSim.g:8569:5: (lv_elements_2_0= ruleDmxLiteralExpression )
                    // InternalSim.g:8570:6: lv_elements_2_0= ruleDmxLiteralExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDmxLiteralListExpressionAccess().getElementsDmxLiteralExpressionParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_66);
                    lv_elements_2_0=ruleDmxLiteralExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDmxLiteralListExpressionRule());
                      						}
                      						add(
                      							current,
                      							"elements",
                      							lv_elements_2_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.DmxLiteralExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSim.g:8587:4: (otherlv_3= ',' ( (lv_elements_4_0= ruleDmxLiteralExpression ) ) )*
                    loop183:
                    do {
                        int alt183=2;
                        int LA183_0 = input.LA(1);

                        if ( (LA183_0==37) ) {
                            alt183=1;
                        }


                        switch (alt183) {
                    	case 1 :
                    	    // InternalSim.g:8588:5: otherlv_3= ',' ( (lv_elements_4_0= ruleDmxLiteralExpression ) )
                    	    {
                    	    otherlv_3=(Token)match(input,37,FOLLOW_117); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getDmxLiteralListExpressionAccess().getCommaKeyword_2_1_0());
                    	      				
                    	    }
                    	    // InternalSim.g:8592:5: ( (lv_elements_4_0= ruleDmxLiteralExpression ) )
                    	    // InternalSim.g:8593:6: (lv_elements_4_0= ruleDmxLiteralExpression )
                    	    {
                    	    // InternalSim.g:8593:6: (lv_elements_4_0= ruleDmxLiteralExpression )
                    	    // InternalSim.g:8594:7: lv_elements_4_0= ruleDmxLiteralExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getDmxLiteralListExpressionAccess().getElementsDmxLiteralExpressionParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_66);
                    	    lv_elements_4_0=ruleDmxLiteralExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getDmxLiteralListExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"elements",
                    	      								lv_elements_4_0,
                    	      								"com.mimacom.ddd.dm.dmx.Dmx.DmxLiteralExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop183;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getDmxLiteralListExpressionAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxLiteralListExpression"


    // $ANTLR start "entryRuleDmxFunctionCall"
    // InternalSim.g:8621:1: entryRuleDmxFunctionCall returns [EObject current=null] : iv_ruleDmxFunctionCall= ruleDmxFunctionCall EOF ;
    public final EObject entryRuleDmxFunctionCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxFunctionCall = null;


        try {
            // InternalSim.g:8621:56: (iv_ruleDmxFunctionCall= ruleDmxFunctionCall EOF )
            // InternalSim.g:8622:2: iv_ruleDmxFunctionCall= ruleDmxFunctionCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxFunctionCallRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxFunctionCall=ruleDmxFunctionCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxFunctionCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxFunctionCall"


    // $ANTLR start "ruleDmxFunctionCall"
    // InternalSim.g:8628:1: ruleDmxFunctionCall returns [EObject current=null] : ( () ( (otherlv_1= RULE_ID ) ) otherlv_2= '(' ( (lv_callArguments_3_0= ruleDmxFunctionCallArguments ) ) otherlv_4= ')' ) ;
    public final EObject ruleDmxFunctionCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_callArguments_3_0 = null;



        	enterRule();

        try {
            // InternalSim.g:8634:2: ( ( () ( (otherlv_1= RULE_ID ) ) otherlv_2= '(' ( (lv_callArguments_3_0= ruleDmxFunctionCallArguments ) ) otherlv_4= ')' ) )
            // InternalSim.g:8635:2: ( () ( (otherlv_1= RULE_ID ) ) otherlv_2= '(' ( (lv_callArguments_3_0= ruleDmxFunctionCallArguments ) ) otherlv_4= ')' )
            {
            // InternalSim.g:8635:2: ( () ( (otherlv_1= RULE_ID ) ) otherlv_2= '(' ( (lv_callArguments_3_0= ruleDmxFunctionCallArguments ) ) otherlv_4= ')' )
            // InternalSim.g:8636:3: () ( (otherlv_1= RULE_ID ) ) otherlv_2= '(' ( (lv_callArguments_3_0= ruleDmxFunctionCallArguments ) ) otherlv_4= ')'
            {
            // InternalSim.g:8636:3: ()
            // InternalSim.g:8637:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDmxFunctionCallAccess().getDmxFunctionCallAction_0(),
              					current);
              			
            }

            }

            // InternalSim.g:8643:3: ( (otherlv_1= RULE_ID ) )
            // InternalSim.g:8644:4: (otherlv_1= RULE_ID )
            {
            // InternalSim.g:8644:4: (otherlv_1= RULE_ID )
            // InternalSim.g:8645:5: otherlv_1= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDmxFunctionCallRule());
              					}
              				
            }
            otherlv_1=(Token)match(input,RULE_ID,FOLLOW_49); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getDmxFunctionCallAccess().getFunctionDmxFilterCrossReference_1_0());
              				
            }

            }


            }

            otherlv_2=(Token)match(input,46,FOLLOW_118); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getDmxFunctionCallAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalSim.g:8660:3: ( (lv_callArguments_3_0= ruleDmxFunctionCallArguments ) )
            // InternalSim.g:8661:4: (lv_callArguments_3_0= ruleDmxFunctionCallArguments )
            {
            // InternalSim.g:8661:4: (lv_callArguments_3_0= ruleDmxFunctionCallArguments )
            // InternalSim.g:8662:5: lv_callArguments_3_0= ruleDmxFunctionCallArguments
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDmxFunctionCallAccess().getCallArgumentsDmxFunctionCallArgumentsParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_51);
            lv_callArguments_3_0=ruleDmxFunctionCallArguments();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDmxFunctionCallRule());
              					}
              					set(
              						current,
              						"callArguments",
              						lv_callArguments_3_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.DmxFunctionCallArguments");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,48,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getDmxFunctionCallAccess().getRightParenthesisKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxFunctionCall"


    // $ANTLR start "entryRuleDmxFunctionCallArguments"
    // InternalSim.g:8687:1: entryRuleDmxFunctionCallArguments returns [EObject current=null] : iv_ruleDmxFunctionCallArguments= ruleDmxFunctionCallArguments EOF ;
    public final EObject entryRuleDmxFunctionCallArguments() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxFunctionCallArguments = null;


        try {
            // InternalSim.g:8687:65: (iv_ruleDmxFunctionCallArguments= ruleDmxFunctionCallArguments EOF )
            // InternalSim.g:8688:2: iv_ruleDmxFunctionCallArguments= ruleDmxFunctionCallArguments EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxFunctionCallArgumentsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxFunctionCallArguments=ruleDmxFunctionCallArguments();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxFunctionCallArguments; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxFunctionCallArguments"


    // $ANTLR start "ruleDmxFunctionCallArguments"
    // InternalSim.g:8694:1: ruleDmxFunctionCallArguments returns [EObject current=null] : ( () ( ( (lv_arguments_1_0= ruleDExpression ) ) (otherlv_2= ',' ( (lv_arguments_3_0= ruleDExpression ) ) )* )? ) ;
    public final EObject ruleDmxFunctionCallArguments() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_arguments_1_0 = null;

        EObject lv_arguments_3_0 = null;



        	enterRule();

        try {
            // InternalSim.g:8700:2: ( ( () ( ( (lv_arguments_1_0= ruleDExpression ) ) (otherlv_2= ',' ( (lv_arguments_3_0= ruleDExpression ) ) )* )? ) )
            // InternalSim.g:8701:2: ( () ( ( (lv_arguments_1_0= ruleDExpression ) ) (otherlv_2= ',' ( (lv_arguments_3_0= ruleDExpression ) ) )* )? )
            {
            // InternalSim.g:8701:2: ( () ( ( (lv_arguments_1_0= ruleDExpression ) ) (otherlv_2= ',' ( (lv_arguments_3_0= ruleDExpression ) ) )* )? )
            // InternalSim.g:8702:3: () ( ( (lv_arguments_1_0= ruleDExpression ) ) (otherlv_2= ',' ( (lv_arguments_3_0= ruleDExpression ) ) )* )?
            {
            // InternalSim.g:8702:3: ()
            // InternalSim.g:8703:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDmxFunctionCallArgumentsAccess().getDmxCallArgumentsAction_0(),
              					current);
              			
            }

            }

            // InternalSim.g:8709:3: ( ( (lv_arguments_1_0= ruleDExpression ) ) (otherlv_2= ',' ( (lv_arguments_3_0= ruleDExpression ) ) )* )?
            int alt186=2;
            int LA186_0 = input.LA(1);

            if ( ((LA186_0>=RULE_ID && LA186_0<=RULE_RICH_TEXT_START)||(LA186_0>=RULE_NATURAL && LA186_0<=RULE_STRING)||LA186_0==23||LA186_0==39||LA186_0==42||LA186_0==46||LA186_0==76||LA186_0==80||(LA186_0>=85 && LA186_0<=90)||(LA186_0>=93 && LA186_0<=94)||(LA186_0>=143 && LA186_0<=145)) ) {
                alt186=1;
            }
            switch (alt186) {
                case 1 :
                    // InternalSim.g:8710:4: ( (lv_arguments_1_0= ruleDExpression ) ) (otherlv_2= ',' ( (lv_arguments_3_0= ruleDExpression ) ) )*
                    {
                    // InternalSim.g:8710:4: ( (lv_arguments_1_0= ruleDExpression ) )
                    // InternalSim.g:8711:5: (lv_arguments_1_0= ruleDExpression )
                    {
                    // InternalSim.g:8711:5: (lv_arguments_1_0= ruleDExpression )
                    // InternalSim.g:8712:6: lv_arguments_1_0= ruleDExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDmxFunctionCallArgumentsAccess().getArgumentsDExpressionParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_105);
                    lv_arguments_1_0=ruleDExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDmxFunctionCallArgumentsRule());
                      						}
                      						add(
                      							current,
                      							"arguments",
                      							lv_arguments_1_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.DExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSim.g:8729:4: (otherlv_2= ',' ( (lv_arguments_3_0= ruleDExpression ) ) )*
                    loop185:
                    do {
                        int alt185=2;
                        int LA185_0 = input.LA(1);

                        if ( (LA185_0==37) ) {
                            alt185=1;
                        }


                        switch (alt185) {
                    	case 1 :
                    	    // InternalSim.g:8730:5: otherlv_2= ',' ( (lv_arguments_3_0= ruleDExpression ) )
                    	    {
                    	    otherlv_2=(Token)match(input,37,FOLLOW_57); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_2, grammarAccess.getDmxFunctionCallArgumentsAccess().getCommaKeyword_1_1_0());
                    	      				
                    	    }
                    	    // InternalSim.g:8734:5: ( (lv_arguments_3_0= ruleDExpression ) )
                    	    // InternalSim.g:8735:6: (lv_arguments_3_0= ruleDExpression )
                    	    {
                    	    // InternalSim.g:8735:6: (lv_arguments_3_0= ruleDExpression )
                    	    // InternalSim.g:8736:7: lv_arguments_3_0= ruleDExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getDmxFunctionCallArgumentsAccess().getArgumentsDExpressionParserRuleCall_1_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_105);
                    	    lv_arguments_3_0=ruleDExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getDmxFunctionCallArgumentsRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"arguments",
                    	      								lv_arguments_3_0,
                    	      								"com.mimacom.ddd.dm.dmx.Dmx.DExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop185;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxFunctionCallArguments"


    // $ANTLR start "entryRuleDmxEntity"
    // InternalSim.g:8759:1: entryRuleDmxEntity returns [EObject current=null] : iv_ruleDmxEntity= ruleDmxEntity EOF ;
    public final EObject entryRuleDmxEntity() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxEntity = null;


        try {
            // InternalSim.g:8759:50: (iv_ruleDmxEntity= ruleDmxEntity EOF )
            // InternalSim.g:8760:2: iv_ruleDmxEntity= ruleDmxEntity EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxEntityRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxEntity=ruleDmxEntity();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxEntity; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxEntity"


    // $ANTLR start "ruleDmxEntity"
    // InternalSim.g:8766:1: ruleDmxEntity returns [EObject current=null] : (otherlv_0= 'entity' this_DmxComplexObject_1= ruleDmxComplexObject[$current] ) ;
    public final EObject ruleDmxEntity() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject this_DmxComplexObject_1 = null;



        	enterRule();

        try {
            // InternalSim.g:8772:2: ( (otherlv_0= 'entity' this_DmxComplexObject_1= ruleDmxComplexObject[$current] ) )
            // InternalSim.g:8773:2: (otherlv_0= 'entity' this_DmxComplexObject_1= ruleDmxComplexObject[$current] )
            {
            // InternalSim.g:8773:2: (otherlv_0= 'entity' this_DmxComplexObject_1= ruleDmxComplexObject[$current] )
            // InternalSim.g:8774:3: otherlv_0= 'entity' this_DmxComplexObject_1= ruleDmxComplexObject[$current]
            {
            otherlv_0=(Token)match(input,39,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDmxEntityAccess().getEntityKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getDmxEntityRule());
              			}
              			newCompositeNode(grammarAccess.getDmxEntityAccess().getDmxComplexObjectParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_DmxComplexObject_1=ruleDmxComplexObject(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_DmxComplexObject_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxEntity"


    // $ANTLR start "entryRuleDmxDetail"
    // InternalSim.g:8793:1: entryRuleDmxDetail returns [EObject current=null] : iv_ruleDmxDetail= ruleDmxDetail EOF ;
    public final EObject entryRuleDmxDetail() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxDetail = null;


        try {
            // InternalSim.g:8793:50: (iv_ruleDmxDetail= ruleDmxDetail EOF )
            // InternalSim.g:8794:2: iv_ruleDmxDetail= ruleDmxDetail EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxDetailRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxDetail=ruleDmxDetail();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxDetail; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxDetail"


    // $ANTLR start "ruleDmxDetail"
    // InternalSim.g:8800:1: ruleDmxDetail returns [EObject current=null] : (otherlv_0= 'detail' this_DmxComplexObject_1= ruleDmxComplexObject[$current] ) ;
    public final EObject ruleDmxDetail() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject this_DmxComplexObject_1 = null;



        	enterRule();

        try {
            // InternalSim.g:8806:2: ( (otherlv_0= 'detail' this_DmxComplexObject_1= ruleDmxComplexObject[$current] ) )
            // InternalSim.g:8807:2: (otherlv_0= 'detail' this_DmxComplexObject_1= ruleDmxComplexObject[$current] )
            {
            // InternalSim.g:8807:2: (otherlv_0= 'detail' this_DmxComplexObject_1= ruleDmxComplexObject[$current] )
            // InternalSim.g:8808:3: otherlv_0= 'detail' this_DmxComplexObject_1= ruleDmxComplexObject[$current]
            {
            otherlv_0=(Token)match(input,42,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDmxDetailAccess().getDetailKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getDmxDetailRule());
              			}
              			newCompositeNode(grammarAccess.getDmxDetailAccess().getDmxComplexObjectParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_DmxComplexObject_1=ruleDmxComplexObject(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_DmxComplexObject_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxDetail"


    // $ANTLR start "ruleDmxComplexObject"
    // InternalSim.g:8828:1: ruleDmxComplexObject[EObject in_current] returns [EObject current=in_current] : ( ( (otherlv_0= RULE_ID ) ) ruleDmxFieldListStartSymbol ( (lv_fields_2_0= ruleDmxField ) )* otherlv_3= '}' ) ;
    public final EObject ruleDmxComplexObject(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_3=null;
        EObject lv_fields_2_0 = null;



        	enterRule();

        try {
            // InternalSim.g:8834:2: ( ( ( (otherlv_0= RULE_ID ) ) ruleDmxFieldListStartSymbol ( (lv_fields_2_0= ruleDmxField ) )* otherlv_3= '}' ) )
            // InternalSim.g:8835:2: ( ( (otherlv_0= RULE_ID ) ) ruleDmxFieldListStartSymbol ( (lv_fields_2_0= ruleDmxField ) )* otherlv_3= '}' )
            {
            // InternalSim.g:8835:2: ( ( (otherlv_0= RULE_ID ) ) ruleDmxFieldListStartSymbol ( (lv_fields_2_0= ruleDmxField ) )* otherlv_3= '}' )
            // InternalSim.g:8836:3: ( (otherlv_0= RULE_ID ) ) ruleDmxFieldListStartSymbol ( (lv_fields_2_0= ruleDmxField ) )* otherlv_3= '}'
            {
            // InternalSim.g:8836:3: ( (otherlv_0= RULE_ID ) )
            // InternalSim.g:8837:4: (otherlv_0= RULE_ID )
            {
            // InternalSim.g:8837:4: (otherlv_0= RULE_ID )
            // InternalSim.g:8838:5: otherlv_0= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDmxComplexObjectRule());
              					}
              				
            }
            otherlv_0=(Token)match(input,RULE_ID,FOLLOW_64); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_0, grammarAccess.getDmxComplexObjectAccess().getTypeDComplexTypeCrossReference_0_0());
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDmxComplexObjectAccess().getDmxFieldListStartSymbolParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_119);
            ruleDmxFieldListStartSymbol();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSim.g:8856:3: ( (lv_fields_2_0= ruleDmxField ) )*
            loop187:
            do {
                int alt187=2;
                int LA187_0 = input.LA(1);

                if ( (LA187_0==RULE_ID) ) {
                    alt187=1;
                }


                switch (alt187) {
            	case 1 :
            	    // InternalSim.g:8857:4: (lv_fields_2_0= ruleDmxField )
            	    {
            	    // InternalSim.g:8857:4: (lv_fields_2_0= ruleDmxField )
            	    // InternalSim.g:8858:5: lv_fields_2_0= ruleDmxField
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getDmxComplexObjectAccess().getFieldsDmxFieldParserRuleCall_2_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_119);
            	    lv_fields_2_0=ruleDmxField();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getDmxComplexObjectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"fields",
            	      						lv_fields_2_0,
            	      						"com.mimacom.ddd.dm.dmx.Dmx.DmxField");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop187;
                }
            } while (true);

            otherlv_3=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getDmxComplexObjectAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxComplexObject"


    // $ANTLR start "entryRuleDmxField"
    // InternalSim.g:8883:1: entryRuleDmxField returns [EObject current=null] : iv_ruleDmxField= ruleDmxField EOF ;
    public final EObject entryRuleDmxField() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxField = null;


        try {
            // InternalSim.g:8883:49: (iv_ruleDmxField= ruleDmxField EOF )
            // InternalSim.g:8884:2: iv_ruleDmxField= ruleDmxField EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxFieldRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxField=ruleDmxField();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxField; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxField"


    // $ANTLR start "ruleDmxField"
    // InternalSim.g:8890:1: ruleDmxField returns [EObject current=null] : ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '=' ( (lv_value_2_0= ruleDExpression ) ) ( (lv_description_3_0= ruleDRichText ) )? ( (lv_notes_4_0= ruleDNote ) )* ) ;
    public final EObject ruleDmxField() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        EObject lv_value_2_0 = null;

        EObject lv_description_3_0 = null;

        EObject lv_notes_4_0 = null;



        	enterRule();

        try {
            // InternalSim.g:8896:2: ( ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '=' ( (lv_value_2_0= ruleDExpression ) ) ( (lv_description_3_0= ruleDRichText ) )? ( (lv_notes_4_0= ruleDNote ) )* ) )
            // InternalSim.g:8897:2: ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '=' ( (lv_value_2_0= ruleDExpression ) ) ( (lv_description_3_0= ruleDRichText ) )? ( (lv_notes_4_0= ruleDNote ) )* )
            {
            // InternalSim.g:8897:2: ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '=' ( (lv_value_2_0= ruleDExpression ) ) ( (lv_description_3_0= ruleDRichText ) )? ( (lv_notes_4_0= ruleDNote ) )* )
            // InternalSim.g:8898:3: ( (otherlv_0= RULE_ID ) ) otherlv_1= '=' ( (lv_value_2_0= ruleDExpression ) ) ( (lv_description_3_0= ruleDRichText ) )? ( (lv_notes_4_0= ruleDNote ) )*
            {
            // InternalSim.g:8898:3: ( (otherlv_0= RULE_ID ) )
            // InternalSim.g:8899:4: (otherlv_0= RULE_ID )
            {
            // InternalSim.g:8899:4: (otherlv_0= RULE_ID )
            // InternalSim.g:8900:5: otherlv_0= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDmxFieldRule());
              					}
              				
            }
            otherlv_0=(Token)match(input,RULE_ID,FOLLOW_120); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_0, grammarAccess.getDmxFieldAccess().getFeatureDFeatureCrossReference_0_0());
              				
            }

            }


            }

            otherlv_1=(Token)match(input,75,FOLLOW_57); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getDmxFieldAccess().getEqualsSignKeyword_1());
              		
            }
            // InternalSim.g:8915:3: ( (lv_value_2_0= ruleDExpression ) )
            // InternalSim.g:8916:4: (lv_value_2_0= ruleDExpression )
            {
            // InternalSim.g:8916:4: (lv_value_2_0= ruleDExpression )
            // InternalSim.g:8917:5: lv_value_2_0= ruleDExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDmxFieldAccess().getValueDExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_38);
            lv_value_2_0=ruleDExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDmxFieldRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_2_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.DExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSim.g:8934:3: ( (lv_description_3_0= ruleDRichText ) )?
            int alt188=2;
            int LA188_0 = input.LA(1);

            if ( ((LA188_0>=RULE_PLAIN_TEXT_ONLY && LA188_0<=RULE_RICH_TEXT_START)) ) {
                alt188=1;
            }
            switch (alt188) {
                case 1 :
                    // InternalSim.g:8935:4: (lv_description_3_0= ruleDRichText )
                    {
                    // InternalSim.g:8935:4: (lv_description_3_0= ruleDRichText )
                    // InternalSim.g:8936:5: lv_description_3_0= ruleDRichText
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDmxFieldAccess().getDescriptionDRichTextParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_39);
                    lv_description_3_0=ruleDRichText();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDmxFieldRule());
                      					}
                      					set(
                      						current,
                      						"description",
                      						lv_description_3_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DRichText");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSim.g:8953:3: ( (lv_notes_4_0= ruleDNote ) )*
            loop189:
            do {
                int alt189=2;
                int LA189_0 = input.LA(1);

                if ( (LA189_0==59) ) {
                    alt189=1;
                }


                switch (alt189) {
            	case 1 :
            	    // InternalSim.g:8954:4: (lv_notes_4_0= ruleDNote )
            	    {
            	    // InternalSim.g:8954:4: (lv_notes_4_0= ruleDNote )
            	    // InternalSim.g:8955:5: lv_notes_4_0= ruleDNote
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getDmxFieldAccess().getNotesDNoteParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_39);
            	    lv_notes_4_0=ruleDNote();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getDmxFieldRule());
            	      					}
            	      					add(
            	      						current,
            	      						"notes",
            	      						lv_notes_4_0,
            	      						"com.mimacom.ddd.dm.dmx.Dmx.DNote");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop189;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxField"


    // $ANTLR start "entryRuleDmxStaticReference"
    // InternalSim.g:8976:1: entryRuleDmxStaticReference returns [EObject current=null] : iv_ruleDmxStaticReference= ruleDmxStaticReference EOF ;
    public final EObject entryRuleDmxStaticReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxStaticReference = null;


        try {
            // InternalSim.g:8976:59: (iv_ruleDmxStaticReference= ruleDmxStaticReference EOF )
            // InternalSim.g:8977:2: iv_ruleDmxStaticReference= ruleDmxStaticReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxStaticReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxStaticReference=ruleDmxStaticReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxStaticReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxStaticReference"


    // $ANTLR start "ruleDmxStaticReference"
    // InternalSim.g:8983:1: ruleDmxStaticReference returns [EObject current=null] : ( () otherlv_1= '[' ( ( ruleDQualifiedName ) ) (otherlv_3= '#' ( (otherlv_4= RULE_ID ) ) )? (otherlv_5= '|' ( ( (lv_displayName_6_0= RULE_ID ) ) | ( (lv_plural_7_0= '*' ) ) ) )? ( ( ']' )=>otherlv_8= ']' ) ) ;
    public final EObject ruleDmxStaticReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_displayName_6_0=null;
        Token lv_plural_7_0=null;
        Token otherlv_8=null;


        	enterRule();

        try {
            // InternalSim.g:8989:2: ( ( () otherlv_1= '[' ( ( ruleDQualifiedName ) ) (otherlv_3= '#' ( (otherlv_4= RULE_ID ) ) )? (otherlv_5= '|' ( ( (lv_displayName_6_0= RULE_ID ) ) | ( (lv_plural_7_0= '*' ) ) ) )? ( ( ']' )=>otherlv_8= ']' ) ) )
            // InternalSim.g:8990:2: ( () otherlv_1= '[' ( ( ruleDQualifiedName ) ) (otherlv_3= '#' ( (otherlv_4= RULE_ID ) ) )? (otherlv_5= '|' ( ( (lv_displayName_6_0= RULE_ID ) ) | ( (lv_plural_7_0= '*' ) ) ) )? ( ( ']' )=>otherlv_8= ']' ) )
            {
            // InternalSim.g:8990:2: ( () otherlv_1= '[' ( ( ruleDQualifiedName ) ) (otherlv_3= '#' ( (otherlv_4= RULE_ID ) ) )? (otherlv_5= '|' ( ( (lv_displayName_6_0= RULE_ID ) ) | ( (lv_plural_7_0= '*' ) ) ) )? ( ( ']' )=>otherlv_8= ']' ) )
            // InternalSim.g:8991:3: () otherlv_1= '[' ( ( ruleDQualifiedName ) ) (otherlv_3= '#' ( (otherlv_4= RULE_ID ) ) )? (otherlv_5= '|' ( ( (lv_displayName_6_0= RULE_ID ) ) | ( (lv_plural_7_0= '*' ) ) ) )? ( ( ']' )=>otherlv_8= ']' )
            {
            // InternalSim.g:8991:3: ()
            // InternalSim.g:8992:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDmxStaticReferenceAccess().getDmxStaticReferenceAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,76,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getDmxStaticReferenceAccess().getLeftSquareBracketKeyword_1());
              		
            }
            // InternalSim.g:9002:3: ( ( ruleDQualifiedName ) )
            // InternalSim.g:9003:4: ( ruleDQualifiedName )
            {
            // InternalSim.g:9003:4: ( ruleDQualifiedName )
            // InternalSim.g:9004:5: ruleDQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDmxStaticReferenceRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDmxStaticReferenceAccess().getTargetIStaticReferenceTargetCrossReference_2_0());
              				
            }
            pushFollow(FOLLOW_121);
            ruleDQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSim.g:9018:3: (otherlv_3= '#' ( (otherlv_4= RULE_ID ) ) )?
            int alt190=2;
            int LA190_0 = input.LA(1);

            if ( (LA190_0==77) ) {
                alt190=1;
            }
            switch (alt190) {
                case 1 :
                    // InternalSim.g:9019:4: otherlv_3= '#' ( (otherlv_4= RULE_ID ) )
                    {
                    otherlv_3=(Token)match(input,77,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getDmxStaticReferenceAccess().getNumberSignKeyword_3_0());
                      			
                    }
                    // InternalSim.g:9023:4: ( (otherlv_4= RULE_ID ) )
                    // InternalSim.g:9024:5: (otherlv_4= RULE_ID )
                    {
                    // InternalSim.g:9024:5: (otherlv_4= RULE_ID )
                    // InternalSim.g:9025:6: otherlv_4= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDmxStaticReferenceRule());
                      						}
                      					
                    }
                    otherlv_4=(Token)match(input,RULE_ID,FOLLOW_122); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_4, grammarAccess.getDmxStaticReferenceAccess().getMemberDNavigableMemberCrossReference_3_1_0());
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSim.g:9037:3: (otherlv_5= '|' ( ( (lv_displayName_6_0= RULE_ID ) ) | ( (lv_plural_7_0= '*' ) ) ) )?
            int alt192=2;
            int LA192_0 = input.LA(1);

            if ( (LA192_0==71) ) {
                alt192=1;
            }
            switch (alt192) {
                case 1 :
                    // InternalSim.g:9038:4: otherlv_5= '|' ( ( (lv_displayName_6_0= RULE_ID ) ) | ( (lv_plural_7_0= '*' ) ) )
                    {
                    otherlv_5=(Token)match(input,71,FOLLOW_123); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getDmxStaticReferenceAccess().getVerticalLineKeyword_4_0());
                      			
                    }
                    // InternalSim.g:9042:4: ( ( (lv_displayName_6_0= RULE_ID ) ) | ( (lv_plural_7_0= '*' ) ) )
                    int alt191=2;
                    int LA191_0 = input.LA(1);

                    if ( (LA191_0==RULE_ID) ) {
                        alt191=1;
                    }
                    else if ( (LA191_0==47) ) {
                        alt191=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 191, 0, input);

                        throw nvae;
                    }
                    switch (alt191) {
                        case 1 :
                            // InternalSim.g:9043:5: ( (lv_displayName_6_0= RULE_ID ) )
                            {
                            // InternalSim.g:9043:5: ( (lv_displayName_6_0= RULE_ID ) )
                            // InternalSim.g:9044:6: (lv_displayName_6_0= RULE_ID )
                            {
                            // InternalSim.g:9044:6: (lv_displayName_6_0= RULE_ID )
                            // InternalSim.g:9045:7: lv_displayName_6_0= RULE_ID
                            {
                            lv_displayName_6_0=(Token)match(input,RULE_ID,FOLLOW_124); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_displayName_6_0, grammarAccess.getDmxStaticReferenceAccess().getDisplayNameIDTerminalRuleCall_4_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getDmxStaticReferenceRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"displayName",
                              								lv_displayName_6_0,
                              								"com.mimacom.ddd.dm.dmx.Dmx.ID");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalSim.g:9062:5: ( (lv_plural_7_0= '*' ) )
                            {
                            // InternalSim.g:9062:5: ( (lv_plural_7_0= '*' ) )
                            // InternalSim.g:9063:6: (lv_plural_7_0= '*' )
                            {
                            // InternalSim.g:9063:6: (lv_plural_7_0= '*' )
                            // InternalSim.g:9064:7: lv_plural_7_0= '*'
                            {
                            lv_plural_7_0=(Token)match(input,47,FOLLOW_124); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_plural_7_0, grammarAccess.getDmxStaticReferenceAccess().getPluralAsteriskKeyword_4_1_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getDmxStaticReferenceRule());
                              							}
                              							setWithLastConsumed(current, "plural", true, "*");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalSim.g:9078:3: ( ( ']' )=>otherlv_8= ']' )
            // InternalSim.g:9079:4: ( ']' )=>otherlv_8= ']'
            {
            otherlv_8=(Token)match(input,78,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_8, grammarAccess.getDmxStaticReferenceAccess().getRightSquareBracketKeyword_5());
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxStaticReference"


    // $ANTLR start "entryRuleDmxContextReference"
    // InternalSim.g:9089:1: entryRuleDmxContextReference returns [EObject current=null] : iv_ruleDmxContextReference= ruleDmxContextReference EOF ;
    public final EObject entryRuleDmxContextReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxContextReference = null;


        try {
            // InternalSim.g:9089:60: (iv_ruleDmxContextReference= ruleDmxContextReference EOF )
            // InternalSim.g:9090:2: iv_ruleDmxContextReference= ruleDmxContextReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxContextReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxContextReference=ruleDmxContextReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxContextReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxContextReference"


    // $ANTLR start "ruleDmxContextReference"
    // InternalSim.g:9096:1: ruleDmxContextReference returns [EObject current=null] : ( () ( (otherlv_1= RULE_ID ) ) ( ( (lv_before_2_0= '@before' ) ) | (otherlv_3= '.' ( (lv_all_4_0= 'all' ) ) ) )? ) ;
    public final EObject ruleDmxContextReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_before_2_0=null;
        Token otherlv_3=null;
        Token lv_all_4_0=null;


        	enterRule();

        try {
            // InternalSim.g:9102:2: ( ( () ( (otherlv_1= RULE_ID ) ) ( ( (lv_before_2_0= '@before' ) ) | (otherlv_3= '.' ( (lv_all_4_0= 'all' ) ) ) )? ) )
            // InternalSim.g:9103:2: ( () ( (otherlv_1= RULE_ID ) ) ( ( (lv_before_2_0= '@before' ) ) | (otherlv_3= '.' ( (lv_all_4_0= 'all' ) ) ) )? )
            {
            // InternalSim.g:9103:2: ( () ( (otherlv_1= RULE_ID ) ) ( ( (lv_before_2_0= '@before' ) ) | (otherlv_3= '.' ( (lv_all_4_0= 'all' ) ) ) )? )
            // InternalSim.g:9104:3: () ( (otherlv_1= RULE_ID ) ) ( ( (lv_before_2_0= '@before' ) ) | (otherlv_3= '.' ( (lv_all_4_0= 'all' ) ) ) )?
            {
            // InternalSim.g:9104:3: ()
            // InternalSim.g:9105:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDmxContextReferenceAccess().getDmxContextReferenceAction_0(),
              					current);
              			
            }

            }

            // InternalSim.g:9111:3: ( (otherlv_1= RULE_ID ) )
            // InternalSim.g:9112:4: (otherlv_1= RULE_ID )
            {
            // InternalSim.g:9112:4: (otherlv_1= RULE_ID )
            // InternalSim.g:9113:5: otherlv_1= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDmxContextReferenceRule());
              					}
              				
            }
            otherlv_1=(Token)match(input,RULE_ID,FOLLOW_125); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getDmxContextReferenceAccess().getTargetDNamedElementCrossReference_1_0());
              				
            }

            }


            }

            // InternalSim.g:9124:3: ( ( (lv_before_2_0= '@before' ) ) | (otherlv_3= '.' ( (lv_all_4_0= 'all' ) ) ) )?
            int alt193=3;
            int LA193_0 = input.LA(1);

            if ( (LA193_0==70) ) {
                alt193=1;
            }
            else if ( (LA193_0==69) ) {
                int LA193_2 = input.LA(2);

                if ( (LA193_2==79) ) {
                    alt193=2;
                }
            }
            switch (alt193) {
                case 1 :
                    // InternalSim.g:9125:4: ( (lv_before_2_0= '@before' ) )
                    {
                    // InternalSim.g:9125:4: ( (lv_before_2_0= '@before' ) )
                    // InternalSim.g:9126:5: (lv_before_2_0= '@before' )
                    {
                    // InternalSim.g:9126:5: (lv_before_2_0= '@before' )
                    // InternalSim.g:9127:6: lv_before_2_0= '@before'
                    {
                    lv_before_2_0=(Token)match(input,70,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_before_2_0, grammarAccess.getDmxContextReferenceAccess().getBeforeBeforeKeyword_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDmxContextReferenceRule());
                      						}
                      						setWithLastConsumed(current, "before", true, "@before");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:9140:4: (otherlv_3= '.' ( (lv_all_4_0= 'all' ) ) )
                    {
                    // InternalSim.g:9140:4: (otherlv_3= '.' ( (lv_all_4_0= 'all' ) ) )
                    // InternalSim.g:9141:5: otherlv_3= '.' ( (lv_all_4_0= 'all' ) )
                    {
                    otherlv_3=(Token)match(input,69,FOLLOW_126); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getDmxContextReferenceAccess().getFullStopKeyword_2_1_0());
                      				
                    }
                    // InternalSim.g:9145:5: ( (lv_all_4_0= 'all' ) )
                    // InternalSim.g:9146:6: (lv_all_4_0= 'all' )
                    {
                    // InternalSim.g:9146:6: (lv_all_4_0= 'all' )
                    // InternalSim.g:9147:7: lv_all_4_0= 'all'
                    {
                    lv_all_4_0=(Token)match(input,79,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_all_4_0, grammarAccess.getDmxContextReferenceAccess().getAllAllKeyword_2_1_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getDmxContextReferenceRule());
                      							}
                      							setWithLastConsumed(current, "all", true, "all");
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxContextReference"


    // $ANTLR start "entryRuleDmxIfExpression"
    // InternalSim.g:9165:1: entryRuleDmxIfExpression returns [EObject current=null] : iv_ruleDmxIfExpression= ruleDmxIfExpression EOF ;
    public final EObject entryRuleDmxIfExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxIfExpression = null;


        try {
            // InternalSim.g:9165:56: (iv_ruleDmxIfExpression= ruleDmxIfExpression EOF )
            // InternalSim.g:9166:2: iv_ruleDmxIfExpression= ruleDmxIfExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxIfExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxIfExpression=ruleDmxIfExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxIfExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxIfExpression"


    // $ANTLR start "ruleDmxIfExpression"
    // InternalSim.g:9172:1: ruleDmxIfExpression returns [EObject current=null] : ( () otherlv_1= 'if' ( (lv_if_2_0= ruleDExpression ) ) otherlv_3= 'then' ( (lv_then_4_0= ruleDExpression ) ) ( ( ( 'else' )=>otherlv_5= 'else' ) ( (lv_else_6_0= ruleDExpression ) ) )? otherlv_7= 'end' ) ;
    public final EObject ruleDmxIfExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_if_2_0 = null;

        EObject lv_then_4_0 = null;

        EObject lv_else_6_0 = null;



        	enterRule();

        try {
            // InternalSim.g:9178:2: ( ( () otherlv_1= 'if' ( (lv_if_2_0= ruleDExpression ) ) otherlv_3= 'then' ( (lv_then_4_0= ruleDExpression ) ) ( ( ( 'else' )=>otherlv_5= 'else' ) ( (lv_else_6_0= ruleDExpression ) ) )? otherlv_7= 'end' ) )
            // InternalSim.g:9179:2: ( () otherlv_1= 'if' ( (lv_if_2_0= ruleDExpression ) ) otherlv_3= 'then' ( (lv_then_4_0= ruleDExpression ) ) ( ( ( 'else' )=>otherlv_5= 'else' ) ( (lv_else_6_0= ruleDExpression ) ) )? otherlv_7= 'end' )
            {
            // InternalSim.g:9179:2: ( () otherlv_1= 'if' ( (lv_if_2_0= ruleDExpression ) ) otherlv_3= 'then' ( (lv_then_4_0= ruleDExpression ) ) ( ( ( 'else' )=>otherlv_5= 'else' ) ( (lv_else_6_0= ruleDExpression ) ) )? otherlv_7= 'end' )
            // InternalSim.g:9180:3: () otherlv_1= 'if' ( (lv_if_2_0= ruleDExpression ) ) otherlv_3= 'then' ( (lv_then_4_0= ruleDExpression ) ) ( ( ( 'else' )=>otherlv_5= 'else' ) ( (lv_else_6_0= ruleDExpression ) ) )? otherlv_7= 'end'
            {
            // InternalSim.g:9180:3: ()
            // InternalSim.g:9181:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDmxIfExpressionAccess().getDmxIfExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,80,FOLLOW_57); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getDmxIfExpressionAccess().getIfKeyword_1());
              		
            }
            // InternalSim.g:9191:3: ( (lv_if_2_0= ruleDExpression ) )
            // InternalSim.g:9192:4: (lv_if_2_0= ruleDExpression )
            {
            // InternalSim.g:9192:4: (lv_if_2_0= ruleDExpression )
            // InternalSim.g:9193:5: lv_if_2_0= ruleDExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDmxIfExpressionAccess().getIfDExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_127);
            lv_if_2_0=ruleDExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDmxIfExpressionRule());
              					}
              					set(
              						current,
              						"if",
              						lv_if_2_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.DExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,81,FOLLOW_57); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getDmxIfExpressionAccess().getThenKeyword_3());
              		
            }
            // InternalSim.g:9214:3: ( (lv_then_4_0= ruleDExpression ) )
            // InternalSim.g:9215:4: (lv_then_4_0= ruleDExpression )
            {
            // InternalSim.g:9215:4: (lv_then_4_0= ruleDExpression )
            // InternalSim.g:9216:5: lv_then_4_0= ruleDExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDmxIfExpressionAccess().getThenDExpressionParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_128);
            lv_then_4_0=ruleDExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDmxIfExpressionRule());
              					}
              					set(
              						current,
              						"then",
              						lv_then_4_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.DExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSim.g:9233:3: ( ( ( 'else' )=>otherlv_5= 'else' ) ( (lv_else_6_0= ruleDExpression ) ) )?
            int alt194=2;
            int LA194_0 = input.LA(1);

            if ( (LA194_0==82) && (synpred14_InternalSim())) {
                alt194=1;
            }
            switch (alt194) {
                case 1 :
                    // InternalSim.g:9234:4: ( ( 'else' )=>otherlv_5= 'else' ) ( (lv_else_6_0= ruleDExpression ) )
                    {
                    // InternalSim.g:9234:4: ( ( 'else' )=>otherlv_5= 'else' )
                    // InternalSim.g:9235:5: ( 'else' )=>otherlv_5= 'else'
                    {
                    otherlv_5=(Token)match(input,82,FOLLOW_57); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getDmxIfExpressionAccess().getElseKeyword_5_0());
                      				
                    }

                    }

                    // InternalSim.g:9241:4: ( (lv_else_6_0= ruleDExpression ) )
                    // InternalSim.g:9242:5: (lv_else_6_0= ruleDExpression )
                    {
                    // InternalSim.g:9242:5: (lv_else_6_0= ruleDExpression )
                    // InternalSim.g:9243:6: lv_else_6_0= ruleDExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDmxIfExpressionAccess().getElseDExpressionParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_129);
                    lv_else_6_0=ruleDExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDmxIfExpressionRule());
                      						}
                      						set(
                      							current,
                      							"else",
                      							lv_else_6_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.DExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_7=(Token)match(input,83,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getDmxIfExpressionAccess().getEndKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxIfExpression"


    // $ANTLR start "entryRuleDMultiplicity"
    // InternalSim.g:9269:1: entryRuleDMultiplicity returns [EObject current=null] : iv_ruleDMultiplicity= ruleDMultiplicity EOF ;
    public final EObject entryRuleDMultiplicity() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDMultiplicity = null;


        try {
            // InternalSim.g:9269:54: (iv_ruleDMultiplicity= ruleDMultiplicity EOF )
            // InternalSim.g:9270:2: iv_ruleDMultiplicity= ruleDMultiplicity EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDMultiplicityRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDMultiplicity=ruleDMultiplicity();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDMultiplicity; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDMultiplicity"


    // $ANTLR start "ruleDMultiplicity"
    // InternalSim.g:9276:1: ruleDMultiplicity returns [EObject current=null] : ( ( (lv_shorthand_0_0= ruleDMultiplicityShorthand ) ) | (otherlv_1= '(' ( (lv_minOccurs_2_0= RULE_NATURAL ) ) otherlv_3= '..' ( (lv_maxOccurs_4_0= ruleMULTIPLICITY ) ) otherlv_5= ')' ) ) ;
    public final EObject ruleDMultiplicity() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_minOccurs_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Enumerator lv_shorthand_0_0 = null;

        AntlrDatatypeRuleToken lv_maxOccurs_4_0 = null;



        	enterRule();

        try {
            // InternalSim.g:9282:2: ( ( ( (lv_shorthand_0_0= ruleDMultiplicityShorthand ) ) | (otherlv_1= '(' ( (lv_minOccurs_2_0= RULE_NATURAL ) ) otherlv_3= '..' ( (lv_maxOccurs_4_0= ruleMULTIPLICITY ) ) otherlv_5= ')' ) ) )
            // InternalSim.g:9283:2: ( ( (lv_shorthand_0_0= ruleDMultiplicityShorthand ) ) | (otherlv_1= '(' ( (lv_minOccurs_2_0= RULE_NATURAL ) ) otherlv_3= '..' ( (lv_maxOccurs_4_0= ruleMULTIPLICITY ) ) otherlv_5= ')' ) )
            {
            // InternalSim.g:9283:2: ( ( (lv_shorthand_0_0= ruleDMultiplicityShorthand ) ) | (otherlv_1= '(' ( (lv_minOccurs_2_0= RULE_NATURAL ) ) otherlv_3= '..' ( (lv_maxOccurs_4_0= ruleMULTIPLICITY ) ) otherlv_5= ')' ) )
            int alt195=2;
            int LA195_0 = input.LA(1);

            if ( (LA195_0==47||LA195_0==93||LA195_0==146) ) {
                alt195=1;
            }
            else if ( (LA195_0==46) ) {
                alt195=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 195, 0, input);

                throw nvae;
            }
            switch (alt195) {
                case 1 :
                    // InternalSim.g:9284:3: ( (lv_shorthand_0_0= ruleDMultiplicityShorthand ) )
                    {
                    // InternalSim.g:9284:3: ( (lv_shorthand_0_0= ruleDMultiplicityShorthand ) )
                    // InternalSim.g:9285:4: (lv_shorthand_0_0= ruleDMultiplicityShorthand )
                    {
                    // InternalSim.g:9285:4: (lv_shorthand_0_0= ruleDMultiplicityShorthand )
                    // InternalSim.g:9286:5: lv_shorthand_0_0= ruleDMultiplicityShorthand
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDMultiplicityAccess().getShorthandDMultiplicityShorthandEnumRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_shorthand_0_0=ruleDMultiplicityShorthand();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDMultiplicityRule());
                      					}
                      					set(
                      						current,
                      						"shorthand",
                      						lv_shorthand_0_0,
                      						"com.mimacom.ddd.dm.dmx.Dmx.DMultiplicityShorthand");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:9304:3: (otherlv_1= '(' ( (lv_minOccurs_2_0= RULE_NATURAL ) ) otherlv_3= '..' ( (lv_maxOccurs_4_0= ruleMULTIPLICITY ) ) otherlv_5= ')' )
                    {
                    // InternalSim.g:9304:3: (otherlv_1= '(' ( (lv_minOccurs_2_0= RULE_NATURAL ) ) otherlv_3= '..' ( (lv_maxOccurs_4_0= ruleMULTIPLICITY ) ) otherlv_5= ')' )
                    // InternalSim.g:9305:4: otherlv_1= '(' ( (lv_minOccurs_2_0= RULE_NATURAL ) ) otherlv_3= '..' ( (lv_maxOccurs_4_0= ruleMULTIPLICITY ) ) otherlv_5= ')'
                    {
                    otherlv_1=(Token)match(input,46,FOLLOW_130); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getDMultiplicityAccess().getLeftParenthesisKeyword_1_0());
                      			
                    }
                    // InternalSim.g:9309:4: ( (lv_minOccurs_2_0= RULE_NATURAL ) )
                    // InternalSim.g:9310:5: (lv_minOccurs_2_0= RULE_NATURAL )
                    {
                    // InternalSim.g:9310:5: (lv_minOccurs_2_0= RULE_NATURAL )
                    // InternalSim.g:9311:6: lv_minOccurs_2_0= RULE_NATURAL
                    {
                    lv_minOccurs_2_0=(Token)match(input,RULE_NATURAL,FOLLOW_131); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_minOccurs_2_0, grammarAccess.getDMultiplicityAccess().getMinOccursNATURALTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDMultiplicityRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"minOccurs",
                      							lv_minOccurs_2_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.NATURAL");
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,84,FOLLOW_132); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getDMultiplicityAccess().getFullStopFullStopKeyword_1_2());
                      			
                    }
                    // InternalSim.g:9331:4: ( (lv_maxOccurs_4_0= ruleMULTIPLICITY ) )
                    // InternalSim.g:9332:5: (lv_maxOccurs_4_0= ruleMULTIPLICITY )
                    {
                    // InternalSim.g:9332:5: (lv_maxOccurs_4_0= ruleMULTIPLICITY )
                    // InternalSim.g:9333:6: lv_maxOccurs_4_0= ruleMULTIPLICITY
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDMultiplicityAccess().getMaxOccursMULTIPLICITYParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_51);
                    lv_maxOccurs_4_0=ruleMULTIPLICITY();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDMultiplicityRule());
                      						}
                      						set(
                      							current,
                      							"maxOccurs",
                      							lv_maxOccurs_4_0,
                      							"com.mimacom.ddd.dm.dmx.Dmx.MULTIPLICITY");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,48,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getDMultiplicityAccess().getRightParenthesisKeyword_1_4());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDMultiplicity"


    // $ANTLR start "entryRuleMULTIPLICITY"
    // InternalSim.g:9359:1: entryRuleMULTIPLICITY returns [String current=null] : iv_ruleMULTIPLICITY= ruleMULTIPLICITY EOF ;
    public final String entryRuleMULTIPLICITY() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleMULTIPLICITY = null;


        try {
            // InternalSim.g:9359:52: (iv_ruleMULTIPLICITY= ruleMULTIPLICITY EOF )
            // InternalSim.g:9360:2: iv_ruleMULTIPLICITY= ruleMULTIPLICITY EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMULTIPLICITYRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMULTIPLICITY=ruleMULTIPLICITY();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMULTIPLICITY.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMULTIPLICITY"


    // $ANTLR start "ruleMULTIPLICITY"
    // InternalSim.g:9366:1: ruleMULTIPLICITY returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_NATURAL_0= RULE_NATURAL | kw= '*' ) ;
    public final AntlrDatatypeRuleToken ruleMULTIPLICITY() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_NATURAL_0=null;
        Token kw=null;


        	enterRule();

        try {
            // InternalSim.g:9372:2: ( (this_NATURAL_0= RULE_NATURAL | kw= '*' ) )
            // InternalSim.g:9373:2: (this_NATURAL_0= RULE_NATURAL | kw= '*' )
            {
            // InternalSim.g:9373:2: (this_NATURAL_0= RULE_NATURAL | kw= '*' )
            int alt196=2;
            int LA196_0 = input.LA(1);

            if ( (LA196_0==RULE_NATURAL) ) {
                alt196=1;
            }
            else if ( (LA196_0==47) ) {
                alt196=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 196, 0, input);

                throw nvae;
            }
            switch (alt196) {
                case 1 :
                    // InternalSim.g:9374:3: this_NATURAL_0= RULE_NATURAL
                    {
                    this_NATURAL_0=(Token)match(input,RULE_NATURAL,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_NATURAL_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_NATURAL_0, grammarAccess.getMULTIPLICITYAccess().getNATURALTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSim.g:9382:3: kw= '*'
                    {
                    kw=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMULTIPLICITYAccess().getAsteriskKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMULTIPLICITY"


    // $ANTLR start "entryRuleDmxBooleanLiteral"
    // InternalSim.g:9391:1: entryRuleDmxBooleanLiteral returns [EObject current=null] : iv_ruleDmxBooleanLiteral= ruleDmxBooleanLiteral EOF ;
    public final EObject entryRuleDmxBooleanLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxBooleanLiteral = null;


        try {
            // InternalSim.g:9391:58: (iv_ruleDmxBooleanLiteral= ruleDmxBooleanLiteral EOF )
            // InternalSim.g:9392:2: iv_ruleDmxBooleanLiteral= ruleDmxBooleanLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxBooleanLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxBooleanLiteral=ruleDmxBooleanLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxBooleanLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxBooleanLiteral"


    // $ANTLR start "ruleDmxBooleanLiteral"
    // InternalSim.g:9398:1: ruleDmxBooleanLiteral returns [EObject current=null] : ( () ( ( (lv_value_1_0= 'TRUE' ) ) | ( (lv_value_2_0= 'true' ) ) | otherlv_3= 'FALSE' | otherlv_4= 'false' ) ) ;
    public final EObject ruleDmxBooleanLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_1_0=null;
        Token lv_value_2_0=null;
        Token otherlv_3=null;
        Token otherlv_4=null;


        	enterRule();

        try {
            // InternalSim.g:9404:2: ( ( () ( ( (lv_value_1_0= 'TRUE' ) ) | ( (lv_value_2_0= 'true' ) ) | otherlv_3= 'FALSE' | otherlv_4= 'false' ) ) )
            // InternalSim.g:9405:2: ( () ( ( (lv_value_1_0= 'TRUE' ) ) | ( (lv_value_2_0= 'true' ) ) | otherlv_3= 'FALSE' | otherlv_4= 'false' ) )
            {
            // InternalSim.g:9405:2: ( () ( ( (lv_value_1_0= 'TRUE' ) ) | ( (lv_value_2_0= 'true' ) ) | otherlv_3= 'FALSE' | otherlv_4= 'false' ) )
            // InternalSim.g:9406:3: () ( ( (lv_value_1_0= 'TRUE' ) ) | ( (lv_value_2_0= 'true' ) ) | otherlv_3= 'FALSE' | otherlv_4= 'false' )
            {
            // InternalSim.g:9406:3: ()
            // InternalSim.g:9407:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDmxBooleanLiteralAccess().getDmxBooleanLiteralAction_0(),
              					current);
              			
            }

            }

            // InternalSim.g:9413:3: ( ( (lv_value_1_0= 'TRUE' ) ) | ( (lv_value_2_0= 'true' ) ) | otherlv_3= 'FALSE' | otherlv_4= 'false' )
            int alt197=4;
            switch ( input.LA(1) ) {
            case 85:
                {
                alt197=1;
                }
                break;
            case 86:
                {
                alt197=2;
                }
                break;
            case 87:
                {
                alt197=3;
                }
                break;
            case 88:
                {
                alt197=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 197, 0, input);

                throw nvae;
            }

            switch (alt197) {
                case 1 :
                    // InternalSim.g:9414:4: ( (lv_value_1_0= 'TRUE' ) )
                    {
                    // InternalSim.g:9414:4: ( (lv_value_1_0= 'TRUE' ) )
                    // InternalSim.g:9415:5: (lv_value_1_0= 'TRUE' )
                    {
                    // InternalSim.g:9415:5: (lv_value_1_0= 'TRUE' )
                    // InternalSim.g:9416:6: lv_value_1_0= 'TRUE'
                    {
                    lv_value_1_0=(Token)match(input,85,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_value_1_0, grammarAccess.getDmxBooleanLiteralAccess().getValueTRUEKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDmxBooleanLiteralRule());
                      						}
                      						setWithLastConsumed(current, "value", true, "TRUE");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:9429:4: ( (lv_value_2_0= 'true' ) )
                    {
                    // InternalSim.g:9429:4: ( (lv_value_2_0= 'true' ) )
                    // InternalSim.g:9430:5: (lv_value_2_0= 'true' )
                    {
                    // InternalSim.g:9430:5: (lv_value_2_0= 'true' )
                    // InternalSim.g:9431:6: lv_value_2_0= 'true'
                    {
                    lv_value_2_0=(Token)match(input,86,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_value_2_0, grammarAccess.getDmxBooleanLiteralAccess().getValueTrueKeyword_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDmxBooleanLiteralRule());
                      						}
                      						setWithLastConsumed(current, "value", true, "true");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSim.g:9444:4: otherlv_3= 'FALSE'
                    {
                    otherlv_3=(Token)match(input,87,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getDmxBooleanLiteralAccess().getFALSEKeyword_1_2());
                      			
                    }

                    }
                    break;
                case 4 :
                    // InternalSim.g:9449:4: otherlv_4= 'false'
                    {
                    otherlv_4=(Token)match(input,88,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getDmxBooleanLiteralAccess().getFalseKeyword_1_3());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxBooleanLiteral"


    // $ANTLR start "entryRuleDmxNaturalLiteral"
    // InternalSim.g:9458:1: entryRuleDmxNaturalLiteral returns [EObject current=null] : iv_ruleDmxNaturalLiteral= ruleDmxNaturalLiteral EOF ;
    public final EObject entryRuleDmxNaturalLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxNaturalLiteral = null;


        try {
            // InternalSim.g:9458:58: (iv_ruleDmxNaturalLiteral= ruleDmxNaturalLiteral EOF )
            // InternalSim.g:9459:2: iv_ruleDmxNaturalLiteral= ruleDmxNaturalLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxNaturalLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxNaturalLiteral=ruleDmxNaturalLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxNaturalLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxNaturalLiteral"


    // $ANTLR start "ruleDmxNaturalLiteral"
    // InternalSim.g:9465:1: ruleDmxNaturalLiteral returns [EObject current=null] : ( () ( (lv_value_1_0= RULE_NATURAL ) ) ) ;
    public final EObject ruleDmxNaturalLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_1_0=null;


        	enterRule();

        try {
            // InternalSim.g:9471:2: ( ( () ( (lv_value_1_0= RULE_NATURAL ) ) ) )
            // InternalSim.g:9472:2: ( () ( (lv_value_1_0= RULE_NATURAL ) ) )
            {
            // InternalSim.g:9472:2: ( () ( (lv_value_1_0= RULE_NATURAL ) ) )
            // InternalSim.g:9473:3: () ( (lv_value_1_0= RULE_NATURAL ) )
            {
            // InternalSim.g:9473:3: ()
            // InternalSim.g:9474:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDmxNaturalLiteralAccess().getDmxNaturalLiteralAction_0(),
              					current);
              			
            }

            }

            // InternalSim.g:9480:3: ( (lv_value_1_0= RULE_NATURAL ) )
            // InternalSim.g:9481:4: (lv_value_1_0= RULE_NATURAL )
            {
            // InternalSim.g:9481:4: (lv_value_1_0= RULE_NATURAL )
            // InternalSim.g:9482:5: lv_value_1_0= RULE_NATURAL
            {
            lv_value_1_0=(Token)match(input,RULE_NATURAL,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_value_1_0, grammarAccess.getDmxNaturalLiteralAccess().getValueNATURALTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDmxNaturalLiteralRule());
              					}
              					setWithLastConsumed(
              						current,
              						"value",
              						lv_value_1_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.NATURAL");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxNaturalLiteral"


    // $ANTLR start "entryRuleDmxDecimalLiteral"
    // InternalSim.g:9502:1: entryRuleDmxDecimalLiteral returns [EObject current=null] : iv_ruleDmxDecimalLiteral= ruleDmxDecimalLiteral EOF ;
    public final EObject entryRuleDmxDecimalLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxDecimalLiteral = null;


        try {
            // InternalSim.g:9502:58: (iv_ruleDmxDecimalLiteral= ruleDmxDecimalLiteral EOF )
            // InternalSim.g:9503:2: iv_ruleDmxDecimalLiteral= ruleDmxDecimalLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxDecimalLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxDecimalLiteral=ruleDmxDecimalLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxDecimalLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxDecimalLiteral"


    // $ANTLR start "ruleDmxDecimalLiteral"
    // InternalSim.g:9509:1: ruleDmxDecimalLiteral returns [EObject current=null] : ( () ( (lv_value_1_0= ruleDECIMAL ) ) ) ;
    public final EObject ruleDmxDecimalLiteral() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_value_1_0 = null;



        	enterRule();

        try {
            // InternalSim.g:9515:2: ( ( () ( (lv_value_1_0= ruleDECIMAL ) ) ) )
            // InternalSim.g:9516:2: ( () ( (lv_value_1_0= ruleDECIMAL ) ) )
            {
            // InternalSim.g:9516:2: ( () ( (lv_value_1_0= ruleDECIMAL ) ) )
            // InternalSim.g:9517:3: () ( (lv_value_1_0= ruleDECIMAL ) )
            {
            // InternalSim.g:9517:3: ()
            // InternalSim.g:9518:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDmxDecimalLiteralAccess().getDmxDecimalLiteralAction_0(),
              					current);
              			
            }

            }

            // InternalSim.g:9524:3: ( (lv_value_1_0= ruleDECIMAL ) )
            // InternalSim.g:9525:4: (lv_value_1_0= ruleDECIMAL )
            {
            // InternalSim.g:9525:4: (lv_value_1_0= ruleDECIMAL )
            // InternalSim.g:9526:5: lv_value_1_0= ruleDECIMAL
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDmxDecimalLiteralAccess().getValueDECIMALParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_1_0=ruleDECIMAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDmxDecimalLiteralRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_1_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.DECIMAL");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxDecimalLiteral"


    // $ANTLR start "entryRuleDmxStringLiteral"
    // InternalSim.g:9547:1: entryRuleDmxStringLiteral returns [EObject current=null] : iv_ruleDmxStringLiteral= ruleDmxStringLiteral EOF ;
    public final EObject entryRuleDmxStringLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxStringLiteral = null;


        try {
            // InternalSim.g:9547:57: (iv_ruleDmxStringLiteral= ruleDmxStringLiteral EOF )
            // InternalSim.g:9548:2: iv_ruleDmxStringLiteral= ruleDmxStringLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxStringLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxStringLiteral=ruleDmxStringLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxStringLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxStringLiteral"


    // $ANTLR start "ruleDmxStringLiteral"
    // InternalSim.g:9554:1: ruleDmxStringLiteral returns [EObject current=null] : ( () ( (lv_value_1_0= RULE_STRING ) ) ) ;
    public final EObject ruleDmxStringLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_1_0=null;


        	enterRule();

        try {
            // InternalSim.g:9560:2: ( ( () ( (lv_value_1_0= RULE_STRING ) ) ) )
            // InternalSim.g:9561:2: ( () ( (lv_value_1_0= RULE_STRING ) ) )
            {
            // InternalSim.g:9561:2: ( () ( (lv_value_1_0= RULE_STRING ) ) )
            // InternalSim.g:9562:3: () ( (lv_value_1_0= RULE_STRING ) )
            {
            // InternalSim.g:9562:3: ()
            // InternalSim.g:9563:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDmxStringLiteralAccess().getDmxStringLiteralAction_0(),
              					current);
              			
            }

            }

            // InternalSim.g:9569:3: ( (lv_value_1_0= RULE_STRING ) )
            // InternalSim.g:9570:4: (lv_value_1_0= RULE_STRING )
            {
            // InternalSim.g:9570:4: (lv_value_1_0= RULE_STRING )
            // InternalSim.g:9571:5: lv_value_1_0= RULE_STRING
            {
            lv_value_1_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_value_1_0, grammarAccess.getDmxStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDmxStringLiteralRule());
              					}
              					setWithLastConsumed(
              						current,
              						"value",
              						lv_value_1_0,
              						"com.mimacom.ddd.dm.dmx.Dmx.STRING");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxStringLiteral"


    // $ANTLR start "entryRuleDmxUndefinedLiteral"
    // InternalSim.g:9591:1: entryRuleDmxUndefinedLiteral returns [EObject current=null] : iv_ruleDmxUndefinedLiteral= ruleDmxUndefinedLiteral EOF ;
    public final EObject entryRuleDmxUndefinedLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDmxUndefinedLiteral = null;


        try {
            // InternalSim.g:9591:60: (iv_ruleDmxUndefinedLiteral= ruleDmxUndefinedLiteral EOF )
            // InternalSim.g:9592:2: iv_ruleDmxUndefinedLiteral= ruleDmxUndefinedLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxUndefinedLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxUndefinedLiteral=ruleDmxUndefinedLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxUndefinedLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxUndefinedLiteral"


    // $ANTLR start "ruleDmxUndefinedLiteral"
    // InternalSim.g:9598:1: ruleDmxUndefinedLiteral returns [EObject current=null] : ( () (otherlv_1= 'UNDEFINED' | otherlv_2= 'undefined' ) ) ;
    public final EObject ruleDmxUndefinedLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;


        	enterRule();

        try {
            // InternalSim.g:9604:2: ( ( () (otherlv_1= 'UNDEFINED' | otherlv_2= 'undefined' ) ) )
            // InternalSim.g:9605:2: ( () (otherlv_1= 'UNDEFINED' | otherlv_2= 'undefined' ) )
            {
            // InternalSim.g:9605:2: ( () (otherlv_1= 'UNDEFINED' | otherlv_2= 'undefined' ) )
            // InternalSim.g:9606:3: () (otherlv_1= 'UNDEFINED' | otherlv_2= 'undefined' )
            {
            // InternalSim.g:9606:3: ()
            // InternalSim.g:9607:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDmxUndefinedLiteralAccess().getDmxUndefinedLiteralAction_0(),
              					current);
              			
            }

            }

            // InternalSim.g:9613:3: (otherlv_1= 'UNDEFINED' | otherlv_2= 'undefined' )
            int alt198=2;
            int LA198_0 = input.LA(1);

            if ( (LA198_0==89) ) {
                alt198=1;
            }
            else if ( (LA198_0==90) ) {
                alt198=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 198, 0, input);

                throw nvae;
            }
            switch (alt198) {
                case 1 :
                    // InternalSim.g:9614:4: otherlv_1= 'UNDEFINED'
                    {
                    otherlv_1=(Token)match(input,89,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getDmxUndefinedLiteralAccess().getUNDEFINEDKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalSim.g:9619:4: otherlv_2= 'undefined'
                    {
                    otherlv_2=(Token)match(input,90,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getDmxUndefinedLiteralAccess().getUndefinedKeyword_1_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxUndefinedLiteral"


    // $ANTLR start "entryRuleDECIMAL"
    // InternalSim.g:9628:1: entryRuleDECIMAL returns [String current=null] : iv_ruleDECIMAL= ruleDECIMAL EOF ;
    public final String entryRuleDECIMAL() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleDECIMAL = null;


        try {
            // InternalSim.g:9628:47: (iv_ruleDECIMAL= ruleDECIMAL EOF )
            // InternalSim.g:9629:2: iv_ruleDECIMAL= ruleDECIMAL EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDECIMALRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDECIMAL=ruleDECIMAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDECIMAL.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDECIMAL"


    // $ANTLR start "ruleDECIMAL"
    // InternalSim.g:9635:1: ruleDECIMAL returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_NATURAL_0= RULE_NATURAL kw= '.' this_NATURAL_2= RULE_NATURAL ( (kw= 'E' | kw= 'e' ) (kw= '+' | kw= '-' )? this_NATURAL_7= RULE_NATURAL )? ) ;
    public final AntlrDatatypeRuleToken ruleDECIMAL() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_NATURAL_0=null;
        Token kw=null;
        Token this_NATURAL_2=null;
        Token this_NATURAL_7=null;


        	enterRule();

        try {
            // InternalSim.g:9641:2: ( (this_NATURAL_0= RULE_NATURAL kw= '.' this_NATURAL_2= RULE_NATURAL ( (kw= 'E' | kw= 'e' ) (kw= '+' | kw= '-' )? this_NATURAL_7= RULE_NATURAL )? ) )
            // InternalSim.g:9642:2: (this_NATURAL_0= RULE_NATURAL kw= '.' this_NATURAL_2= RULE_NATURAL ( (kw= 'E' | kw= 'e' ) (kw= '+' | kw= '-' )? this_NATURAL_7= RULE_NATURAL )? )
            {
            // InternalSim.g:9642:2: (this_NATURAL_0= RULE_NATURAL kw= '.' this_NATURAL_2= RULE_NATURAL ( (kw= 'E' | kw= 'e' ) (kw= '+' | kw= '-' )? this_NATURAL_7= RULE_NATURAL )? )
            // InternalSim.g:9643:3: this_NATURAL_0= RULE_NATURAL kw= '.' this_NATURAL_2= RULE_NATURAL ( (kw= 'E' | kw= 'e' ) (kw= '+' | kw= '-' )? this_NATURAL_7= RULE_NATURAL )?
            {
            this_NATURAL_0=(Token)match(input,RULE_NATURAL,FOLLOW_133); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_NATURAL_0);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_NATURAL_0, grammarAccess.getDECIMALAccess().getNATURALTerminalRuleCall_0());
              		
            }
            kw=(Token)match(input,69,FOLLOW_130); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getDECIMALAccess().getFullStopKeyword_1());
              		
            }
            this_NATURAL_2=(Token)match(input,RULE_NATURAL,FOLLOW_134); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_NATURAL_2);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_NATURAL_2, grammarAccess.getDECIMALAccess().getNATURALTerminalRuleCall_2());
              		
            }
            // InternalSim.g:9662:3: ( (kw= 'E' | kw= 'e' ) (kw= '+' | kw= '-' )? this_NATURAL_7= RULE_NATURAL )?
            int alt201=2;
            int LA201_0 = input.LA(1);

            if ( ((LA201_0>=91 && LA201_0<=92)) ) {
                alt201=1;
            }
            switch (alt201) {
                case 1 :
                    // InternalSim.g:9663:4: (kw= 'E' | kw= 'e' ) (kw= '+' | kw= '-' )? this_NATURAL_7= RULE_NATURAL
                    {
                    // InternalSim.g:9663:4: (kw= 'E' | kw= 'e' )
                    int alt199=2;
                    int LA199_0 = input.LA(1);

                    if ( (LA199_0==91) ) {
                        alt199=1;
                    }
                    else if ( (LA199_0==92) ) {
                        alt199=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 199, 0, input);

                        throw nvae;
                    }
                    switch (alt199) {
                        case 1 :
                            // InternalSim.g:9664:5: kw= 'E'
                            {
                            kw=(Token)match(input,91,FOLLOW_135); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getDECIMALAccess().getEKeyword_3_0_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalSim.g:9670:5: kw= 'e'
                            {
                            kw=(Token)match(input,92,FOLLOW_135); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getDECIMALAccess().getEKeyword_3_0_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalSim.g:9676:4: (kw= '+' | kw= '-' )?
                    int alt200=3;
                    int LA200_0 = input.LA(1);

                    if ( (LA200_0==93) ) {
                        alt200=1;
                    }
                    else if ( (LA200_0==94) ) {
                        alt200=2;
                    }
                    switch (alt200) {
                        case 1 :
                            // InternalSim.g:9677:5: kw= '+'
                            {
                            kw=(Token)match(input,93,FOLLOW_130); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getDECIMALAccess().getPlusSignKeyword_3_1_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalSim.g:9683:5: kw= '-'
                            {
                            kw=(Token)match(input,94,FOLLOW_130); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getDECIMALAccess().getHyphenMinusKeyword_3_1_1());
                              				
                            }

                            }
                            break;

                    }

                    this_NATURAL_7=(Token)match(input,RULE_NATURAL,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_NATURAL_7);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_NATURAL_7, grammarAccess.getDECIMALAccess().getNATURALTerminalRuleCall_3_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDECIMAL"


    // $ANTLR start "entryRuleDmxFieldListStartSymbol"
    // InternalSim.g:9701:1: entryRuleDmxFieldListStartSymbol returns [String current=null] : iv_ruleDmxFieldListStartSymbol= ruleDmxFieldListStartSymbol EOF ;
    public final String entryRuleDmxFieldListStartSymbol() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleDmxFieldListStartSymbol = null;


        try {
            // InternalSim.g:9701:63: (iv_ruleDmxFieldListStartSymbol= ruleDmxFieldListStartSymbol EOF )
            // InternalSim.g:9702:2: iv_ruleDmxFieldListStartSymbol= ruleDmxFieldListStartSymbol EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDmxFieldListStartSymbolRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDmxFieldListStartSymbol=ruleDmxFieldListStartSymbol();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDmxFieldListStartSymbol.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDmxFieldListStartSymbol"


    // $ANTLR start "ruleDmxFieldListStartSymbol"
    // InternalSim.g:9708:1: ruleDmxFieldListStartSymbol returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '{' ;
    public final AntlrDatatypeRuleToken ruleDmxFieldListStartSymbol() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalSim.g:9714:2: (kw= '{' )
            // InternalSim.g:9715:2: kw= '{'
            {
            kw=(Token)match(input,23,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getDmxFieldListStartSymbolAccess().getLeftCurlyBracketKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxFieldListStartSymbol"


    // $ANTLR start "entryRuleDQualifiedNameWithWildcard"
    // InternalSim.g:9723:1: entryRuleDQualifiedNameWithWildcard returns [String current=null] : iv_ruleDQualifiedNameWithWildcard= ruleDQualifiedNameWithWildcard EOF ;
    public final String entryRuleDQualifiedNameWithWildcard() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleDQualifiedNameWithWildcard = null;


        try {
            // InternalSim.g:9723:66: (iv_ruleDQualifiedNameWithWildcard= ruleDQualifiedNameWithWildcard EOF )
            // InternalSim.g:9724:2: iv_ruleDQualifiedNameWithWildcard= ruleDQualifiedNameWithWildcard EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDQualifiedNameWithWildcardRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDQualifiedNameWithWildcard=ruleDQualifiedNameWithWildcard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDQualifiedNameWithWildcard.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDQualifiedNameWithWildcard"


    // $ANTLR start "ruleDQualifiedNameWithWildcard"
    // InternalSim.g:9730:1: ruleDQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_DQualifiedName_0= ruleDQualifiedName (kw= '.*' )? ) ;
    public final AntlrDatatypeRuleToken ruleDQualifiedNameWithWildcard() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_DQualifiedName_0 = null;



        	enterRule();

        try {
            // InternalSim.g:9736:2: ( (this_DQualifiedName_0= ruleDQualifiedName (kw= '.*' )? ) )
            // InternalSim.g:9737:2: (this_DQualifiedName_0= ruleDQualifiedName (kw= '.*' )? )
            {
            // InternalSim.g:9737:2: (this_DQualifiedName_0= ruleDQualifiedName (kw= '.*' )? )
            // InternalSim.g:9738:3: this_DQualifiedName_0= ruleDQualifiedName (kw= '.*' )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDQualifiedNameWithWildcardAccess().getDQualifiedNameParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_136);
            this_DQualifiedName_0=ruleDQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_DQualifiedName_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSim.g:9748:3: (kw= '.*' )?
            int alt202=2;
            int LA202_0 = input.LA(1);

            if ( (LA202_0==95) ) {
                alt202=1;
            }
            switch (alt202) {
                case 1 :
                    // InternalSim.g:9749:4: kw= '.*'
                    {
                    kw=(Token)match(input,95,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getDQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDQualifiedNameWithWildcard"


    // $ANTLR start "entryRuleDQualifiedName"
    // InternalSim.g:9759:1: entryRuleDQualifiedName returns [String current=null] : iv_ruleDQualifiedName= ruleDQualifiedName EOF ;
    public final String entryRuleDQualifiedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleDQualifiedName = null;


        try {
            // InternalSim.g:9759:54: (iv_ruleDQualifiedName= ruleDQualifiedName EOF )
            // InternalSim.g:9760:2: iv_ruleDQualifiedName= ruleDQualifiedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDQualifiedNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDQualifiedName=ruleDQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDQualifiedName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDQualifiedName"


    // $ANTLR start "ruleDQualifiedName"
    // InternalSim.g:9766:1: ruleDQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID (kw= '.' this_ID_2= RULE_ID )* ) ;
    public final AntlrDatatypeRuleToken ruleDQualifiedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token kw=null;
        Token this_ID_2=null;


        	enterRule();

        try {
            // InternalSim.g:9772:2: ( (this_ID_0= RULE_ID (kw= '.' this_ID_2= RULE_ID )* ) )
            // InternalSim.g:9773:2: (this_ID_0= RULE_ID (kw= '.' this_ID_2= RULE_ID )* )
            {
            // InternalSim.g:9773:2: (this_ID_0= RULE_ID (kw= '.' this_ID_2= RULE_ID )* )
            // InternalSim.g:9774:3: this_ID_0= RULE_ID (kw= '.' this_ID_2= RULE_ID )*
            {
            this_ID_0=(Token)match(input,RULE_ID,FOLLOW_100); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_ID_0);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_ID_0, grammarAccess.getDQualifiedNameAccess().getIDTerminalRuleCall_0());
              		
            }
            // InternalSim.g:9781:3: (kw= '.' this_ID_2= RULE_ID )*
            loop203:
            do {
                int alt203=2;
                int LA203_0 = input.LA(1);

                if ( (LA203_0==69) ) {
                    alt203=1;
                }


                switch (alt203) {
            	case 1 :
            	    // InternalSim.g:9782:4: kw= '.' this_ID_2= RULE_ID
            	    {
            	    kw=(Token)match(input,69,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(kw);
            	      				newLeafNode(kw, grammarAccess.getDQualifiedNameAccess().getFullStopKeyword_1_0());
            	      			
            	    }
            	    this_ID_2=(Token)match(input,RULE_ID,FOLLOW_100); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(this_ID_2);
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(this_ID_2, grammarAccess.getDQualifiedNameAccess().getIDTerminalRuleCall_1_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop203;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDQualifiedName"


    // $ANTLR start "ruleSTypeModelKind"
    // InternalSim.g:9799:1: ruleSTypeModelKind returns [Enumerator current=null] : (enumLiteral_0= 'base' ) ;
    public final Enumerator ruleSTypeModelKind() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSim.g:9805:2: ( (enumLiteral_0= 'base' ) )
            // InternalSim.g:9806:2: (enumLiteral_0= 'base' )
            {
            // InternalSim.g:9806:2: (enumLiteral_0= 'base' )
            // InternalSim.g:9807:3: enumLiteral_0= 'base'
            {
            enumLiteral_0=(Token)match(input,96,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getSTypeModelKindAccess().getBASEEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getSTypeModelKindAccess().getBASEEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSTypeModelKind"


    // $ANTLR start "ruleSystemInformationModelKind"
    // InternalSim.g:9816:1: ruleSystemInformationModelKind returns [Enumerator current=null] : ( (enumLiteral_0= 'interface' ) | (enumLiteral_1= 'core' ) ) ;
    public final Enumerator ruleSystemInformationModelKind() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
            // InternalSim.g:9822:2: ( ( (enumLiteral_0= 'interface' ) | (enumLiteral_1= 'core' ) ) )
            // InternalSim.g:9823:2: ( (enumLiteral_0= 'interface' ) | (enumLiteral_1= 'core' ) )
            {
            // InternalSim.g:9823:2: ( (enumLiteral_0= 'interface' ) | (enumLiteral_1= 'core' ) )
            int alt204=2;
            int LA204_0 = input.LA(1);

            if ( (LA204_0==97) ) {
                alt204=1;
            }
            else if ( (LA204_0==98) ) {
                alt204=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 204, 0, input);

                throw nvae;
            }
            switch (alt204) {
                case 1 :
                    // InternalSim.g:9824:3: (enumLiteral_0= 'interface' )
                    {
                    // InternalSim.g:9824:3: (enumLiteral_0= 'interface' )
                    // InternalSim.g:9825:4: enumLiteral_0= 'interface'
                    {
                    enumLiteral_0=(Token)match(input,97,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSystemInformationModelKindAccess().getINTERFACEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getSystemInformationModelKindAccess().getINTERFACEEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:9832:3: (enumLiteral_1= 'core' )
                    {
                    // InternalSim.g:9832:3: (enumLiteral_1= 'core' )
                    // InternalSim.g:9833:4: enumLiteral_1= 'core'
                    {
                    enumLiteral_1=(Token)match(input,98,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSystemInformationModelKindAccess().getCOREEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getSystemInformationModelKindAccess().getCOREEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSystemInformationModelKind"


    // $ANTLR start "ruleSimAbstractType"
    // InternalSim.g:9843:1: ruleSimAbstractType returns [Enumerator current=null] : ( (enumLiteral_0= 'nonabstract' ) | (enumLiteral_1= 'abstract' ) ) ;
    public final Enumerator ruleSimAbstractType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
            // InternalSim.g:9849:2: ( ( (enumLiteral_0= 'nonabstract' ) | (enumLiteral_1= 'abstract' ) ) )
            // InternalSim.g:9850:2: ( (enumLiteral_0= 'nonabstract' ) | (enumLiteral_1= 'abstract' ) )
            {
            // InternalSim.g:9850:2: ( (enumLiteral_0= 'nonabstract' ) | (enumLiteral_1= 'abstract' ) )
            int alt205=2;
            int LA205_0 = input.LA(1);

            if ( (LA205_0==99) ) {
                alt205=1;
            }
            else if ( (LA205_0==51) ) {
                alt205=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 205, 0, input);

                throw nvae;
            }
            switch (alt205) {
                case 1 :
                    // InternalSim.g:9851:3: (enumLiteral_0= 'nonabstract' )
                    {
                    // InternalSim.g:9851:3: (enumLiteral_0= 'nonabstract' )
                    // InternalSim.g:9852:4: enumLiteral_0= 'nonabstract'
                    {
                    enumLiteral_0=(Token)match(input,99,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSimAbstractTypeAccess().getFALSEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getSimAbstractTypeAccess().getFALSEEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:9859:3: (enumLiteral_1= 'abstract' )
                    {
                    // InternalSim.g:9859:3: (enumLiteral_1= 'abstract' )
                    // InternalSim.g:9860:4: enumLiteral_1= 'abstract'
                    {
                    enumLiteral_1=(Token)match(input,51,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSimAbstractTypeAccess().getTRUEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getSimAbstractTypeAccess().getTRUEEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimAbstractType"


    // $ANTLR start "ruleSimRootEntity"
    // InternalSim.g:9870:1: ruleSimRootEntity returns [Enumerator current=null] : ( (enumLiteral_0= 'nonroot' ) | (enumLiteral_1= 'root' ) ) ;
    public final Enumerator ruleSimRootEntity() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
            // InternalSim.g:9876:2: ( ( (enumLiteral_0= 'nonroot' ) | (enumLiteral_1= 'root' ) ) )
            // InternalSim.g:9877:2: ( (enumLiteral_0= 'nonroot' ) | (enumLiteral_1= 'root' ) )
            {
            // InternalSim.g:9877:2: ( (enumLiteral_0= 'nonroot' ) | (enumLiteral_1= 'root' ) )
            int alt206=2;
            int LA206_0 = input.LA(1);

            if ( (LA206_0==100) ) {
                alt206=1;
            }
            else if ( (LA206_0==38) ) {
                alt206=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 206, 0, input);

                throw nvae;
            }
            switch (alt206) {
                case 1 :
                    // InternalSim.g:9878:3: (enumLiteral_0= 'nonroot' )
                    {
                    // InternalSim.g:9878:3: (enumLiteral_0= 'nonroot' )
                    // InternalSim.g:9879:4: enumLiteral_0= 'nonroot'
                    {
                    enumLiteral_0=(Token)match(input,100,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSimRootEntityAccess().getFALSEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getSimRootEntityAccess().getFALSEEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:9886:3: (enumLiteral_1= 'root' )
                    {
                    // InternalSim.g:9886:3: (enumLiteral_1= 'root' )
                    // InternalSim.g:9887:4: enumLiteral_1= 'root'
                    {
                    enumLiteral_1=(Token)match(input,38,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSimRootEntityAccess().getTRUEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getSimRootEntityAccess().getTRUEEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimRootEntity"


    // $ANTLR start "ruleSimDetailType"
    // InternalSim.g:9897:1: ruleSimDetailType returns [Enumerator current=null] : (enumLiteral_0= 'detail' ) ;
    public final Enumerator ruleSimDetailType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSim.g:9903:2: ( (enumLiteral_0= 'detail' ) )
            // InternalSim.g:9904:2: (enumLiteral_0= 'detail' )
            {
            // InternalSim.g:9904:2: (enumLiteral_0= 'detail' )
            // InternalSim.g:9905:3: enumLiteral_0= 'detail'
            {
            enumLiteral_0=(Token)match(input,42,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getSimDetailTypeAccess().getTRUEEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getSimDetailTypeAccess().getTRUEEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimDetailType"


    // $ANTLR start "ruleSimEntityType"
    // InternalSim.g:9914:1: ruleSimEntityType returns [Enumerator current=null] : (enumLiteral_0= 'entity' ) ;
    public final Enumerator ruleSimEntityType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSim.g:9920:2: ( (enumLiteral_0= 'entity' ) )
            // InternalSim.g:9921:2: (enumLiteral_0= 'entity' )
            {
            // InternalSim.g:9921:2: (enumLiteral_0= 'entity' )
            // InternalSim.g:9922:3: enumLiteral_0= 'entity'
            {
            enumLiteral_0=(Token)match(input,39,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getSimEntityTypeAccess().getFALSEEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getSimEntityTypeAccess().getFALSEEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimEntityType"


    // $ANTLR start "ruleDEntityNatureAutonomous"
    // InternalSim.g:9931:1: ruleDEntityNatureAutonomous returns [Enumerator current=null] : (enumLiteral_0= 'autonomous' ) ;
    public final Enumerator ruleDEntityNatureAutonomous() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSim.g:9937:2: ( (enumLiteral_0= 'autonomous' ) )
            // InternalSim.g:9938:2: (enumLiteral_0= 'autonomous' )
            {
            // InternalSim.g:9938:2: (enumLiteral_0= 'autonomous' )
            // InternalSim.g:9939:3: enumLiteral_0= 'autonomous'
            {
            enumLiteral_0=(Token)match(input,101,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getDEntityNatureAutonomousAccess().getAUTONOMOUS_ENTITYEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getDEntityNatureAutonomousAccess().getAUTONOMOUS_ENTITYEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDEntityNatureAutonomous"


    // $ANTLR start "ruleDEntityNatureRelationship"
    // InternalSim.g:9948:1: ruleDEntityNatureRelationship returns [Enumerator current=null] : (enumLiteral_0= 'relationship' ) ;
    public final Enumerator ruleDEntityNatureRelationship() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSim.g:9954:2: ( (enumLiteral_0= 'relationship' ) )
            // InternalSim.g:9955:2: (enumLiteral_0= 'relationship' )
            {
            // InternalSim.g:9955:2: (enumLiteral_0= 'relationship' )
            // InternalSim.g:9956:3: enumLiteral_0= 'relationship'
            {
            enumLiteral_0=(Token)match(input,102,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getDEntityNatureRelationshipAccess().getRELATIONSHIPEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getDEntityNatureRelationshipAccess().getRELATIONSHIPEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDEntityNatureRelationship"


    // $ANTLR start "ruleDAssociationKind"
    // InternalSim.g:9965:1: ruleDAssociationKind returns [Enumerator current=null] : ( (enumLiteral_0= 'references' ) | (enumLiteral_1= 'contains' ) ) ;
    public final Enumerator ruleDAssociationKind() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
            // InternalSim.g:9971:2: ( ( (enumLiteral_0= 'references' ) | (enumLiteral_1= 'contains' ) ) )
            // InternalSim.g:9972:2: ( (enumLiteral_0= 'references' ) | (enumLiteral_1= 'contains' ) )
            {
            // InternalSim.g:9972:2: ( (enumLiteral_0= 'references' ) | (enumLiteral_1= 'contains' ) )
            int alt207=2;
            int LA207_0 = input.LA(1);

            if ( (LA207_0==103) ) {
                alt207=1;
            }
            else if ( (LA207_0==56) ) {
                alt207=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 207, 0, input);

                throw nvae;
            }
            switch (alt207) {
                case 1 :
                    // InternalSim.g:9973:3: (enumLiteral_0= 'references' )
                    {
                    // InternalSim.g:9973:3: (enumLiteral_0= 'references' )
                    // InternalSim.g:9974:4: enumLiteral_0= 'references'
                    {
                    enumLiteral_0=(Token)match(input,103,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDAssociationKindAccess().getREFERENCEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getDAssociationKindAccess().getREFERENCEEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:9981:3: (enumLiteral_1= 'contains' )
                    {
                    // InternalSim.g:9981:3: (enumLiteral_1= 'contains' )
                    // InternalSim.g:9982:4: enumLiteral_1= 'contains'
                    {
                    enumLiteral_1=(Token)match(input,56,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDAssociationKindAccess().getCOMPOSITEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getDAssociationKindAccess().getCOMPOSITEEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDAssociationKind"


    // $ANTLR start "ruleDAssociationKindInverse"
    // InternalSim.g:9992:1: ruleDAssociationKindInverse returns [Enumerator current=null] : (enumLiteral_0= 'inverse' ) ;
    public final Enumerator ruleDAssociationKindInverse() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSim.g:9998:2: ( (enumLiteral_0= 'inverse' ) )
            // InternalSim.g:9999:2: (enumLiteral_0= 'inverse' )
            {
            // InternalSim.g:9999:2: (enumLiteral_0= 'inverse' )
            // InternalSim.g:10000:3: enumLiteral_0= 'inverse'
            {
            enumLiteral_0=(Token)match(input,104,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getDAssociationKindInverseAccess().getINVERSE_COMPOSITEEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getDAssociationKindInverseAccess().getINVERSE_COMPOSITEEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDAssociationKindInverse"


    // $ANTLR start "ruleDNoteColor"
    // InternalSim.g:10009:1: ruleDNoteColor returns [Enumerator current=null] : ( (enumLiteral_0= 'white' ) | (enumLiteral_1= 'red' ) | (enumLiteral_2= 'orange' ) | (enumLiteral_3= 'yellow' ) | (enumLiteral_4= 'green' ) | (enumLiteral_5= 'blue' ) | (enumLiteral_6= 'pink' ) | (enumLiteral_7= 'grey' ) ) ;
    public final Enumerator ruleDNoteColor() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;
        Token enumLiteral_6=null;
        Token enumLiteral_7=null;


        	enterRule();

        try {
            // InternalSim.g:10015:2: ( ( (enumLiteral_0= 'white' ) | (enumLiteral_1= 'red' ) | (enumLiteral_2= 'orange' ) | (enumLiteral_3= 'yellow' ) | (enumLiteral_4= 'green' ) | (enumLiteral_5= 'blue' ) | (enumLiteral_6= 'pink' ) | (enumLiteral_7= 'grey' ) ) )
            // InternalSim.g:10016:2: ( (enumLiteral_0= 'white' ) | (enumLiteral_1= 'red' ) | (enumLiteral_2= 'orange' ) | (enumLiteral_3= 'yellow' ) | (enumLiteral_4= 'green' ) | (enumLiteral_5= 'blue' ) | (enumLiteral_6= 'pink' ) | (enumLiteral_7= 'grey' ) )
            {
            // InternalSim.g:10016:2: ( (enumLiteral_0= 'white' ) | (enumLiteral_1= 'red' ) | (enumLiteral_2= 'orange' ) | (enumLiteral_3= 'yellow' ) | (enumLiteral_4= 'green' ) | (enumLiteral_5= 'blue' ) | (enumLiteral_6= 'pink' ) | (enumLiteral_7= 'grey' ) )
            int alt208=8;
            switch ( input.LA(1) ) {
            case 105:
                {
                alt208=1;
                }
                break;
            case 106:
                {
                alt208=2;
                }
                break;
            case 107:
                {
                alt208=3;
                }
                break;
            case 108:
                {
                alt208=4;
                }
                break;
            case 109:
                {
                alt208=5;
                }
                break;
            case 110:
                {
                alt208=6;
                }
                break;
            case 111:
                {
                alt208=7;
                }
                break;
            case 112:
                {
                alt208=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 208, 0, input);

                throw nvae;
            }

            switch (alt208) {
                case 1 :
                    // InternalSim.g:10017:3: (enumLiteral_0= 'white' )
                    {
                    // InternalSim.g:10017:3: (enumLiteral_0= 'white' )
                    // InternalSim.g:10018:4: enumLiteral_0= 'white'
                    {
                    enumLiteral_0=(Token)match(input,105,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDNoteColorAccess().getWHITEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getDNoteColorAccess().getWHITEEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:10025:3: (enumLiteral_1= 'red' )
                    {
                    // InternalSim.g:10025:3: (enumLiteral_1= 'red' )
                    // InternalSim.g:10026:4: enumLiteral_1= 'red'
                    {
                    enumLiteral_1=(Token)match(input,106,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDNoteColorAccess().getREDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getDNoteColorAccess().getREDEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSim.g:10033:3: (enumLiteral_2= 'orange' )
                    {
                    // InternalSim.g:10033:3: (enumLiteral_2= 'orange' )
                    // InternalSim.g:10034:4: enumLiteral_2= 'orange'
                    {
                    enumLiteral_2=(Token)match(input,107,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDNoteColorAccess().getORANGEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getDNoteColorAccess().getORANGEEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSim.g:10041:3: (enumLiteral_3= 'yellow' )
                    {
                    // InternalSim.g:10041:3: (enumLiteral_3= 'yellow' )
                    // InternalSim.g:10042:4: enumLiteral_3= 'yellow'
                    {
                    enumLiteral_3=(Token)match(input,108,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDNoteColorAccess().getYELLOWEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getDNoteColorAccess().getYELLOWEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSim.g:10049:3: (enumLiteral_4= 'green' )
                    {
                    // InternalSim.g:10049:3: (enumLiteral_4= 'green' )
                    // InternalSim.g:10050:4: enumLiteral_4= 'green'
                    {
                    enumLiteral_4=(Token)match(input,109,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDNoteColorAccess().getGREENEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getDNoteColorAccess().getGREENEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSim.g:10057:3: (enumLiteral_5= 'blue' )
                    {
                    // InternalSim.g:10057:3: (enumLiteral_5= 'blue' )
                    // InternalSim.g:10058:4: enumLiteral_5= 'blue'
                    {
                    enumLiteral_5=(Token)match(input,110,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDNoteColorAccess().getBLUEEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_5, grammarAccess.getDNoteColorAccess().getBLUEEnumLiteralDeclaration_5());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSim.g:10065:3: (enumLiteral_6= 'pink' )
                    {
                    // InternalSim.g:10065:3: (enumLiteral_6= 'pink' )
                    // InternalSim.g:10066:4: enumLiteral_6= 'pink'
                    {
                    enumLiteral_6=(Token)match(input,111,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDNoteColorAccess().getPINKEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_6, grammarAccess.getDNoteColorAccess().getPINKEnumLiteralDeclaration_6());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSim.g:10073:3: (enumLiteral_7= 'grey' )
                    {
                    // InternalSim.g:10073:3: (enumLiteral_7= 'grey' )
                    // InternalSim.g:10074:4: enumLiteral_7= 'grey'
                    {
                    enumLiteral_7=(Token)match(input,112,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDNoteColorAccess().getGREYEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_7, grammarAccess.getDNoteColorAccess().getGREYEnumLiteralDeclaration_7());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDNoteColor"


    // $ANTLR start "ruleDmxBaseType"
    // InternalSim.g:10084:1: ruleDmxBaseType returns [Enumerator current=null] : ( (enumLiteral_0= 'VOID' ) | (enumLiteral_1= 'BOOLEAN' ) | (enumLiteral_2= 'NUMBER' ) | (enumLiteral_3= 'TEXT' ) | (enumLiteral_4= 'IDENTIFIER' ) | (enumLiteral_5= 'TIMEPOINT' ) | (enumLiteral_6= 'STATE' ) | (enumLiteral_7= 'STATE_EVENT' ) | (enumLiteral_8= 'COMPLEX' ) | (enumLiteral_9= 'NOTIFICATION' ) | (enumLiteral_10= 'SERVICE' ) ) ;
    public final Enumerator ruleDmxBaseType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;
        Token enumLiteral_6=null;
        Token enumLiteral_7=null;
        Token enumLiteral_8=null;
        Token enumLiteral_9=null;
        Token enumLiteral_10=null;


        	enterRule();

        try {
            // InternalSim.g:10090:2: ( ( (enumLiteral_0= 'VOID' ) | (enumLiteral_1= 'BOOLEAN' ) | (enumLiteral_2= 'NUMBER' ) | (enumLiteral_3= 'TEXT' ) | (enumLiteral_4= 'IDENTIFIER' ) | (enumLiteral_5= 'TIMEPOINT' ) | (enumLiteral_6= 'STATE' ) | (enumLiteral_7= 'STATE_EVENT' ) | (enumLiteral_8= 'COMPLEX' ) | (enumLiteral_9= 'NOTIFICATION' ) | (enumLiteral_10= 'SERVICE' ) ) )
            // InternalSim.g:10091:2: ( (enumLiteral_0= 'VOID' ) | (enumLiteral_1= 'BOOLEAN' ) | (enumLiteral_2= 'NUMBER' ) | (enumLiteral_3= 'TEXT' ) | (enumLiteral_4= 'IDENTIFIER' ) | (enumLiteral_5= 'TIMEPOINT' ) | (enumLiteral_6= 'STATE' ) | (enumLiteral_7= 'STATE_EVENT' ) | (enumLiteral_8= 'COMPLEX' ) | (enumLiteral_9= 'NOTIFICATION' ) | (enumLiteral_10= 'SERVICE' ) )
            {
            // InternalSim.g:10091:2: ( (enumLiteral_0= 'VOID' ) | (enumLiteral_1= 'BOOLEAN' ) | (enumLiteral_2= 'NUMBER' ) | (enumLiteral_3= 'TEXT' ) | (enumLiteral_4= 'IDENTIFIER' ) | (enumLiteral_5= 'TIMEPOINT' ) | (enumLiteral_6= 'STATE' ) | (enumLiteral_7= 'STATE_EVENT' ) | (enumLiteral_8= 'COMPLEX' ) | (enumLiteral_9= 'NOTIFICATION' ) | (enumLiteral_10= 'SERVICE' ) )
            int alt209=11;
            switch ( input.LA(1) ) {
            case 113:
                {
                alt209=1;
                }
                break;
            case 114:
                {
                alt209=2;
                }
                break;
            case 115:
                {
                alt209=3;
                }
                break;
            case 116:
                {
                alt209=4;
                }
                break;
            case 117:
                {
                alt209=5;
                }
                break;
            case 118:
                {
                alt209=6;
                }
                break;
            case 119:
                {
                alt209=7;
                }
                break;
            case 120:
                {
                alt209=8;
                }
                break;
            case 121:
                {
                alt209=9;
                }
                break;
            case 122:
                {
                alt209=10;
                }
                break;
            case 123:
                {
                alt209=11;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 209, 0, input);

                throw nvae;
            }

            switch (alt209) {
                case 1 :
                    // InternalSim.g:10092:3: (enumLiteral_0= 'VOID' )
                    {
                    // InternalSim.g:10092:3: (enumLiteral_0= 'VOID' )
                    // InternalSim.g:10093:4: enumLiteral_0= 'VOID'
                    {
                    enumLiteral_0=(Token)match(input,113,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDmxBaseTypeAccess().getVOIDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getDmxBaseTypeAccess().getVOIDEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:10100:3: (enumLiteral_1= 'BOOLEAN' )
                    {
                    // InternalSim.g:10100:3: (enumLiteral_1= 'BOOLEAN' )
                    // InternalSim.g:10101:4: enumLiteral_1= 'BOOLEAN'
                    {
                    enumLiteral_1=(Token)match(input,114,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDmxBaseTypeAccess().getBOOLEANEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getDmxBaseTypeAccess().getBOOLEANEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSim.g:10108:3: (enumLiteral_2= 'NUMBER' )
                    {
                    // InternalSim.g:10108:3: (enumLiteral_2= 'NUMBER' )
                    // InternalSim.g:10109:4: enumLiteral_2= 'NUMBER'
                    {
                    enumLiteral_2=(Token)match(input,115,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDmxBaseTypeAccess().getNUMBEREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getDmxBaseTypeAccess().getNUMBEREnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSim.g:10116:3: (enumLiteral_3= 'TEXT' )
                    {
                    // InternalSim.g:10116:3: (enumLiteral_3= 'TEXT' )
                    // InternalSim.g:10117:4: enumLiteral_3= 'TEXT'
                    {
                    enumLiteral_3=(Token)match(input,116,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDmxBaseTypeAccess().getTEXTEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getDmxBaseTypeAccess().getTEXTEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSim.g:10124:3: (enumLiteral_4= 'IDENTIFIER' )
                    {
                    // InternalSim.g:10124:3: (enumLiteral_4= 'IDENTIFIER' )
                    // InternalSim.g:10125:4: enumLiteral_4= 'IDENTIFIER'
                    {
                    enumLiteral_4=(Token)match(input,117,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDmxBaseTypeAccess().getIDENTIFIEREnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getDmxBaseTypeAccess().getIDENTIFIEREnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSim.g:10132:3: (enumLiteral_5= 'TIMEPOINT' )
                    {
                    // InternalSim.g:10132:3: (enumLiteral_5= 'TIMEPOINT' )
                    // InternalSim.g:10133:4: enumLiteral_5= 'TIMEPOINT'
                    {
                    enumLiteral_5=(Token)match(input,118,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDmxBaseTypeAccess().getTIMEPOINTEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_5, grammarAccess.getDmxBaseTypeAccess().getTIMEPOINTEnumLiteralDeclaration_5());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSim.g:10140:3: (enumLiteral_6= 'STATE' )
                    {
                    // InternalSim.g:10140:3: (enumLiteral_6= 'STATE' )
                    // InternalSim.g:10141:4: enumLiteral_6= 'STATE'
                    {
                    enumLiteral_6=(Token)match(input,119,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDmxBaseTypeAccess().getSTATEEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_6, grammarAccess.getDmxBaseTypeAccess().getSTATEEnumLiteralDeclaration_6());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSim.g:10148:3: (enumLiteral_7= 'STATE_EVENT' )
                    {
                    // InternalSim.g:10148:3: (enumLiteral_7= 'STATE_EVENT' )
                    // InternalSim.g:10149:4: enumLiteral_7= 'STATE_EVENT'
                    {
                    enumLiteral_7=(Token)match(input,120,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDmxBaseTypeAccess().getSTATE_EVENTEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_7, grammarAccess.getDmxBaseTypeAccess().getSTATE_EVENTEnumLiteralDeclaration_7());
                      			
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalSim.g:10156:3: (enumLiteral_8= 'COMPLEX' )
                    {
                    // InternalSim.g:10156:3: (enumLiteral_8= 'COMPLEX' )
                    // InternalSim.g:10157:4: enumLiteral_8= 'COMPLEX'
                    {
                    enumLiteral_8=(Token)match(input,121,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDmxBaseTypeAccess().getCOMPLEXEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_8, grammarAccess.getDmxBaseTypeAccess().getCOMPLEXEnumLiteralDeclaration_8());
                      			
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalSim.g:10164:3: (enumLiteral_9= 'NOTIFICATION' )
                    {
                    // InternalSim.g:10164:3: (enumLiteral_9= 'NOTIFICATION' )
                    // InternalSim.g:10165:4: enumLiteral_9= 'NOTIFICATION'
                    {
                    enumLiteral_9=(Token)match(input,122,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDmxBaseTypeAccess().getNOTIFICATIONEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_9, grammarAccess.getDmxBaseTypeAccess().getNOTIFICATIONEnumLiteralDeclaration_9());
                      			
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalSim.g:10172:3: (enumLiteral_10= 'SERVICE' )
                    {
                    // InternalSim.g:10172:3: (enumLiteral_10= 'SERVICE' )
                    // InternalSim.g:10173:4: enumLiteral_10= 'SERVICE'
                    {
                    enumLiteral_10=(Token)match(input,123,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDmxBaseTypeAccess().getSERVICEEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_10, grammarAccess.getDmxBaseTypeAccess().getSERVICEEnumLiteralDeclaration_10());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxBaseType"


    // $ANTLR start "ruleDmxOpOr"
    // InternalSim.g:10183:1: ruleDmxOpOr returns [Enumerator current=null] : ( (enumLiteral_0= 'OR' ) | (enumLiteral_1= 'or' ) | (enumLiteral_2= 'XOR' ) | (enumLiteral_3= 'xor' ) ) ;
    public final Enumerator ruleDmxOpOr() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;


        	enterRule();

        try {
            // InternalSim.g:10189:2: ( ( (enumLiteral_0= 'OR' ) | (enumLiteral_1= 'or' ) | (enumLiteral_2= 'XOR' ) | (enumLiteral_3= 'xor' ) ) )
            // InternalSim.g:10190:2: ( (enumLiteral_0= 'OR' ) | (enumLiteral_1= 'or' ) | (enumLiteral_2= 'XOR' ) | (enumLiteral_3= 'xor' ) )
            {
            // InternalSim.g:10190:2: ( (enumLiteral_0= 'OR' ) | (enumLiteral_1= 'or' ) | (enumLiteral_2= 'XOR' ) | (enumLiteral_3= 'xor' ) )
            int alt210=4;
            switch ( input.LA(1) ) {
            case 124:
                {
                alt210=1;
                }
                break;
            case 125:
                {
                alt210=2;
                }
                break;
            case 126:
                {
                alt210=3;
                }
                break;
            case 127:
                {
                alt210=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 210, 0, input);

                throw nvae;
            }

            switch (alt210) {
                case 1 :
                    // InternalSim.g:10191:3: (enumLiteral_0= 'OR' )
                    {
                    // InternalSim.g:10191:3: (enumLiteral_0= 'OR' )
                    // InternalSim.g:10192:4: enumLiteral_0= 'OR'
                    {
                    enumLiteral_0=(Token)match(input,124,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDmxOpOrAccess().getOREnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getDmxOpOrAccess().getOREnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:10199:3: (enumLiteral_1= 'or' )
                    {
                    // InternalSim.g:10199:3: (enumLiteral_1= 'or' )
                    // InternalSim.g:10200:4: enumLiteral_1= 'or'
                    {
                    enumLiteral_1=(Token)match(input,125,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDmxOpOrAccess().getOREnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getDmxOpOrAccess().getOREnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSim.g:10207:3: (enumLiteral_2= 'XOR' )
                    {
                    // InternalSim.g:10207:3: (enumLiteral_2= 'XOR' )
                    // InternalSim.g:10208:4: enumLiteral_2= 'XOR'
                    {
                    enumLiteral_2=(Token)match(input,126,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDmxOpOrAccess().getXOREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getDmxOpOrAccess().getXOREnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSim.g:10215:3: (enumLiteral_3= 'xor' )
                    {
                    // InternalSim.g:10215:3: (enumLiteral_3= 'xor' )
                    // InternalSim.g:10216:4: enumLiteral_3= 'xor'
                    {
                    enumLiteral_3=(Token)match(input,127,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDmxOpOrAccess().getXOREnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getDmxOpOrAccess().getXOREnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxOpOr"


    // $ANTLR start "ruleDmxOpAnd"
    // InternalSim.g:10226:1: ruleDmxOpAnd returns [Enumerator current=null] : ( (enumLiteral_0= 'AND' ) | (enumLiteral_1= 'and' ) ) ;
    public final Enumerator ruleDmxOpAnd() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
            // InternalSim.g:10232:2: ( ( (enumLiteral_0= 'AND' ) | (enumLiteral_1= 'and' ) ) )
            // InternalSim.g:10233:2: ( (enumLiteral_0= 'AND' ) | (enumLiteral_1= 'and' ) )
            {
            // InternalSim.g:10233:2: ( (enumLiteral_0= 'AND' ) | (enumLiteral_1= 'and' ) )
            int alt211=2;
            int LA211_0 = input.LA(1);

            if ( (LA211_0==128) ) {
                alt211=1;
            }
            else if ( (LA211_0==26) ) {
                alt211=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 211, 0, input);

                throw nvae;
            }
            switch (alt211) {
                case 1 :
                    // InternalSim.g:10234:3: (enumLiteral_0= 'AND' )
                    {
                    // InternalSim.g:10234:3: (enumLiteral_0= 'AND' )
                    // InternalSim.g:10235:4: enumLiteral_0= 'AND'
                    {
                    enumLiteral_0=(Token)match(input,128,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDmxOpAndAccess().getANDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getDmxOpAndAccess().getANDEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:10242:3: (enumLiteral_1= 'and' )
                    {
                    // InternalSim.g:10242:3: (enumLiteral_1= 'and' )
                    // InternalSim.g:10243:4: enumLiteral_1= 'and'
                    {
                    enumLiteral_1=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDmxOpAndAccess().getANDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getDmxOpAndAccess().getANDEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxOpAnd"


    // $ANTLR start "ruleDmxOpEquality"
    // InternalSim.g:10253:1: ruleDmxOpEquality returns [Enumerator current=null] : ( (enumLiteral_0= '=' ) | (enumLiteral_1= '!=' ) | (enumLiteral_2= '<>' ) ) ;
    public final Enumerator ruleDmxOpEquality() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;


        	enterRule();

        try {
            // InternalSim.g:10259:2: ( ( (enumLiteral_0= '=' ) | (enumLiteral_1= '!=' ) | (enumLiteral_2= '<>' ) ) )
            // InternalSim.g:10260:2: ( (enumLiteral_0= '=' ) | (enumLiteral_1= '!=' ) | (enumLiteral_2= '<>' ) )
            {
            // InternalSim.g:10260:2: ( (enumLiteral_0= '=' ) | (enumLiteral_1= '!=' ) | (enumLiteral_2= '<>' ) )
            int alt212=3;
            switch ( input.LA(1) ) {
            case 75:
                {
                alt212=1;
                }
                break;
            case 129:
                {
                alt212=2;
                }
                break;
            case 130:
                {
                alt212=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 212, 0, input);

                throw nvae;
            }

            switch (alt212) {
                case 1 :
                    // InternalSim.g:10261:3: (enumLiteral_0= '=' )
                    {
                    // InternalSim.g:10261:3: (enumLiteral_0= '=' )
                    // InternalSim.g:10262:4: enumLiteral_0= '='
                    {
                    enumLiteral_0=(Token)match(input,75,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDmxOpEqualityAccess().getEQUALEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getDmxOpEqualityAccess().getEQUALEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:10269:3: (enumLiteral_1= '!=' )
                    {
                    // InternalSim.g:10269:3: (enumLiteral_1= '!=' )
                    // InternalSim.g:10270:4: enumLiteral_1= '!='
                    {
                    enumLiteral_1=(Token)match(input,129,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDmxOpEqualityAccess().getNOT_EQUALEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getDmxOpEqualityAccess().getNOT_EQUALEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSim.g:10277:3: (enumLiteral_2= '<>' )
                    {
                    // InternalSim.g:10277:3: (enumLiteral_2= '<>' )
                    // InternalSim.g:10278:4: enumLiteral_2= '<>'
                    {
                    enumLiteral_2=(Token)match(input,130,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDmxOpEqualityAccess().getNOT_EQUALEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getDmxOpEqualityAccess().getNOT_EQUALEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDmxOpEquality"


    // $ANTLR start "ruleOpCompare"
    // InternalSim.g:10288:1: ruleOpCompare returns [Enumerator current=null] : ( (enumLiteral_0= '<' ) | (enumLiteral_1= '<=' ) | (enumLiteral_2= '\\u2264' ) | (enumLiteral_3= '>=' ) | (enumLiteral_4= '\\u2265' ) | (enumLiteral_5= '>' ) ) ;
    public final Enumerator ruleOpCompare() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;


        	enterRule();

        try {
            // InternalSim.g:10294:2: ( ( (enumLiteral_0= '<' ) | (enumLiteral_1= '<=' ) | (enumLiteral_2= '\\u2264' ) | (enumLiteral_3= '>=' ) | (enumLiteral_4= '\\u2265' ) | (enumLiteral_5= '>' ) ) )
            // InternalSim.g:10295:2: ( (enumLiteral_0= '<' ) | (enumLiteral_1= '<=' ) | (enumLiteral_2= '\\u2264' ) | (enumLiteral_3= '>=' ) | (enumLiteral_4= '\\u2265' ) | (enumLiteral_5= '>' ) )
            {
            // InternalSim.g:10295:2: ( (enumLiteral_0= '<' ) | (enumLiteral_1= '<=' ) | (enumLiteral_2= '\\u2264' ) | (enumLiteral_3= '>=' ) | (enumLiteral_4= '\\u2265' ) | (enumLiteral_5= '>' ) )
            int alt213=6;
            switch ( input.LA(1) ) {
            case 131:
                {
                alt213=1;
                }
                break;
            case 132:
                {
                alt213=2;
                }
                break;
            case 133:
                {
                alt213=3;
                }
                break;
            case 134:
                {
                alt213=4;
                }
                break;
            case 135:
                {
                alt213=5;
                }
                break;
            case 136:
                {
                alt213=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 213, 0, input);

                throw nvae;
            }

            switch (alt213) {
                case 1 :
                    // InternalSim.g:10296:3: (enumLiteral_0= '<' )
                    {
                    // InternalSim.g:10296:3: (enumLiteral_0= '<' )
                    // InternalSim.g:10297:4: enumLiteral_0= '<'
                    {
                    enumLiteral_0=(Token)match(input,131,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getOpCompareAccess().getLESSEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getOpCompareAccess().getLESSEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:10304:3: (enumLiteral_1= '<=' )
                    {
                    // InternalSim.g:10304:3: (enumLiteral_1= '<=' )
                    // InternalSim.g:10305:4: enumLiteral_1= '<='
                    {
                    enumLiteral_1=(Token)match(input,132,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getOpCompareAccess().getLESS_OR_EQUALEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getOpCompareAccess().getLESS_OR_EQUALEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSim.g:10312:3: (enumLiteral_2= '\\u2264' )
                    {
                    // InternalSim.g:10312:3: (enumLiteral_2= '\\u2264' )
                    // InternalSim.g:10313:4: enumLiteral_2= '\\u2264'
                    {
                    enumLiteral_2=(Token)match(input,133,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getOpCompareAccess().getLESS_OR_EQUALEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getOpCompareAccess().getLESS_OR_EQUALEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSim.g:10320:3: (enumLiteral_3= '>=' )
                    {
                    // InternalSim.g:10320:3: (enumLiteral_3= '>=' )
                    // InternalSim.g:10321:4: enumLiteral_3= '>='
                    {
                    enumLiteral_3=(Token)match(input,134,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getOpCompareAccess().getGREATER_OR_EQUALEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getOpCompareAccess().getGREATER_OR_EQUALEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSim.g:10328:3: (enumLiteral_4= '\\u2265' )
                    {
                    // InternalSim.g:10328:3: (enumLiteral_4= '\\u2265' )
                    // InternalSim.g:10329:4: enumLiteral_4= '\\u2265'
                    {
                    enumLiteral_4=(Token)match(input,135,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getOpCompareAccess().getGREATER_OR_EQUALEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getOpCompareAccess().getGREATER_OR_EQUALEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSim.g:10336:3: (enumLiteral_5= '>' )
                    {
                    // InternalSim.g:10336:3: (enumLiteral_5= '>' )
                    // InternalSim.g:10337:4: enumLiteral_5= '>'
                    {
                    enumLiteral_5=(Token)match(input,136,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getOpCompareAccess().getGREATEREnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_5, grammarAccess.getOpCompareAccess().getGREATEREnumLiteralDeclaration_5());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpCompare"


    // $ANTLR start "ruleOpOther"
    // InternalSim.g:10347:1: ruleOpOther returns [Enumerator current=null] : ( (enumLiteral_0= 'IN' ) | (enumLiteral_1= 'in' ) | (enumLiteral_2= '..' ) | (enumLiteral_3= '->' ) | (enumLiteral_4= '=>' ) ) ;
    public final Enumerator ruleOpOther() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;


        	enterRule();

        try {
            // InternalSim.g:10353:2: ( ( (enumLiteral_0= 'IN' ) | (enumLiteral_1= 'in' ) | (enumLiteral_2= '..' ) | (enumLiteral_3= '->' ) | (enumLiteral_4= '=>' ) ) )
            // InternalSim.g:10354:2: ( (enumLiteral_0= 'IN' ) | (enumLiteral_1= 'in' ) | (enumLiteral_2= '..' ) | (enumLiteral_3= '->' ) | (enumLiteral_4= '=>' ) )
            {
            // InternalSim.g:10354:2: ( (enumLiteral_0= 'IN' ) | (enumLiteral_1= 'in' ) | (enumLiteral_2= '..' ) | (enumLiteral_3= '->' ) | (enumLiteral_4= '=>' ) )
            int alt214=5;
            switch ( input.LA(1) ) {
            case 137:
                {
                alt214=1;
                }
                break;
            case 64:
                {
                alt214=2;
                }
                break;
            case 84:
                {
                alt214=3;
                }
                break;
            case 138:
                {
                alt214=4;
                }
                break;
            case 139:
                {
                alt214=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 214, 0, input);

                throw nvae;
            }

            switch (alt214) {
                case 1 :
                    // InternalSim.g:10355:3: (enumLiteral_0= 'IN' )
                    {
                    // InternalSim.g:10355:3: (enumLiteral_0= 'IN' )
                    // InternalSim.g:10356:4: enumLiteral_0= 'IN'
                    {
                    enumLiteral_0=(Token)match(input,137,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getOpOtherAccess().getINEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getOpOtherAccess().getINEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:10363:3: (enumLiteral_1= 'in' )
                    {
                    // InternalSim.g:10363:3: (enumLiteral_1= 'in' )
                    // InternalSim.g:10364:4: enumLiteral_1= 'in'
                    {
                    enumLiteral_1=(Token)match(input,64,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getOpOtherAccess().getINEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getOpOtherAccess().getINEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSim.g:10371:3: (enumLiteral_2= '..' )
                    {
                    // InternalSim.g:10371:3: (enumLiteral_2= '..' )
                    // InternalSim.g:10372:4: enumLiteral_2= '..'
                    {
                    enumLiteral_2=(Token)match(input,84,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getOpOtherAccess().getUNTILEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getOpOtherAccess().getUNTILEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSim.g:10379:3: (enumLiteral_3= '->' )
                    {
                    // InternalSim.g:10379:3: (enumLiteral_3= '->' )
                    // InternalSim.g:10380:4: enumLiteral_3= '->'
                    {
                    enumLiteral_3=(Token)match(input,138,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getOpOtherAccess().getSINGLE_ARROWEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getOpOtherAccess().getSINGLE_ARROWEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSim.g:10387:3: (enumLiteral_4= '=>' )
                    {
                    // InternalSim.g:10387:3: (enumLiteral_4= '=>' )
                    // InternalSim.g:10388:4: enumLiteral_4= '=>'
                    {
                    enumLiteral_4=(Token)match(input,139,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getOpOtherAccess().getDOUBLE_ARROWEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getOpOtherAccess().getDOUBLE_ARROWEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpOther"


    // $ANTLR start "ruleOpAdd"
    // InternalSim.g:10398:1: ruleOpAdd returns [Enumerator current=null] : ( (enumLiteral_0= '+' ) | (enumLiteral_1= '-' ) ) ;
    public final Enumerator ruleOpAdd() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
            // InternalSim.g:10404:2: ( ( (enumLiteral_0= '+' ) | (enumLiteral_1= '-' ) ) )
            // InternalSim.g:10405:2: ( (enumLiteral_0= '+' ) | (enumLiteral_1= '-' ) )
            {
            // InternalSim.g:10405:2: ( (enumLiteral_0= '+' ) | (enumLiteral_1= '-' ) )
            int alt215=2;
            int LA215_0 = input.LA(1);

            if ( (LA215_0==93) ) {
                alt215=1;
            }
            else if ( (LA215_0==94) ) {
                alt215=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 215, 0, input);

                throw nvae;
            }
            switch (alt215) {
                case 1 :
                    // InternalSim.g:10406:3: (enumLiteral_0= '+' )
                    {
                    // InternalSim.g:10406:3: (enumLiteral_0= '+' )
                    // InternalSim.g:10407:4: enumLiteral_0= '+'
                    {
                    enumLiteral_0=(Token)match(input,93,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getOpAddAccess().getADDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getOpAddAccess().getADDEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:10414:3: (enumLiteral_1= '-' )
                    {
                    // InternalSim.g:10414:3: (enumLiteral_1= '-' )
                    // InternalSim.g:10415:4: enumLiteral_1= '-'
                    {
                    enumLiteral_1=(Token)match(input,94,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getOpAddAccess().getSUBTRACTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getOpAddAccess().getSUBTRACTEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpAdd"


    // $ANTLR start "ruleOpMulti"
    // InternalSim.g:10425:1: ruleOpMulti returns [Enumerator current=null] : ( (enumLiteral_0= '*' ) | (enumLiteral_1= '/' ) | (enumLiteral_2= '**' ) | (enumLiteral_3= '%' ) ) ;
    public final Enumerator ruleOpMulti() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;


        	enterRule();

        try {
            // InternalSim.g:10431:2: ( ( (enumLiteral_0= '*' ) | (enumLiteral_1= '/' ) | (enumLiteral_2= '**' ) | (enumLiteral_3= '%' ) ) )
            // InternalSim.g:10432:2: ( (enumLiteral_0= '*' ) | (enumLiteral_1= '/' ) | (enumLiteral_2= '**' ) | (enumLiteral_3= '%' ) )
            {
            // InternalSim.g:10432:2: ( (enumLiteral_0= '*' ) | (enumLiteral_1= '/' ) | (enumLiteral_2= '**' ) | (enumLiteral_3= '%' ) )
            int alt216=4;
            switch ( input.LA(1) ) {
            case 47:
                {
                alt216=1;
                }
                break;
            case 140:
                {
                alt216=2;
                }
                break;
            case 141:
                {
                alt216=3;
                }
                break;
            case 142:
                {
                alt216=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 216, 0, input);

                throw nvae;
            }

            switch (alt216) {
                case 1 :
                    // InternalSim.g:10433:3: (enumLiteral_0= '*' )
                    {
                    // InternalSim.g:10433:3: (enumLiteral_0= '*' )
                    // InternalSim.g:10434:4: enumLiteral_0= '*'
                    {
                    enumLiteral_0=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getOpMultiAccess().getMULTIPLYEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getOpMultiAccess().getMULTIPLYEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:10441:3: (enumLiteral_1= '/' )
                    {
                    // InternalSim.g:10441:3: (enumLiteral_1= '/' )
                    // InternalSim.g:10442:4: enumLiteral_1= '/'
                    {
                    enumLiteral_1=(Token)match(input,140,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getOpMultiAccess().getDIVIDEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getOpMultiAccess().getDIVIDEEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSim.g:10449:3: (enumLiteral_2= '**' )
                    {
                    // InternalSim.g:10449:3: (enumLiteral_2= '**' )
                    // InternalSim.g:10450:4: enumLiteral_2= '**'
                    {
                    enumLiteral_2=(Token)match(input,141,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getOpMultiAccess().getPOWEREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getOpMultiAccess().getPOWEREnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSim.g:10457:3: (enumLiteral_3= '%' )
                    {
                    // InternalSim.g:10457:3: (enumLiteral_3= '%' )
                    // InternalSim.g:10458:4: enumLiteral_3= '%'
                    {
                    enumLiteral_3=(Token)match(input,142,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getOpMultiAccess().getMODULOEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getOpMultiAccess().getMODULOEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpMulti"


    // $ANTLR start "ruleOpUnary"
    // InternalSim.g:10468:1: ruleOpUnary returns [Enumerator current=null] : ( (enumLiteral_0= '+' ) | (enumLiteral_1= '-' ) | (enumLiteral_2= '!' ) | (enumLiteral_3= 'NOT' ) | (enumLiteral_4= 'not' ) ) ;
    public final Enumerator ruleOpUnary() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;


        	enterRule();

        try {
            // InternalSim.g:10474:2: ( ( (enumLiteral_0= '+' ) | (enumLiteral_1= '-' ) | (enumLiteral_2= '!' ) | (enumLiteral_3= 'NOT' ) | (enumLiteral_4= 'not' ) ) )
            // InternalSim.g:10475:2: ( (enumLiteral_0= '+' ) | (enumLiteral_1= '-' ) | (enumLiteral_2= '!' ) | (enumLiteral_3= 'NOT' ) | (enumLiteral_4= 'not' ) )
            {
            // InternalSim.g:10475:2: ( (enumLiteral_0= '+' ) | (enumLiteral_1= '-' ) | (enumLiteral_2= '!' ) | (enumLiteral_3= 'NOT' ) | (enumLiteral_4= 'not' ) )
            int alt217=5;
            switch ( input.LA(1) ) {
            case 93:
                {
                alt217=1;
                }
                break;
            case 94:
                {
                alt217=2;
                }
                break;
            case 143:
                {
                alt217=3;
                }
                break;
            case 144:
                {
                alt217=4;
                }
                break;
            case 145:
                {
                alt217=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 217, 0, input);

                throw nvae;
            }

            switch (alt217) {
                case 1 :
                    // InternalSim.g:10476:3: (enumLiteral_0= '+' )
                    {
                    // InternalSim.g:10476:3: (enumLiteral_0= '+' )
                    // InternalSim.g:10477:4: enumLiteral_0= '+'
                    {
                    enumLiteral_0=(Token)match(input,93,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getOpUnaryAccess().getPLUSEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getOpUnaryAccess().getPLUSEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:10484:3: (enumLiteral_1= '-' )
                    {
                    // InternalSim.g:10484:3: (enumLiteral_1= '-' )
                    // InternalSim.g:10485:4: enumLiteral_1= '-'
                    {
                    enumLiteral_1=(Token)match(input,94,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getOpUnaryAccess().getMINUSEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getOpUnaryAccess().getMINUSEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSim.g:10492:3: (enumLiteral_2= '!' )
                    {
                    // InternalSim.g:10492:3: (enumLiteral_2= '!' )
                    // InternalSim.g:10493:4: enumLiteral_2= '!'
                    {
                    enumLiteral_2=(Token)match(input,143,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getOpUnaryAccess().getNOTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getOpUnaryAccess().getNOTEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSim.g:10500:3: (enumLiteral_3= 'NOT' )
                    {
                    // InternalSim.g:10500:3: (enumLiteral_3= 'NOT' )
                    // InternalSim.g:10501:4: enumLiteral_3= 'NOT'
                    {
                    enumLiteral_3=(Token)match(input,144,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getOpUnaryAccess().getNOTEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getOpUnaryAccess().getNOTEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSim.g:10508:3: (enumLiteral_4= 'not' )
                    {
                    // InternalSim.g:10508:3: (enumLiteral_4= 'not' )
                    // InternalSim.g:10509:4: enumLiteral_4= 'not'
                    {
                    enumLiteral_4=(Token)match(input,145,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getOpUnaryAccess().getNOTEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getOpUnaryAccess().getNOTEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpUnary"


    // $ANTLR start "ruleDMultiplicityShorthand"
    // InternalSim.g:10519:1: ruleDMultiplicityShorthand returns [Enumerator current=null] : ( (enumLiteral_0= '?' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) ) ;
    public final Enumerator ruleDMultiplicityShorthand() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;


        	enterRule();

        try {
            // InternalSim.g:10525:2: ( ( (enumLiteral_0= '?' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) ) )
            // InternalSim.g:10526:2: ( (enumLiteral_0= '?' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) )
            {
            // InternalSim.g:10526:2: ( (enumLiteral_0= '?' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) )
            int alt218=3;
            switch ( input.LA(1) ) {
            case 146:
                {
                alt218=1;
                }
                break;
            case 93:
                {
                alt218=2;
                }
                break;
            case 47:
                {
                alt218=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 218, 0, input);

                throw nvae;
            }

            switch (alt218) {
                case 1 :
                    // InternalSim.g:10527:3: (enumLiteral_0= '?' )
                    {
                    // InternalSim.g:10527:3: (enumLiteral_0= '?' )
                    // InternalSim.g:10528:4: enumLiteral_0= '?'
                    {
                    enumLiteral_0=(Token)match(input,146,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDMultiplicityShorthandAccess().getZERO_OR_ONEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getDMultiplicityShorthandAccess().getZERO_OR_ONEEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSim.g:10535:3: (enumLiteral_1= '+' )
                    {
                    // InternalSim.g:10535:3: (enumLiteral_1= '+' )
                    // InternalSim.g:10536:4: enumLiteral_1= '+'
                    {
                    enumLiteral_1=(Token)match(input,93,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDMultiplicityShorthandAccess().getONE_OR_MOREEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getDMultiplicityShorthandAccess().getONE_OR_MOREEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSim.g:10543:3: (enumLiteral_2= '*' )
                    {
                    // InternalSim.g:10543:3: (enumLiteral_2= '*' )
                    // InternalSim.g:10544:4: enumLiteral_2= '*'
                    {
                    enumLiteral_2=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDMultiplicityShorthandAccess().getZERO_OR_MOREEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getDMultiplicityShorthandAccess().getZERO_OR_MOREEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDMultiplicityShorthand"

    // $ANTLR start synpred1_InternalSim
    public final void synpred1_InternalSim_fragment() throws RecognitionException {   
        // InternalSim.g:6964:6: ( ( () '.' ( ( RULE_ID ) ) ruleDmxOpSingleAssign ) )
        // InternalSim.g:6964:7: ( () '.' ( ( RULE_ID ) ) ruleDmxOpSingleAssign )
        {
        // InternalSim.g:6964:7: ( () '.' ( ( RULE_ID ) ) ruleDmxOpSingleAssign )
        // InternalSim.g:6965:7: () '.' ( ( RULE_ID ) ) ruleDmxOpSingleAssign
        {
        // InternalSim.g:6965:7: ()
        // InternalSim.g:6966:7: 
        {
        }

        match(input,69,FOLLOW_3); if (state.failed) return ;
        // InternalSim.g:6968:7: ( ( RULE_ID ) )
        // InternalSim.g:6969:8: ( RULE_ID )
        {
        // InternalSim.g:6969:8: ( RULE_ID )
        // InternalSim.g:6970:9: RULE_ID
        {
        match(input,RULE_ID,FOLLOW_101); if (state.failed) return ;

        }


        }

        pushFollow(FOLLOW_2);
        ruleDmxOpSingleAssign();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred1_InternalSim

    // $ANTLR start synpred2_InternalSim
    public final void synpred2_InternalSim_fragment() throws RecognitionException {   
        // InternalSim.g:7033:6: ( ( () '.' ) )
        // InternalSim.g:7033:7: ( () '.' )
        {
        // InternalSim.g:7033:7: ( () '.' )
        // InternalSim.g:7034:7: () '.'
        {
        // InternalSim.g:7034:7: ()
        // InternalSim.g:7035:7: 
        {
        }

        match(input,69,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred2_InternalSim

    // $ANTLR start synpred3_InternalSim
    public final void synpred3_InternalSim_fragment() throws RecognitionException {   
        // InternalSim.g:7069:8: ( ( '(' ) )
        // InternalSim.g:7069:9: ( '(' )
        {
        // InternalSim.g:7069:9: ( '(' )
        // InternalSim.g:7070:9: '('
        {
        match(input,46,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred3_InternalSim

    // $ANTLR start synpred4_InternalSim
    public final void synpred4_InternalSim_fragment() throws RecognitionException {   
        // InternalSim.g:7430:5: ( ( () ( ( ruleDmxOpOr ) ) ) )
        // InternalSim.g:7430:6: ( () ( ( ruleDmxOpOr ) ) )
        {
        // InternalSim.g:7430:6: ( () ( ( ruleDmxOpOr ) ) )
        // InternalSim.g:7431:6: () ( ( ruleDmxOpOr ) )
        {
        // InternalSim.g:7431:6: ()
        // InternalSim.g:7432:6: 
        {
        }

        // InternalSim.g:7433:6: ( ( ruleDmxOpOr ) )
        // InternalSim.g:7434:7: ( ruleDmxOpOr )
        {
        // InternalSim.g:7434:7: ( ruleDmxOpOr )
        // InternalSim.g:7435:8: ruleDmxOpOr
        {
        pushFollow(FOLLOW_2);
        ruleDmxOpOr();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred4_InternalSim

    // $ANTLR start synpred5_InternalSim
    public final void synpred5_InternalSim_fragment() throws RecognitionException {   
        // InternalSim.g:7518:5: ( ( () ( ( ruleDmxOpAnd ) ) ) )
        // InternalSim.g:7518:6: ( () ( ( ruleDmxOpAnd ) ) )
        {
        // InternalSim.g:7518:6: ( () ( ( ruleDmxOpAnd ) ) )
        // InternalSim.g:7519:6: () ( ( ruleDmxOpAnd ) )
        {
        // InternalSim.g:7519:6: ()
        // InternalSim.g:7520:6: 
        {
        }

        // InternalSim.g:7521:6: ( ( ruleDmxOpAnd ) )
        // InternalSim.g:7522:7: ( ruleDmxOpAnd )
        {
        // InternalSim.g:7522:7: ( ruleDmxOpAnd )
        // InternalSim.g:7523:8: ruleDmxOpAnd
        {
        pushFollow(FOLLOW_2);
        ruleDmxOpAnd();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred5_InternalSim

    // $ANTLR start synpred6_InternalSim
    public final void synpred6_InternalSim_fragment() throws RecognitionException {   
        // InternalSim.g:7606:5: ( ( () ( ( ruleDmxOpEquality ) ) ) )
        // InternalSim.g:7606:6: ( () ( ( ruleDmxOpEquality ) ) )
        {
        // InternalSim.g:7606:6: ( () ( ( ruleDmxOpEquality ) ) )
        // InternalSim.g:7607:6: () ( ( ruleDmxOpEquality ) )
        {
        // InternalSim.g:7607:6: ()
        // InternalSim.g:7608:6: 
        {
        }

        // InternalSim.g:7609:6: ( ( ruleDmxOpEquality ) )
        // InternalSim.g:7610:7: ( ruleDmxOpEquality )
        {
        // InternalSim.g:7610:7: ( ruleDmxOpEquality )
        // InternalSim.g:7611:8: ruleDmxOpEquality
        {
        pushFollow(FOLLOW_2);
        ruleDmxOpEquality();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred6_InternalSim

    // $ANTLR start synpred7_InternalSim
    public final void synpred7_InternalSim_fragment() throws RecognitionException {   
        // InternalSim.g:7695:6: ( ( () ruleDmxOpInstanceOf ) )
        // InternalSim.g:7695:7: ( () ruleDmxOpInstanceOf )
        {
        // InternalSim.g:7695:7: ( () ruleDmxOpInstanceOf )
        // InternalSim.g:7696:7: () ruleDmxOpInstanceOf
        {
        // InternalSim.g:7696:7: ()
        // InternalSim.g:7697:7: 
        {
        }

        pushFollow(FOLLOW_2);
        ruleDmxOpInstanceOf();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred7_InternalSim

    // $ANTLR start synpred8_InternalSim
    public final void synpred8_InternalSim_fragment() throws RecognitionException {   
        // InternalSim.g:7735:6: ( ( () ( ( ruleOpCompare ) ) ) )
        // InternalSim.g:7735:7: ( () ( ( ruleOpCompare ) ) )
        {
        // InternalSim.g:7735:7: ( () ( ( ruleOpCompare ) ) )
        // InternalSim.g:7736:7: () ( ( ruleOpCompare ) )
        {
        // InternalSim.g:7736:7: ()
        // InternalSim.g:7737:7: 
        {
        }

        // InternalSim.g:7738:7: ( ( ruleOpCompare ) )
        // InternalSim.g:7739:8: ( ruleOpCompare )
        {
        // InternalSim.g:7739:8: ( ruleOpCompare )
        // InternalSim.g:7740:9: ruleOpCompare
        {
        pushFollow(FOLLOW_2);
        ruleOpCompare();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred8_InternalSim

    // $ANTLR start synpred9_InternalSim
    public final void synpred9_InternalSim_fragment() throws RecognitionException {   
        // InternalSim.g:7854:5: ( ( () ( ( ruleOpOther ) ) ) )
        // InternalSim.g:7854:6: ( () ( ( ruleOpOther ) ) )
        {
        // InternalSim.g:7854:6: ( () ( ( ruleOpOther ) ) )
        // InternalSim.g:7855:6: () ( ( ruleOpOther ) )
        {
        // InternalSim.g:7855:6: ()
        // InternalSim.g:7856:6: 
        {
        }

        // InternalSim.g:7857:6: ( ( ruleOpOther ) )
        // InternalSim.g:7858:7: ( ruleOpOther )
        {
        // InternalSim.g:7858:7: ( ruleOpOther )
        // InternalSim.g:7859:8: ruleOpOther
        {
        pushFollow(FOLLOW_2);
        ruleOpOther();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred9_InternalSim

    // $ANTLR start synpred10_InternalSim
    public final void synpred10_InternalSim_fragment() throws RecognitionException {   
        // InternalSim.g:7942:5: ( ( () ( ( ruleOpAdd ) ) ) )
        // InternalSim.g:7942:6: ( () ( ( ruleOpAdd ) ) )
        {
        // InternalSim.g:7942:6: ( () ( ( ruleOpAdd ) ) )
        // InternalSim.g:7943:6: () ( ( ruleOpAdd ) )
        {
        // InternalSim.g:7943:6: ()
        // InternalSim.g:7944:6: 
        {
        }

        // InternalSim.g:7945:6: ( ( ruleOpAdd ) )
        // InternalSim.g:7946:7: ( ruleOpAdd )
        {
        // InternalSim.g:7946:7: ( ruleOpAdd )
        // InternalSim.g:7947:8: ruleOpAdd
        {
        pushFollow(FOLLOW_2);
        ruleOpAdd();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred10_InternalSim

    // $ANTLR start synpred11_InternalSim
    public final void synpred11_InternalSim_fragment() throws RecognitionException {   
        // InternalSim.g:8030:5: ( ( () ( ( ruleOpMulti ) ) ) )
        // InternalSim.g:8030:6: ( () ( ( ruleOpMulti ) ) )
        {
        // InternalSim.g:8030:6: ( () ( ( ruleOpMulti ) ) )
        // InternalSim.g:8031:6: () ( ( ruleOpMulti ) )
        {
        // InternalSim.g:8031:6: ()
        // InternalSim.g:8032:6: 
        {
        }

        // InternalSim.g:8033:6: ( ( ruleOpMulti ) )
        // InternalSim.g:8034:7: ( ruleOpMulti )
        {
        // InternalSim.g:8034:7: ( ruleOpMulti )
        // InternalSim.g:8035:8: ruleOpMulti
        {
        pushFollow(FOLLOW_2);
        ruleOpMulti();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred11_InternalSim

    // $ANTLR start synpred12_InternalSim
    public final void synpred12_InternalSim_fragment() throws RecognitionException {   
        // InternalSim.g:8193:5: ( ( () ruleDmxOpCast ) )
        // InternalSim.g:8193:6: ( () ruleDmxOpCast )
        {
        // InternalSim.g:8193:6: ( () ruleDmxOpCast )
        // InternalSim.g:8194:6: () ruleDmxOpCast
        {
        // InternalSim.g:8194:6: ()
        // InternalSim.g:8195:6: 
        {
        }

        pushFollow(FOLLOW_2);
        ruleDmxOpCast();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred12_InternalSim

    // $ANTLR start synpred13_InternalSim
    public final void synpred13_InternalSim_fragment() throws RecognitionException {   
        // InternalSim.g:9079:4: ( ']' )
        // InternalSim.g:9079:5: ']'
        {
        match(input,78,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred13_InternalSim

    // $ANTLR start synpred14_InternalSim
    public final void synpred14_InternalSim_fragment() throws RecognitionException {   
        // InternalSim.g:9235:5: ( 'else' )
        // InternalSim.g:9235:6: 'else'
        {
        match(input,82,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred14_InternalSim

    // Delegated rules

    public final boolean synpred14_InternalSim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred14_InternalSim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred13_InternalSim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_InternalSim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred3_InternalSim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_InternalSim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred1_InternalSim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_InternalSim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred9_InternalSim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred9_InternalSim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_InternalSim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalSim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_InternalSim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_InternalSim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred7_InternalSim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_InternalSim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_InternalSim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_InternalSim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred8_InternalSim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_InternalSim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_InternalSim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_InternalSim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred12_InternalSim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_InternalSim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_InternalSim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_InternalSim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred11_InternalSim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_InternalSim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA30 dfa30 = new DFA30(this);
    protected DFA31 dfa31 = new DFA31(this);
    protected DFA61 dfa61 = new DFA61(this);
    protected DFA171 dfa171 = new DFA171(this);
    protected DFA180 dfa180 = new DFA180(this);
    static final String dfa_1s = "\16\uffff";
    static final String dfa_2s = "\1\36\2\42\2\uffff\2\46\1\47\6\uffff";
    static final String dfa_3s = "\1\146\2\52\2\uffff\2\52\1\146\6\uffff";
    static final String dfa_4s = "\3\uffff\1\2\1\4\3\uffff\1\6\1\10\1\3\1\5\1\7\1\1";
    static final String dfa_5s = "\16\uffff}>";
    static final String[] dfa_6s = {
            "\1\1\3\uffff\1\3\1\2\1\4\2\uffff\1\10\1\5\1\6\1\11\10\uffff\1\7\1\10\60\uffff\2\10",
            "\1\15\1\uffff\1\12\1\uffff\2\13\2\uffff\1\14",
            "\1\15\1\uffff\1\12\1\uffff\2\13\2\uffff\1\14",
            "",
            "",
            "\2\13\2\uffff\1\14",
            "\2\13\2\uffff\1\14",
            "\1\10\2\uffff\1\11\11\uffff\1\10\60\uffff\2\10",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA30 extends DFA {

        public DFA30(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 30;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "1618:2: (this_SimPrimitiveTransposition_0= ruleSimPrimitiveTransposition | this_DimPrimitive_1= ruleDimPrimitive | this_SimEnumerationTransposition_2= ruleSimEnumerationTransposition | this_DimEnumeration_3= ruleDimEnumeration | this_SimEntityTypeTransposition_4= ruleSimEntityTypeTransposition | this_DimEntityType_5= ruleDimEntityType | this_SimDetailTypeTransposition_6= ruleSimDetailTypeTransposition | this_DimDetailType_7= ruleDimDetailType )";
        }
    }
    static final String dfa_7s = "\17\uffff";
    static final String dfa_8s = "\1\36\3\42\2\46\4\uffff\1\47\4\uffff";
    static final String dfa_9s = "\1\51\2\52\1\146\2\52\4\uffff\1\146\4\uffff";
    static final String dfa_10s = "\6\uffff\1\1\1\7\1\5\1\3\1\uffff\1\6\1\10\1\2\1\4";
    static final String dfa_11s = "\17\uffff}>";
    static final String[] dfa_12s = {
            "\1\1\1\uffff\1\3\2\uffff\1\2\4\uffff\1\4\1\5",
            "\1\6\1\uffff\1\11\1\uffff\2\10\2\uffff\1\7",
            "\1\6\1\uffff\1\11\1\uffff\2\10\2\uffff\1\7",
            "\1\15\1\uffff\1\16\2\uffff\1\13\2\uffff\1\14\10\uffff\1\12\1\13\60\uffff\2\13",
            "\2\10\2\uffff\1\7",
            "\2\10\2\uffff\1\7",
            "",
            "",
            "",
            "",
            "\1\13\2\uffff\1\14\11\uffff\1\13\60\uffff\2\13",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final char[] dfa_8 = DFA.unpackEncodedStringToUnsignedChars(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final short[] dfa_10 = DFA.unpackEncodedString(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[][] dfa_12 = unpackEncodedStringArray(dfa_12s);

    class DFA31 extends DFA {

        public DFA31(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 31;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "1708:2: (this_SimPrimitiveTransposition_0= ruleSimPrimitiveTransposition | (otherlv_1= 'add' this_DimPrimitive_2= ruleDimPrimitive ) | this_SimEnumerationTransposition_3= ruleSimEnumerationTransposition | (otherlv_4= 'add' this_DimEnumeration_5= ruleDimEnumeration ) | this_SimEntityTypeTransposition_6= ruleSimEntityTypeTransposition | (otherlv_7= 'add' this_DimEntityType_8= ruleDimEntityType ) | this_SimDetailTypeTransposition_9= ruleSimDetailTypeTransposition | (otherlv_10= 'add' this_DimDetailType_11= ruleDimDetailType ) )";
        }
    }
    static final String dfa_13s = "\1\36\4\4\4\uffff\1\25\1\uffff\1\4\1\uffff\1\35";
    static final String dfa_14s = "\1\50\3\55\1\67\4\uffff\1\150\1\uffff\1\4\1\uffff\1\150";
    static final String dfa_15s = "\5\uffff\1\3\1\1\1\5\1\4\1\uffff\1\2\1\uffff\1\6\1\uffff";
    static final String[] dfa_16s = {
            "\1\1\1\uffff\1\4\2\uffff\1\3\4\uffff\1\2",
            "\1\5\34\uffff\1\7\10\uffff\1\5\2\6\1\5",
            "\1\5\34\uffff\1\7\10\uffff\1\5\2\6\1\5",
            "\1\5\34\uffff\1\7\10\uffff\1\5\2\6\1\5",
            "\1\11\45\uffff\1\10\14\uffff\1\12",
            "",
            "",
            "",
            "",
            "\1\13\7\uffff\1\10\20\uffff\1\14\11\uffff\1\12\56\uffff\2\12",
            "",
            "\1\15",
            "",
            "\1\10\20\uffff\1\14\11\uffff\1\12\56\uffff\2\12"
    };
    static final char[] dfa_13 = DFA.unpackEncodedStringToUnsignedChars(dfa_13s);
    static final char[] dfa_14 = DFA.unpackEncodedStringToUnsignedChars(dfa_14s);
    static final short[] dfa_15 = DFA.unpackEncodedString(dfa_15s);
    static final short[][] dfa_16 = unpackEncodedStringArray(dfa_16s);

    class DFA61 extends DFA {

        public DFA61(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 61;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_13;
            this.max = dfa_14;
            this.accept = dfa_15;
            this.special = dfa_5;
            this.transition = dfa_16;
        }
        public String getDescription() {
            return "2867:2: (this_SimAssociationTransposition_0= ruleSimAssociationTransposition | (otherlv_1= 'add' this_DimAssociation_2= ruleDimAssociation ) | this_SimAttributeTransposition_3= ruleSimAttributeTransposition | (otherlv_4= 'add' this_DimAttribute_5= ruleDimAttribute ) | this_SimQueryTransposition_6= ruleSimQueryTransposition | (otherlv_7= 'add' this_DimQuery_8= ruleDimQuery ) )";
        }
    }
    static final String dfa_17s = "\14\uffff";
    static final String dfa_18s = "\1\1\13\uffff";
    static final String dfa_19s = "\1\4\1\uffff\10\0\2\uffff";
    static final String dfa_20s = "\1\u008e\1\uffff\10\0\2\uffff";
    static final String dfa_21s = "\1\uffff\1\3\10\uffff\1\1\1\2";
    static final String dfa_22s = "\2\uffff\1\0\1\1\1\4\1\6\1\2\1\3\1\5\1\7\2\uffff}>";
    static final String[] dfa_23s = {
            "\5\1\17\uffff\3\1\3\uffff\1\1\1\uffff\6\1\1\uffff\4\1\4\uffff\3\1\1\uffff\2\1\2\uffff\1\1\3\uffff\1\1\4\uffff\1\1\4\uffff\1\1\2\uffff\1\2\1\3\2\1\5\uffff\4\1\10\uffff\2\1\6\uffff\2\1\25\uffff\7\1\1\4\1\5\1\6\1\7\1\10\1\11\6\1",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final char[] dfa_19 = DFA.unpackEncodedStringToUnsignedChars(dfa_19s);
    static final char[] dfa_20 = DFA.unpackEncodedStringToUnsignedChars(dfa_20s);
    static final short[] dfa_21 = DFA.unpackEncodedString(dfa_21s);
    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);
    static final short[][] dfa_23 = unpackEncodedStringArray(dfa_23s);

    class DFA171 extends DFA {

        public DFA171(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 171;
            this.eot = dfa_17;
            this.eof = dfa_18;
            this.min = dfa_19;
            this.max = dfa_20;
            this.accept = dfa_21;
            this.special = dfa_22;
            this.transition = dfa_23;
        }
        public String getDescription() {
            return "()* loopback of 7692:3: ( ( ( ( ( () ruleDmxOpInstanceOf ) )=> ( () ruleDmxOpInstanceOf ) ) ( (otherlv_3= RULE_ID ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( (lv_operator_5_0= ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleDmxOtherOperatorExpression ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA171_2 = input.LA(1);

                         
                        int index171_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalSim()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index171_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA171_3 = input.LA(1);

                         
                        int index171_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalSim()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index171_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA171_6 = input.LA(1);

                         
                        int index171_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred8_InternalSim()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index171_6);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA171_7 = input.LA(1);

                         
                        int index171_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred8_InternalSim()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index171_7);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA171_4 = input.LA(1);

                         
                        int index171_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred8_InternalSim()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index171_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA171_8 = input.LA(1);

                         
                        int index171_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred8_InternalSim()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index171_8);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA171_5 = input.LA(1);

                         
                        int index171_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred8_InternalSim()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index171_5);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA171_9 = input.LA(1);

                         
                        int index171_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred8_InternalSim()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index171_9);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 171, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_24s = "\12\uffff";
    static final String dfa_25s = "\3\uffff\1\10\6\uffff";
    static final String dfa_26s = "\1\11\2\uffff\1\4\3\uffff\1\4\2\uffff";
    static final String dfa_27s = "\1\132\2\uffff\1\u008e\3\uffff\1\11\2\uffff";
    static final String dfa_28s = "\1\uffff\1\1\1\2\1\uffff\1\5\1\6\1\7\1\uffff\1\3\1\4";
    static final String dfa_29s = "\12\uffff}>";
    static final String[] dfa_30s = {
            "\1\3\1\2\34\uffff\1\5\2\uffff\1\6\52\uffff\4\1\2\4",
            "",
            "",
            "\5\10\16\uffff\4\10\3\uffff\1\10\1\uffff\6\10\1\uffff\4\10\4\uffff\3\10\1\uffff\2\10\2\uffff\1\10\3\uffff\1\10\4\uffff\1\10\4\uffff\1\7\2\uffff\4\10\5\uffff\4\10\10\uffff\2\10\6\uffff\2\10\25\uffff\23\10",
            "",
            "",
            "",
            "\1\10\4\uffff\1\11",
            "",
            ""
    };

    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final char[] dfa_26 = DFA.unpackEncodedStringToUnsignedChars(dfa_26s);
    static final char[] dfa_27 = DFA.unpackEncodedStringToUnsignedChars(dfa_27s);
    static final short[] dfa_28 = DFA.unpackEncodedString(dfa_28s);
    static final short[] dfa_29 = DFA.unpackEncodedString(dfa_29s);
    static final short[][] dfa_30 = unpackEncodedStringArray(dfa_30s);

    class DFA180 extends DFA {

        public DFA180(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 180;
            this.eot = dfa_24;
            this.eof = dfa_25;
            this.min = dfa_26;
            this.max = dfa_27;
            this.accept = dfa_28;
            this.special = dfa_29;
            this.transition = dfa_30;
        }
        public String getDescription() {
            return "8359:2: (this_DmxBooleanLiteral_0= ruleDmxBooleanLiteral | this_DmxStringLiteral_1= ruleDmxStringLiteral | this_DmxNaturalLiteral_2= ruleDmxNaturalLiteral | this_DmxDecimalLiteral_3= ruleDmxDecimalLiteral | this_DmxUndefinedLiteral_4= ruleDmxUndefinedLiteral | this_DmxEntity_5= ruleDmxEntity | this_DmxDetail_6= ruleDmxDetail )";
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x1000000000000000L,0x0000000700000000L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0800000000E00060L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0800000000C00060L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0800000000800060L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0800000000800000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x00000309C1000000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000002000002L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x000000000C000000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x000804C000000000L,0x0000001800000000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000010000012L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000C00000000002L,0x0000000020000000L,0x0000000000040000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000080000000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000000800062L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000000800002L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000030941000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0018008000000000L,0x0000006000000000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0008040000000000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0800000000800062L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0800000000800002L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000101000000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0002000000000000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000941000000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000002101000000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000000940000000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0800000000000062L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0800000000000002L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x000000C000000000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000010941000000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0080000000000010L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000040000000010L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000180000000000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000000000062L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000240000000010L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000810940000000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0001002000000000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0800000000A00060L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0018079E41000000L,0x0000006000000000L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0018079C41000000L,0x0000006000000000L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000020200000L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000448000800670L,0x0000000067E11000L,0x0000000000038000L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0004000000200000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0002000001000000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0002000001000010L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0002002001000000L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0800000000200062L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x00A2040001000010L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000002001000000L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x00C2040001000010L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0082040001000010L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000000000200002L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0800000010200062L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0800000010000062L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0100000000200000L,0x0000018000000000L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0800C00000000072L,0x0000000020000000L,0x0000000000040000L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0800C00000000062L,0x0000000020000000L,0x0000000000040000L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0A00C00000000072L,0x0000000020000000L,0x0000000000040000L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0A00C00000000062L,0x0000000020000000L,0x0000000000040000L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0A00000000000062L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000400000200000L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0001000000000010L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0C00C00000000072L,0x0000000020000000L,0x0000000000040000L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0C00C00000000062L,0x0000000020000000L,0x0000000000040000L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0C00000000000062L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000000000060L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000000001000000L,0x0001FE0000000000L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x4000000000800000L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000002000800000L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x8000C00000000002L,0x0000000020000000L,0x0000000000040000L});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x8000000000000002L});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000048000800600L,0x0000000007E00000L});
    public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0000000000000000L,0x0FFE000000000000L});
    public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000000000000010L,0x0FFE000000000000L});
    public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000010L});
    public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0000800000000002L});
    public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0000000000000180L});
    public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
    public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x0000448000800610L,0x0000000067E11000L,0x0000000000038000L});
    public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0000400000000002L,0x0000000000000060L});
    public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0001448000800610L,0x0000000067E11000L,0x0000000000038000L});
    public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x0000002000000002L});
    public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x0000000000000002L,0xF000000000000000L});
    public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x0000000004000002L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000800L,0x0000000000000006L});
    public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000300L,0x00000000000001F8L});
    public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x0000000000000002L,0x0000000000100001L,0x0000000000000E00L});
    public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x0000000000000002L,0x0000000060000000L});
    public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x0000800000000002L,0x0000000000000000L,0x0000000000007000L});
    public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x0000000002000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x0000448001800670L,0x0000000067E11000L,0x0000000000038000L});
    public static final BitSet FOLLOW_116 = new BitSet(new long[]{0x0000048001000600L,0x0000000007E00000L});
    public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x0000048000000600L,0x0000000007E00000L});
    public static final BitSet FOLLOW_118 = new BitSet(new long[]{0x0001448000800670L,0x0000000067E11000L,0x0000000000038000L});
    public static final BitSet FOLLOW_119 = new BitSet(new long[]{0x0000000001000010L});
    public static final BitSet FOLLOW_120 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_121 = new BitSet(new long[]{0x0000000000000000L,0x0000000000006080L});
    public static final BitSet FOLLOW_122 = new BitSet(new long[]{0x0000000000000000L,0x0000000000004080L});
    public static final BitSet FOLLOW_123 = new BitSet(new long[]{0x0000800000000010L});
    public static final BitSet FOLLOW_124 = new BitSet(new long[]{0x0000000000000000L,0x0000000000004000L});
    public static final BitSet FOLLOW_125 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000060L});
    public static final BitSet FOLLOW_126 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_127 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_128 = new BitSet(new long[]{0x0000000000000000L,0x00000000000C0000L});
    public static final BitSet FOLLOW_129 = new BitSet(new long[]{0x0000000000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_130 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_131 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_132 = new BitSet(new long[]{0x0000800000000200L});
    public static final BitSet FOLLOW_133 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_134 = new BitSet(new long[]{0x0000000000000002L,0x0000000018000000L});
    public static final BitSet FOLLOW_135 = new BitSet(new long[]{0x0000000000000200L,0x0000000060000000L});
    public static final BitSet FOLLOW_136 = new BitSet(new long[]{0x0000000000000002L,0x0000000080000000L});

}