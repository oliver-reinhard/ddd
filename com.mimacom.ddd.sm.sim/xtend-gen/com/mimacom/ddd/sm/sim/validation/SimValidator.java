/**
 * generated by Xtext 2.16.0
 */
package com.mimacom.ddd.sm.sim.validation;

import com.google.common.base.Objects;
import com.mimacom.ddd.sm.sim.SComplexType;
import com.mimacom.ddd.sm.sim.SDeductionRule;
import com.mimacom.ddd.sm.sim.SDitchRule;
import com.mimacom.ddd.sm.sim.SElementNature;
import com.mimacom.ddd.sm.sim.SFeature;
import com.mimacom.ddd.sm.sim.SGrabRule;
import com.mimacom.ddd.sm.sim.SimPackage;
import com.mimacom.ddd.sm.sim.validation.AbstractSimValidator;
import org.eclipse.xtext.validation.Check;
import org.eclipse.xtext.xbase.lib.Functions.Function1;
import org.eclipse.xtext.xbase.lib.IterableExtensions;

/**
 * This class contains custom validation rules.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
@SuppressWarnings("all")
public class SimValidator extends AbstractSimValidator {
  @Check
  public void checkDeducedFeatures(final SComplexType type) {
    SElementNature _nature = type.getNature();
    boolean _equals = Objects.equal(_nature, SElementNature.DEDUCTION_RULE);
    if (_equals) {
      SDeductionRule _deductionRule = type.getDeductionRule();
      if ((_deductionRule instanceof SGrabRule)) {
        final Function1<SFeature, Boolean> _function = (SFeature it) -> {
          return Boolean.valueOf((Objects.equal(it.getNature(), SElementNature.DEDUCTION_RULE) && (it.getDeductionRule() instanceof SDitchRule)));
        };
        final boolean hasDitchElements = IterableExtensions.<SFeature>exists(type.getFeatures(), _function);
        final Function1<SFeature, Boolean> _function_1 = (SFeature it) -> {
          return Boolean.valueOf((Objects.equal(it.getNature(), SElementNature.DEDUCTION_RULE) && (!(it.getDeductionRule() instanceof SDitchRule))));
        };
        final boolean hasOtherElements = IterableExtensions.<SFeature>exists(type.getFeatures(), _function_1);
        if ((hasDitchElements && hasOtherElements)) {
          this.error("Cannot declare \"ditch\" rule with other kinds of rules", SimPackage.Literals.SNAMED_ELEMENT__NAME);
        }
      }
    }
  }
}
