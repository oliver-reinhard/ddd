// automatically generated by Xtext
grammar com.mimacom.ddd.dm.dme.Dme with  com.mimacom.ddd.dm.dmx.Dmx

import "http://www.mimacom.com/ddd/dm/dmx" 
import "http://www.mimacom.com/ddd/dm/base" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

DModel:
	{DModel}
	domain=DDomain;


DDomain:
	'domain'
	name=ID
	(description=DRichText)?
	(imports+=DImport)*
	(events+=DDomainEvent | actors+=DActor)*;

DImport:
	'import' importedNamespace=DQualifiedNameWithWildcard;

/*
 * BEHAVIOUR
 */
DDomainEvent:
	'event'
	name=ID
	'triggered' 'by' trigger=[DActor|ID]
	(description=DRichText)?
	'{'
		(context+=DContext)+
		(notifications+=DNotification)+
		('before'  	(before+=DCondition)+)?
		('after' 		(after+=DCondition)+ )?
	'}';
	
DCondition:
	'condition'
	name=ID
	':'
	condition=DExpression
	(description=DRichText)?;
	
DNotification:
	'notification'
	name=ID
	':'
	type=[DType|ID]  (multiplicity=DMultiplicity)?
	'sent' 'to' notified=[DActor|ID]
	(description=DRichText)?;

DContext:
	'context'
	name=ID
	':'
	type=[DType|ID]  (multiplicity=DMultiplicity)?
	(description=DRichText)?;
	
DActor:
	DHuman | DTime;

DHuman:
	'human' 'actor'
	name=ID
	(description=DRichText)?;

DTime:
	'time' 'actor'
	name=ID
	(description=DRichText)?;
