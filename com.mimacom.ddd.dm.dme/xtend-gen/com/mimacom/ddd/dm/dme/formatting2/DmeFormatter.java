/**
 * generated by Xtext 2.16.0
 */
package com.mimacom.ddd.dm.dme.formatting2;

import com.google.inject.Inject;
import com.mimacom.ddd.dm.base.DActor;
import com.mimacom.ddd.dm.base.DDomain;
import com.mimacom.ddd.dm.base.DDomainEvent;
import com.mimacom.ddd.dm.base.DImport;
import com.mimacom.ddd.dm.base.DRichText;
import com.mimacom.ddd.dm.dme.services.DmeGrammarAccess;
import java.util.Arrays;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;

@SuppressWarnings("all")
public class DmeFormatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private DmeGrammarAccess _dmeGrammarAccess;
  
  protected void _format(final DDomain dDomain, @Extension final IFormattableDocument document) {
    document.<DRichText>format(dDomain.getDescription());
    EList<DImport> _imports = dDomain.getImports();
    for (final DImport dImport : _imports) {
      document.<DImport>format(dImport);
    }
    EList<DDomainEvent> _events = dDomain.getEvents();
    for (final DDomainEvent dDomainEvent : _events) {
      document.<DDomainEvent>format(dDomainEvent);
    }
    EList<DActor> _actors = dDomain.getActors();
    for (final DActor dActor : _actors) {
      document.<DActor>format(dActor);
    }
  }
  
  public void format(final Object dDomain, final IFormattableDocument document) {
    if (dDomain instanceof DDomain) {
      _format((DDomain)dDomain, document);
      return;
    } else if (dDomain instanceof XtextResource) {
      _format((XtextResource)dDomain, document);
      return;
    } else if (dDomain instanceof EObject) {
      _format((EObject)dDomain, document);
      return;
    } else if (dDomain == null) {
      _format((Void)null, document);
      return;
    } else if (dDomain != null) {
      _format(dDomain, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(dDomain, document).toString());
    }
  }
}
