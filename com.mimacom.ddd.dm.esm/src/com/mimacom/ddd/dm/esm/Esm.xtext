grammar com.mimacom.ddd.dm.esm.Esm with com.mimacom.ddd.dm.dmx.Dmx

import "http://www.mimacom.com/ddd/dm/base"
import "http://www.mimacom.com/ddd/dm/dmx" 
import "http://www.mimacom.com/ddd/dm/esm"

EsmDomain:
	(imports+=DImport)*
	'domain'
	name=DQualifiedName
	('alias' aliases+=ID)*
	(description=DRichText)?
	stateModel=EsmEntityStateModel;
	
EsmEntityStateModel:
	'state' 'model' 
	name=DQualifiedName
	'for'
	 forType=[DEntityType|ID]
	(description=DRichText)?
	'states' 
	(states+=EsmState)+
	'transitions'
	(transition+=EsmTransition)+;

EsmState:
	state=[DState]
	('when' expression=DExpression)?;

EsmTransition:
	from=[EsmState]
	'to'
	to=[EsmState]
	'as' event=[DStateEvent]
	(	'when'
		guard=DExpression
	)?;
	
	
@Override 
DExpression returns DExpression :
	DmxOrExpression | DRichText;
	
@Override 
DmxPrimaryExpression returns DExpression:
	DmxLiteralExpression |
	DmxParenthesizedExpression |
	DmxFunctionCall |
	DmxContextReference |
	DmxIfExpression;