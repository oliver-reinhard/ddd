/**
 * generated by Xtext 2.17.1
 */
package com.mimacom.ddd.dm.esm.impl;

import com.mimacom.ddd.dm.base.BasePackage;
import com.mimacom.ddd.dm.base.DIdentityType;
import com.mimacom.ddd.dm.base.IIdentityStateModel;
import com.mimacom.ddd.dm.base.INamespace;
import com.mimacom.ddd.dm.base.INavigableMemberContainer;

import com.mimacom.ddd.dm.base.impl.DNamedElementImpl;

import com.mimacom.ddd.dm.esm.DEntityStateModel;
import com.mimacom.ddd.dm.esm.DEvent;
import com.mimacom.ddd.dm.esm.DState;
import com.mimacom.ddd.dm.esm.DTransition;
import com.mimacom.ddd.dm.esm.EsmPackage;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>DEntity State Model</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.mimacom.ddd.dm.esm.impl.DEntityStateModelImpl#getForType <em>For Type</em>}</li>
 *   <li>{@link com.mimacom.ddd.dm.esm.impl.DEntityStateModelImpl#getStates <em>States</em>}</li>
 *   <li>{@link com.mimacom.ddd.dm.esm.impl.DEntityStateModelImpl#getEvents <em>Events</em>}</li>
 *   <li>{@link com.mimacom.ddd.dm.esm.impl.DEntityStateModelImpl#getTransition <em>Transition</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DEntityStateModelImpl extends DNamedElementImpl implements DEntityStateModel
{
	/**
	 * The cached value of the '{@link #getForType() <em>For Type</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getForType()
	 * @generated
	 * @ordered
	 */
	protected DIdentityType forType;

	/**
	 * The cached value of the '{@link #getStates() <em>States</em>}' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getStates()
	 * @generated
	 * @ordered
	 */
	protected EList<DState> states;

	/**
	 * The cached value of the '{@link #getEvents() <em>Events</em>}' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getEvents()
	 * @generated
	 * @ordered
	 */
	protected EList<DEvent> events;

	/**
	 * The cached value of the '{@link #getTransition() <em>Transition</em>}' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getTransition()
	 * @generated
	 * @ordered
	 */
	protected EList<DTransition> transition;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DEntityStateModelImpl()
	{
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	protected EClass eStaticClass()
	{
		return EsmPackage.Literals.DENTITY_STATE_MODEL;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public DIdentityType getForType()
	{
		if (forType != null && forType.eIsProxy())
		{
			InternalEObject oldForType = (InternalEObject)forType;
			forType = (DIdentityType)eResolveProxy(oldForType);
			if (forType != oldForType)
			{
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, EsmPackage.DENTITY_STATE_MODEL__FOR_TYPE, oldForType, forType));
			}
		}
		return forType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public DIdentityType basicGetForType()
	{
		return forType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setForType(DIdentityType newForType)
	{
		DIdentityType oldForType = forType;
		forType = newForType;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, EsmPackage.DENTITY_STATE_MODEL__FOR_TYPE, oldForType, forType));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public EList<DState> getStates()
	{
		if (states == null)
		{
			states = new EObjectContainmentEList<DState>(DState.class, this, EsmPackage.DENTITY_STATE_MODEL__STATES);
		}
		return states;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public EList<DEvent> getEvents()
	{
		if (events == null)
		{
			events = new EObjectContainmentEList<DEvent>(DEvent.class, this, EsmPackage.DENTITY_STATE_MODEL__EVENTS);
		}
		return events;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public EList<DTransition> getTransition()
	{
		if (transition == null)
		{
			transition = new EObjectContainmentEList<DTransition>(DTransition.class, this, EsmPackage.DENTITY_STATE_MODEL__TRANSITION);
		}
		return transition;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
	{
		switch (featureID)
		{
			case EsmPackage.DENTITY_STATE_MODEL__STATES:
				return ((InternalEList<?>)getStates()).basicRemove(otherEnd, msgs);
			case EsmPackage.DENTITY_STATE_MODEL__EVENTS:
				return ((InternalEList<?>)getEvents()).basicRemove(otherEnd, msgs);
			case EsmPackage.DENTITY_STATE_MODEL__TRANSITION:
				return ((InternalEList<?>)getTransition()).basicRemove(otherEnd, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType)
	{
		switch (featureID)
		{
			case EsmPackage.DENTITY_STATE_MODEL__FOR_TYPE:
				if (resolve) return getForType();
				return basicGetForType();
			case EsmPackage.DENTITY_STATE_MODEL__STATES:
				return getStates();
			case EsmPackage.DENTITY_STATE_MODEL__EVENTS:
				return getEvents();
			case EsmPackage.DENTITY_STATE_MODEL__TRANSITION:
				return getTransition();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@SuppressWarnings("unchecked")
	@Override
	public void eSet(int featureID, Object newValue)
	{
		switch (featureID)
		{
			case EsmPackage.DENTITY_STATE_MODEL__FOR_TYPE:
				setForType((DIdentityType)newValue);
				return;
			case EsmPackage.DENTITY_STATE_MODEL__STATES:
				getStates().clear();
				getStates().addAll((Collection<? extends DState>)newValue);
				return;
			case EsmPackage.DENTITY_STATE_MODEL__EVENTS:
				getEvents().clear();
				getEvents().addAll((Collection<? extends DEvent>)newValue);
				return;
			case EsmPackage.DENTITY_STATE_MODEL__TRANSITION:
				getTransition().clear();
				getTransition().addAll((Collection<? extends DTransition>)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void eUnset(int featureID)
	{
		switch (featureID)
		{
			case EsmPackage.DENTITY_STATE_MODEL__FOR_TYPE:
				setForType((DIdentityType)null);
				return;
			case EsmPackage.DENTITY_STATE_MODEL__STATES:
				getStates().clear();
				return;
			case EsmPackage.DENTITY_STATE_MODEL__EVENTS:
				getEvents().clear();
				return;
			case EsmPackage.DENTITY_STATE_MODEL__TRANSITION:
				getTransition().clear();
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean eIsSet(int featureID)
	{
		switch (featureID)
		{
			case EsmPackage.DENTITY_STATE_MODEL__FOR_TYPE:
				return forType != null;
			case EsmPackage.DENTITY_STATE_MODEL__STATES:
				return states != null && !states.isEmpty();
			case EsmPackage.DENTITY_STATE_MODEL__EVENTS:
				return events != null && !events.isEmpty();
			case EsmPackage.DENTITY_STATE_MODEL__TRANSITION:
				return transition != null && !transition.isEmpty();
		}
		return super.eIsSet(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public int eBaseStructuralFeatureID(int derivedFeatureID, Class<?> baseClass)
	{
		if (baseClass == IIdentityStateModel.class)
		{
			switch (derivedFeatureID)
			{
				case EsmPackage.DENTITY_STATE_MODEL__FOR_TYPE: return BasePackage.IIDENTITY_STATE_MODEL__FOR_TYPE;
				default: return -1;
			}
		}
		if (baseClass == INamespace.class)
		{
			switch (derivedFeatureID)
			{
				default: return -1;
			}
		}
		if (baseClass == INavigableMemberContainer.class)
		{
			switch (derivedFeatureID)
			{
				default: return -1;
			}
		}
		return super.eBaseStructuralFeatureID(derivedFeatureID, baseClass);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public int eDerivedStructuralFeatureID(int baseFeatureID, Class<?> baseClass)
	{
		if (baseClass == IIdentityStateModel.class)
		{
			switch (baseFeatureID)
			{
				case BasePackage.IIDENTITY_STATE_MODEL__FOR_TYPE: return EsmPackage.DENTITY_STATE_MODEL__FOR_TYPE;
				default: return -1;
			}
		}
		if (baseClass == INamespace.class)
		{
			switch (baseFeatureID)
			{
				default: return -1;
			}
		}
		if (baseClass == INavigableMemberContainer.class)
		{
			switch (baseFeatureID)
			{
				default: return -1;
			}
		}
		return super.eDerivedStructuralFeatureID(baseFeatureID, baseClass);
	}

} //DEntityStateModelImpl
